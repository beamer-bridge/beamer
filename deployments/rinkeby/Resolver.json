{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fillChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        }
      ],
      "name": "Resolution",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "resolutionRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        }
      ],
      "name": "addRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "messengers",
      "outputs": [
        {
          "internalType": "contract ICrossDomainMessenger",
          "name": "crossDomainMessenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "resolutionInfos",
      "outputs": [
        {
          "internalType": "address",
          "name": "resolutionRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "fillHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "fillChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        }
      ],
      "name": "resolve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "15": "contracts/contracts/Resolver.sol",
    "19": "contracts/interfaces/ICrossDomainMessenger.sol",
    "6": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "9": "contracts/contracts/CrossDomainRestrictedCalls.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/Resolver.sol",
    "exportedSymbols": {
      "Context": [
        3135
      ],
      "CrossDomainRestrictedCalls": [
        160
      ],
      "ICrossDomainMessenger": [
        2119
      ],
      "Ownable": [
        2080
      ],
      "ResolutionRegistry": [
        1699
      ],
      "Resolver": [
        1830
      ]
    },
    "id": 1831,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1701,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:15"
      },
      {
        "absolutePath": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "id": 1702,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1831,
        "sourceUnit": 2081,
        "src": "58:80:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ICrossDomainMessenger.sol",
        "file": "../interfaces/ICrossDomainMessenger.sol",
        "id": 1703,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1831,
        "sourceUnit": 2120,
        "src": "139:49:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/ResolutionRegistry.sol",
        "file": "./ResolutionRegistry.sol",
        "id": 1704,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1831,
        "sourceUnit": 1700,
        "src": "189:34:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/CrossDomainRestrictedCalls.sol",
        "file": "./CrossDomainRestrictedCalls.sol",
        "id": 1705,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1831,
        "sourceUnit": 161,
        "src": "224:42:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1706,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2080,
              "src": "290:7:15"
            },
            "id": 1707,
            "nodeType": "InheritanceSpecifier",
            "src": "290:7:15"
          },
          {
            "baseName": {
              "id": 1708,
              "name": "CrossDomainRestrictedCalls",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 160,
              "src": "299:26:15"
            },
            "id": 1709,
            "nodeType": "InheritanceSpecifier",
            "src": "299:26:15"
          }
        ],
        "canonicalName": "Resolver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1830,
        "linearizedBaseContracts": [
          1830,
          160,
          2080,
          3135
        ],
        "name": "Resolver",
        "nameLocation": "278:8:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Resolver.ResolutionInfos",
            "id": 1714,
            "members": [
              {
                "constant": false,
                "id": 1711,
                "mutability": "mutable",
                "name": "resolutionRegistry",
                "nameLocation": "373:18:15",
                "nodeType": "VariableDeclaration",
                "scope": 1714,
                "src": "365:26:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1710,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "365:7:15",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1713,
                "mutability": "mutable",
                "name": "messenger",
                "nameLocation": "409:9:15",
                "nodeType": "VariableDeclaration",
                "scope": 1714,
                "src": "401:17:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1712,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "401:7:15",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ResolutionInfos",
            "nameLocation": "339:15:15",
            "nodeType": "StructDefinition",
            "scope": 1830,
            "src": "332:93:15",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1724,
            "name": "Resolution",
            "nameLocation": "437:10:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1716,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "465:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1724,
                  "src": "457:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1718,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillChainId",
                  "nameLocation": "496:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1724,
                  "src": "488:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "488:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1720,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillHash",
                  "nameLocation": "525:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1724,
                  "src": "517:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1719,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1722,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "551:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1724,
                  "src": "543:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "447:116:15"
            },
            "src": "431:133:15"
          },
          {
            "constant": false,
            "functionSelector": "b257fcf3",
            "id": 1729,
            "mutability": "mutable",
            "name": "resolutionInfos",
            "nameLocation": "614:15:15",
            "nodeType": "VariableDeclaration",
            "scope": 1830,
            "src": "570:59:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResolutionInfos_$1714_storage_$",
              "typeString": "mapping(uint256 => struct Resolver.ResolutionInfos)"
            },
            "typeName": {
              "id": 1728,
              "keyType": {
                "id": 1725,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "579:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "570:36:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResolutionInfos_$1714_storage_$",
                "typeString": "mapping(uint256 => struct Resolver.ResolutionInfos)"
              },
              "valueType": {
                "id": 1727,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1726,
                  "name": "ResolutionInfos",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1714,
                  "src": "590:15:15"
                },
                "referencedDeclaration": 1714,
                "src": "590:15:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ResolutionInfos_$1714_storage_ptr",
                  "typeString": "struct Resolver.ResolutionInfos"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1807,
              "nodeType": "Block",
              "src": "784:744:15",
              "statements": [
                {
                  "assignments": [
                    1747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1747,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "819:4:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1807,
                      "src": "795:28:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolutionInfos_$1714_storage_ptr",
                        "typeString": "struct Resolver.ResolutionInfos"
                      },
                      "typeName": {
                        "id": 1746,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1745,
                          "name": "ResolutionInfos",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1714,
                          "src": "795:15:15"
                        },
                        "referencedDeclaration": 1714,
                        "src": "795:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolutionInfos_$1714_storage_ptr",
                          "typeString": "struct Resolver.ResolutionInfos"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1751,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1748,
                      "name": "resolutionInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "826:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResolutionInfos_$1714_storage_$",
                        "typeString": "mapping(uint256 => struct Resolver.ResolutionInfos storage ref)"
                      }
                    },
                    "id": 1750,
                    "indexExpression": {
                      "id": 1749,
                      "name": "sourceChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1735,
                      "src": "842:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "826:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolutionInfos_$1714_storage",
                      "typeString": "struct Resolver.ResolutionInfos storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "795:61:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1753,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1747,
                            "src": "874:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolutionInfos_$1714_storage_ptr",
                              "typeString": "struct Resolver.ResolutionInfos storage pointer"
                            }
                          },
                          "id": 1754,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "resolutionRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1711,
                          "src": "874:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "909:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "901:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1755,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "901:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "901:10:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "874:37:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20726567697374727920617661696c61626c6520666f7220736f7572636520636861696e",
                        "id": 1760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "913:40:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ee00403712f8bc6fbdc260df11d132cbf1f0263c418fa61c9527622b09c476d",
                          "typeString": "literal_string \"No registry available for source chain\""
                        },
                        "value": "No registry available for source chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ee00403712f8bc6fbdc260df11d132cbf1f0263c418fa61c9527622b09c476d",
                          "typeString": "literal_string \"No registry available for source chain\""
                        }
                      ],
                      "id": 1752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "866:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "866:88:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1762,
                  "nodeType": "ExpressionStatement",
                  "src": "866:88:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1764,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1747,
                            "src": "972:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolutionInfos_$1714_storage_ptr",
                              "typeString": "struct Resolver.ResolutionInfos storage pointer"
                            }
                          },
                          "id": 1765,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "messenger",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1713,
                          "src": "972:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "998:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "990:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1766,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "990:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "990:10:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "972:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206d657373656e67657220617661696c61626c6520666f7220736f7572636520636861696e",
                        "id": 1771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1002:41:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d26b5a0618e5494cf176ee41dec1dbca8fb3bc55523487f35a7d4d4aefdad044",
                          "typeString": "literal_string \"No messenger available for source chain\""
                        },
                        "value": "No messenger available for source chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d26b5a0618e5494cf176ee41dec1dbca8fb3bc55523487f35a7d4d4aefdad044",
                          "typeString": "literal_string \"No messenger available for source chain\""
                        }
                      ],
                      "id": 1763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "964:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "964:80:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1773,
                  "nodeType": "ExpressionStatement",
                  "src": "964:80:15"
                },
                {
                  "assignments": [
                    1776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1776,
                      "mutability": "mutable",
                      "name": "messenger",
                      "nameLocation": "1077:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1807,
                      "src": "1055:31:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICrossDomainMessenger_$2119",
                        "typeString": "contract ICrossDomainMessenger"
                      },
                      "typeName": {
                        "id": 1775,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1774,
                          "name": "ICrossDomainMessenger",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2119,
                          "src": "1055:21:15"
                        },
                        "referencedDeclaration": 2119,
                        "src": "1055:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICrossDomainMessenger_$2119",
                          "typeString": "contract ICrossDomainMessenger"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1781,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1778,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1747,
                          "src": "1111:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolutionInfos_$1714_storage_ptr",
                            "typeString": "struct Resolver.ResolutionInfos storage pointer"
                          }
                        },
                        "id": 1779,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "messenger",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1713,
                        "src": "1111:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1777,
                      "name": "ICrossDomainMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2119,
                      "src": "1089:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICrossDomainMessenger_$2119_$",
                        "typeString": "type(contract ICrossDomainMessenger)"
                      }
                    },
                    "id": 1780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1089:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICrossDomainMessenger_$2119",
                      "typeString": "contract ICrossDomainMessenger"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1055:71:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1785,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1747,
                          "src": "1171:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolutionInfos_$1714_storage_ptr",
                            "typeString": "struct Resolver.ResolutionInfos storage pointer"
                          }
                        },
                        "id": 1786,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "resolutionRegistry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1711,
                        "src": "1171:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1789,
                              "name": "ResolutionRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1699,
                              "src": "1240:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ResolutionRegistry_$1699_$",
                                "typeString": "type(contract ResolutionRegistry)"
                              }
                            },
                            "id": 1790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "resolveRequest",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1698,
                            "src": "1240:33:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function ResolutionRegistry.resolveRequest(bytes32,uint256,address)"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 1791,
                                "name": "fillHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1731,
                                "src": "1313:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1792,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "1343:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chainid",
                                "nodeType": "MemberAccess",
                                "src": "1343:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1794,
                                "name": "filler",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1737,
                                "src": "1378:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 1795,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1291:111:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$_t_address_$",
                              "typeString": "tuple(bytes32,uint256,address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function ResolutionRegistry.resolveRequest(bytes32,uint256,address)"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$_t_address_$",
                              "typeString": "tuple(bytes32,uint256,address)"
                            }
                          ],
                          "expression": {
                            "id": 1787,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1208:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "1208:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1208:208:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 1797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1430:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "id": 1782,
                        "name": "messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1776,
                        "src": "1136:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICrossDomainMessenger_$2119",
                          "typeString": "contract ICrossDomainMessenger"
                        }
                      },
                      "id": 1784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2118,
                      "src": "1136:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,bytes memory,uint32) external"
                      }
                    },
                    "id": 1798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:313:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1799,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:313:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1801,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1735,
                        "src": "1476:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1802,
                        "name": "fillChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1733,
                        "src": "1491:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1803,
                        "name": "fillHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1731,
                        "src": "1504:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1804,
                        "name": "filler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1737,
                        "src": "1514:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1800,
                      "name": "Resolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1724,
                      "src": "1465:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,bytes32,address)"
                      }
                    },
                    "id": 1805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1465:56:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1806,
                  "nodeType": "EmitStatement",
                  "src": "1460:61:15"
                }
              ]
            },
            "functionSelector": "0f7bdcf6",
            "id": 1808,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1740,
                    "name": "fillChainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1733,
                    "src": "759:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "expression": {
                      "id": 1741,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "772:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "772:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1743,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1739,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 159,
                  "src": "748:10:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "748:35:15"
              }
            ],
            "name": "resolve",
            "nameLocation": "645:7:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1731,
                  "mutability": "mutable",
                  "name": "fillHash",
                  "nameLocation": "661:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1808,
                  "src": "653:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1730,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1733,
                  "mutability": "mutable",
                  "name": "fillChainId",
                  "nameLocation": "679:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1808,
                  "src": "671:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1735,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "700:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1808,
                  "src": "692:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1737,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "723:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1808,
                  "src": "715:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "652:78:15"
            },
            "returnParameters": {
              "id": 1744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:0:15"
            },
            "scope": 1830,
            "src": "636:892:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1828,
              "nodeType": "Block",
              "src": "1638:90:15",
              "statements": [
                {
                  "expression": {
                    "id": 1826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1819,
                        "name": "resolutionInfos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1729,
                        "src": "1648:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResolutionInfos_$1714_storage_$",
                          "typeString": "mapping(uint256 => struct Resolver.ResolutionInfos storage ref)"
                        }
                      },
                      "id": 1821,
                      "indexExpression": {
                        "id": 1820,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1810,
                        "src": "1664:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1648:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolutionInfos_$1714_storage",
                        "typeString": "struct Resolver.ResolutionInfos storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1823,
                          "name": "resolutionRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "1691:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1824,
                          "name": "messenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1814,
                          "src": "1711:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1822,
                        "name": "ResolutionInfos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "1675:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ResolutionInfos_$1714_storage_ptr_$",
                          "typeString": "type(struct Resolver.ResolutionInfos storage pointer)"
                        }
                      },
                      "id": 1825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1675:46:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolutionInfos_$1714_memory_ptr",
                        "typeString": "struct Resolver.ResolutionInfos memory"
                      }
                    },
                    "src": "1648:73:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolutionInfos_$1714_storage",
                      "typeString": "struct Resolver.ResolutionInfos storage ref"
                    }
                  },
                  "id": 1827,
                  "nodeType": "ExpressionStatement",
                  "src": "1648:73:15"
                }
              ]
            },
            "functionSelector": "bfa9dd3a",
            "id": 1829,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1817,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1816,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2022,
                  "src": "1628:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "1628:9:15"
              }
            ],
            "name": "addRegistry",
            "nameLocation": "1543:11:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1810,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "1563:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1829,
                  "src": "1555:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1812,
                  "mutability": "mutable",
                  "name": "resolutionRegistry",
                  "nameLocation": "1580:18:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1829,
                  "src": "1572:26:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1814,
                  "mutability": "mutable",
                  "name": "messenger",
                  "nameLocation": "1608:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1829,
                  "src": "1600:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1600:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1554:64:15"
            },
            "returnParameters": {
              "id": 1818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1638:0:15"
            },
            "scope": 1830,
            "src": "1534:194:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1831,
        "src": "269:1461:15",
        "usedErrors": []
      }
    ],
    "src": "32:1699:15"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108b18061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610116578063b257fcf314610131578063bfa9dd3a14610165578063f2fde38b1461017857600080fd5b80630f7bdcf61461008d57806324ec66b3146100a2578063715018a6146100fb5780637203ae3b14610103575b600080fd5b6100a061009b3660046106f6565b61018b565b005b6100d66100b0366004610737565b600160208190526000918252604090912080549101546001600160a01b03918216911682565b604080516001600160a01b039384168152929091166020830152015b60405180910390f35b6100a06104bb565b6100a0610111366004610750565b6104f1565b6000546040516001600160a01b0390911681526020016100f2565b6100d661013f366004610737565b600260205260009081526040902080546001909101546001600160a01b03918216911682565b6100a0610173366004610750565b610574565b6100a0610186366004610792565b6105f6565b60008381526001602052604090208054849133916001600160a01b031682146101fb5760405162461bcd60e51b815260206004820181905260248201527f585265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c657260448201526064015b60405180910390fd5b6001810154815460408051636e296e4560e01b815290516001600160a01b039384169390921691636e296e45916004808201926020929091908290030181865afa15801561024d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027191906107b6565b6001600160a01b0316146102c75760405162461bcd60e51b815260206004820181905260248201527f585265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c657260448201526064016101f2565b600085815260026020526040902080546001600160a01b031661033b5760405162461bcd60e51b815260206004820152602660248201527f4e6f20726567697374727920617661696c61626c6520666f7220736f757263656044820152651031b430b4b760d11b60648201526084016101f2565b60018101546001600160a01b03166103a55760405162461bcd60e51b815260206004820152602760248201527f4e6f206d657373656e67657220617661696c61626c6520666f7220736f757263604482015266329031b430b4b760c91b60648201526084016101f2565b60018101548154604051602481018b90524660448201526001600160a01b038881166064830152928316928392633dbb202b9291169060840160408051601f198184030181529181526020820180516001600160e01b0316632a7dc03f60e01b179052516001600160e01b031960e085901b16815261042d929190620f4240906004016107d3565b600060405180830381600087803b15801561044757600080fd5b505af115801561045b573d6000803e3d6000fd5b5050604080518a8152602081018c90529081018c90526001600160a01b03891660608201527ffff8bfa97f931d6bd57671e0abdfdfa7fa026501d55b3e286371be38cfb48bfb9250608001905060405180910390a1505050505050505050565b6000546001600160a01b031633146104e55760405162461bcd60e51b81526004016101f290610846565b6104ef6000610691565b565b6000546001600160a01b0316331461051b5760405162461bcd60e51b81526004016101f290610846565b6040805180820182526001600160a01b0393841681529183166020808401918252600095865260019081905291909420915182546001600160a01b03199081169185169190911783559351910180549093169116179055565b6000546001600160a01b0316331461059e5760405162461bcd60e51b81526004016101f290610846565b6040805180820182526001600160a01b03938416815291831660208084019182526000958652600290529320905181546001600160a01b03199081169184169190911782559251600190910180549093169116179055565b6000546001600160a01b031633146106205760405162461bcd60e51b81526004016101f290610846565b6001600160a01b0381166106855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f2565b61068e81610691565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461068e57600080fd5b6000806000806080858703121561070c57600080fd5b843593506020850135925060408501359150606085013561072c816106e1565b939692955090935050565b60006020828403121561074957600080fd5b5035919050565b60008060006060848603121561076557600080fd5b833592506020840135610777816106e1565b91506040840135610787816106e1565b809150509250925092565b6000602082840312156107a457600080fd5b81356107af816106e1565b9392505050565b6000602082840312156107c857600080fd5b81516107af816106e1565b60018060a01b038416815260006020606081840152845180606085015260005b8181101561080f578681018301518582016080015282016107f3565b81811115610821576000608083870101525b5063ffffffff9490941660408401525050601f91909101601f19160160800192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220888ee8bad6c76dffb99f29c046d9dd8f8e1325663779e431d72fd503928ddf8e64736f6c634300080c0033",
  "bytecodeSha1": "7094404efe97b10b4fc3069076820f962f54b2d8",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Resolver",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "15": [
            2006,
            2028,
            true
          ]
        }
      },
      "15": {},
      "19": {},
      "6": {},
      "9": {
        "Resolver.resolve": {
          "13": [
            750,
            791,
            true
          ],
          "14": [
            868,
            925,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "11": [
            2378,
            2395
          ],
          "12": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "6": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "9": [
            1998,
            2071
          ],
          "10": [
            2081,
            2109
          ]
        }
      },
      "15": {
        "Resolver.addRegistry": {
          "8": [
            1648,
            1721
          ]
        },
        "Resolver.resolve": {
          "1": [
            866,
            954
          ],
          "2": [
            964,
            1044
          ],
          "3": [
            1136,
            1449
          ],
          "4": [
            1460,
            1521
          ]
        }
      },
      "19": {},
      "6": {
        "Context._msgSender": {
          "5": [
            712,
            729
          ]
        }
      },
      "9": {
        "CrossDomainRestrictedCalls.addCaller": {
          "7": [
            517,
            596
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "CrossDomainRestrictedCalls",
    "ICrossDomainMessenger",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610116578063b257fcf314610131578063bfa9dd3a14610165578063f2fde38b1461017857600080fd5b80630f7bdcf61461008d57806324ec66b3146100a2578063715018a6146100fb5780637203ae3b14610103575b600080fd5b6100a061009b3660046106f6565b61018b565b005b6100d66100b0366004610737565b600160208190526000918252604090912080549101546001600160a01b03918216911682565b604080516001600160a01b039384168152929091166020830152015b60405180910390f35b6100a06104bb565b6100a0610111366004610750565b6104f1565b6000546040516001600160a01b0390911681526020016100f2565b6100d661013f366004610737565b600260205260009081526040902080546001909101546001600160a01b03918216911682565b6100a0610173366004610750565b610574565b6100a0610186366004610792565b6105f6565b60008381526001602052604090208054849133916001600160a01b031682146101fb5760405162461bcd60e51b815260206004820181905260248201527f585265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c657260448201526064015b60405180910390fd5b6001810154815460408051636e296e4560e01b815290516001600160a01b039384169390921691636e296e45916004808201926020929091908290030181865afa15801561024d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027191906107b6565b6001600160a01b0316146102c75760405162461bcd60e51b815260206004820181905260248201527f585265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c657260448201526064016101f2565b600085815260026020526040902080546001600160a01b031661033b5760405162461bcd60e51b815260206004820152602660248201527f4e6f20726567697374727920617661696c61626c6520666f7220736f757263656044820152651031b430b4b760d11b60648201526084016101f2565b60018101546001600160a01b03166103a55760405162461bcd60e51b815260206004820152602760248201527f4e6f206d657373656e67657220617661696c61626c6520666f7220736f757263604482015266329031b430b4b760c91b60648201526084016101f2565b60018101548154604051602481018b90524660448201526001600160a01b038881166064830152928316928392633dbb202b9291169060840160408051601f198184030181529181526020820180516001600160e01b0316632a7dc03f60e01b179052516001600160e01b031960e085901b16815261042d929190620f4240906004016107d3565b600060405180830381600087803b15801561044757600080fd5b505af115801561045b573d6000803e3d6000fd5b5050604080518a8152602081018c90529081018c90526001600160a01b03891660608201527ffff8bfa97f931d6bd57671e0abdfdfa7fa026501d55b3e286371be38cfb48bfb9250608001905060405180910390a1505050505050505050565b6000546001600160a01b031633146104e55760405162461bcd60e51b81526004016101f290610846565b6104ef6000610691565b565b6000546001600160a01b0316331461051b5760405162461bcd60e51b81526004016101f290610846565b6040805180820182526001600160a01b0393841681529183166020808401918252600095865260019081905291909420915182546001600160a01b03199081169185169190911783559351910180549093169116179055565b6000546001600160a01b0316331461059e5760405162461bcd60e51b81526004016101f290610846565b6040805180820182526001600160a01b03938416815291831660208084019182526000958652600290529320905181546001600160a01b03199081169184169190911782559251600190910180549093169116179055565b6000546001600160a01b031633146106205760405162461bcd60e51b81526004016101f290610846565b6001600160a01b0381166106855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f2565b61068e81610691565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461068e57600080fd5b6000806000806080858703121561070c57600080fd5b843593506020850135925060408501359150606085013561072c816106e1565b939692955090935050565b60006020828403121561074957600080fd5b5035919050565b60008060006060848603121561076557600080fd5b833592506020840135610777816106e1565b91506040840135610787816106e1565b809150509250925092565b6000602082840312156107a457600080fd5b81356107af816106e1565b9392505050565b6000602082840312156107c857600080fd5b81516107af816106e1565b60018060a01b038416815260006020606081840152845180606085015260005b8181101561080f578681018301518582016080015282016107f3565b81811115610821576000608083870101525b5063ffffffff9490941660408401525050601f91909101601f19160160800192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220888ee8bad6c76dffb99f29c046d9dd8f8e1325663779e431d72fd503928ddf8e64736f6c634300080c0033",
  "deployedSourceMap": "269:1461:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:892;;;;;;:::i;:::-;;:::i;:::-;;356:54:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;356:54:9;;;;;;;;;;;-1:-1:-1;;;;;1052:15:21;;;1034:34;;1104:15;;;;1099:2;1084:18;;1077:43;969:18;356:54:9;;;;;;;;1668:101:0;;;:::i;417:186:9:-;;;;;;:::i;:::-;;:::i;1036:85:0:-;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;1738:51:21;;1726:2;1711:18;1036:85:0;1592:203:21;570:59:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;570:59:15;;;;;;;1534:194;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;636:892:15:-;672:25:9;700:19;;;:10;:19;;;;;768:22;;759:11:15;;772:10;;-1:-1:-1;;;;;768:22:9;750:41;;729:108;;;;-1:-1:-1;;;729:108:9;;2563:2:21;729:108:9;;;2545:21:21;;;2582:18;;;2575:30;2641:34;2621:18;;;2614:62;2693:18;;729:108:9;;;;;;;;;917:8;;;;868:22;;:45;;;-1:-1:-1;;;868:45:9;;;;-1:-1:-1;;;;;917:8:9;;;;868:22;;;;:43;;:45;;;;;;;;;;;;;;;:22;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;868:57:9;;847:136;;;;-1:-1:-1;;;847:136:9;;2563:2:21;847:136:9;;;2545:21:21;;;2582:18;;;2575:30;2641:34;2621:18;;;2614:62;2693:18;;847:136:9;2361:356:21;847:136:9;795:28:15::1;826:30:::0;;;:15:::1;:30;::::0;;;;874:23;;-1:-1:-1;;;;;874:23:15::1;866:88;;;::::0;-1:-1:-1;;;866:88:15;;3180:2:21;866:88:15::1;::::0;::::1;3162:21:21::0;3219:2;3199:18;;;3192:30;3258:34;3238:18;;;3231:62;-1:-1:-1;;;3309:18:21;;;3302:36;3355:19;;866:88:15::1;2978:402:21::0;866:88:15::1;972:14;::::0;::::1;::::0;-1:-1:-1;;;;;972:14:15::1;964:80;;;::::0;-1:-1:-1;;;964:80:15;;3587:2:21;964:80:15::1;::::0;::::1;3569:21:21::0;3626:2;3606:18;;;3599:30;3665:34;3645:18;;;3638:62;-1:-1:-1;;;3716:18:21;;;3709:37;3763:19;;964:80:15::1;3385:403:21::0;964:80:15::1;1111:14;::::0;::::1;::::0;1171:23;;1208:208:::1;::::0;::::1;::::0;::::1;3995:25:21::0;;;1343:13:15::1;4036:18:21::0;;;4029:34;-1:-1:-1;;;;;4099:32:21;;;4079:18;;;4072:60;1111:14:15;;::::1;::::0;;;1136:21:::1;::::0;1171:23;::::1;::::0;3968:18:21;;1208:208:15::1;::::0;;-1:-1:-1;;1208:208:15;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1208:208:15::1;-1:-1:-1::0;;;1208:208:15::1;::::0;;1136:313;-1:-1:-1;;;;;;1208:208:15::1;1136:313:::0;;;;;;::::1;::::0;;1208:208;1430:9:::1;::::0;1136:313:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1465:56:15::1;::::0;;5175:25:21;;;5231:2;5216:18;;5209:34;;;5259:18;;;5252:34;;;-1:-1:-1;;;;;5322:32:21;;5317:2;5302:18;;5295:60;1465:56:15::1;::::0;-1:-1:-1;5162:3:21;5147:19;;-1:-1:-1;1465:56:15::1;;;;;;;784:744;;662:339:9::0;636:892:15;;;;;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;417:186:9:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;539:57:9::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;539:57:9;;::::1;::::0;;;;::::1;;::::0;;::::1;::::0;;;-1:-1:-1;517:19:9;;;:10:::1;:19:::0;;;;;;;;:79;;;;-1:-1:-1;;;;;;517:79:9;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;::::0;::::1;;::::0;;417:186::o;1534:194:15:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1675:46:15::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;1675:46:15;;::::1;::::0;;;;::::1;;::::0;;::::1;::::0;;;-1:-1:-1;1648:24:15;;;:15:::1;:24:::0;;;;:73;;;;-1:-1:-1;;;;;;1648:73:15;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;1648:73:15;;::::1;::::0;;;;::::1;::::0;::::1;;::::0;;1534:194::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;5929:2:21;1998:73:0::1;::::0;::::1;5911:21:21::0;5968:2;5948:18;;;5941:30;6007:34;5987:18;;;5980:62;-1:-1:-1;;;6058:18:21;;;6051:36;6104:19;;1998:73:0::1;5727:402:21::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:131:21:-;-1:-1:-1;;;;;89:31:21;;79:42;;69:70;;135:1;132;125:12;150:452;236:6;244;252;260;313:3;301:9;292:7;288:23;284:33;281:53;;;330:1;327;320:12;281:53;366:9;353:23;343:33;;423:2;412:9;408:18;395:32;385:42;;474:2;463:9;459:18;446:32;436:42;;528:2;517:9;513:18;500:32;541:31;566:5;541:31;:::i;:::-;150:452;;;;-1:-1:-1;150:452:21;;-1:-1:-1;;150:452:21:o;607:180::-;666:6;719:2;707:9;698:7;694:23;690:32;687:52;;;735:1;732;725:12;687:52;-1:-1:-1;758:23:21;;607:180;-1:-1:-1;607:180:21:o;1131:456::-;1208:6;1216;1224;1277:2;1265:9;1256:7;1252:23;1248:32;1245:52;;;1293:1;1290;1283:12;1245:52;1329:9;1316:23;1306:33;;1389:2;1378:9;1374:18;1361:32;1402:31;1427:5;1402:31;:::i;:::-;1452:5;-1:-1:-1;1509:2:21;1494:18;;1481:32;1522:33;1481:32;1522:33;:::i;:::-;1574:7;1564:17;;;1131:456;;;;;:::o;2109:247::-;2168:6;2221:2;2209:9;2200:7;2196:23;2192:32;2189:52;;;2237:1;2234;2227:12;2189:52;2276:9;2263:23;2295:31;2320:5;2295:31;:::i;:::-;2345:5;2109:247;-1:-1:-1;;;2109:247:21:o;2722:251::-;2792:6;2845:2;2833:9;2824:7;2820:23;2816:32;2813:52;;;2861:1;2858;2851:12;2813:52;2893:9;2887:16;2912:31;2937:5;2912:31;:::i;4143:796::-;4388:1;4384;4379:3;4375:11;4371:19;4363:6;4359:32;4348:9;4341:51;4322:4;4411:2;4449;4444;4433:9;4429:18;4422:30;4481:6;4475:13;4524:6;4519:2;4508:9;4504:18;4497:34;4549:1;4559:141;4573:6;4570:1;4567:13;4559:141;;;4669:14;;;4665:23;;4659:30;4634:17;;;4653:3;4630:27;4623:67;4588:10;;4559:141;;;4718:6;4715:1;4712:13;4709:92;;;4789:1;4783:3;4774:6;4763:9;4759:22;4755:32;4748:43;4709:92;-1:-1:-1;4921:10:21;4909:23;;;;4904:2;4889:18;;4882:51;-1:-1:-1;;4862:2:21;4841:15;;;;-1:-1:-1;;4837:29:21;4822:45;4869:3;4818:55;;4143:796;-1:-1:-1;;4143:796:21:o;5366:356::-;5568:2;5550:21;;;5587:18;;;5580:30;5646:34;5641:2;5626:18;;5619:62;5713:2;5698:18;;5366:356::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    269,
    1730
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xB257FCF3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xBFA9DD3A EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF7BDCF6 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x24EC66B3 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x7203AE3B EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0x750 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP3 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x750 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x792 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP5 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 EQ PUSH2 0x1FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x585265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6E296E45 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6E296E45 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x585265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20726567697374727920617661696C61626C6520666F7220736F75726365 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1031B430B4B7 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206D657373656E67657220617661696C61626C6520666F7220736F757263 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x329031B430B4B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP12 SWAP1 MSTORE CHAINID PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE SWAP3 DUP4 AND SWAP3 DUP4 SWAP3 PUSH4 0x3DBB202B SWAP3 SWAP2 AND SWAP1 PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2A7DC03F PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x42D SWAP3 SWAP2 SWAP1 PUSH3 0xF4240 SWAP1 PUSH1 0x4 ADD PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x45B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP11 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xFFF8BFA97F931D6BD57671E0ABDFDFA7FA026501D55B3E286371BE38CFB48BFB SWAP3 POP PUSH1 0x80 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x4EF PUSH1 0x0 PUSH2 0x691 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x1 SWAP1 DUP2 SWAP1 MSTORE SWAP2 SWAP1 SWAP5 KECCAK256 SWAP2 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR DUP4 SSTORE SWAP4 MLOAD SWAP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x2 SWAP1 MSTORE SWAP4 KECCAK256 SWAP1 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F2 JUMP JUMPDEST PUSH2 0x68E DUP2 PUSH2 0x691 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x72C DUP2 PUSH2 0x6E1 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x777 DUP2 PUSH2 0x6E1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x787 DUP2 PUSH2 0x6E1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7AF DUP2 PUSH2 0x6E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7AF DUP2 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x60 DUP2 DUP5 ADD MSTORE DUP5 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x80F JUMPI DUP7 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0x7F3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH4 0xFFFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD PUSH1 0x80 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 DUP15 0xE8 0xBA 0xD6 0xC7 PUSH14 0xFFB99F29C046D9DD8F8E13256637 PUSH26 0xE431D72FD503928DDF8E64736F6C634300080C00330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        269,
        1730
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "6": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "REVERT",
      "path": "15"
    },
    "16": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "POP",
      "path": "15"
    },
    "18": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "21": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "LT",
      "path": "15"
    },
    "22": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "26": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "29": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "SHR",
      "path": "15"
    },
    "32": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "33": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "GT",
      "path": "15"
    },
    "39": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "43": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "44": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "EQ",
      "path": "15"
    },
    "50": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x116"
    },
    "53": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "54": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "55": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB257FCF3"
    },
    "60": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "EQ",
      "path": "15"
    },
    "61": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x131"
    },
    "64": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "65": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "66": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xBFA9DD3A"
    },
    "71": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "EQ",
      "path": "15"
    },
    "72": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x165"
    },
    "75": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "76": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "77": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "EQ",
      "path": "15"
    },
    "83": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x178"
    },
    "86": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "87": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "90": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "REVERT",
      "path": "15"
    },
    "91": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "92": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "93": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF7BDCF6"
    },
    "98": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "EQ",
      "path": "15"
    },
    "99": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "103": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "104": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x24EC66B3"
    },
    "109": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "EQ",
      "path": "15"
    },
    "110": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA2"
    },
    "113": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "114": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "115": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "EQ",
      "path": "15"
    },
    "121": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFB"
    },
    "124": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "125": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "126": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x7203AE3B"
    },
    "131": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "EQ",
      "path": "15"
    },
    "132": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x103"
    },
    "135": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "136": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "137": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        269,
        1730
      ],
      "op": "REVERT",
      "path": "15"
    },
    "141": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "142": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA0"
    },
    "145": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9B"
    },
    "148": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "149": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "151": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6F6"
    },
    "154": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        636,
        1528
      ],
      "op": "JUMP",
      "path": "15"
    },
    "155": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "156": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18B"
    },
    "159": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        636,
        1528
      ],
      "op": "JUMP",
      "path": "15"
    },
    "160": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "161": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "STOP",
      "path": "15"
    },
    "162": {
      "offset": [
        356,
        410
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "163": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD6"
    },
    "166": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB0"
    },
    "169": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "170": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "172": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x737"
    },
    "175": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        356,
        410
      ],
      "op": "JUMP",
      "path": "9"
    },
    "176": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "177": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "179": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "181": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "DUP2",
      "path": "9"
    },
    "182": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "183": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "184": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "186": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "187": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "DUP3",
      "path": "9"
    },
    "188": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "189": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "191": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "192": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "193": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "194": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "DUP1",
      "path": "9"
    },
    "195": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "196": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "197": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "ADD",
      "path": "9"
    },
    "198": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "205": {
      "op": "SHL"
    },
    "206": {
      "op": "SUB"
    },
    "207": {
      "offset": [
        356,
        410
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "208": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "DUP3",
      "path": "9"
    },
    "209": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "AND",
      "path": "9"
    },
    "210": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "211": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "AND",
      "path": "9"
    },
    "212": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "DUP3",
      "path": "9"
    },
    "213": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "JUMP",
      "path": "9"
    },
    "214": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "215": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "217": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "DUP1",
      "path": "9"
    },
    "218": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "225": {
      "op": "SHL"
    },
    "226": {
      "op": "SUB"
    },
    "227": {
      "op": "SWAP4"
    },
    "228": {
      "op": "DUP5"
    },
    "229": {
      "op": "AND"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "SWAP3"
    },
    "233": {
      "op": "SWAP1"
    },
    "234": {
      "op": "SWAP2"
    },
    "235": {
      "op": "AND"
    },
    "236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "238": {
      "op": "DUP4"
    },
    "239": {
      "op": "ADD"
    },
    "240": {
      "op": "MSTORE"
    },
    "241": {
      "op": "ADD"
    },
    "242": {
      "offset": [
        356,
        410
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "243": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "245": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "246": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "DUP1",
      "path": "9"
    },
    "247": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "248": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "SUB",
      "path": "9"
    },
    "249": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "250": {
      "fn": "Resolver.resolve",
      "offset": [
        356,
        410
      ],
      "op": "RETURN",
      "path": "9"
    },
    "251": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "252": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "255": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BB"
    },
    "258": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "259": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        417,
        603
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "260": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        417,
        603
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA0"
    },
    "263": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        417,
        603
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x111"
    },
    "266": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        417,
        603
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "267": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        417,
        603
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "269": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        417,
        603
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x750"
    },
    "272": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        417,
        603
      ],
      "op": "JUMP",
      "path": "9"
    },
    "273": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        417,
        603
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "274": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        417,
        603
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4F1"
    },
    "277": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        417,
        603
      ],
      "op": "JUMP",
      "path": "9"
    },
    "278": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "279": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "281": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "282": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "284": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "291": {
      "op": "SHL"
    },
    "292": {
      "op": "SUB"
    },
    "293": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "294": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "295": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "296": {
      "op": "DUP2"
    },
    "297": {
      "op": "MSTORE"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "300": {
      "op": "ADD"
    },
    "301": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "304": {
      "op": "JUMP"
    },
    "305": {
      "offset": [
        570,
        629
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "306": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD6"
    },
    "309": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13F"
    },
    "312": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "313": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "315": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x737"
    },
    "318": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        570,
        629
      ],
      "op": "JUMP",
      "path": "15"
    },
    "319": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "320": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "322": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "324": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "325": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "327": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "328": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "DUP2",
      "path": "15"
    },
    "329": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "330": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "332": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "333": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "334": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "DUP1",
      "path": "15"
    },
    "335": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "336": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "338": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "339": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "340": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "ADD",
      "path": "15"
    },
    "341": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "348": {
      "op": "SHL"
    },
    "349": {
      "op": "SUB"
    },
    "350": {
      "offset": [
        570,
        629
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "351": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "DUP3",
      "path": "15"
    },
    "352": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "AND",
      "path": "15"
    },
    "353": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "354": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "AND",
      "path": "15"
    },
    "355": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "DUP3",
      "path": "15"
    },
    "356": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        629
      ],
      "op": "JUMP",
      "path": "15"
    },
    "357": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1534,
        1728
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "358": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1534,
        1728
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA0"
    },
    "361": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1534,
        1728
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x173"
    },
    "364": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1534,
        1728
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "365": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1534,
        1728
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "367": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1534,
        1728
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x750"
    },
    "370": {
      "fn": "Resolver.addRegistry",
      "jump": "i",
      "offset": [
        1534,
        1728
      ],
      "op": "JUMP",
      "path": "15"
    },
    "371": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1534,
        1728
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "372": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1534,
        1728
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x574"
    },
    "375": {
      "fn": "Resolver.addRegistry",
      "jump": "i",
      "offset": [
        1534,
        1728
      ],
      "op": "JUMP",
      "path": "15"
    },
    "376": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "377": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "380": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x186"
    },
    "383": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "384": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "386": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x792"
    },
    "389": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "390": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "391": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F6"
    },
    "394": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "395": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "396": {
      "offset": [
        672,
        697
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "398": {
      "offset": [
        700,
        719
      ],
      "op": "DUP4",
      "path": "9"
    },
    "399": {
      "fn": "Resolver.resolve",
      "offset": [
        700,
        719
      ],
      "op": "DUP2",
      "path": "9"
    },
    "400": {
      "fn": "Resolver.resolve",
      "offset": [
        700,
        719
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "401": {
      "offset": [
        700,
        710
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "403": {
      "offset": [
        700,
        719
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "405": {
      "fn": "Resolver.resolve",
      "offset": [
        700,
        719
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "406": {
      "fn": "Resolver.resolve",
      "offset": [
        700,
        719
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "408": {
      "fn": "Resolver.resolve",
      "offset": [
        700,
        719
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "409": {
      "fn": "Resolver.resolve",
      "offset": [
        700,
        719
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "410": {
      "offset": [
        768,
        790
      ],
      "op": "DUP1",
      "path": "9"
    },
    "411": {
      "fn": "Resolver.resolve",
      "offset": [
        768,
        790
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "412": {
      "fn": "Resolver.resolve",
      "offset": [
        759,
        770
      ],
      "op": "DUP5",
      "path": "15"
    },
    "413": {
      "fn": "Resolver.resolve",
      "offset": [
        759,
        770
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "414": {
      "fn": "Resolver.resolve",
      "offset": [
        772,
        782
      ],
      "op": "CALLER",
      "path": "15"
    },
    "415": {
      "fn": "Resolver.resolve",
      "offset": [
        772,
        782
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "422": {
      "op": "SHL"
    },
    "423": {
      "op": "SUB"
    },
    "424": {
      "offset": [
        768,
        790
      ],
      "op": "AND",
      "path": "9"
    },
    "425": {
      "offset": [
        750,
        791
      ],
      "op": "DUP3",
      "path": "9"
    },
    "426": {
      "branch": 13,
      "fn": "Resolver.resolve",
      "offset": [
        750,
        791
      ],
      "op": "EQ",
      "path": "9"
    },
    "427": {
      "offset": [
        729,
        837
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FB"
    },
    "430": {
      "branch": 13,
      "offset": [
        729,
        837
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "431": {
      "fn": "Resolver.resolve",
      "offset": [
        729,
        837
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "433": {
      "fn": "Resolver.resolve",
      "offset": [
        729,
        837
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "440": {
      "op": "SHL"
    },
    "441": {
      "offset": [
        729,
        837
      ],
      "op": "DUP2",
      "path": "9"
    },
    "442": {
      "fn": "Resolver.resolve",
      "offset": [
        729,
        837
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "445": {
      "offset": [
        729,
        837
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "447": {
      "fn": "Resolver.resolve",
      "offset": [
        729,
        837
      ],
      "op": "DUP3",
      "path": "9"
    },
    "448": {
      "fn": "Resolver.resolve",
      "offset": [
        729,
        837
      ],
      "op": "ADD",
      "path": "9"
    },
    "449": {
      "op": "DUP2"
    },
    "450": {
      "op": "SWAP1"
    },
    "451": {
      "op": "MSTORE"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "454": {
      "op": "DUP3"
    },
    "455": {
      "op": "ADD"
    },
    "456": {
      "op": "MSTORE"
    },
    "457": {
      "op": "PUSH32",
      "value": "0x585265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C6572"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "492": {
      "op": "DUP3"
    },
    "493": {
      "op": "ADD"
    },
    "494": {
      "op": "MSTORE"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "497": {
      "op": "ADD"
    },
    "498": {
      "offset": [
        729,
        837
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "499": {
      "fn": "Resolver.resolve",
      "offset": [
        729,
        837
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "501": {
      "fn": "Resolver.resolve",
      "offset": [
        729,
        837
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "502": {
      "fn": "Resolver.resolve",
      "offset": [
        729,
        837
      ],
      "op": "DUP1",
      "path": "9"
    },
    "503": {
      "fn": "Resolver.resolve",
      "offset": [
        729,
        837
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "504": {
      "fn": "Resolver.resolve",
      "offset": [
        729,
        837
      ],
      "op": "SUB",
      "path": "9"
    },
    "505": {
      "fn": "Resolver.resolve",
      "offset": [
        729,
        837
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "506": {
      "fn": "Resolver.resolve",
      "offset": [
        729,
        837
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "9"
    },
    "507": {
      "fn": "Resolver.resolve",
      "offset": [
        729,
        837
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "508": {
      "offset": [
        917,
        925
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "510": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        925
      ],
      "op": "DUP2",
      "path": "9"
    },
    "511": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        925
      ],
      "op": "ADD",
      "path": "9"
    },
    "512": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        925
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "513": {
      "offset": [
        868,
        890
      ],
      "op": "DUP2",
      "path": "9"
    },
    "514": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        890
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "515": {
      "offset": [
        868,
        913
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "517": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "DUP1",
      "path": "9"
    },
    "518": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "519": {
      "op": "PUSH4",
      "value": "0x6E296E45"
    },
    "524": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "526": {
      "op": "SHL"
    },
    "527": {
      "offset": [
        868,
        913
      ],
      "op": "DUP2",
      "path": "9"
    },
    "528": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "529": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "530": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "537": {
      "op": "SHL"
    },
    "538": {
      "op": "SUB"
    },
    "539": {
      "offset": [
        917,
        925
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "540": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        925
      ],
      "op": "DUP5",
      "path": "9"
    },
    "541": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        925
      ],
      "op": "AND",
      "path": "9"
    },
    "542": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        925
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "543": {
      "offset": [
        868,
        890
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "544": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        890
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "545": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        890
      ],
      "op": "AND",
      "path": "9"
    },
    "546": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        890
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "547": {
      "offset": [
        868,
        911
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6E296E45"
    },
    "552": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        911
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "553": {
      "offset": [
        868,
        913
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "555": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "DUP1",
      "path": "9"
    },
    "556": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "DUP3",
      "path": "9"
    },
    "557": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "ADD",
      "path": "9"
    },
    "558": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "559": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "561": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "562": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "563": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "564": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "565": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "DUP3",
      "path": "9"
    },
    "566": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "567": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "SUB",
      "path": "9"
    },
    "568": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "ADD",
      "path": "9"
    },
    "569": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "DUP2",
      "path": "9"
    },
    "570": {
      "offset": [
        868,
        890
      ],
      "op": "DUP7",
      "path": "9"
    },
    "571": {
      "offset": [
        868,
        913
      ],
      "op": "GAS",
      "path": "9"
    },
    "572": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "573": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "574": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "DUP1",
      "path": "9"
    },
    "575": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "576": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x24D"
    },
    "579": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "580": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "581": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "583": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "DUP1",
      "path": "9"
    },
    "584": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "585": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "586": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "588": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "REVERT",
      "path": "9"
    },
    "589": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "590": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "POP",
      "path": "9"
    },
    "591": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "POP",
      "path": "9"
    },
    "592": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "POP",
      "path": "9"
    },
    "593": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "POP",
      "path": "9"
    },
    "594": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "596": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "597": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "598": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "600": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "NOT",
      "path": "9"
    },
    "601": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "603": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "DUP3",
      "path": "9"
    },
    "604": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "ADD",
      "path": "9"
    },
    "605": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "AND",
      "path": "9"
    },
    "606": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "DUP3",
      "path": "9"
    },
    "607": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "ADD",
      "path": "9"
    },
    "608": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "DUP1",
      "path": "9"
    },
    "609": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "611": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "612": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "POP",
      "path": "9"
    },
    "613": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "DUP2",
      "path": "9"
    },
    "614": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "ADD",
      "path": "9"
    },
    "615": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "616": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x271"
    },
    "619": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "620": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "621": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7B6"
    },
    "624": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        868,
        913
      ],
      "op": "JUMP",
      "path": "9"
    },
    "625": {
      "fn": "Resolver.resolve",
      "offset": [
        868,
        913
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "632": {
      "op": "SHL"
    },
    "633": {
      "op": "SUB"
    },
    "634": {
      "offset": [
        868,
        925
      ],
      "op": "AND",
      "path": "9"
    },
    "635": {
      "branch": 14,
      "fn": "Resolver.resolve",
      "offset": [
        868,
        925
      ],
      "op": "EQ",
      "path": "9"
    },
    "636": {
      "offset": [
        847,
        983
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2C7"
    },
    "639": {
      "branch": 14,
      "offset": [
        847,
        983
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "640": {
      "fn": "Resolver.resolve",
      "offset": [
        847,
        983
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "642": {
      "fn": "Resolver.resolve",
      "offset": [
        847,
        983
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "649": {
      "op": "SHL"
    },
    "650": {
      "offset": [
        847,
        983
      ],
      "op": "DUP2",
      "path": "9"
    },
    "651": {
      "fn": "Resolver.resolve",
      "offset": [
        847,
        983
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "654": {
      "offset": [
        847,
        983
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "656": {
      "fn": "Resolver.resolve",
      "offset": [
        847,
        983
      ],
      "op": "DUP3",
      "path": "9"
    },
    "657": {
      "fn": "Resolver.resolve",
      "offset": [
        847,
        983
      ],
      "op": "ADD",
      "path": "9"
    },
    "658": {
      "op": "DUP2"
    },
    "659": {
      "op": "SWAP1"
    },
    "660": {
      "op": "MSTORE"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "663": {
      "op": "DUP3"
    },
    "664": {
      "op": "ADD"
    },
    "665": {
      "op": "MSTORE"
    },
    "666": {
      "op": "PUSH32",
      "value": "0x585265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C6572"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "701": {
      "op": "DUP3"
    },
    "702": {
      "op": "ADD"
    },
    "703": {
      "op": "MSTORE"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "706": {
      "op": "ADD"
    },
    "707": {
      "offset": [
        847,
        983
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1F2"
    },
    "710": {
      "op": "JUMP"
    },
    "711": {
      "offset": [
        847,
        983
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "712": {
      "fn": "Resolver.resolve",
      "offset": [
        795,
        823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "714": {
      "fn": "Resolver.resolve",
      "offset": [
        826,
        856
      ],
      "op": "DUP6",
      "path": "15"
    },
    "715": {
      "fn": "Resolver.resolve",
      "offset": [
        826,
        856
      ],
      "op": "DUP2",
      "path": "15"
    },
    "716": {
      "fn": "Resolver.resolve",
      "offset": [
        826,
        856
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "717": {
      "fn": "Resolver.resolve",
      "offset": [
        826,
        841
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "719": {
      "fn": "Resolver.resolve",
      "offset": [
        826,
        856
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "721": {
      "fn": "Resolver.resolve",
      "offset": [
        826,
        856
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "722": {
      "fn": "Resolver.resolve",
      "offset": [
        826,
        856
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "724": {
      "fn": "Resolver.resolve",
      "offset": [
        826,
        856
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "725": {
      "fn": "Resolver.resolve",
      "offset": [
        826,
        856
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "726": {
      "fn": "Resolver.resolve",
      "offset": [
        874,
        897
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 1
    },
    "727": {
      "fn": "Resolver.resolve",
      "offset": [
        874,
        897
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "734": {
      "op": "SHL"
    },
    "735": {
      "op": "SUB"
    },
    "736": {
      "fn": "Resolver.resolve",
      "offset": [
        874,
        897
      ],
      "op": "AND",
      "path": "15"
    },
    "737": {
      "fn": "Resolver.resolve",
      "offset": [
        866,
        954
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33B"
    },
    "740": {
      "fn": "Resolver.resolve",
      "offset": [
        866,
        954
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "741": {
      "fn": "Resolver.resolve",
      "offset": [
        866,
        954
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "743": {
      "fn": "Resolver.resolve",
      "offset": [
        866,
        954
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "744": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "748": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "750": {
      "op": "SHL"
    },
    "751": {
      "fn": "Resolver.resolve",
      "offset": [
        866,
        954
      ],
      "op": "DUP2",
      "path": "15"
    },
    "752": {
      "fn": "Resolver.resolve",
      "offset": [
        866,
        954
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "755": {
      "fn": "Resolver.resolve",
      "offset": [
        866,
        954
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "757": {
      "fn": "Resolver.resolve",
      "offset": [
        866,
        954
      ],
      "op": "DUP3",
      "path": "15"
    },
    "758": {
      "fn": "Resolver.resolve",
      "offset": [
        866,
        954
      ],
      "op": "ADD",
      "path": "15"
    },
    "759": {
      "op": "MSTORE"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "764": {
      "op": "DUP3"
    },
    "765": {
      "op": "ADD"
    },
    "766": {
      "op": "MSTORE"
    },
    "767": {
      "op": "PUSH32",
      "value": "0x4E6F20726567697374727920617661696C61626C6520666F7220736F75726365"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "802": {
      "op": "DUP3"
    },
    "803": {
      "op": "ADD"
    },
    "804": {
      "op": "MSTORE"
    },
    "805": {
      "op": "PUSH6",
      "value": "0x1031B430B4B7"
    },
    "812": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "814": {
      "op": "SHL"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "817": {
      "op": "DUP3"
    },
    "818": {
      "op": "ADD"
    },
    "819": {
      "op": "MSTORE"
    },
    "820": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "822": {
      "op": "ADD"
    },
    "823": {
      "fn": "Resolver.resolve",
      "offset": [
        866,
        954
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F2"
    },
    "826": {
      "op": "JUMP"
    },
    "827": {
      "fn": "Resolver.resolve",
      "offset": [
        866,
        954
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "828": {
      "fn": "Resolver.resolve",
      "offset": [
        972,
        986
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 2,
      "value": "0x1"
    },
    "830": {
      "fn": "Resolver.resolve",
      "offset": [
        972,
        986
      ],
      "op": "DUP2",
      "path": "15"
    },
    "831": {
      "fn": "Resolver.resolve",
      "offset": [
        972,
        986
      ],
      "op": "ADD",
      "path": "15"
    },
    "832": {
      "fn": "Resolver.resolve",
      "offset": [
        972,
        986
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "839": {
      "op": "SHL"
    },
    "840": {
      "op": "SUB"
    },
    "841": {
      "fn": "Resolver.resolve",
      "offset": [
        972,
        986
      ],
      "op": "AND",
      "path": "15"
    },
    "842": {
      "fn": "Resolver.resolve",
      "offset": [
        964,
        1044
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3A5"
    },
    "845": {
      "fn": "Resolver.resolve",
      "offset": [
        964,
        1044
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "846": {
      "fn": "Resolver.resolve",
      "offset": [
        964,
        1044
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "848": {
      "fn": "Resolver.resolve",
      "offset": [
        964,
        1044
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "849": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "853": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "855": {
      "op": "SHL"
    },
    "856": {
      "fn": "Resolver.resolve",
      "offset": [
        964,
        1044
      ],
      "op": "DUP2",
      "path": "15"
    },
    "857": {
      "fn": "Resolver.resolve",
      "offset": [
        964,
        1044
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "860": {
      "fn": "Resolver.resolve",
      "offset": [
        964,
        1044
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "862": {
      "fn": "Resolver.resolve",
      "offset": [
        964,
        1044
      ],
      "op": "DUP3",
      "path": "15"
    },
    "863": {
      "fn": "Resolver.resolve",
      "offset": [
        964,
        1044
      ],
      "op": "ADD",
      "path": "15"
    },
    "864": {
      "op": "MSTORE"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "869": {
      "op": "DUP3"
    },
    "870": {
      "op": "ADD"
    },
    "871": {
      "op": "MSTORE"
    },
    "872": {
      "op": "PUSH32",
      "value": "0x4E6F206D657373656E67657220617661696C61626C6520666F7220736F757263"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "907": {
      "op": "DUP3"
    },
    "908": {
      "op": "ADD"
    },
    "909": {
      "op": "MSTORE"
    },
    "910": {
      "op": "PUSH7",
      "value": "0x329031B430B4B7"
    },
    "918": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "920": {
      "op": "SHL"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "923": {
      "op": "DUP3"
    },
    "924": {
      "op": "ADD"
    },
    "925": {
      "op": "MSTORE"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "928": {
      "op": "ADD"
    },
    "929": {
      "fn": "Resolver.resolve",
      "offset": [
        964,
        1044
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F2"
    },
    "932": {
      "op": "JUMP"
    },
    "933": {
      "fn": "Resolver.resolve",
      "offset": [
        964,
        1044
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "934": {
      "fn": "Resolver.resolve",
      "offset": [
        1111,
        1125
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "936": {
      "fn": "Resolver.resolve",
      "offset": [
        1111,
        1125
      ],
      "op": "DUP2",
      "path": "15"
    },
    "937": {
      "fn": "Resolver.resolve",
      "offset": [
        1111,
        1125
      ],
      "op": "ADD",
      "path": "15"
    },
    "938": {
      "fn": "Resolver.resolve",
      "offset": [
        1111,
        1125
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "939": {
      "fn": "Resolver.resolve",
      "offset": [
        1171,
        1194
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 3
    },
    "940": {
      "fn": "Resolver.resolve",
      "offset": [
        1171,
        1194
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "941": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "943": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "944": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "946": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "DUP2",
      "path": "15"
    },
    "947": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "ADD",
      "path": "15"
    },
    "948": {
      "op": "DUP12"
    },
    "949": {
      "op": "SWAP1"
    },
    "950": {
      "op": "MSTORE"
    },
    "951": {
      "fn": "Resolver.resolve",
      "offset": [
        1343,
        1356
      ],
      "op": "CHAINID",
      "path": "15"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "954": {
      "op": "DUP3"
    },
    "955": {
      "op": "ADD"
    },
    "956": {
      "op": "MSTORE"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "963": {
      "op": "SHL"
    },
    "964": {
      "op": "SUB"
    },
    "965": {
      "op": "DUP9"
    },
    "966": {
      "op": "DUP2"
    },
    "967": {
      "op": "AND"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "970": {
      "op": "DUP4"
    },
    "971": {
      "op": "ADD"
    },
    "972": {
      "op": "MSTORE"
    },
    "973": {
      "fn": "Resolver.resolve",
      "offset": [
        1111,
        1125
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "974": {
      "fn": "Resolver.resolve",
      "offset": [
        1111,
        1125
      ],
      "op": "DUP4",
      "path": "15"
    },
    "975": {
      "fn": "Resolver.resolve",
      "offset": [
        1111,
        1125
      ],
      "op": "AND",
      "path": "15"
    },
    "976": {
      "fn": "Resolver.resolve",
      "offset": [
        1111,
        1125
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "977": {
      "fn": "Resolver.resolve",
      "offset": [
        1111,
        1125
      ],
      "op": "DUP4",
      "path": "15"
    },
    "978": {
      "fn": "Resolver.resolve",
      "offset": [
        1111,
        1125
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "979": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1157
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x3DBB202B"
    },
    "984": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1157
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "985": {
      "fn": "Resolver.resolve",
      "offset": [
        1171,
        1194
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "986": {
      "fn": "Resolver.resolve",
      "offset": [
        1171,
        1194
      ],
      "op": "AND",
      "path": "15"
    },
    "987": {
      "fn": "Resolver.resolve",
      "offset": [
        1171,
        1194
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "990": {
      "op": "ADD"
    },
    "991": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "993": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "DUP1",
      "path": "15"
    },
    "994": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "997": {
      "op": "NOT"
    },
    "998": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "DUP2",
      "path": "15"
    },
    "999": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1000": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "SUB",
      "path": "15"
    },
    "1001": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "ADD",
      "path": "15"
    },
    "1002": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1003": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1004": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1005": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1006": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1007": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1009": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1010": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "ADD",
      "path": "15"
    },
    "1011": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1012": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1019": {
      "op": "SHL"
    },
    "1020": {
      "op": "SUB"
    },
    "1021": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "AND",
      "path": "15"
    },
    "1022": {
      "op": "PUSH4",
      "value": "0x2A7DC03F"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1029": {
      "op": "SHL"
    },
    "1030": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "OR",
      "path": "15"
    },
    "1031": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1032": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1033": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1040": {
      "op": "SHL"
    },
    "1041": {
      "op": "SUB"
    },
    "1042": {
      "op": "NOT"
    },
    "1043": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "1045": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "DUP6",
      "path": "15"
    },
    "1046": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1047": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "SHL",
      "path": "15"
    },
    "1048": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "AND",
      "path": "15"
    },
    "1049": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1050": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1051": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x42D"
    },
    "1054": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1055": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1056": {
      "fn": "Resolver.resolve",
      "offset": [
        1208,
        1416
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1057": {
      "fn": "Resolver.resolve",
      "offset": [
        1430,
        1439
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xF4240"
    },
    "1061": {
      "fn": "Resolver.resolve",
      "offset": [
        1430,
        1439
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1062": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1064": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "ADD",
      "path": "15"
    },
    "1065": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7D3"
    },
    "1068": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        1136,
        1449
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1069": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1070": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1072": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1074": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1075": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1076": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1077": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "SUB",
      "path": "15"
    },
    "1078": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1079": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1081": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1082": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1083": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "1084": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1085": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1086": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1087": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x447"
    },
    "1090": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1091": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1093": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1094": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1095": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1096": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "POP",
      "path": "15"
    },
    "1097": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "GAS",
      "path": "15"
    },
    "1098": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "CALL",
      "path": "15"
    },
    "1099": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1100": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1101": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1102": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x45B"
    },
    "1105": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1106": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1107": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1109": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1110": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "1111": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1112": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1114": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1115": {
      "fn": "Resolver.resolve",
      "offset": [
        1136,
        1449
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "op": "POP"
    },
    "1118": {
      "fn": "Resolver.resolve",
      "offset": [
        1465,
        1521
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 4,
      "value": "0x40"
    },
    "1120": {
      "fn": "Resolver.resolve",
      "offset": [
        1465,
        1521
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1121": {
      "fn": "Resolver.resolve",
      "offset": [
        1465,
        1521
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1122": {
      "op": "DUP11"
    },
    "1123": {
      "op": "DUP2"
    },
    "1124": {
      "op": "MSTORE"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1127": {
      "op": "DUP2"
    },
    "1128": {
      "op": "ADD"
    },
    "1129": {
      "op": "DUP13"
    },
    "1130": {
      "op": "SWAP1"
    },
    "1131": {
      "op": "MSTORE"
    },
    "1132": {
      "op": "SWAP1"
    },
    "1133": {
      "op": "DUP2"
    },
    "1134": {
      "op": "ADD"
    },
    "1135": {
      "op": "DUP13"
    },
    "1136": {
      "op": "SWAP1"
    },
    "1137": {
      "op": "MSTORE"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "SUB"
    },
    "1146": {
      "op": "DUP10"
    },
    "1147": {
      "op": "AND"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1150": {
      "op": "DUP3"
    },
    "1151": {
      "op": "ADD"
    },
    "1152": {
      "op": "MSTORE"
    },
    "1153": {
      "fn": "Resolver.resolve",
      "offset": [
        1465,
        1521
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xFFF8BFA97F931D6BD57671E0ABDFDFA7FA026501D55B3E286371BE38CFB48BFB"
    },
    "1186": {
      "fn": "Resolver.resolve",
      "offset": [
        1465,
        1521
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1187": {
      "op": "POP"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1190": {
      "op": "ADD"
    },
    "1191": {
      "op": "SWAP1"
    },
    "1192": {
      "op": "POP"
    },
    "1193": {
      "fn": "Resolver.resolve",
      "offset": [
        1465,
        1521
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1195": {
      "fn": "Resolver.resolve",
      "offset": [
        1465,
        1521
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1196": {
      "fn": "Resolver.resolve",
      "offset": [
        1465,
        1521
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1197": {
      "fn": "Resolver.resolve",
      "offset": [
        1465,
        1521
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1198": {
      "fn": "Resolver.resolve",
      "offset": [
        1465,
        1521
      ],
      "op": "SUB",
      "path": "15"
    },
    "1199": {
      "fn": "Resolver.resolve",
      "offset": [
        1465,
        1521
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1200": {
      "fn": "Resolver.resolve",
      "offset": [
        1465,
        1521
      ],
      "op": "LOG1",
      "path": "15"
    },
    "1201": {
      "fn": "Resolver.resolve",
      "offset": [
        784,
        1528
      ],
      "op": "POP",
      "path": "15"
    },
    "1202": {
      "fn": "Resolver.resolve",
      "offset": [
        784,
        1528
      ],
      "op": "POP",
      "path": "15"
    },
    "1203": {
      "offset": [
        662,
        1001
      ],
      "op": "POP",
      "path": "9"
    },
    "1204": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "POP",
      "path": "15"
    },
    "1205": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "POP",
      "path": "15"
    },
    "1206": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "POP",
      "path": "15"
    },
    "1207": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "POP",
      "path": "15"
    },
    "1208": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "POP",
      "path": "15"
    },
    "1209": {
      "fn": "Resolver.resolve",
      "offset": [
        636,
        1528
      ],
      "op": "POP",
      "path": "15"
    },
    "1210": {
      "fn": "Resolver.resolve",
      "jump": "o",
      "offset": [
        636,
        1528
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1211": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1212": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1214": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1221": {
      "op": "SHL"
    },
    "1222": {
      "op": "SUB"
    },
    "1223": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1224": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 5
    },
    "1225": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1226": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E5"
    },
    "1229": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1230": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1232": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1233": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1239": {
      "op": "SHL"
    },
    "1240": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1241": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1242": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1244": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1245": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F2"
    },
    "1248": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1249": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x846"
    },
    "1252": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1253": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1254": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x4EF"
    },
    "1257": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1259": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x691"
    },
    "1262": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1263": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1264": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1265": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        417,
        603
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1266": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1268": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1275": {
      "op": "SHL"
    },
    "1276": {
      "op": "SUB"
    },
    "1277": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1278": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1279": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1280": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51B"
    },
    "1283": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1284": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1286": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1287": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1293": {
      "op": "SHL"
    },
    "1294": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1295": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1296": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1298": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1299": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F2"
    },
    "1302": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1303": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x846"
    },
    "1306": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1307": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1308": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 7,
      "value": "0x40"
    },
    "1310": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1311": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1312": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1313": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1314": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "ADD",
      "path": "9"
    },
    "1315": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1316": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1323": {
      "op": "SHL"
    },
    "1324": {
      "op": "SUB"
    },
    "1325": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1326": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1327": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "AND",
      "path": "9"
    },
    "1328": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1329": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1330": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1331": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1332": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "AND",
      "path": "9"
    },
    "1333": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1335": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1336": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1337": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "ADD",
      "path": "9"
    },
    "1338": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1339": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1340": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        539,
        596
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1343": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        536
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "1344": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        536
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1345": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        536
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1346": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        527
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1348": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        536
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1349": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        536
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1350": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        536
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1351": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        536
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1352": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        536
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1353": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        536
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1354": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        536
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "1355": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        536
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1356": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1357": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1358": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1359": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1366": {
      "op": "SHL"
    },
    "1367": {
      "op": "SUB"
    },
    "1368": {
      "op": "NOT"
    },
    "1369": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1370": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1371": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "AND",
      "path": "9"
    },
    "1372": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1373": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1374": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "AND",
      "path": "9"
    },
    "1375": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1376": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1377": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1378": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "OR",
      "path": "9"
    },
    "1379": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1380": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1381": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1382": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1383": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1384": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "ADD",
      "path": "9"
    },
    "1385": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1386": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1387": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1388": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1389": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "AND",
      "path": "9"
    },
    "1390": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1391": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "AND",
      "path": "9"
    },
    "1392": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "OR",
      "path": "9"
    },
    "1393": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1394": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        517,
        596
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1395": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        417,
        603
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1396": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1534,
        1728
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1397": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1399": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "op": "SUB"
    },
    "1408": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1409": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1410": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1411": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59E"
    },
    "1414": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1415": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1418": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1424": {
      "op": "SHL"
    },
    "1425": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1426": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1427": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1429": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1430": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F2"
    },
    "1433": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1434": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x846"
    },
    "1437": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1438": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1439": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 8,
      "value": "0x40"
    },
    "1441": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1442": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1443": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1444": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1445": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "ADD",
      "path": "15"
    },
    "1446": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1447": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "op": "SUB"
    },
    "1456": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1457": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1458": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "AND",
      "path": "15"
    },
    "1459": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1460": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1461": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1462": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1463": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "AND",
      "path": "15"
    },
    "1464": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1466": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1467": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1468": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "ADD",
      "path": "15"
    },
    "1469": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1470": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1471": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1675,
        1721
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1474": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1672
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "1475": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1672
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1476": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1672
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1477": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1663
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1479": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1672
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1480": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1672
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1481": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1672
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1482": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1672
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1483": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1484": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1485": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1486": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1493": {
      "op": "SHL"
    },
    "1494": {
      "op": "SUB"
    },
    "1495": {
      "op": "NOT"
    },
    "1496": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1497": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1498": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "AND",
      "path": "15"
    },
    "1499": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1500": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1501": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "AND",
      "path": "15"
    },
    "1502": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1503": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1504": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1505": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "OR",
      "path": "15"
    },
    "1506": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1507": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1508": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1509": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1513": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1514": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "ADD",
      "path": "15"
    },
    "1515": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1516": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1517": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1518": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1519": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "AND",
      "path": "15"
    },
    "1520": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1521": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "AND",
      "path": "15"
    },
    "1522": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "OR",
      "path": "15"
    },
    "1523": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1524": {
      "fn": "Resolver.addRegistry",
      "offset": [
        1648,
        1721
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1525": {
      "fn": "Resolver.addRegistry",
      "jump": "o",
      "offset": [
        1534,
        1728
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1526": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1527": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1529": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1536": {
      "op": "SHL"
    },
    "1537": {
      "op": "SUB"
    },
    "1538": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1539": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1540": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1541": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x620"
    },
    "1544": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1545": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1547": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1548": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1556": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1557": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1559": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1560": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F2"
    },
    "1563": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1564": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x846"
    },
    "1567": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1568": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "op": "SUB"
    },
    "1577": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 9
    },
    "1578": {
      "branch": 15,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1579": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x685"
    },
    "1582": {
      "branch": 15,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1583": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1586": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1592": {
      "op": "SHL"
    },
    "1593": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1594": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1597": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1599": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1600": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1601": {
      "op": "MSTORE"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1606": {
      "op": "DUP3"
    },
    "1607": {
      "op": "ADD"
    },
    "1608": {
      "op": "MSTORE"
    },
    "1609": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1644": {
      "op": "DUP3"
    },
    "1645": {
      "op": "ADD"
    },
    "1646": {
      "op": "MSTORE"
    },
    "1647": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1656": {
      "op": "SHL"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1659": {
      "op": "DUP3"
    },
    "1660": {
      "op": "ADD"
    },
    "1661": {
      "op": "MSTORE"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1664": {
      "op": "ADD"
    },
    "1665": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F2"
    },
    "1668": {
      "op": "JUMP"
    },
    "1669": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1670": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x68E"
    },
    "1673": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1674": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x691"
    },
    "1677": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1678": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1679": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1680": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1681": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1682": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1684": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1685": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1692": {
      "op": "SHL"
    },
    "1693": {
      "op": "SUB"
    },
    "1694": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 11
    },
    "1695": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1696": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1703": {
      "op": "SHL"
    },
    "1704": {
      "op": "SUB"
    },
    "1705": {
      "op": "NOT"
    },
    "1706": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1707": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1708": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1709": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "1710": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1711": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1712": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x40"
    },
    "1714": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1715": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1716": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1717": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1718": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "1719": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1720": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1721": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1722": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1755": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1756": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1757": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1758": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1759": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1760": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1761": {
      "op": "JUMPDEST"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1768": {
      "op": "SHL"
    },
    "1769": {
      "op": "SUB"
    },
    "1770": {
      "op": "DUP2"
    },
    "1771": {
      "op": "AND"
    },
    "1772": {
      "op": "DUP2"
    },
    "1773": {
      "op": "EQ"
    },
    "1774": {
      "op": "PUSH2",
      "value": "0x68E"
    },
    "1777": {
      "op": "JUMPI"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1780": {
      "op": "DUP1"
    },
    "1781": {
      "op": "REVERT"
    },
    "1782": {
      "op": "JUMPDEST"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1785": {
      "op": "DUP1"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1788": {
      "op": "DUP1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1791": {
      "op": "DUP6"
    },
    "1792": {
      "op": "DUP8"
    },
    "1793": {
      "op": "SUB"
    },
    "1794": {
      "op": "SLT"
    },
    "1795": {
      "op": "ISZERO"
    },
    "1796": {
      "op": "PUSH2",
      "value": "0x70C"
    },
    "1799": {
      "op": "JUMPI"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1802": {
      "op": "DUP1"
    },
    "1803": {
      "op": "REVERT"
    },
    "1804": {
      "op": "JUMPDEST"
    },
    "1805": {
      "op": "DUP5"
    },
    "1806": {
      "op": "CALLDATALOAD"
    },
    "1807": {
      "op": "SWAP4"
    },
    "1808": {
      "op": "POP"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1811": {
      "op": "DUP6"
    },
    "1812": {
      "op": "ADD"
    },
    "1813": {
      "op": "CALLDATALOAD"
    },
    "1814": {
      "op": "SWAP3"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1818": {
      "op": "DUP6"
    },
    "1819": {
      "op": "ADD"
    },
    "1820": {
      "op": "CALLDATALOAD"
    },
    "1821": {
      "op": "SWAP2"
    },
    "1822": {
      "op": "POP"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1825": {
      "op": "DUP6"
    },
    "1826": {
      "op": "ADD"
    },
    "1827": {
      "op": "CALLDATALOAD"
    },
    "1828": {
      "op": "PUSH2",
      "value": "0x72C"
    },
    "1831": {
      "op": "DUP2"
    },
    "1832": {
      "op": "PUSH2",
      "value": "0x6E1"
    },
    "1835": {
      "jump": "i",
      "op": "JUMP"
    },
    "1836": {
      "op": "JUMPDEST"
    },
    "1837": {
      "op": "SWAP4"
    },
    "1838": {
      "op": "SWAP7"
    },
    "1839": {
      "op": "SWAP3"
    },
    "1840": {
      "op": "SWAP6"
    },
    "1841": {
      "op": "POP"
    },
    "1842": {
      "op": "SWAP1"
    },
    "1843": {
      "op": "SWAP4"
    },
    "1844": {
      "op": "POP"
    },
    "1845": {
      "op": "POP"
    },
    "1846": {
      "jump": "o",
      "op": "JUMP"
    },
    "1847": {
      "op": "JUMPDEST"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1852": {
      "op": "DUP3"
    },
    "1853": {
      "op": "DUP5"
    },
    "1854": {
      "op": "SUB"
    },
    "1855": {
      "op": "SLT"
    },
    "1856": {
      "op": "ISZERO"
    },
    "1857": {
      "op": "PUSH2",
      "value": "0x749"
    },
    "1860": {
      "op": "JUMPI"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1863": {
      "op": "DUP1"
    },
    "1864": {
      "op": "REVERT"
    },
    "1865": {
      "op": "JUMPDEST"
    },
    "1866": {
      "op": "POP"
    },
    "1867": {
      "op": "CALLDATALOAD"
    },
    "1868": {
      "op": "SWAP2"
    },
    "1869": {
      "op": "SWAP1"
    },
    "1870": {
      "op": "POP"
    },
    "1871": {
      "jump": "o",
      "op": "JUMP"
    },
    "1872": {
      "op": "JUMPDEST"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1875": {
      "op": "DUP1"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1880": {
      "op": "DUP5"
    },
    "1881": {
      "op": "DUP7"
    },
    "1882": {
      "op": "SUB"
    },
    "1883": {
      "op": "SLT"
    },
    "1884": {
      "op": "ISZERO"
    },
    "1885": {
      "op": "PUSH2",
      "value": "0x765"
    },
    "1888": {
      "op": "JUMPI"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1891": {
      "op": "DUP1"
    },
    "1892": {
      "op": "REVERT"
    },
    "1893": {
      "op": "JUMPDEST"
    },
    "1894": {
      "op": "DUP4"
    },
    "1895": {
      "op": "CALLDATALOAD"
    },
    "1896": {
      "op": "SWAP3"
    },
    "1897": {
      "op": "POP"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1900": {
      "op": "DUP5"
    },
    "1901": {
      "op": "ADD"
    },
    "1902": {
      "op": "CALLDATALOAD"
    },
    "1903": {
      "op": "PUSH2",
      "value": "0x777"
    },
    "1906": {
      "op": "DUP2"
    },
    "1907": {
      "op": "PUSH2",
      "value": "0x6E1"
    },
    "1910": {
      "jump": "i",
      "op": "JUMP"
    },
    "1911": {
      "op": "JUMPDEST"
    },
    "1912": {
      "op": "SWAP2"
    },
    "1913": {
      "op": "POP"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1916": {
      "op": "DUP5"
    },
    "1917": {
      "op": "ADD"
    },
    "1918": {
      "op": "CALLDATALOAD"
    },
    "1919": {
      "op": "PUSH2",
      "value": "0x787"
    },
    "1922": {
      "op": "DUP2"
    },
    "1923": {
      "op": "PUSH2",
      "value": "0x6E1"
    },
    "1926": {
      "jump": "i",
      "op": "JUMP"
    },
    "1927": {
      "op": "JUMPDEST"
    },
    "1928": {
      "op": "DUP1"
    },
    "1929": {
      "op": "SWAP2"
    },
    "1930": {
      "op": "POP"
    },
    "1931": {
      "op": "POP"
    },
    "1932": {
      "op": "SWAP3"
    },
    "1933": {
      "op": "POP"
    },
    "1934": {
      "op": "SWAP3"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "op": "SWAP3"
    },
    "1937": {
      "jump": "o",
      "op": "JUMP"
    },
    "1938": {
      "op": "JUMPDEST"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1943": {
      "op": "DUP3"
    },
    "1944": {
      "op": "DUP5"
    },
    "1945": {
      "op": "SUB"
    },
    "1946": {
      "op": "SLT"
    },
    "1947": {
      "op": "ISZERO"
    },
    "1948": {
      "op": "PUSH2",
      "value": "0x7A4"
    },
    "1951": {
      "op": "JUMPI"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1954": {
      "op": "DUP1"
    },
    "1955": {
      "op": "REVERT"
    },
    "1956": {
      "op": "JUMPDEST"
    },
    "1957": {
      "op": "DUP2"
    },
    "1958": {
      "op": "CALLDATALOAD"
    },
    "1959": {
      "op": "PUSH2",
      "value": "0x7AF"
    },
    "1962": {
      "op": "DUP2"
    },
    "1963": {
      "op": "PUSH2",
      "value": "0x6E1"
    },
    "1966": {
      "jump": "i",
      "op": "JUMP"
    },
    "1967": {
      "op": "JUMPDEST"
    },
    "1968": {
      "op": "SWAP4"
    },
    "1969": {
      "op": "SWAP3"
    },
    "1970": {
      "op": "POP"
    },
    "1971": {
      "op": "POP"
    },
    "1972": {
      "op": "POP"
    },
    "1973": {
      "jump": "o",
      "op": "JUMP"
    },
    "1974": {
      "op": "JUMPDEST"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1979": {
      "op": "DUP3"
    },
    "1980": {
      "op": "DUP5"
    },
    "1981": {
      "op": "SUB"
    },
    "1982": {
      "op": "SLT"
    },
    "1983": {
      "op": "ISZERO"
    },
    "1984": {
      "op": "PUSH2",
      "value": "0x7C8"
    },
    "1987": {
      "op": "JUMPI"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1990": {
      "op": "DUP1"
    },
    "1991": {
      "op": "REVERT"
    },
    "1992": {
      "op": "JUMPDEST"
    },
    "1993": {
      "op": "DUP2"
    },
    "1994": {
      "op": "MLOAD"
    },
    "1995": {
      "op": "PUSH2",
      "value": "0x7AF"
    },
    "1998": {
      "op": "DUP2"
    },
    "1999": {
      "op": "PUSH2",
      "value": "0x6E1"
    },
    "2002": {
      "jump": "i",
      "op": "JUMP"
    },
    "2003": {
      "op": "JUMPDEST"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2006": {
      "op": "DUP1"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2009": {
      "op": "SHL"
    },
    "2010": {
      "op": "SUB"
    },
    "2011": {
      "op": "DUP5"
    },
    "2012": {
      "op": "AND"
    },
    "2013": {
      "op": "DUP2"
    },
    "2014": {
      "op": "MSTORE"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2021": {
      "op": "DUP2"
    },
    "2022": {
      "op": "DUP5"
    },
    "2023": {
      "op": "ADD"
    },
    "2024": {
      "op": "MSTORE"
    },
    "2025": {
      "op": "DUP5"
    },
    "2026": {
      "op": "MLOAD"
    },
    "2027": {
      "op": "DUP1"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2030": {
      "op": "DUP6"
    },
    "2031": {
      "op": "ADD"
    },
    "2032": {
      "op": "MSTORE"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2035": {
      "op": "JUMPDEST"
    },
    "2036": {
      "op": "DUP2"
    },
    "2037": {
      "op": "DUP2"
    },
    "2038": {
      "op": "LT"
    },
    "2039": {
      "op": "ISZERO"
    },
    "2040": {
      "op": "PUSH2",
      "value": "0x80F"
    },
    "2043": {
      "op": "JUMPI"
    },
    "2044": {
      "op": "DUP7"
    },
    "2045": {
      "op": "DUP2"
    },
    "2046": {
      "op": "ADD"
    },
    "2047": {
      "op": "DUP4"
    },
    "2048": {
      "op": "ADD"
    },
    "2049": {
      "op": "MLOAD"
    },
    "2050": {
      "op": "DUP6"
    },
    "2051": {
      "op": "DUP3"
    },
    "2052": {
      "op": "ADD"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2055": {
      "op": "ADD"
    },
    "2056": {
      "op": "MSTORE"
    },
    "2057": {
      "op": "DUP3"
    },
    "2058": {
      "op": "ADD"
    },
    "2059": {
      "op": "PUSH2",
      "value": "0x7F3"
    },
    "2062": {
      "op": "JUMP"
    },
    "2063": {
      "op": "JUMPDEST"
    },
    "2064": {
      "op": "DUP2"
    },
    "2065": {
      "op": "DUP2"
    },
    "2066": {
      "op": "GT"
    },
    "2067": {
      "op": "ISZERO"
    },
    "2068": {
      "op": "PUSH2",
      "value": "0x821"
    },
    "2071": {
      "op": "JUMPI"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2076": {
      "op": "DUP4"
    },
    "2077": {
      "op": "DUP8"
    },
    "2078": {
      "op": "ADD"
    },
    "2079": {
      "op": "ADD"
    },
    "2080": {
      "op": "MSTORE"
    },
    "2081": {
      "op": "JUMPDEST"
    },
    "2082": {
      "op": "POP"
    },
    "2083": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2088": {
      "op": "SWAP5"
    },
    "2089": {
      "op": "SWAP1"
    },
    "2090": {
      "op": "SWAP5"
    },
    "2091": {
      "op": "AND"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2094": {
      "op": "DUP5"
    },
    "2095": {
      "op": "ADD"
    },
    "2096": {
      "op": "MSTORE"
    },
    "2097": {
      "op": "POP"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2101": {
      "op": "SWAP2"
    },
    "2102": {
      "op": "SWAP1"
    },
    "2103": {
      "op": "SWAP2"
    },
    "2104": {
      "op": "ADD"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2107": {
      "op": "NOT"
    },
    "2108": {
      "op": "AND"
    },
    "2109": {
      "op": "ADD"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2112": {
      "op": "ADD"
    },
    "2113": {
      "op": "SWAP3"
    },
    "2114": {
      "op": "SWAP2"
    },
    "2115": {
      "op": "POP"
    },
    "2116": {
      "op": "POP"
    },
    "2117": {
      "jump": "o",
      "op": "JUMP"
    },
    "2118": {
      "op": "JUMPDEST"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2121": {
      "op": "DUP1"
    },
    "2122": {
      "op": "DUP3"
    },
    "2123": {
      "op": "MSTORE"
    },
    "2124": {
      "op": "DUP2"
    },
    "2125": {
      "op": "DUP2"
    },
    "2126": {
      "op": "ADD"
    },
    "2127": {
      "op": "MSTORE"
    },
    "2128": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2163": {
      "op": "DUP3"
    },
    "2164": {
      "op": "ADD"
    },
    "2165": {
      "op": "MSTORE"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2168": {
      "op": "ADD"
    },
    "2169": {
      "op": "SWAP1"
    },
    "2170": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e41e1f08d2c9cac518badad6d18867ea18bb5aa4",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol\";\nimport \"../interfaces/ICrossDomainMessenger.sol\";\nimport \"./ResolutionRegistry.sol\";\nimport \"./CrossDomainRestrictedCalls.sol\";\n\n\ncontract Resolver is Ownable, CrossDomainRestrictedCalls {\n    struct ResolutionInfos {\n        address resolutionRegistry;\n        address messenger;\n    }\n\n    event Resolution(\n        uint256 sourceChainId,\n        uint256 fillChainId,\n        bytes32 fillHash,\n        address filler\n    );\n\n    mapping (uint256 => ResolutionInfos) public resolutionInfos;\n\n    function resolve(bytes32 fillHash, uint256 fillChainId, uint256 sourceChainId, address filler)\n        external restricted(fillChainId, msg.sender) {\n\n        ResolutionInfos storage info = resolutionInfos[sourceChainId];\n        require(info.resolutionRegistry != address(0), \"No registry available for source chain\");\n        require(info.messenger != address(0), \"No messenger available for source chain\");\n\n        ICrossDomainMessenger messenger = ICrossDomainMessenger(info.messenger);\n        messenger.sendMessage(\n            info.resolutionRegistry,\n            abi.encodeCall(\n                ResolutionRegistry.resolveRequest,\n                (\n                    fillHash,\n                    block.chainid,\n                    filler\n                )\n            ),\n            1_000_000\n        );\n\n        emit Resolution(sourceChainId, fillChainId, fillHash, filler);\n    }\n\n    function addRegistry(uint256 chainId, address resolutionRegistry, address messenger) external onlyOwner {\n        resolutionInfos[chainId] = ResolutionInfos(resolutionRegistry, messenger);\n    }\n}\n",
  "sourceMap": "269:1461:15:-:0;;;;;;;;;;;;-1:-1:-1;921:32:0;719:10:6;921:18:0;:32::i;:::-;269:1461:15;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;269:1461:15:-;;;;;;;",
  "sourcePath": "contracts/contracts/Resolver.sol",
  "type": "contract"
}