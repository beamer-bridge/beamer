{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fillChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "Resolution",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "resolutionRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        }
      ],
      "name": "addRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "messengers",
      "outputs": [
        {
          "internalType": "contract IMessenger",
          "name": "messenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "resolutionInfos",
      "outputs": [
        {
          "internalType": "address",
          "name": "resolutionRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "fillChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        }
      ],
      "name": "resolve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "fillChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        }
      ],
      "name": "resolveNonFill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "11": "contracts/contracts/Resolver.sol",
    "15": "contracts/interfaces/IMessenger.sol",
    "4": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "7": "contracts/contracts/CrossDomainRestrictedCalls.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/Resolver.sol",
    "exportedSymbols": {
      "BeamerUtils": [
        2817
      ],
      "Context": [
        3152
      ],
      "CrossDomainRestrictedCalls": [
        3039
      ],
      "IMessenger": [
        3061
      ],
      "Ownable": [
        2427
      ],
      "ResolutionRegistry": [
        1859
      ],
      "Resolver": [
        2079
      ]
    },
    "id": 2080,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1861,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:11"
      },
      {
        "absolutePath": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "id": 1862,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2080,
        "sourceUnit": 2428,
        "src": "58:80:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IMessenger.sol",
        "file": "../interfaces/IMessenger.sol",
        "id": 1863,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2080,
        "sourceUnit": 3062,
        "src": "139:38:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/ResolutionRegistry.sol",
        "file": "./ResolutionRegistry.sol",
        "id": 1864,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2080,
        "sourceUnit": 1860,
        "src": "178:34:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/CrossDomainRestrictedCalls.sol",
        "file": "./CrossDomainRestrictedCalls.sol",
        "id": 1865,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2080,
        "sourceUnit": 3040,
        "src": "213:42:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1866,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2427,
              "src": "278:7:11"
            },
            "id": 1867,
            "nodeType": "InheritanceSpecifier",
            "src": "278:7:11"
          },
          {
            "baseName": {
              "id": 1868,
              "name": "CrossDomainRestrictedCalls",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3039,
              "src": "287:26:11"
            },
            "id": 1869,
            "nodeType": "InheritanceSpecifier",
            "src": "287:26:11"
          }
        ],
        "canonicalName": "Resolver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2079,
        "linearizedBaseContracts": [
          2079,
          3039,
          2427,
          3152
        ],
        "name": "Resolver",
        "nameLocation": "266:8:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Resolver.ResolutionInfos",
            "id": 1874,
            "members": [
              {
                "constant": false,
                "id": 1871,
                "mutability": "mutable",
                "name": "resolutionRegistry",
                "nameLocation": "361:18:11",
                "nodeType": "VariableDeclaration",
                "scope": 1874,
                "src": "353:26:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1870,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1873,
                "mutability": "mutable",
                "name": "messenger",
                "nameLocation": "397:9:11",
                "nodeType": "VariableDeclaration",
                "scope": 1874,
                "src": "389:17:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1872,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "389:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ResolutionInfos",
            "nameLocation": "327:15:11",
            "nodeType": "StructDefinition",
            "scope": 2079,
            "src": "320:93:11",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "44702e0d5959cc77a7f68b33530b86546d1b157d0d74b27010d5f519adae07cb",
            "id": 1886,
            "name": "Resolution",
            "nameLocation": "425:10:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1876,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "453:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1886,
                  "src": "445:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1878,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillChainId",
                  "nameLocation": "484:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1886,
                  "src": "476:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1880,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "513:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1886,
                  "src": "505:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1879,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1882,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "542:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1886,
                  "src": "534:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1884,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "566:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1886,
                  "src": "558:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1883,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "435:143:11"
            },
            "src": "419:160:11"
          },
          {
            "constant": false,
            "functionSelector": "b257fcf3",
            "id": 1891,
            "mutability": "mutable",
            "name": "resolutionInfos",
            "nameLocation": "628:15:11",
            "nodeType": "VariableDeclaration",
            "scope": 2079,
            "src": "585:58:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResolutionInfos_$1874_storage_$",
              "typeString": "mapping(uint256 => struct Resolver.ResolutionInfos)"
            },
            "typeName": {
              "id": 1890,
              "keyType": {
                "id": 1887,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "593:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "585:35:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResolutionInfos_$1874_storage_$",
                "typeString": "mapping(uint256 => struct Resolver.ResolutionInfos)"
              },
              "valueType": {
                "id": 1889,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1888,
                  "name": "ResolutionInfos",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1874,
                  "src": "604:15:11"
                },
                "referencedDeclaration": 1874,
                "src": "604:15:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage_ptr",
                  "typeString": "struct Resolver.ResolutionInfos"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1973,
              "nodeType": "Block",
              "src": "855:803:11",
              "statements": [
                {
                  "assignments": [
                    1911
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1911,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "889:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1973,
                      "src": "865:28:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage_ptr",
                        "typeString": "struct Resolver.ResolutionInfos"
                      },
                      "typeName": {
                        "id": 1910,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1909,
                          "name": "ResolutionInfos",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1874,
                          "src": "865:15:11"
                        },
                        "referencedDeclaration": 1874,
                        "src": "865:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage_ptr",
                          "typeString": "struct Resolver.ResolutionInfos"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1915,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1912,
                      "name": "resolutionInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1891,
                      "src": "896:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResolutionInfos_$1874_storage_$",
                        "typeString": "mapping(uint256 => struct Resolver.ResolutionInfos storage ref)"
                      }
                    },
                    "id": 1914,
                    "indexExpression": {
                      "id": 1913,
                      "name": "sourceChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1899,
                      "src": "912:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "896:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage",
                      "typeString": "struct Resolver.ResolutionInfos storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "865:61:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1917,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1911,
                            "src": "957:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage_ptr",
                              "typeString": "struct Resolver.ResolutionInfos storage pointer"
                            }
                          },
                          "id": 1918,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "resolutionRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1871,
                          "src": "957:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "992:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "984:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1919,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "984:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "984:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "957:37:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20726567697374727920617661696c61626c6520666f7220736f7572636520636861696e",
                        "id": 1924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1008:40:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ee00403712f8bc6fbdc260df11d132cbf1f0263c418fa61c9527622b09c476d",
                          "typeString": "literal_string \"No registry available for source chain\""
                        },
                        "value": "No registry available for source chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ee00403712f8bc6fbdc260df11d132cbf1f0263c418fa61c9527622b09c476d",
                          "typeString": "literal_string \"No registry available for source chain\""
                        }
                      ],
                      "id": 1916,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "936:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:122:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1926,
                  "nodeType": "ExpressionStatement",
                  "src": "936:122:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1928,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1911,
                            "src": "1089:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage_ptr",
                              "typeString": "struct Resolver.ResolutionInfos storage pointer"
                            }
                          },
                          "id": 1929,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "messenger",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1873,
                          "src": "1089:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1115:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1107:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1930,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1107:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1107:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1089:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206d657373656e67657220617661696c61626c6520666f7220736f7572636520636861696e",
                        "id": 1935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1131:41:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d26b5a0618e5494cf176ee41dec1dbca8fb3bc55523487f35a7d4d4aefdad044",
                          "typeString": "literal_string \"No messenger available for source chain\""
                        },
                        "value": "No messenger available for source chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d26b5a0618e5494cf176ee41dec1dbca8fb3bc55523487f35a7d4d4aefdad044",
                          "typeString": "literal_string \"No messenger available for source chain\""
                        }
                      ],
                      "id": 1927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1068:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1068:114:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1937,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:114:11"
                },
                {
                  "assignments": [
                    1940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1940,
                      "mutability": "mutable",
                      "name": "messenger",
                      "nameLocation": "1204:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1973,
                      "src": "1193:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMessenger_$3061",
                        "typeString": "contract IMessenger"
                      },
                      "typeName": {
                        "id": 1939,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1938,
                          "name": "IMessenger",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3061,
                          "src": "1193:10:11"
                        },
                        "referencedDeclaration": 3061,
                        "src": "1193:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMessenger_$3061",
                          "typeString": "contract IMessenger"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1945,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1942,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1911,
                          "src": "1227:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage_ptr",
                            "typeString": "struct Resolver.ResolutionInfos storage pointer"
                          }
                        },
                        "id": 1943,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "messenger",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1873,
                        "src": "1227:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1941,
                      "name": "IMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3061,
                      "src": "1216:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IMessenger_$3061_$",
                        "typeString": "type(contract IMessenger)"
                      }
                    },
                    "id": 1944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1216:26:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMessenger_$3061",
                      "typeString": "contract IMessenger"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1193:49:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1949,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1911,
                          "src": "1287:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage_ptr",
                            "typeString": "struct Resolver.ResolutionInfos storage pointer"
                          }
                        },
                        "id": 1950,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "resolutionRegistry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1871,
                        "src": "1287:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1953,
                              "name": "ResolutionRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1859,
                              "src": "1356:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ResolutionRegistry_$1859_$",
                                "typeString": "type(contract ResolutionRegistry)"
                              }
                            },
                            "id": 1954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "resolveRequest",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1803,
                            "src": "1356:33:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function ResolutionRegistry.resolveRequest(bytes32,bytes32,uint256,address)"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 1955,
                                "name": "requestHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1893,
                                "src": "1408:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 1956,
                                "name": "fillId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1895,
                                "src": "1421:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1957,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "1429:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chainid",
                                "nodeType": "MemberAccess",
                                "src": "1429:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1959,
                                "name": "filler",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1901,
                                "src": "1444:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 1960,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1407:44:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$",
                              "typeString": "tuple(bytes32,bytes32,uint256,address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function ResolutionRegistry.resolveRequest(bytes32,bytes32,uint256,address)"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$",
                              "typeString": "tuple(bytes32,bytes32,uint256,address)"
                            }
                          ],
                          "expression": {
                            "id": 1951,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1324:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "1324:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1324:141:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1479:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "id": 1946,
                        "name": "messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1940,
                        "src": "1252:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMessenger_$3061",
                          "typeString": "contract IMessenger"
                        }
                      },
                      "id": 1948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3050,
                      "src": "1252:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,bytes memory,uint32) external"
                      }
                    },
                    "id": 1963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:246:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1964,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:246:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1966,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1899,
                        "src": "1538:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1967,
                        "name": "fillChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1897,
                        "src": "1565:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1968,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1893,
                        "src": "1590:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1969,
                        "name": "filler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "1615:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1970,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1895,
                        "src": "1635:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1965,
                      "name": "Resolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1886,
                      "src": "1514:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,bytes32,address,bytes32)"
                      }
                    },
                    "id": 1971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:137:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1972,
                  "nodeType": "EmitStatement",
                  "src": "1509:142:11"
                }
              ]
            },
            "functionSelector": "a56e3c38",
            "id": 1974,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1904,
                    "name": "fillChainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1897,
                    "src": "830:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "expression": {
                      "id": 1905,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "843:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "843:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1907,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1903,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3038,
                  "src": "819:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "819:35:11"
              }
            ],
            "name": "resolve",
            "nameLocation": "659:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1893,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "684:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1974,
                  "src": "676:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1892,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "676:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1895,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "713:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1974,
                  "src": "705:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1894,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "705:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1897,
                  "mutability": "mutable",
                  "name": "fillChainId",
                  "nameLocation": "737:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1974,
                  "src": "729:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1899,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "766:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1974,
                  "src": "758:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1901,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "797:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1974,
                  "src": "789:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "666:143:11"
            },
            "returnParameters": {
              "id": 1908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:0:11"
            },
            "scope": 2079,
            "src": "650:1008:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2056,
              "nodeType": "Block",
              "src": "1852:803:11",
              "statements": [
                {
                  "assignments": [
                    1992
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1992,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "1886:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2056,
                      "src": "1862:28:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage_ptr",
                        "typeString": "struct Resolver.ResolutionInfos"
                      },
                      "typeName": {
                        "id": 1991,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1990,
                          "name": "ResolutionInfos",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1874,
                          "src": "1862:15:11"
                        },
                        "referencedDeclaration": 1874,
                        "src": "1862:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage_ptr",
                          "typeString": "struct Resolver.ResolutionInfos"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1996,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1993,
                      "name": "resolutionInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1891,
                      "src": "1893:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResolutionInfos_$1874_storage_$",
                        "typeString": "mapping(uint256 => struct Resolver.ResolutionInfos storage ref)"
                      }
                    },
                    "id": 1995,
                    "indexExpression": {
                      "id": 1994,
                      "name": "sourceChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1982,
                      "src": "1909:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1893:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage",
                      "typeString": "struct Resolver.ResolutionInfos storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1862:61:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1998,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1992,
                            "src": "1954:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage_ptr",
                              "typeString": "struct Resolver.ResolutionInfos storage pointer"
                            }
                          },
                          "id": 1999,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "resolutionRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1871,
                          "src": "1954:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1989:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1981:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2000,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1981:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1981:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1954:37:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20726567697374727920617661696c61626c6520666f7220736f7572636520636861696e",
                        "id": 2005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2005:40:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ee00403712f8bc6fbdc260df11d132cbf1f0263c418fa61c9527622b09c476d",
                          "typeString": "literal_string \"No registry available for source chain\""
                        },
                        "value": "No registry available for source chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ee00403712f8bc6fbdc260df11d132cbf1f0263c418fa61c9527622b09c476d",
                          "typeString": "literal_string \"No registry available for source chain\""
                        }
                      ],
                      "id": 1997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1933:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1933:122:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2007,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:122:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2009,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1992,
                            "src": "2086:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage_ptr",
                              "typeString": "struct Resolver.ResolutionInfos storage pointer"
                            }
                          },
                          "id": 2010,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "messenger",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1873,
                          "src": "2086:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2112:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2104:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2011,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2104:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2104:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2086:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206d657373656e67657220617661696c61626c6520666f7220736f7572636520636861696e",
                        "id": 2016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2128:41:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d26b5a0618e5494cf176ee41dec1dbca8fb3bc55523487f35a7d4d4aefdad044",
                          "typeString": "literal_string \"No messenger available for source chain\""
                        },
                        "value": "No messenger available for source chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d26b5a0618e5494cf176ee41dec1dbca8fb3bc55523487f35a7d4d4aefdad044",
                          "typeString": "literal_string \"No messenger available for source chain\""
                        }
                      ],
                      "id": 2008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2065:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:114:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2018,
                  "nodeType": "ExpressionStatement",
                  "src": "2065:114:11"
                },
                {
                  "assignments": [
                    2021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2021,
                      "mutability": "mutable",
                      "name": "messenger",
                      "nameLocation": "2201:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2056,
                      "src": "2190:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMessenger_$3061",
                        "typeString": "contract IMessenger"
                      },
                      "typeName": {
                        "id": 2020,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2019,
                          "name": "IMessenger",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3061,
                          "src": "2190:10:11"
                        },
                        "referencedDeclaration": 3061,
                        "src": "2190:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMessenger_$3061",
                          "typeString": "contract IMessenger"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2026,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2023,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1992,
                          "src": "2224:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage_ptr",
                            "typeString": "struct Resolver.ResolutionInfos storage pointer"
                          }
                        },
                        "id": 2024,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "messenger",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1873,
                        "src": "2224:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2022,
                      "name": "IMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3061,
                      "src": "2213:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IMessenger_$3061_$",
                        "typeString": "type(contract IMessenger)"
                      }
                    },
                    "id": 2025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2213:26:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMessenger_$3061",
                      "typeString": "contract IMessenger"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2190:49:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2030,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1992,
                          "src": "2284:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage_ptr",
                            "typeString": "struct Resolver.ResolutionInfos storage pointer"
                          }
                        },
                        "id": 2031,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "resolutionRegistry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1871,
                        "src": "2284:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2034,
                              "name": "ResolutionRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1859,
                              "src": "2353:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ResolutionRegistry_$1859_$",
                                "typeString": "type(contract ResolutionRegistry)"
                              }
                            },
                            "id": 2035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "invalidateFillHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1858,
                            "src": "2353:37:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function ResolutionRegistry.invalidateFillHash(bytes32,bytes32,uint256)"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 2036,
                                "name": "requestHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1976,
                                "src": "2409:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 2037,
                                "name": "fillId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1978,
                                "src": "2422:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2038,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2430:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chainid",
                                "nodeType": "MemberAccess",
                                "src": "2430:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2040,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2408:36:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$",
                              "typeString": "tuple(bytes32,bytes32,uint256)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function ResolutionRegistry.invalidateFillHash(bytes32,bytes32,uint256)"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$",
                              "typeString": "tuple(bytes32,bytes32,uint256)"
                            }
                          ],
                          "expression": {
                            "id": 2032,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2321:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "2321:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2321:137:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 2042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2472:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "id": 2027,
                        "name": "messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2021,
                        "src": "2249:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMessenger_$3061",
                          "typeString": "contract IMessenger"
                        }
                      },
                      "id": 2029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3050,
                      "src": "2249:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,bytes memory,uint32) external"
                      }
                    },
                    "id": 2043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2249:242:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2044,
                  "nodeType": "ExpressionStatement",
                  "src": "2249:242:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2046,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1982,
                        "src": "2531:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2047,
                        "name": "fillChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1980,
                        "src": "2558:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2048,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1976,
                        "src": "2583:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2616:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2608:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2049,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2608:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2608:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2053,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1978,
                        "src": "2632:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2045,
                      "name": "Resolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1886,
                      "src": "2507:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,bytes32,address,bytes32)"
                      }
                    },
                    "id": 2054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2507:141:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2055,
                  "nodeType": "EmitStatement",
                  "src": "2502:146:11"
                }
              ]
            },
            "functionSelector": "af08bb7d",
            "id": 2057,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1985,
                    "name": "fillChainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1980,
                    "src": "1827:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "expression": {
                      "id": 1986,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1840:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1840:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1988,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1984,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3038,
                  "src": "1816:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "1816:35:11"
              }
            ],
            "name": "resolveNonFill",
            "nameLocation": "1673:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1976,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "1705:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "1697:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1975,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1697:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1978,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "1734:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "1726:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1977,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1726:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1980,
                  "mutability": "mutable",
                  "name": "fillChainId",
                  "nameLocation": "1758:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "1750:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1982,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "1787:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "1779:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1779:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1687:119:11"
            },
            "returnParameters": {
              "id": 1989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1852:0:11"
            },
            "scope": 2079,
            "src": "1664:991:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2077,
              "nodeType": "Block",
              "src": "2795:124:11",
              "statements": [
                {
                  "expression": {
                    "id": 2075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2068,
                        "name": "resolutionInfos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1891,
                        "src": "2805:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ResolutionInfos_$1874_storage_$",
                          "typeString": "mapping(uint256 => struct Resolver.ResolutionInfos storage ref)"
                        }
                      },
                      "id": 2070,
                      "indexExpression": {
                        "id": 2069,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2059,
                        "src": "2821:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2805:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage",
                        "typeString": "struct Resolver.ResolutionInfos storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2072,
                          "name": "resolutionRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2061,
                          "src": "2861:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2073,
                          "name": "messenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2063,
                          "src": "2893:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2071,
                        "name": "ResolutionInfos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1874,
                        "src": "2832:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ResolutionInfos_$1874_storage_ptr_$",
                          "typeString": "type(struct Resolver.ResolutionInfos storage pointer)"
                        }
                      },
                      "id": 2074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2832:80:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolutionInfos_$1874_memory_ptr",
                        "typeString": "struct Resolver.ResolutionInfos memory"
                      }
                    },
                    "src": "2805:107:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolutionInfos_$1874_storage",
                      "typeString": "struct Resolver.ResolutionInfos storage ref"
                    }
                  },
                  "id": 2076,
                  "nodeType": "ExpressionStatement",
                  "src": "2805:107:11"
                }
              ]
            },
            "functionSelector": "bfa9dd3a",
            "id": 2078,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2066,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2065,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2369,
                  "src": "2785:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "2785:9:11"
              }
            ],
            "name": "addRegistry",
            "nameLocation": "2670:11:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2059,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "2699:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2078,
                  "src": "2691:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2061,
                  "mutability": "mutable",
                  "name": "resolutionRegistry",
                  "nameLocation": "2724:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2078,
                  "src": "2716:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2063,
                  "mutability": "mutable",
                  "name": "messenger",
                  "nameLocation": "2760:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2078,
                  "src": "2752:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2681:94:11"
            },
            "returnParameters": {
              "id": 2067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2795:0:11"
            },
            "scope": 2079,
            "src": "2661:258:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2080,
        "src": "257:2664:11",
        "usedErrors": []
      }
    ],
    "src": "32:2890:11"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ce58061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a56e3c3811610066578063a56e3c3814610129578063af08bb7d1461013c578063b257fcf31461014f578063bfa9dd3a14610183578063f2fde38b1461019657600080fd5b806324ec66b314610098578063715018a6146100f15780637203ae3b146100fb5780638da5cb5b1461010e575b600080fd5b6100cc6100a6366004610a15565b600160208190526000918252604090912080549101546001600160a01b03918216911682565b604080516001600160a01b039384168152929091166020830152015b60405180910390f35b6100f96101a9565b005b6100f9610109366004610a43565b6101e8565b6000546040516001600160a01b0390911681526020016100e8565b6100f9610137366004610a85565b6102cd565b6100f961014a366004610ad2565b6105c3565b6100cc61015d366004610a15565b600260205260009081526040902080546001909101546001600160a01b03918216911682565b6100f9610191366004610a43565b6108a8565b6100f96101a4366004610b04565b61092a565b6000546001600160a01b031633146101dc5760405162461bcd60e51b81526004016101d390610b28565b60405180910390fd5b6101e660006109c5565b565b6000546001600160a01b031633146102125760405162461bcd60e51b81526004016101d390610b28565b6001600160a01b0382166102745760405162461bcd60e51b815260206004820152602360248201527f585265737472696374656443616c6c733a20696e76616c6964206d657373656e60448201526233b2b960e91b60648201526084016101d3565b6040805180820182526001600160a01b0393841681529183166020808401918252600095865260019081905291909420915182546001600160a01b03199081169185169190911783559351910180549093169116179055565b60008381526001602052604090208054849133916001600160a01b03166103065760405162461bcd60e51b81526004016101d390610b5d565b805460408051630ef12e4760e31b815290516001600160a01b03909216916377897238916004808201926020929091908290030181865afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190610b92565b6001600160a01b0316826001600160a01b0316146103a35760405162461bcd60e51b81526004016101d390610b5d565b600181015481546040805163383d6f0760e11b815290516001600160a01b03938416939092169163707ade0e916004808201926020929091908290030181865afa1580156103f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104199190610b92565b6001600160a01b03161461043f5760405162461bcd60e51b81526004016101d390610b5d565b600085815260026020526040902080546001600160a01b03166104745760405162461bcd60e51b81526004016101d390610baf565b60018101546001600160a01b031661049e5760405162461bcd60e51b81526004016101d390610bf5565b60018101548154604051602481018c9052604481018b90524660648201526001600160a01b038881166084830152928316928392633dbb202b9291169060a40160408051601f198184030181529181526020820180516001600160e01b0316632d9d377960e11b179052516001600160e01b031960e085901b16815261052d929190620f424090600401610c3c565b600060405180830381600087803b15801561054757600080fd5b505af115801561055b573d6000803e3d6000fd5b5050604080518a8152602081018c90529081018d90526001600160a01b0389166060820152608081018c90527f44702e0d5959cc77a7f68b33530b86546d1b157d0d74b27010d5f519adae07cb925060a001905060405180910390a150505050505050505050565b60008281526001602052604090208054839133916001600160a01b03166105fc5760405162461bcd60e51b81526004016101d390610b5d565b805460408051630ef12e4760e31b815290516001600160a01b03909216916377897238916004808201926020929091908290030181865afa158015610645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106699190610b92565b6001600160a01b0316826001600160a01b0316146106995760405162461bcd60e51b81526004016101d390610b5d565b600181015481546040805163383d6f0760e11b815290516001600160a01b03938416939092169163707ade0e916004808201926020929091908290030181865afa1580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f9190610b92565b6001600160a01b0316146107355760405162461bcd60e51b81526004016101d390610b5d565b600084815260026020526040902080546001600160a01b031661076a5760405162461bcd60e51b81526004016101d390610baf565b60018101546001600160a01b03166107945760405162461bcd60e51b81526004016101d390610bf5565b60018101548154604051602481018b9052604481018a90524660648201526001600160a01b03928316928392633dbb202b9291169060840160408051601f198184030181529181526020820180516001600160e01b031663983aab3360e01b179052516001600160e01b031960e085901b16815261081b929190620f424090600401610c3c565b600060405180830381600087803b15801561083557600080fd5b505af1158015610849573d6000803e3d6000fd5b505060408051898152602081018b90529081018c905260006060820152608081018b90527f44702e0d5959cc77a7f68b33530b86546d1b157d0d74b27010d5f519adae07cb925060a001905060405180910390a1505050505050505050565b6000546001600160a01b031633146108d25760405162461bcd60e51b81526004016101d390610b28565b6040805180820182526001600160a01b03938416815291831660208084019182526000958652600290529320905181546001600160a01b03199081169184169190911782559251600190910180549093169116179055565b6000546001600160a01b031633146109545760405162461bcd60e51b81526004016101d390610b28565b6001600160a01b0381166109b95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d3565b6109c2816109c5565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610a2757600080fd5b5035919050565b6001600160a01b03811681146109c257600080fd5b600080600060608486031215610a5857600080fd5b833592506020840135610a6a81610a2e565b91506040840135610a7a81610a2e565b809150509250925092565b600080600080600060a08688031215610a9d57600080fd5b853594506020860135935060408601359250606086013591506080860135610ac481610a2e565b809150509295509295909350565b60008060008060808587031215610ae857600080fd5b5050823594602084013594506040840135936060013592509050565b600060208284031215610b1657600080fd5b8135610b2181610a2e565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252818101527f585265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c6572604082015260600190565b600060208284031215610ba457600080fd5b8151610b2181610a2e565b60208082526026908201527f4e6f20726567697374727920617661696c61626c6520666f7220736f757263656040820152651031b430b4b760d11b606082015260800190565b60208082526027908201527f4e6f206d657373656e67657220617661696c61626c6520666f7220736f757263604082015266329031b430b4b760c91b606082015260800190565b60018060a01b038416815260006020606081840152845180606085015260005b81811015610c7857868101830151858201608001528201610c5c565b81811115610c8a576000608083870101525b5063ffffffff9490941660408401525050601f91909101601f1916016080019291505056fea2646970667358221220b9df42d8dc84bd838804233ed574658d918f56fe8a549b1b4d9b51cafe7d12a364736f6c634300080d0033",
  "bytecodeSha1": "0b61bc1ddb0e47b94c6eec682a94066a1fd40a01",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Resolver",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "21": [
            2006,
            2028,
            true
          ]
        }
      },
      "11": {},
      "15": {},
      "4": {},
      "7": {
        "CrossDomainRestrictedCalls.addCaller": {
          "18": [
            520,
            543,
            true
          ]
        },
        "Resolver.resolveNonFill": {
          "19": [
            938,
            977,
            true
          ],
          "20": [
            1066,
            1106,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "16": [
            2378,
            2395
          ],
          "17": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "2": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "14": [
            1998,
            2071
          ],
          "15": [
            2081,
            2109
          ]
        }
      },
      "11": {
        "Resolver.addRegistry": {
          "13": [
            2805,
            2912
          ]
        },
        "Resolver.resolve": {
          "5": [
            936,
            1058
          ],
          "6": [
            1068,
            1182
          ],
          "7": [
            1252,
            1498
          ],
          "8": [
            1509,
            1651
          ]
        },
        "Resolver.resolveNonFill": {
          "9": [
            1933,
            2055
          ],
          "10": [
            2065,
            2179
          ],
          "11": [
            2249,
            2491
          ],
          "12": [
            2502,
            2648
          ]
        }
      },
      "15": {},
      "4": {
        "Context._msgSender": {
          "1": [
            712,
            729
          ]
        }
      },
      "7": {
        "CrossDomainRestrictedCalls.addCaller": {
          "3": [
            512,
            583
          ],
          "4": [
            593,
            661
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "CrossDomainRestrictedCalls",
    "IMessenger",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063a56e3c3811610066578063a56e3c3814610129578063af08bb7d1461013c578063b257fcf31461014f578063bfa9dd3a14610183578063f2fde38b1461019657600080fd5b806324ec66b314610098578063715018a6146100f15780637203ae3b146100fb5780638da5cb5b1461010e575b600080fd5b6100cc6100a6366004610a15565b600160208190526000918252604090912080549101546001600160a01b03918216911682565b604080516001600160a01b039384168152929091166020830152015b60405180910390f35b6100f96101a9565b005b6100f9610109366004610a43565b6101e8565b6000546040516001600160a01b0390911681526020016100e8565b6100f9610137366004610a85565b6102cd565b6100f961014a366004610ad2565b6105c3565b6100cc61015d366004610a15565b600260205260009081526040902080546001909101546001600160a01b03918216911682565b6100f9610191366004610a43565b6108a8565b6100f96101a4366004610b04565b61092a565b6000546001600160a01b031633146101dc5760405162461bcd60e51b81526004016101d390610b28565b60405180910390fd5b6101e660006109c5565b565b6000546001600160a01b031633146102125760405162461bcd60e51b81526004016101d390610b28565b6001600160a01b0382166102745760405162461bcd60e51b815260206004820152602360248201527f585265737472696374656443616c6c733a20696e76616c6964206d657373656e60448201526233b2b960e91b60648201526084016101d3565b6040805180820182526001600160a01b0393841681529183166020808401918252600095865260019081905291909420915182546001600160a01b03199081169185169190911783559351910180549093169116179055565b60008381526001602052604090208054849133916001600160a01b03166103065760405162461bcd60e51b81526004016101d390610b5d565b805460408051630ef12e4760e31b815290516001600160a01b03909216916377897238916004808201926020929091908290030181865afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190610b92565b6001600160a01b0316826001600160a01b0316146103a35760405162461bcd60e51b81526004016101d390610b5d565b600181015481546040805163383d6f0760e11b815290516001600160a01b03938416939092169163707ade0e916004808201926020929091908290030181865afa1580156103f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104199190610b92565b6001600160a01b03161461043f5760405162461bcd60e51b81526004016101d390610b5d565b600085815260026020526040902080546001600160a01b03166104745760405162461bcd60e51b81526004016101d390610baf565b60018101546001600160a01b031661049e5760405162461bcd60e51b81526004016101d390610bf5565b60018101548154604051602481018c9052604481018b90524660648201526001600160a01b038881166084830152928316928392633dbb202b9291169060a40160408051601f198184030181529181526020820180516001600160e01b0316632d9d377960e11b179052516001600160e01b031960e085901b16815261052d929190620f424090600401610c3c565b600060405180830381600087803b15801561054757600080fd5b505af115801561055b573d6000803e3d6000fd5b5050604080518a8152602081018c90529081018d90526001600160a01b0389166060820152608081018c90527f44702e0d5959cc77a7f68b33530b86546d1b157d0d74b27010d5f519adae07cb925060a001905060405180910390a150505050505050505050565b60008281526001602052604090208054839133916001600160a01b03166105fc5760405162461bcd60e51b81526004016101d390610b5d565b805460408051630ef12e4760e31b815290516001600160a01b03909216916377897238916004808201926020929091908290030181865afa158015610645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106699190610b92565b6001600160a01b0316826001600160a01b0316146106995760405162461bcd60e51b81526004016101d390610b5d565b600181015481546040805163383d6f0760e11b815290516001600160a01b03938416939092169163707ade0e916004808201926020929091908290030181865afa1580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f9190610b92565b6001600160a01b0316146107355760405162461bcd60e51b81526004016101d390610b5d565b600084815260026020526040902080546001600160a01b031661076a5760405162461bcd60e51b81526004016101d390610baf565b60018101546001600160a01b03166107945760405162461bcd60e51b81526004016101d390610bf5565b60018101548154604051602481018b9052604481018a90524660648201526001600160a01b03928316928392633dbb202b9291169060840160408051601f198184030181529181526020820180516001600160e01b031663983aab3360e01b179052516001600160e01b031960e085901b16815261081b929190620f424090600401610c3c565b600060405180830381600087803b15801561083557600080fd5b505af1158015610849573d6000803e3d6000fd5b505060408051898152602081018b90529081018c905260006060820152608081018b90527f44702e0d5959cc77a7f68b33530b86546d1b157d0d74b27010d5f519adae07cb925060a001905060405180910390a1505050505050505050565b6000546001600160a01b031633146108d25760405162461bcd60e51b81526004016101d390610b28565b6040805180820182526001600160a01b03938416815291831660208084019182526000958652600290529320905181546001600160a01b03199081169184169190911782559251600190910180549093169116179055565b6000546001600160a01b031633146109545760405162461bcd60e51b81526004016101d390610b28565b6001600160a01b0381166109b95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d3565b6109c2816109c5565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610a2757600080fd5b5035919050565b6001600160a01b03811681146109c257600080fd5b600080600060608486031215610a5857600080fd5b833592506020840135610a6a81610a2e565b91506040840135610a7a81610a2e565b809150509250925092565b600080600080600060a08688031215610a9d57600080fd5b853594506020860135935060408601359250606086013591506080860135610ac481610a2e565b809150509295509295909350565b60008060008060808587031215610ae857600080fd5b5050823594602084013594506040840135936060013592509050565b600060208284031215610b1657600080fd5b8135610b2181610a2e565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252818101527f585265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c6572604082015260600190565b600060208284031215610ba457600080fd5b8151610b2181610a2e565b60208082526026908201527f4e6f20726567697374727920617661696c61626c6520666f7220736f757263656040820152651031b430b4b760d11b606082015260800190565b60208082526027908201527f4e6f206d657373656e67657220617661696c61626c6520666f7220736f757263604082015266329031b430b4b760c91b606082015260800190565b60018060a01b038416815260006020606081840152845180606085015260005b81811015610c7857868101830151858201608001528201610c5c565b81811115610c8a576000608083870101525b5063ffffffff9490941660408401525050601f91909101601f1916016080019291505056fea2646970667358221220b9df42d8dc84bd838804233ed574658d918f56fe8a549b1b4d9b51cafe7d12a364736f6c634300080d0033",
  "deployedSourceMap": "257:2664:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;322:53:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;322:53:7;;;;;;;;;;;-1:-1:-1;;;;;448:15:17;;;430:34;;500:15;;;;495:2;480:18;;473:43;365:18;322:53:7;;;;;;;;1668:101:0;;;:::i;:::-;;382:286:7;;;;;;:::i;:::-;;:::i;1036:85:0:-;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;1270:51:17;;1258:2;1243:18;1036:85:0;1124:203:17;650:1008:11;;;;;;:::i;:::-;;:::i;1664:991::-;;;;;;:::i;:::-;;:::i;585:58::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;585:58:11;;;;;;;2661:258;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;1668:101::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;382:286:7:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;520:23:7;::::1;512:71;;;::::0;-1:-1:-1;;;512:71:7;;3372:2:17;512:71:7::1;::::0;::::1;3354:21:17::0;3411:2;3391:18;;;3384:30;3450:34;3430:18;;;3423:62;-1:-1:-1;;;3501:18:17;;;3494:33;3544:19;;512:71:7::1;3170:399:17::0;512:71:7::1;615:46;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;615:46:7;;::::1;::::0;;;;::::1;;::::0;;::::1;::::0;;;-1:-1:-1;593:19:7;;;:10:::1;:19:::0;;;;;;;;:68;;;;-1:-1:-1;;;;;;593:68:7;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;::::0;::::1;;::::0;;382:286::o;650:1008:11:-;737:25:7;765:19;;;:10;:19;;;;;823:11;;830::11;;843:10;;-1:-1:-1;;;;;823:11:7;794:113;;;;-1:-1:-1;;;794:113:7;;;;;;;:::i;:::-;948:11;;:29;;;-1:-1:-1;;;948:29:7;;;;-1:-1:-1;;;;;948:11:7;;;;:27;;:29;;;;;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;938:39:7;:6;-1:-1:-1;;;;;938:39:7;;917:118;;;;-1:-1:-1;;;917:118:7;;;;;;;:::i;:::-;1098:8;;;;1066:11;;:28;;;-1:-1:-1;;;1066:28:7;;;;-1:-1:-1;;;;;1098:8:7;;;;1066:11;;;;:26;;:28;;;;;;;;;;;;;;;:11;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1066:40:7;;1045:119;;;;-1:-1:-1;;;1045:119:7;;;;;;;:::i;:::-;865:28:11::1;896:30:::0;;;:15:::1;:30;::::0;;;;957:23;;-1:-1:-1;;;;;957:23:11::1;936:122;;;;-1:-1:-1::0;;;936:122:11::1;;;;;;;:::i;:::-;1089:14;::::0;::::1;::::0;-1:-1:-1;;;;;1089:14:11::1;1068:114;;;;-1:-1:-1::0;;;1068:114:11::1;;;;;;;:::i;:::-;1227:14;::::0;::::1;::::0;1287:23;;1324:141:::1;::::0;::::1;::::0;::::1;5237:25:17::0;;;5278:18;;;5271:34;;;1429:13:11::1;5321:18:17::0;;;5314:34;-1:-1:-1;;;;;5384:32:17;;;5364:18;;;5357:60;1227:14:11;;::::1;::::0;;;1252:21:::1;::::0;1287:23;::::1;::::0;5209:19:17;;1324:141:11::1;::::0;;-1:-1:-1;;1324:141:11;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1324:141:11::1;-1:-1:-1::0;;;1324:141:11::1;::::0;;1252:246;-1:-1:-1;;;;;;1324:141:11::1;1252:246:::0;;;;;;::::1;::::0;;1324:141;1479:9:::1;::::0;1252:246:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1514:137:11::1;::::0;;6488:25:17;;;6544:2;6529:18;;6522:34;;;6572:18;;;6565:34;;;-1:-1:-1;;;;;6635:32:17;;6630:2;6615:18;;6608:60;6699:3;6684:19;;6677:35;;;1514:137:11::1;::::0;-1:-1:-1;6475:3:17;6460:19;;-1:-1:-1;1514:137:11::1;;;;;;;855:803;;727:455:7::0;650:1008:11;;;;;;;:::o;1664:991::-;737:25:7;765:19;;;:10;:19;;;;;823:11;;1827::11;;1840:10;;-1:-1:-1;;;;;823:11:7;794:113;;;;-1:-1:-1;;;794:113:7;;;;;;;:::i;:::-;948:11;;:29;;;-1:-1:-1;;;948:29:7;;;;-1:-1:-1;;;;;948:11:7;;;;:27;;:29;;;;;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;938:39:7;:6;-1:-1:-1;;;;;938:39:7;;917:118;;;;-1:-1:-1;;;917:118:7;;;;;;;:::i;:::-;1098:8;;;;1066:11;;:28;;;-1:-1:-1;;;1066:28:7;;;;-1:-1:-1;;;;;1098:8:7;;;;1066:11;;;;:26;;:28;;;;;;;;;;;;;;;:11;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1066:40:7;;1045:119;;;;-1:-1:-1;;;1045:119:7;;;;;;;:::i;:::-;1862:28:11::1;1893:30:::0;;;:15:::1;:30;::::0;;;;1954:23;;-1:-1:-1;;;;;1954:23:11::1;1933:122;;;;-1:-1:-1::0;;;1933:122:11::1;;;;;;;:::i;:::-;2086:14;::::0;::::1;::::0;-1:-1:-1;;;;;2086:14:11::1;2065:114;;;;-1:-1:-1::0;;;2065:114:11::1;;;;;;;:::i;:::-;2224:14;::::0;::::1;::::0;2284:23;;2321:137:::1;::::0;::::1;::::0;::::1;6925:25:17::0;;;6966:18;;;6959:34;;;2430:13:11::1;7009:18:17::0;;;7002:34;-1:-1:-1;;;;;2224:14:11;;::::1;::::0;;;2249:21:::1;::::0;2284:23;::::1;::::0;6898:18:17;;2321:137:11::1;::::0;;-1:-1:-1;;2321:137:11;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;2321:137:11::1;-1:-1:-1::0;;;2321:137:11::1;::::0;;2249:242;-1:-1:-1;;;;;;2321:137:11::1;2249:242:::0;;;;;;::::1;::::0;;2321:137;2472:9:::1;::::0;2249:242:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2507:141:11::1;::::0;;6488:25:17;;;6544:2;6529:18;;6522:34;;;6572:18;;;6565:34;;;2616:1:11::1;6630:2:17::0;6615:18;;6608:60;6699:3;6684:19;;6677:35;;;2507:141:11::1;::::0;-1:-1:-1;6475:3:17;6460:19;;-1:-1:-1;2507:141:11::1;;;;;;;1852:803;;727:455:7::0;1664:991:11;;;;;;:::o;2661:258::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2832:80:11::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;2832:80:11;;::::1;::::0;;;;::::1;;::::0;;::::1;::::0;;;-1:-1:-1;2805:24:11;;;:15:::1;:24:::0;;;;:107;;;;-1:-1:-1;;;;;;2805:107:11;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;2805:107:11;;::::1;::::0;;;;::::1;::::0;::::1;;::::0;;2661:258::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;7249:2:17;1998:73:0::1;::::0;::::1;7231:21:17::0;7288:2;7268:18;;;7261:30;7327:34;7307:18;;;7300:62;-1:-1:-1;;;7378:18:17;;;7371:36;7424:19;;1998:73:0::1;7047:402:17::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:180:17:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:17;;14:180;-1:-1:-1;14:180:17:o;527:131::-;-1:-1:-1;;;;;602:31:17;;592:42;;582:70;;648:1;645;638:12;663:456;740:6;748;756;809:2;797:9;788:7;784:23;780:32;777:52;;;825:1;822;815:12;777:52;861:9;848:23;838:33;;921:2;910:9;906:18;893:32;934:31;959:5;934:31;:::i;:::-;984:5;-1:-1:-1;1041:2:17;1026:18;;1013:32;1054:33;1013:32;1054:33;:::i;:::-;1106:7;1096:17;;;663:456;;;;;:::o;1332:521::-;1427:6;1435;1443;1451;1459;1512:3;1500:9;1491:7;1487:23;1483:33;1480:53;;;1529:1;1526;1519:12;1480:53;1565:9;1552:23;1542:33;;1622:2;1611:9;1607:18;1594:32;1584:42;;1673:2;1662:9;1658:18;1645:32;1635:42;;1724:2;1713:9;1709:18;1696:32;1686:42;;1778:3;1767:9;1763:19;1750:33;1792:31;1817:5;1792:31;:::i;:::-;1842:5;1832:15;;;1332:521;;;;;;;;:::o;1858:385::-;1944:6;1952;1960;1968;2021:3;2009:9;2000:7;1996:23;1992:33;1989:53;;;2038:1;2035;2028:12;1989:53;-1:-1:-1;;2061:23:17;;;2131:2;2116:18;;2103:32;;-1:-1:-1;2182:2:17;2167:18;;2154:32;;2233:2;2218:18;2205:32;;-1:-1:-1;1858:385:17;-1:-1:-1;1858:385:17:o;2557:247::-;2616:6;2669:2;2657:9;2648:7;2644:23;2640:32;2637:52;;;2685:1;2682;2675:12;2637:52;2724:9;2711:23;2743:31;2768:5;2743:31;:::i;:::-;2793:5;2557:247;-1:-1:-1;;;2557:247:17:o;2809:356::-;3011:2;2993:21;;;3030:18;;;3023:30;3089:34;3084:2;3069:18;;3062:62;3156:2;3141:18;;2809:356::o;3574:::-;3776:2;3758:21;;;3795:18;;;3788:30;3854:34;3849:2;3834:18;;3827:62;3921:2;3906:18;;3574:356::o;3935:251::-;4005:6;4058:2;4046:9;4037:7;4033:23;4029:32;4026:52;;;4074:1;4071;4064:12;4026:52;4106:9;4100:16;4125:31;4150:5;4125:31;:::i;4191:402::-;4393:2;4375:21;;;4432:2;4412:18;;;4405:30;4471:34;4466:2;4451:18;;4444:62;-1:-1:-1;;;4537:2:17;4522:18;;4515:36;4583:3;4568:19;;4191:402::o;4598:403::-;4800:2;4782:21;;;4839:2;4819:18;;;4812:30;4878:34;4873:2;4858:18;;4851:62;-1:-1:-1;;;4944:2:17;4929:18;;4922:37;4991:3;4976:19;;4598:403::o;5428:796::-;5673:1;5669;5664:3;5660:11;5656:19;5648:6;5644:32;5633:9;5626:51;5607:4;5696:2;5734;5729;5718:9;5714:18;5707:30;5766:6;5760:13;5809:6;5804:2;5793:9;5789:18;5782:34;5834:1;5844:141;5858:6;5855:1;5852:13;5844:141;;;5954:14;;;5950:23;;5944:30;5919:17;;;5938:3;5915:27;5908:67;5873:10;;5844:141;;;6003:6;6000:1;5997:13;5994:92;;;6074:1;6068:3;6059:6;6048:9;6044:22;6040:32;6033:43;5994:92;-1:-1:-1;6206:10:17;6194:23;;;;6189:2;6174:18;;6167:51;-1:-1:-1;;6147:2:17;6126:15;;;;-1:-1:-1;;6122:29:17;6107:45;6154:3;6103:55;;5428:796;-1:-1:-1;;5428:796:17:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    257,
    2921
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA56E3C38 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA56E3C38 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xAF08BB7D EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0xB257FCF3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xBFA9DD3A EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24EC66B3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x7203AE3B EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP3 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E6 PUSH1 0x0 PUSH2 0x9C5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x212 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x585265737472696374656443616C6C733A20696E76616C6964206D657373656E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x33B2B9 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x1 SWAP1 DUP2 SWAP1 MSTORE SWAP2 SWAP1 SWAP5 KECCAK256 SWAP2 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR DUP4 SSTORE SWAP4 MLOAD SWAP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP5 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xB5D JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xEF12E47 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x77897238 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x383D6F07 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND SWAP2 PUSH4 0x707ADE0E SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP12 SWAP1 MSTORE CHAINID PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x84 DUP4 ADD MSTORE SWAP3 DUP4 AND SWAP3 DUP4 SWAP3 PUSH4 0x3DBB202B SWAP3 SWAP2 AND SWAP1 PUSH1 0xA4 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2D9D3779 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x52D SWAP3 SWAP2 SWAP1 PUSH3 0xF4240 SWAP1 PUSH1 0x4 ADD PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x55B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP11 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP13 SWAP1 MSTORE PUSH32 0x44702E0D5959CC77A7F68B33530B86546D1B157D0D74B27010D5F519ADAE07CB SWAP3 POP PUSH1 0xA0 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xB5D JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xEF12E47 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x77897238 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x645 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x669 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x699 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x383D6F07 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND SWAP2 PUSH4 0x707ADE0E SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70F SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP11 SWAP1 MSTORE CHAINID PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP4 SWAP3 PUSH4 0x3DBB202B SWAP3 SWAP2 AND SWAP1 PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x983AAB33 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x81B SWAP3 SWAP2 SWAP1 PUSH3 0xF4240 SWAP1 PUSH1 0x4 ADD PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x849 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP12 SWAP1 MSTORE SWAP1 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP12 SWAP1 MSTORE PUSH32 0x44702E0D5959CC77A7F68B33530B86546D1B157D0D74B27010D5F519ADAE07CB SWAP3 POP PUSH1 0xA0 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x2 SWAP1 MSTORE SWAP4 KECCAK256 SWAP1 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3 SWAP1 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x9C2 DUP2 PUSH2 0x9C5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xA6A DUP2 PUSH2 0xA2E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xA7A DUP2 PUSH2 0xA2E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0xAC4 DUP2 PUSH2 0xA2E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB21 DUP2 PUSH2 0xA2E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x585265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB21 DUP2 PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F20726567697374727920617661696C61626C6520666F7220736F75726365 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1031B430B4B7 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F206D657373656E67657220617661696C61626C6520666F7220736F757263 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x329031B430B4B7 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x60 DUP2 DUP5 ADD MSTORE DUP5 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC78 JUMPI DUP7 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0xC5C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC8A JUMPI PUSH1 0x0 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH4 0xFFFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD PUSH1 0x80 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xDF TIMESTAMP 0xD8 0xDC DUP5 0xBD DUP4 DUP9 DIV 0x23 RETURNDATACOPY 0xD5 PUSH21 0x658D918F56FE8A549B1B4D9B51CAFE7D12A364736F PUSH13 0x634300080D0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        257,
        2921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA56E3C38"
    },
    "38": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "GT",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA56E3C38"
    },
    "49": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "EQ",
      "path": "11"
    },
    "50": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x129"
    },
    "53": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "54": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "55": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xAF08BB7D"
    },
    "60": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "EQ",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13C"
    },
    "64": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "65": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "66": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB257FCF3"
    },
    "71": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "EQ",
      "path": "11"
    },
    "72": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14F"
    },
    "75": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "76": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "77": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xBFA9DD3A"
    },
    "82": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "EQ",
      "path": "11"
    },
    "83": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x183"
    },
    "86": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "87": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "88": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "EQ",
      "path": "11"
    },
    "94": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x196"
    },
    "97": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "98": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "101": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "REVERT",
      "path": "11"
    },
    "102": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "103": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "104": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x24EC66B3"
    },
    "109": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "EQ",
      "path": "11"
    },
    "110": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "114": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "115": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "EQ",
      "path": "11"
    },
    "121": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF1"
    },
    "124": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "125": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "126": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x7203AE3B"
    },
    "131": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "EQ",
      "path": "11"
    },
    "132": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFB"
    },
    "135": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "136": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "137": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8DA5CB5B"
    },
    "142": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "EQ",
      "path": "11"
    },
    "143": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10E"
    },
    "146": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "147": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "148": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        257,
        2921
      ],
      "op": "REVERT",
      "path": "11"
    },
    "152": {
      "offset": [
        322,
        375
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "153": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCC"
    },
    "156": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA6"
    },
    "159": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "160": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "162": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA15"
    },
    "165": {
      "fn": null,
      "jump": "i",
      "offset": [
        322,
        375
      ],
      "op": "JUMP",
      "path": "7"
    },
    "166": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "167": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "169": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "171": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "DUP2",
      "path": "7"
    },
    "172": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "173": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "174": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "176": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "177": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "DUP3",
      "path": "7"
    },
    "178": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "179": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "181": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "182": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "183": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "184": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "DUP1",
      "path": "7"
    },
    "185": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "186": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "187": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "ADD",
      "path": "7"
    },
    "188": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "195": {
      "op": "SHL"
    },
    "196": {
      "op": "SUB"
    },
    "197": {
      "offset": [
        322,
        375
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "198": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "DUP3",
      "path": "7"
    },
    "199": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "AND",
      "path": "7"
    },
    "200": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "201": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "AND",
      "path": "7"
    },
    "202": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "DUP3",
      "path": "7"
    },
    "203": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "JUMP",
      "path": "7"
    },
    "204": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "205": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "207": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "DUP1",
      "path": "7"
    },
    "208": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "215": {
      "op": "SHL"
    },
    "216": {
      "op": "SUB"
    },
    "217": {
      "op": "SWAP4"
    },
    "218": {
      "op": "DUP5"
    },
    "219": {
      "op": "AND"
    },
    "220": {
      "op": "DUP2"
    },
    "221": {
      "op": "MSTORE"
    },
    "222": {
      "op": "SWAP3"
    },
    "223": {
      "op": "SWAP1"
    },
    "224": {
      "op": "SWAP2"
    },
    "225": {
      "op": "AND"
    },
    "226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "228": {
      "op": "DUP4"
    },
    "229": {
      "op": "ADD"
    },
    "230": {
      "op": "MSTORE"
    },
    "231": {
      "op": "ADD"
    },
    "232": {
      "offset": [
        322,
        375
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "233": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "235": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "236": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "DUP1",
      "path": "7"
    },
    "237": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "238": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "SUB",
      "path": "7"
    },
    "239": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "240": {
      "fn": null,
      "offset": [
        322,
        375
      ],
      "op": "RETURN",
      "path": "7"
    },
    "241": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "242": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9"
    },
    "245": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9"
    },
    "248": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "249": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "250": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "251": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        382,
        668
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "252": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        382,
        668
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF9"
    },
    "255": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        382,
        668
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x109"
    },
    "258": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        382,
        668
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "259": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        382,
        668
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "261": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        382,
        668
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA43"
    },
    "264": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        382,
        668
      ],
      "op": "JUMP",
      "path": "7"
    },
    "265": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        382,
        668
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "266": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        382,
        668
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E8"
    },
    "269": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        382,
        668
      ],
      "op": "JUMP",
      "path": "7"
    },
    "270": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "271": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "273": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "274": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "276": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "283": {
      "op": "SHL"
    },
    "284": {
      "op": "SUB"
    },
    "285": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "286": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "287": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "288": {
      "op": "DUP2"
    },
    "289": {
      "op": "MSTORE"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "292": {
      "op": "ADD"
    },
    "293": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8"
    },
    "296": {
      "op": "JUMP"
    },
    "297": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "298": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF9"
    },
    "301": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x137"
    },
    "304": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "305": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "307": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA85"
    },
    "310": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        650,
        1658
      ],
      "op": "JUMP",
      "path": "11"
    },
    "311": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "312": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2CD"
    },
    "315": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        650,
        1658
      ],
      "op": "JUMP",
      "path": "11"
    },
    "316": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "317": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF9"
    },
    "320": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14A"
    },
    "323": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "324": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "326": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAD2"
    },
    "329": {
      "fn": "Resolver.resolveNonFill",
      "jump": "i",
      "offset": [
        1664,
        2655
      ],
      "op": "JUMP",
      "path": "11"
    },
    "330": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "331": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5C3"
    },
    "334": {
      "fn": "Resolver.resolveNonFill",
      "jump": "i",
      "offset": [
        1664,
        2655
      ],
      "op": "JUMP",
      "path": "11"
    },
    "335": {
      "offset": [
        585,
        643
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "336": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCC"
    },
    "339": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15D"
    },
    "342": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "343": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "345": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA15"
    },
    "348": {
      "fn": "Resolver.resolveNonFill",
      "jump": "i",
      "offset": [
        585,
        643
      ],
      "op": "JUMP",
      "path": "11"
    },
    "349": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "350": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "352": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "354": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "355": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "357": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "358": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "DUP2",
      "path": "11"
    },
    "359": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "360": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "362": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "363": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "364": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "DUP1",
      "path": "11"
    },
    "365": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "366": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "368": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "369": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "370": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "ADD",
      "path": "11"
    },
    "371": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "378": {
      "op": "SHL"
    },
    "379": {
      "op": "SUB"
    },
    "380": {
      "offset": [
        585,
        643
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "381": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "DUP3",
      "path": "11"
    },
    "382": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "AND",
      "path": "11"
    },
    "383": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "384": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "AND",
      "path": "11"
    },
    "385": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "DUP3",
      "path": "11"
    },
    "386": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        585,
        643
      ],
      "op": "JUMP",
      "path": "11"
    },
    "387": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2661,
        2919
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "388": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2661,
        2919
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF9"
    },
    "391": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2661,
        2919
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x191"
    },
    "394": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2661,
        2919
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "395": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2661,
        2919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "397": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2661,
        2919
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA43"
    },
    "400": {
      "fn": "Resolver.addRegistry",
      "jump": "i",
      "offset": [
        2661,
        2919
      ],
      "op": "JUMP",
      "path": "11"
    },
    "401": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2661,
        2919
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "402": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2661,
        2919
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8A8"
    },
    "405": {
      "fn": "Resolver.addRegistry",
      "jump": "i",
      "offset": [
        2661,
        2919
      ],
      "op": "JUMP",
      "path": "11"
    },
    "406": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "407": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9"
    },
    "410": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "413": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "414": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "416": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB04"
    },
    "419": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "420": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92A"
    },
    "424": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "425": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "426": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "428": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "435": {
      "op": "SHL"
    },
    "436": {
      "op": "SUB"
    },
    "437": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "438": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 1
    },
    "439": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "440": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC"
    },
    "443": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "444": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "446": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "447": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "451": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "453": {
      "op": "SHL"
    },
    "454": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "455": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "456": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "458": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "459": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D3"
    },
    "462": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "463": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB28"
    },
    "466": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "467": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "468": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "470": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "471": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "472": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "473": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "474": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "475": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "476": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "477": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x1E6"
    },
    "480": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "482": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C5"
    },
    "485": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "486": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "487": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "488": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        382,
        668
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "489": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "491": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "498": {
      "op": "SHL"
    },
    "499": {
      "op": "SUB"
    },
    "500": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "501": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "502": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "503": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x212"
    },
    "506": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "507": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "509": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "510": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "514": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "516": {
      "op": "SHL"
    },
    "517": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "518": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "519": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "521": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "522": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D3"
    },
    "525": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "526": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB28"
    },
    "529": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "530": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "537": {
      "op": "SHL"
    },
    "538": {
      "op": "SUB"
    },
    "539": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        520,
        543
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 3
    },
    "540": {
      "branch": 18,
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        520,
        543
      ],
      "op": "AND",
      "path": "7"
    },
    "541": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        512,
        583
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x274"
    },
    "544": {
      "branch": 18,
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        512,
        583
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "545": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        512,
        583
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "547": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        512,
        583
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "548": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "552": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "554": {
      "op": "SHL"
    },
    "555": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        512,
        583
      ],
      "op": "DUP2",
      "path": "7"
    },
    "556": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        512,
        583
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "559": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        512,
        583
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "561": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        512,
        583
      ],
      "op": "DUP3",
      "path": "7"
    },
    "562": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        512,
        583
      ],
      "op": "ADD",
      "path": "7"
    },
    "563": {
      "op": "MSTORE"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "568": {
      "op": "DUP3"
    },
    "569": {
      "op": "ADD"
    },
    "570": {
      "op": "MSTORE"
    },
    "571": {
      "op": "PUSH32",
      "value": "0x585265737472696374656443616C6C733A20696E76616C6964206D657373656E"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "606": {
      "op": "DUP3"
    },
    "607": {
      "op": "ADD"
    },
    "608": {
      "op": "MSTORE"
    },
    "609": {
      "op": "PUSH3",
      "value": "0x33B2B9"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "618": {
      "op": "DUP3"
    },
    "619": {
      "op": "ADD"
    },
    "620": {
      "op": "MSTORE"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "623": {
      "op": "ADD"
    },
    "624": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        512,
        583
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D3"
    },
    "627": {
      "op": "JUMP"
    },
    "628": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        512,
        583
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "629": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 4,
      "value": "0x40"
    },
    "631": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "DUP1",
      "path": "7"
    },
    "632": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "633": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "DUP1",
      "path": "7"
    },
    "634": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "DUP3",
      "path": "7"
    },
    "635": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "ADD",
      "path": "7"
    },
    "636": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "DUP3",
      "path": "7"
    },
    "637": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "644": {
      "op": "SHL"
    },
    "645": {
      "op": "SUB"
    },
    "646": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "647": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "DUP5",
      "path": "7"
    },
    "648": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "AND",
      "path": "7"
    },
    "649": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "DUP2",
      "path": "7"
    },
    "650": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "651": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "652": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "DUP4",
      "path": "7"
    },
    "653": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "AND",
      "path": "7"
    },
    "654": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "656": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "DUP1",
      "path": "7"
    },
    "657": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "DUP5",
      "path": "7"
    },
    "658": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "ADD",
      "path": "7"
    },
    "659": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "660": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "DUP3",
      "path": "7"
    },
    "661": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        615,
        661
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "664": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        612
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "665": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        612
      ],
      "op": "DUP7",
      "path": "7"
    },
    "666": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        612
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "667": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        603
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "669": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "670": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        612
      ],
      "op": "DUP2",
      "path": "7"
    },
    "671": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "672": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        612
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "673": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        612
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "674": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "675": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        612
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "676": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        612
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "677": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "678": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "679": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "DUP3",
      "path": "7"
    },
    "680": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "687": {
      "op": "SHL"
    },
    "688": {
      "op": "SUB"
    },
    "689": {
      "op": "NOT"
    },
    "690": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "691": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "DUP2",
      "path": "7"
    },
    "692": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "AND",
      "path": "7"
    },
    "693": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "694": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "DUP6",
      "path": "7"
    },
    "695": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "AND",
      "path": "7"
    },
    "696": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "697": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "698": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "699": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "OR",
      "path": "7"
    },
    "700": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "DUP4",
      "path": "7"
    },
    "701": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "702": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "703": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "704": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "705": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "ADD",
      "path": "7"
    },
    "706": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "DUP1",
      "path": "7"
    },
    "707": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "708": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "709": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "710": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "AND",
      "path": "7"
    },
    "711": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "712": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "AND",
      "path": "7"
    },
    "713": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "OR",
      "path": "7"
    },
    "714": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "715": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        593,
        661
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "716": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        382,
        668
      ],
      "op": "JUMP",
      "path": "7"
    },
    "717": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "718": {
      "offset": [
        737,
        762
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "720": {
      "offset": [
        765,
        784
      ],
      "op": "DUP4",
      "path": "7"
    },
    "721": {
      "fn": "Resolver.resolve",
      "offset": [
        765,
        784
      ],
      "op": "DUP2",
      "path": "7"
    },
    "722": {
      "fn": "Resolver.resolve",
      "offset": [
        765,
        784
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "723": {
      "offset": [
        765,
        775
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "725": {
      "offset": [
        765,
        784
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "727": {
      "fn": "Resolver.resolve",
      "offset": [
        765,
        784
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "728": {
      "fn": "Resolver.resolve",
      "offset": [
        765,
        784
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "730": {
      "fn": "Resolver.resolve",
      "offset": [
        765,
        784
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "731": {
      "fn": "Resolver.resolve",
      "offset": [
        765,
        784
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "732": {
      "offset": [
        823,
        834
      ],
      "op": "DUP1",
      "path": "7"
    },
    "733": {
      "fn": "Resolver.resolve",
      "offset": [
        823,
        834
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "734": {
      "fn": "Resolver.resolve",
      "offset": [
        830,
        841
      ],
      "op": "DUP5",
      "path": "11"
    },
    "735": {
      "fn": "Resolver.resolve",
      "offset": [
        830,
        841
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "736": {
      "fn": "Resolver.resolve",
      "offset": [
        843,
        853
      ],
      "op": "CALLER",
      "path": "11"
    },
    "737": {
      "fn": "Resolver.resolve",
      "offset": [
        843,
        853
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "744": {
      "op": "SHL"
    },
    "745": {
      "op": "SUB"
    },
    "746": {
      "offset": [
        823,
        834
      ],
      "op": "AND",
      "path": "7"
    },
    "747": {
      "offset": [
        794,
        907
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x306"
    },
    "750": {
      "fn": "Resolver.resolve",
      "offset": [
        794,
        907
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "751": {
      "fn": "Resolver.resolve",
      "offset": [
        794,
        907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "753": {
      "fn": "Resolver.resolve",
      "offset": [
        794,
        907
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "offset": [
        794,
        907
      ],
      "op": "DUP2",
      "path": "7"
    },
    "762": {
      "fn": "Resolver.resolve",
      "offset": [
        794,
        907
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "763": {
      "fn": "Resolver.resolve",
      "offset": [
        794,
        907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "765": {
      "fn": "Resolver.resolve",
      "offset": [
        794,
        907
      ],
      "op": "ADD",
      "path": "7"
    },
    "766": {
      "fn": "Resolver.resolve",
      "offset": [
        794,
        907
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D3"
    },
    "769": {
      "fn": "Resolver.resolve",
      "offset": [
        794,
        907
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "770": {
      "fn": "Resolver.resolve",
      "offset": [
        794,
        907
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB5D"
    },
    "773": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        794,
        907
      ],
      "op": "JUMP",
      "path": "7"
    },
    "774": {
      "fn": "Resolver.resolve",
      "offset": [
        794,
        907
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "775": {
      "offset": [
        948,
        959
      ],
      "op": "DUP1",
      "path": "7"
    },
    "776": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        959
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "777": {
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "779": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "780": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "781": {
      "op": "PUSH4",
      "value": "0xEF12E47"
    },
    "786": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "788": {
      "op": "SHL"
    },
    "789": {
      "offset": [
        948,
        977
      ],
      "op": "DUP2",
      "path": "7"
    },
    "790": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "791": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "792": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "799": {
      "op": "SHL"
    },
    "800": {
      "op": "SUB"
    },
    "801": {
      "offset": [
        948,
        959
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "802": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        959
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "803": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        959
      ],
      "op": "AND",
      "path": "7"
    },
    "804": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        959
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "805": {
      "offset": [
        948,
        975
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x77897238"
    },
    "810": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        975
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "811": {
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "813": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "814": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "DUP3",
      "path": "7"
    },
    "815": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "ADD",
      "path": "7"
    },
    "816": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "817": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "819": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "820": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "821": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "822": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "823": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "DUP3",
      "path": "7"
    },
    "824": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "825": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "SUB",
      "path": "7"
    },
    "826": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "ADD",
      "path": "7"
    },
    "827": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "DUP2",
      "path": "7"
    },
    "828": {
      "offset": [
        948,
        959
      ],
      "op": "DUP7",
      "path": "7"
    },
    "829": {
      "offset": [
        948,
        977
      ],
      "op": "GAS",
      "path": "7"
    },
    "830": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "831": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "832": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "833": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "834": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34F"
    },
    "837": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "838": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "839": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "841": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "842": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "843": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "844": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "846": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "REVERT",
      "path": "7"
    },
    "847": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "848": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "POP",
      "path": "7"
    },
    "849": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "POP",
      "path": "7"
    },
    "850": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "POP",
      "path": "7"
    },
    "851": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "POP",
      "path": "7"
    },
    "852": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "854": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "855": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "856": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "858": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "NOT",
      "path": "7"
    },
    "859": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "861": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "DUP3",
      "path": "7"
    },
    "862": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "ADD",
      "path": "7"
    },
    "863": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "AND",
      "path": "7"
    },
    "864": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "DUP3",
      "path": "7"
    },
    "865": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "ADD",
      "path": "7"
    },
    "866": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "867": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "869": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "870": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "POP",
      "path": "7"
    },
    "871": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "DUP2",
      "path": "7"
    },
    "872": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "ADD",
      "path": "7"
    },
    "873": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "874": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x373"
    },
    "877": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "878": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "879": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB92"
    },
    "882": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        948,
        977
      ],
      "op": "JUMP",
      "path": "7"
    },
    "883": {
      "fn": "Resolver.resolve",
      "offset": [
        948,
        977
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "890": {
      "op": "SHL"
    },
    "891": {
      "op": "SUB"
    },
    "892": {
      "offset": [
        938,
        977
      ],
      "op": "AND",
      "path": "7"
    },
    "893": {
      "offset": [
        938,
        944
      ],
      "op": "DUP3",
      "path": "7"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "900": {
      "op": "SHL"
    },
    "901": {
      "op": "SUB"
    },
    "902": {
      "offset": [
        938,
        977
      ],
      "op": "AND",
      "path": "7"
    },
    "903": {
      "fn": "Resolver.resolve",
      "offset": [
        938,
        977
      ],
      "op": "EQ",
      "path": "7"
    },
    "904": {
      "offset": [
        917,
        1035
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A3"
    },
    "907": {
      "offset": [
        917,
        1035
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "908": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        1035
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "910": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        1035
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "911": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "915": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "917": {
      "op": "SHL"
    },
    "918": {
      "offset": [
        917,
        1035
      ],
      "op": "DUP2",
      "path": "7"
    },
    "919": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        1035
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "920": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        1035
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "922": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        1035
      ],
      "op": "ADD",
      "path": "7"
    },
    "923": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        1035
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D3"
    },
    "926": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        1035
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "927": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        1035
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB5D"
    },
    "930": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        917,
        1035
      ],
      "op": "JUMP",
      "path": "7"
    },
    "931": {
      "fn": "Resolver.resolve",
      "offset": [
        917,
        1035
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "932": {
      "offset": [
        1098,
        1106
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "934": {
      "fn": "Resolver.resolve",
      "offset": [
        1098,
        1106
      ],
      "op": "DUP2",
      "path": "7"
    },
    "935": {
      "fn": "Resolver.resolve",
      "offset": [
        1098,
        1106
      ],
      "op": "ADD",
      "path": "7"
    },
    "936": {
      "fn": "Resolver.resolve",
      "offset": [
        1098,
        1106
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "937": {
      "offset": [
        1066,
        1077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "938": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1077
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "939": {
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "941": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP1",
      "path": "7"
    },
    "942": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "943": {
      "op": "PUSH4",
      "value": "0x383D6F07"
    },
    "948": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "950": {
      "op": "SHL"
    },
    "951": {
      "offset": [
        1066,
        1094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "952": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "953": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "954": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "961": {
      "op": "SHL"
    },
    "962": {
      "op": "SUB"
    },
    "963": {
      "offset": [
        1098,
        1106
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "964": {
      "fn": "Resolver.resolve",
      "offset": [
        1098,
        1106
      ],
      "op": "DUP5",
      "path": "7"
    },
    "965": {
      "fn": "Resolver.resolve",
      "offset": [
        1098,
        1106
      ],
      "op": "AND",
      "path": "7"
    },
    "966": {
      "fn": "Resolver.resolve",
      "offset": [
        1098,
        1106
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "967": {
      "offset": [
        1066,
        1077
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "968": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1077
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "969": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1077
      ],
      "op": "AND",
      "path": "7"
    },
    "970": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1077
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "971": {
      "offset": [
        1066,
        1092
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x707ADE0E"
    },
    "976": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1092
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "977": {
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "979": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP1",
      "path": "7"
    },
    "980": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "981": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "ADD",
      "path": "7"
    },
    "982": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "983": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "985": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "986": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "987": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "988": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "989": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "990": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "991": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "SUB",
      "path": "7"
    },
    "992": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "ADD",
      "path": "7"
    },
    "993": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "994": {
      "offset": [
        1066,
        1077
      ],
      "op": "DUP7",
      "path": "7"
    },
    "995": {
      "offset": [
        1066,
        1094
      ],
      "op": "GAS",
      "path": "7"
    },
    "996": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "997": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "998": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP1",
      "path": "7"
    },
    "999": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1000": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F5"
    },
    "1003": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1004": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1005": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1007": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1008": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1009": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1010": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1012": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1013": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1014": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "POP",
      "path": "7"
    },
    "1015": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "POP",
      "path": "7"
    },
    "1016": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "POP",
      "path": "7"
    },
    "1017": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "POP",
      "path": "7"
    },
    "1018": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1020": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1021": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1022": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1024": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "NOT",
      "path": "7"
    },
    "1025": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1027": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1028": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "ADD",
      "path": "7"
    },
    "1029": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "AND",
      "path": "7"
    },
    "1030": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1031": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "ADD",
      "path": "7"
    },
    "1032": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1033": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1035": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1036": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "POP",
      "path": "7"
    },
    "1037": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1038": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "ADD",
      "path": "7"
    },
    "1039": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1040": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x419"
    },
    "1043": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1044": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1045": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB92"
    },
    "1048": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        1066,
        1094
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1049": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1094
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1056": {
      "op": "SHL"
    },
    "1057": {
      "op": "SUB"
    },
    "1058": {
      "offset": [
        1066,
        1106
      ],
      "op": "AND",
      "path": "7"
    },
    "1059": {
      "fn": "Resolver.resolve",
      "offset": [
        1066,
        1106
      ],
      "op": "EQ",
      "path": "7"
    },
    "1060": {
      "offset": [
        1045,
        1164
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x43F"
    },
    "1063": {
      "offset": [
        1045,
        1164
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1064": {
      "fn": "Resolver.resolve",
      "offset": [
        1045,
        1164
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1066": {
      "fn": "Resolver.resolve",
      "offset": [
        1045,
        1164
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1067": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1073": {
      "op": "SHL"
    },
    "1074": {
      "offset": [
        1045,
        1164
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1075": {
      "fn": "Resolver.resolve",
      "offset": [
        1045,
        1164
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1076": {
      "fn": "Resolver.resolve",
      "offset": [
        1045,
        1164
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1078": {
      "fn": "Resolver.resolve",
      "offset": [
        1045,
        1164
      ],
      "op": "ADD",
      "path": "7"
    },
    "1079": {
      "fn": "Resolver.resolve",
      "offset": [
        1045,
        1164
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D3"
    },
    "1082": {
      "fn": "Resolver.resolve",
      "offset": [
        1045,
        1164
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1083": {
      "fn": "Resolver.resolve",
      "offset": [
        1045,
        1164
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB5D"
    },
    "1086": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        1045,
        1164
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1087": {
      "fn": "Resolver.resolve",
      "offset": [
        1045,
        1164
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1088": {
      "fn": "Resolver.resolve",
      "offset": [
        865,
        893
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1090": {
      "fn": "Resolver.resolve",
      "offset": [
        896,
        926
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1091": {
      "fn": "Resolver.resolve",
      "offset": [
        896,
        926
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1092": {
      "fn": "Resolver.resolve",
      "offset": [
        896,
        926
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1093": {
      "fn": "Resolver.resolve",
      "offset": [
        896,
        911
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1095": {
      "fn": "Resolver.resolve",
      "offset": [
        896,
        926
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1097": {
      "fn": "Resolver.resolve",
      "offset": [
        896,
        926
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1098": {
      "fn": "Resolver.resolve",
      "offset": [
        896,
        926
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1100": {
      "fn": "Resolver.resolve",
      "offset": [
        896,
        926
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1101": {
      "fn": "Resolver.resolve",
      "offset": [
        896,
        926
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1102": {
      "fn": "Resolver.resolve",
      "offset": [
        957,
        980
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 5
    },
    "1103": {
      "fn": "Resolver.resolve",
      "offset": [
        957,
        980
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1110": {
      "op": "SHL"
    },
    "1111": {
      "op": "SUB"
    },
    "1112": {
      "fn": "Resolver.resolve",
      "offset": [
        957,
        980
      ],
      "op": "AND",
      "path": "11"
    },
    "1113": {
      "fn": "Resolver.resolve",
      "offset": [
        936,
        1058
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x474"
    },
    "1116": {
      "fn": "Resolver.resolve",
      "offset": [
        936,
        1058
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1117": {
      "fn": "Resolver.resolve",
      "offset": [
        936,
        1058
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1119": {
      "fn": "Resolver.resolve",
      "offset": [
        936,
        1058
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1120": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1126": {
      "op": "SHL"
    },
    "1127": {
      "fn": "Resolver.resolve",
      "offset": [
        936,
        1058
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1128": {
      "fn": "Resolver.resolve",
      "offset": [
        936,
        1058
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1129": {
      "fn": "Resolver.resolve",
      "offset": [
        936,
        1058
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1131": {
      "fn": "Resolver.resolve",
      "offset": [
        936,
        1058
      ],
      "op": "ADD",
      "path": "11"
    },
    "1132": {
      "fn": "Resolver.resolve",
      "offset": [
        936,
        1058
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D3"
    },
    "1135": {
      "fn": "Resolver.resolve",
      "offset": [
        936,
        1058
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1136": {
      "fn": "Resolver.resolve",
      "offset": [
        936,
        1058
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBAF"
    },
    "1139": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        936,
        1058
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1140": {
      "fn": "Resolver.resolve",
      "offset": [
        936,
        1058
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1141": {
      "fn": "Resolver.resolve",
      "offset": [
        1089,
        1103
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 6,
      "value": "0x1"
    },
    "1143": {
      "fn": "Resolver.resolve",
      "offset": [
        1089,
        1103
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1144": {
      "fn": "Resolver.resolve",
      "offset": [
        1089,
        1103
      ],
      "op": "ADD",
      "path": "11"
    },
    "1145": {
      "fn": "Resolver.resolve",
      "offset": [
        1089,
        1103
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1152": {
      "op": "SHL"
    },
    "1153": {
      "op": "SUB"
    },
    "1154": {
      "fn": "Resolver.resolve",
      "offset": [
        1089,
        1103
      ],
      "op": "AND",
      "path": "11"
    },
    "1155": {
      "fn": "Resolver.resolve",
      "offset": [
        1068,
        1182
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x49E"
    },
    "1158": {
      "fn": "Resolver.resolve",
      "offset": [
        1068,
        1182
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1159": {
      "fn": "Resolver.resolve",
      "offset": [
        1068,
        1182
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1161": {
      "fn": "Resolver.resolve",
      "offset": [
        1068,
        1182
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1162": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1168": {
      "op": "SHL"
    },
    "1169": {
      "fn": "Resolver.resolve",
      "offset": [
        1068,
        1182
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1170": {
      "fn": "Resolver.resolve",
      "offset": [
        1068,
        1182
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1171": {
      "fn": "Resolver.resolve",
      "offset": [
        1068,
        1182
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1173": {
      "fn": "Resolver.resolve",
      "offset": [
        1068,
        1182
      ],
      "op": "ADD",
      "path": "11"
    },
    "1174": {
      "fn": "Resolver.resolve",
      "offset": [
        1068,
        1182
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D3"
    },
    "1177": {
      "fn": "Resolver.resolve",
      "offset": [
        1068,
        1182
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1178": {
      "fn": "Resolver.resolve",
      "offset": [
        1068,
        1182
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBF5"
    },
    "1181": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        1068,
        1182
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1182": {
      "fn": "Resolver.resolve",
      "offset": [
        1068,
        1182
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1183": {
      "fn": "Resolver.resolve",
      "offset": [
        1227,
        1241
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1185": {
      "fn": "Resolver.resolve",
      "offset": [
        1227,
        1241
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1186": {
      "fn": "Resolver.resolve",
      "offset": [
        1227,
        1241
      ],
      "op": "ADD",
      "path": "11"
    },
    "1187": {
      "fn": "Resolver.resolve",
      "offset": [
        1227,
        1241
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1188": {
      "fn": "Resolver.resolve",
      "offset": [
        1287,
        1310
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 7
    },
    "1189": {
      "fn": "Resolver.resolve",
      "offset": [
        1287,
        1310
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1190": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1192": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1193": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "1195": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1196": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "ADD",
      "path": "11"
    },
    "1197": {
      "op": "DUP13"
    },
    "1198": {
      "op": "SWAP1"
    },
    "1199": {
      "op": "MSTORE"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1202": {
      "op": "DUP2"
    },
    "1203": {
      "op": "ADD"
    },
    "1204": {
      "op": "DUP12"
    },
    "1205": {
      "op": "SWAP1"
    },
    "1206": {
      "op": "MSTORE"
    },
    "1207": {
      "fn": "Resolver.resolve",
      "offset": [
        1429,
        1442
      ],
      "op": "CHAINID",
      "path": "11"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1210": {
      "op": "DUP3"
    },
    "1211": {
      "op": "ADD"
    },
    "1212": {
      "op": "MSTORE"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "op": "DUP9"
    },
    "1222": {
      "op": "DUP2"
    },
    "1223": {
      "op": "AND"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1226": {
      "op": "DUP4"
    },
    "1227": {
      "op": "ADD"
    },
    "1228": {
      "op": "MSTORE"
    },
    "1229": {
      "fn": "Resolver.resolve",
      "offset": [
        1227,
        1241
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1230": {
      "fn": "Resolver.resolve",
      "offset": [
        1227,
        1241
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1231": {
      "fn": "Resolver.resolve",
      "offset": [
        1227,
        1241
      ],
      "op": "AND",
      "path": "11"
    },
    "1232": {
      "fn": "Resolver.resolve",
      "offset": [
        1227,
        1241
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1233": {
      "fn": "Resolver.resolve",
      "offset": [
        1227,
        1241
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1234": {
      "fn": "Resolver.resolve",
      "offset": [
        1227,
        1241
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1235": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1273
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x3DBB202B"
    },
    "1240": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1273
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1241": {
      "fn": "Resolver.resolve",
      "offset": [
        1287,
        1310
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1242": {
      "fn": "Resolver.resolve",
      "offset": [
        1287,
        1310
      ],
      "op": "AND",
      "path": "11"
    },
    "1243": {
      "fn": "Resolver.resolve",
      "offset": [
        1287,
        1310
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1246": {
      "op": "ADD"
    },
    "1247": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1249": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1250": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1253": {
      "op": "NOT"
    },
    "1254": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1255": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1256": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "SUB",
      "path": "11"
    },
    "1257": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "ADD",
      "path": "11"
    },
    "1258": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1259": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1260": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1261": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1262": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1263": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1265": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1266": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "ADD",
      "path": "11"
    },
    "1267": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1268": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1275": {
      "op": "SHL"
    },
    "1276": {
      "op": "SUB"
    },
    "1277": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "AND",
      "path": "11"
    },
    "1278": {
      "op": "PUSH4",
      "value": "0x2D9D3779"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1285": {
      "op": "SHL"
    },
    "1286": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "OR",
      "path": "11"
    },
    "1287": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1288": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1289": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1296": {
      "op": "SHL"
    },
    "1297": {
      "op": "SUB"
    },
    "1298": {
      "op": "NOT"
    },
    "1299": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "1301": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1302": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1303": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "SHL",
      "path": "11"
    },
    "1304": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "AND",
      "path": "11"
    },
    "1305": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1306": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1307": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x52D"
    },
    "1310": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1311": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1312": {
      "fn": "Resolver.resolve",
      "offset": [
        1324,
        1465
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1313": {
      "fn": "Resolver.resolve",
      "offset": [
        1479,
        1488
      ],
      "op": "PUSH3",
      "path": "11",
      "value": "0xF4240"
    },
    "1317": {
      "fn": "Resolver.resolve",
      "offset": [
        1479,
        1488
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1318": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1320": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "ADD",
      "path": "11"
    },
    "1321": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC3C"
    },
    "1324": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        1252,
        1498
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1325": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1326": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1328": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1330": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1331": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1332": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1333": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "SUB",
      "path": "11"
    },
    "1334": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1335": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1337": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1338": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1339": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "1340": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1341": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1342": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1343": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x547"
    },
    "1346": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1347": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1349": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1350": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1351": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1352": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "POP",
      "path": "11"
    },
    "1353": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "GAS",
      "path": "11"
    },
    "1354": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "CALL",
      "path": "11"
    },
    "1355": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1356": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1357": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1358": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x55B"
    },
    "1361": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1362": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1363": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1365": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1366": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1367": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1368": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1370": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1371": {
      "fn": "Resolver.resolve",
      "offset": [
        1252,
        1498
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1372": {
      "op": "POP"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "fn": "Resolver.resolve",
      "offset": [
        1514,
        1651
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 8,
      "value": "0x40"
    },
    "1376": {
      "fn": "Resolver.resolve",
      "offset": [
        1514,
        1651
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1377": {
      "fn": "Resolver.resolve",
      "offset": [
        1514,
        1651
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1378": {
      "op": "DUP11"
    },
    "1379": {
      "op": "DUP2"
    },
    "1380": {
      "op": "MSTORE"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1383": {
      "op": "DUP2"
    },
    "1384": {
      "op": "ADD"
    },
    "1385": {
      "op": "DUP13"
    },
    "1386": {
      "op": "SWAP1"
    },
    "1387": {
      "op": "MSTORE"
    },
    "1388": {
      "op": "SWAP1"
    },
    "1389": {
      "op": "DUP2"
    },
    "1390": {
      "op": "ADD"
    },
    "1391": {
      "op": "DUP14"
    },
    "1392": {
      "op": "SWAP1"
    },
    "1393": {
      "op": "MSTORE"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1400": {
      "op": "SHL"
    },
    "1401": {
      "op": "SUB"
    },
    "1402": {
      "op": "DUP10"
    },
    "1403": {
      "op": "AND"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1406": {
      "op": "DUP3"
    },
    "1407": {
      "op": "ADD"
    },
    "1408": {
      "op": "MSTORE"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1411": {
      "op": "DUP2"
    },
    "1412": {
      "op": "ADD"
    },
    "1413": {
      "op": "DUP13"
    },
    "1414": {
      "op": "SWAP1"
    },
    "1415": {
      "op": "MSTORE"
    },
    "1416": {
      "fn": "Resolver.resolve",
      "offset": [
        1514,
        1651
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x44702E0D5959CC77A7F68B33530B86546D1B157D0D74B27010D5F519ADAE07CB"
    },
    "1449": {
      "fn": "Resolver.resolve",
      "offset": [
        1514,
        1651
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1450": {
      "op": "POP"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1453": {
      "op": "ADD"
    },
    "1454": {
      "op": "SWAP1"
    },
    "1455": {
      "op": "POP"
    },
    "1456": {
      "fn": "Resolver.resolve",
      "offset": [
        1514,
        1651
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1458": {
      "fn": "Resolver.resolve",
      "offset": [
        1514,
        1651
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1459": {
      "fn": "Resolver.resolve",
      "offset": [
        1514,
        1651
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1460": {
      "fn": "Resolver.resolve",
      "offset": [
        1514,
        1651
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1461": {
      "fn": "Resolver.resolve",
      "offset": [
        1514,
        1651
      ],
      "op": "SUB",
      "path": "11"
    },
    "1462": {
      "fn": "Resolver.resolve",
      "offset": [
        1514,
        1651
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1463": {
      "fn": "Resolver.resolve",
      "offset": [
        1514,
        1651
      ],
      "op": "LOG1",
      "path": "11"
    },
    "1464": {
      "fn": "Resolver.resolve",
      "offset": [
        855,
        1658
      ],
      "op": "POP",
      "path": "11"
    },
    "1465": {
      "fn": "Resolver.resolve",
      "offset": [
        855,
        1658
      ],
      "op": "POP",
      "path": "11"
    },
    "1466": {
      "offset": [
        727,
        1182
      ],
      "op": "POP",
      "path": "7"
    },
    "1467": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "POP",
      "path": "11"
    },
    "1468": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "POP",
      "path": "11"
    },
    "1469": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "POP",
      "path": "11"
    },
    "1470": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "POP",
      "path": "11"
    },
    "1471": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "POP",
      "path": "11"
    },
    "1472": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "POP",
      "path": "11"
    },
    "1473": {
      "fn": "Resolver.resolve",
      "offset": [
        650,
        1658
      ],
      "op": "POP",
      "path": "11"
    },
    "1474": {
      "fn": "Resolver.resolve",
      "jump": "o",
      "offset": [
        650,
        1658
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1475": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1476": {
      "offset": [
        737,
        762
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1478": {
      "offset": [
        765,
        784
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1479": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        765,
        784
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1480": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        765,
        784
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1481": {
      "offset": [
        765,
        775
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1483": {
      "offset": [
        765,
        784
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1485": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        765,
        784
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1486": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        765,
        784
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1488": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        765,
        784
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1489": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        765,
        784
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1490": {
      "offset": [
        823,
        834
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1491": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        823,
        834
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1492": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1827,
        1838
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1493": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1827,
        1838
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1494": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1840,
        1850
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1495": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1840,
        1850
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1502": {
      "op": "SHL"
    },
    "1503": {
      "op": "SUB"
    },
    "1504": {
      "offset": [
        823,
        834
      ],
      "op": "AND",
      "path": "7"
    },
    "1505": {
      "offset": [
        794,
        907
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5FC"
    },
    "1508": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        794,
        907
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1509": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        794,
        907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1511": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        794,
        907
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1512": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1518": {
      "op": "SHL"
    },
    "1519": {
      "offset": [
        794,
        907
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1520": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        794,
        907
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1521": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        794,
        907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1523": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        794,
        907
      ],
      "op": "ADD",
      "path": "7"
    },
    "1524": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        794,
        907
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D3"
    },
    "1527": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        794,
        907
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1528": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        794,
        907
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB5D"
    },
    "1531": {
      "fn": "Resolver.resolveNonFill",
      "jump": "i",
      "offset": [
        794,
        907
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1532": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        794,
        907
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1533": {
      "offset": [
        948,
        959
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1534": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        959
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1535": {
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1537": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1538": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1539": {
      "op": "PUSH4",
      "value": "0xEF12E47"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1546": {
      "op": "SHL"
    },
    "1547": {
      "offset": [
        948,
        977
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1548": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1549": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1550": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1557": {
      "op": "SHL"
    },
    "1558": {
      "op": "SUB"
    },
    "1559": {
      "offset": [
        948,
        959
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1560": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        959
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1561": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        959
      ],
      "op": "AND",
      "path": "7"
    },
    "1562": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        959
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1563": {
      "offset": [
        948,
        975
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x77897238"
    },
    "1568": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        975
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1569": {
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1571": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1572": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1573": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "ADD",
      "path": "7"
    },
    "1574": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1575": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1577": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1578": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1579": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1580": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1581": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1582": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1583": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "SUB",
      "path": "7"
    },
    "1584": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "ADD",
      "path": "7"
    },
    "1585": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1586": {
      "offset": [
        948,
        959
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1587": {
      "offset": [
        948,
        977
      ],
      "op": "GAS",
      "path": "7"
    },
    "1588": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "1589": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1590": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1591": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1592": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x645"
    },
    "1595": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1596": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1597": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1599": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1600": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1601": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1602": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1604": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1605": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1606": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "POP",
      "path": "7"
    },
    "1607": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "POP",
      "path": "7"
    },
    "1608": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "POP",
      "path": "7"
    },
    "1609": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "POP",
      "path": "7"
    },
    "1610": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1612": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1613": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1614": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1616": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "NOT",
      "path": "7"
    },
    "1617": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1619": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1620": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "ADD",
      "path": "7"
    },
    "1621": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "AND",
      "path": "7"
    },
    "1622": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1623": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "ADD",
      "path": "7"
    },
    "1624": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1625": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1627": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1628": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "POP",
      "path": "7"
    },
    "1629": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1630": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "ADD",
      "path": "7"
    },
    "1631": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1632": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x669"
    },
    "1635": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1636": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1637": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB92"
    },
    "1640": {
      "fn": "Resolver.resolveNonFill",
      "jump": "i",
      "offset": [
        948,
        977
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1641": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        948,
        977
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1648": {
      "op": "SHL"
    },
    "1649": {
      "op": "SUB"
    },
    "1650": {
      "offset": [
        938,
        977
      ],
      "op": "AND",
      "path": "7"
    },
    "1651": {
      "offset": [
        938,
        944
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1658": {
      "op": "SHL"
    },
    "1659": {
      "op": "SUB"
    },
    "1660": {
      "offset": [
        938,
        977
      ],
      "op": "AND",
      "path": "7"
    },
    "1661": {
      "branch": 19,
      "fn": "Resolver.resolveNonFill",
      "offset": [
        938,
        977
      ],
      "op": "EQ",
      "path": "7"
    },
    "1662": {
      "offset": [
        917,
        1035
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x699"
    },
    "1665": {
      "branch": 19,
      "offset": [
        917,
        1035
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1666": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        917,
        1035
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1668": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        917,
        1035
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1669": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "offset": [
        917,
        1035
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1677": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        917,
        1035
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1678": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        917,
        1035
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1680": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        917,
        1035
      ],
      "op": "ADD",
      "path": "7"
    },
    "1681": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        917,
        1035
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D3"
    },
    "1684": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        917,
        1035
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1685": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        917,
        1035
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB5D"
    },
    "1688": {
      "fn": "Resolver.resolveNonFill",
      "jump": "i",
      "offset": [
        917,
        1035
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1689": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        917,
        1035
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1690": {
      "offset": [
        1098,
        1106
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1692": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1098,
        1106
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1693": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1098,
        1106
      ],
      "op": "ADD",
      "path": "7"
    },
    "1694": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1098,
        1106
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1695": {
      "offset": [
        1066,
        1077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1696": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1077
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1697": {
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1699": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1700": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1701": {
      "op": "PUSH4",
      "value": "0x383D6F07"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1708": {
      "op": "SHL"
    },
    "1709": {
      "offset": [
        1066,
        1094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1710": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1711": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1712": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1719": {
      "op": "SHL"
    },
    "1720": {
      "op": "SUB"
    },
    "1721": {
      "offset": [
        1098,
        1106
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1722": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1098,
        1106
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1723": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1098,
        1106
      ],
      "op": "AND",
      "path": "7"
    },
    "1724": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1098,
        1106
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1725": {
      "offset": [
        1066,
        1077
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1726": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1077
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1727": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1077
      ],
      "op": "AND",
      "path": "7"
    },
    "1728": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1077
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1729": {
      "offset": [
        1066,
        1092
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x707ADE0E"
    },
    "1734": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1092
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1735": {
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1737": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1738": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1739": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "ADD",
      "path": "7"
    },
    "1740": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1741": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1743": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1744": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1745": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1746": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1747": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1748": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1749": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "SUB",
      "path": "7"
    },
    "1750": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "ADD",
      "path": "7"
    },
    "1751": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1752": {
      "offset": [
        1066,
        1077
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1753": {
      "offset": [
        1066,
        1094
      ],
      "op": "GAS",
      "path": "7"
    },
    "1754": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "1755": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1756": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1757": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1758": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EB"
    },
    "1761": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1762": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1763": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1765": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1766": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1767": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1768": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1770": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1771": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1772": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "POP",
      "path": "7"
    },
    "1773": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "POP",
      "path": "7"
    },
    "1774": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "POP",
      "path": "7"
    },
    "1775": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "POP",
      "path": "7"
    },
    "1776": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1778": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1779": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1780": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1782": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "NOT",
      "path": "7"
    },
    "1783": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1785": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1786": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "ADD",
      "path": "7"
    },
    "1787": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "AND",
      "path": "7"
    },
    "1788": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1789": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "ADD",
      "path": "7"
    },
    "1790": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1791": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1793": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1794": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "POP",
      "path": "7"
    },
    "1795": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1796": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "ADD",
      "path": "7"
    },
    "1797": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1798": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x70F"
    },
    "1801": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1802": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1803": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB92"
    },
    "1806": {
      "fn": "Resolver.resolveNonFill",
      "jump": "i",
      "offset": [
        1066,
        1094
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1807": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1094
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1814": {
      "op": "SHL"
    },
    "1815": {
      "op": "SUB"
    },
    "1816": {
      "offset": [
        1066,
        1106
      ],
      "op": "AND",
      "path": "7"
    },
    "1817": {
      "branch": 20,
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1066,
        1106
      ],
      "op": "EQ",
      "path": "7"
    },
    "1818": {
      "offset": [
        1045,
        1164
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x735"
    },
    "1821": {
      "branch": 20,
      "offset": [
        1045,
        1164
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1822": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1045,
        1164
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1824": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1045,
        1164
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1825": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1831": {
      "op": "SHL"
    },
    "1832": {
      "offset": [
        1045,
        1164
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1833": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1045,
        1164
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1834": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1045,
        1164
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1836": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1045,
        1164
      ],
      "op": "ADD",
      "path": "7"
    },
    "1837": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1045,
        1164
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D3"
    },
    "1840": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1045,
        1164
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1841": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1045,
        1164
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB5D"
    },
    "1844": {
      "fn": "Resolver.resolveNonFill",
      "jump": "i",
      "offset": [
        1045,
        1164
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1845": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1045,
        1164
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1846": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1862,
        1890
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1848": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1893,
        1923
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1849": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1893,
        1923
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1850": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1893,
        1923
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1851": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1893,
        1908
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1853": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1893,
        1923
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1855": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1893,
        1923
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1856": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1893,
        1923
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1858": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1893,
        1923
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1859": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1893,
        1923
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1860": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1954,
        1977
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 9
    },
    "1861": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1954,
        1977
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1868": {
      "op": "SHL"
    },
    "1869": {
      "op": "SUB"
    },
    "1870": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1954,
        1977
      ],
      "op": "AND",
      "path": "11"
    },
    "1871": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1933,
        2055
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x76A"
    },
    "1874": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1933,
        2055
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1875": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1933,
        2055
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1877": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1933,
        2055
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1878": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1884": {
      "op": "SHL"
    },
    "1885": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1933,
        2055
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1886": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1933,
        2055
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1887": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1933,
        2055
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1889": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1933,
        2055
      ],
      "op": "ADD",
      "path": "11"
    },
    "1890": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1933,
        2055
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D3"
    },
    "1893": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1933,
        2055
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1894": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1933,
        2055
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBAF"
    },
    "1897": {
      "fn": "Resolver.resolveNonFill",
      "jump": "i",
      "offset": [
        1933,
        2055
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1898": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1933,
        2055
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1899": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2086,
        2100
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 10,
      "value": "0x1"
    },
    "1901": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2086,
        2100
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1902": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2086,
        2100
      ],
      "op": "ADD",
      "path": "11"
    },
    "1903": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2086,
        2100
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1910": {
      "op": "SHL"
    },
    "1911": {
      "op": "SUB"
    },
    "1912": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2086,
        2100
      ],
      "op": "AND",
      "path": "11"
    },
    "1913": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2065,
        2179
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x794"
    },
    "1916": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2065,
        2179
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1917": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2065,
        2179
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1919": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2065,
        2179
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1920": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1926": {
      "op": "SHL"
    },
    "1927": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2065,
        2179
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1928": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2065,
        2179
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1929": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2065,
        2179
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1931": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2065,
        2179
      ],
      "op": "ADD",
      "path": "11"
    },
    "1932": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2065,
        2179
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D3"
    },
    "1935": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2065,
        2179
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1936": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2065,
        2179
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBF5"
    },
    "1939": {
      "fn": "Resolver.resolveNonFill",
      "jump": "i",
      "offset": [
        2065,
        2179
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1940": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2065,
        2179
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1941": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2224,
        2238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1943": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2224,
        2238
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1944": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2224,
        2238
      ],
      "op": "ADD",
      "path": "11"
    },
    "1945": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2224,
        2238
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1946": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2284,
        2307
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 11
    },
    "1947": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2284,
        2307
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1948": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1950": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1951": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "1953": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1954": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "ADD",
      "path": "11"
    },
    "1955": {
      "op": "DUP12"
    },
    "1956": {
      "op": "SWAP1"
    },
    "1957": {
      "op": "MSTORE"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1960": {
      "op": "DUP2"
    },
    "1961": {
      "op": "ADD"
    },
    "1962": {
      "op": "DUP11"
    },
    "1963": {
      "op": "SWAP1"
    },
    "1964": {
      "op": "MSTORE"
    },
    "1965": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2430,
        2443
      ],
      "op": "CHAINID",
      "path": "11"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1968": {
      "op": "DUP3"
    },
    "1969": {
      "op": "ADD"
    },
    "1970": {
      "op": "MSTORE"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1977": {
      "op": "SHL"
    },
    "1978": {
      "op": "SUB"
    },
    "1979": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2224,
        2238
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1980": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2224,
        2238
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1981": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2224,
        2238
      ],
      "op": "AND",
      "path": "11"
    },
    "1982": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2224,
        2238
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1983": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2224,
        2238
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1984": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2224,
        2238
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1985": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2270
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x3DBB202B"
    },
    "1990": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2270
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1991": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2284,
        2307
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1992": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2284,
        2307
      ],
      "op": "AND",
      "path": "11"
    },
    "1993": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2284,
        2307
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1996": {
      "op": "ADD"
    },
    "1997": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1999": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2000": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2003": {
      "op": "NOT"
    },
    "2004": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2005": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2006": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "SUB",
      "path": "11"
    },
    "2007": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "ADD",
      "path": "11"
    },
    "2008": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2009": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2010": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2011": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2012": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2013": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2015": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2016": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "ADD",
      "path": "11"
    },
    "2017": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2018": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2025": {
      "op": "SHL"
    },
    "2026": {
      "op": "SUB"
    },
    "2027": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "AND",
      "path": "11"
    },
    "2028": {
      "op": "PUSH4",
      "value": "0x983AAB33"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2035": {
      "op": "SHL"
    },
    "2036": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "OR",
      "path": "11"
    },
    "2037": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2038": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2039": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2046": {
      "op": "SHL"
    },
    "2047": {
      "op": "SUB"
    },
    "2048": {
      "op": "NOT"
    },
    "2049": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "2051": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2052": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2053": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "SHL",
      "path": "11"
    },
    "2054": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "AND",
      "path": "11"
    },
    "2055": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2056": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2057": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x81B"
    },
    "2060": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2061": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2062": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2321,
        2458
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2063": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2472,
        2481
      ],
      "op": "PUSH3",
      "path": "11",
      "value": "0xF4240"
    },
    "2067": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2472,
        2481
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2068": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2070": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "ADD",
      "path": "11"
    },
    "2071": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC3C"
    },
    "2074": {
      "fn": "Resolver.resolveNonFill",
      "jump": "i",
      "offset": [
        2249,
        2491
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2075": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2076": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2078": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2080": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2081": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2082": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2083": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "SUB",
      "path": "11"
    },
    "2084": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2085": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2087": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2088": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2089": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "2090": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2091": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2092": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2093": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x835"
    },
    "2096": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2097": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2099": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2100": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2101": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2102": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "POP",
      "path": "11"
    },
    "2103": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "GAS",
      "path": "11"
    },
    "2104": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "CALL",
      "path": "11"
    },
    "2105": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2106": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2107": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2108": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x849"
    },
    "2111": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2112": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2113": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2115": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2116": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2117": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2118": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2120": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2121": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2249,
        2491
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2122": {
      "op": "POP"
    },
    "2123": {
      "op": "POP"
    },
    "2124": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2507,
        2648
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 12,
      "value": "0x40"
    },
    "2126": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2507,
        2648
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2127": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2507,
        2648
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2128": {
      "op": "DUP10"
    },
    "2129": {
      "op": "DUP2"
    },
    "2130": {
      "op": "MSTORE"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2133": {
      "op": "DUP2"
    },
    "2134": {
      "op": "ADD"
    },
    "2135": {
      "op": "DUP12"
    },
    "2136": {
      "op": "SWAP1"
    },
    "2137": {
      "op": "MSTORE"
    },
    "2138": {
      "op": "SWAP1"
    },
    "2139": {
      "op": "DUP2"
    },
    "2140": {
      "op": "ADD"
    },
    "2141": {
      "op": "DUP13"
    },
    "2142": {
      "op": "SWAP1"
    },
    "2143": {
      "op": "MSTORE"
    },
    "2144": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2616,
        2617
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2148": {
      "op": "DUP3"
    },
    "2149": {
      "op": "ADD"
    },
    "2150": {
      "op": "MSTORE"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2153": {
      "op": "DUP2"
    },
    "2154": {
      "op": "ADD"
    },
    "2155": {
      "op": "DUP12"
    },
    "2156": {
      "op": "SWAP1"
    },
    "2157": {
      "op": "MSTORE"
    },
    "2158": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2507,
        2648
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x44702E0D5959CC77A7F68B33530B86546D1B157D0D74B27010D5F519ADAE07CB"
    },
    "2191": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2507,
        2648
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2192": {
      "op": "POP"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2195": {
      "op": "ADD"
    },
    "2196": {
      "op": "SWAP1"
    },
    "2197": {
      "op": "POP"
    },
    "2198": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2507,
        2648
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2200": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2507,
        2648
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2201": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2507,
        2648
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2202": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2507,
        2648
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2203": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2507,
        2648
      ],
      "op": "SUB",
      "path": "11"
    },
    "2204": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2507,
        2648
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2205": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        2507,
        2648
      ],
      "op": "LOG1",
      "path": "11"
    },
    "2206": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1852,
        2655
      ],
      "op": "POP",
      "path": "11"
    },
    "2207": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1852,
        2655
      ],
      "op": "POP",
      "path": "11"
    },
    "2208": {
      "offset": [
        727,
        1182
      ],
      "op": "POP",
      "path": "7"
    },
    "2209": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "POP",
      "path": "11"
    },
    "2210": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "POP",
      "path": "11"
    },
    "2211": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "POP",
      "path": "11"
    },
    "2212": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "POP",
      "path": "11"
    },
    "2213": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "POP",
      "path": "11"
    },
    "2214": {
      "fn": "Resolver.resolveNonFill",
      "offset": [
        1664,
        2655
      ],
      "op": "POP",
      "path": "11"
    },
    "2215": {
      "fn": "Resolver.resolveNonFill",
      "jump": "o",
      "offset": [
        1664,
        2655
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2216": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2661,
        2919
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2217": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2219": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2226": {
      "op": "SHL"
    },
    "2227": {
      "op": "SUB"
    },
    "2228": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2229": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2230": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2231": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D2"
    },
    "2234": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2235": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2237": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2244": {
      "op": "SHL"
    },
    "2245": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2246": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2247": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2249": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2250": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D3"
    },
    "2253": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2254": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB28"
    },
    "2257": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2258": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2259": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 13,
      "value": "0x40"
    },
    "2261": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2262": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2263": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2264": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2265": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "ADD",
      "path": "11"
    },
    "2266": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2267": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2274": {
      "op": "SHL"
    },
    "2275": {
      "op": "SUB"
    },
    "2276": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2277": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2278": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "AND",
      "path": "11"
    },
    "2279": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2280": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2281": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2282": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2283": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "AND",
      "path": "11"
    },
    "2284": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2286": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2287": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2288": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "ADD",
      "path": "11"
    },
    "2289": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2290": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2291": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2832,
        2912
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2294": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2829
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "2295": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2829
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2296": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2829
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2297": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2820
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2299": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2829
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2300": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2829
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2301": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2829
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2302": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2829
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2303": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2304": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2305": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2306": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2313": {
      "op": "SHL"
    },
    "2314": {
      "op": "SUB"
    },
    "2315": {
      "op": "NOT"
    },
    "2316": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2317": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2318": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "AND",
      "path": "11"
    },
    "2319": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2320": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2321": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "AND",
      "path": "11"
    },
    "2322": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2323": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2324": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2325": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "OR",
      "path": "11"
    },
    "2326": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2327": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2328": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2329": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2333": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2334": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "ADD",
      "path": "11"
    },
    "2335": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2336": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2337": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2338": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2339": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "AND",
      "path": "11"
    },
    "2340": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2341": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "AND",
      "path": "11"
    },
    "2342": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "OR",
      "path": "11"
    },
    "2343": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2344": {
      "fn": "Resolver.addRegistry",
      "offset": [
        2805,
        2912
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2345": {
      "fn": "Resolver.addRegistry",
      "jump": "o",
      "offset": [
        2661,
        2919
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2346": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2347": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2349": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2356": {
      "op": "SHL"
    },
    "2357": {
      "op": "SUB"
    },
    "2358": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2359": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2360": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2361": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x954"
    },
    "2364": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2367": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2374": {
      "op": "SHL"
    },
    "2375": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2377": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2379": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2380": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D3"
    },
    "2383": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2384": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB28"
    },
    "2387": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2388": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2395": {
      "op": "SHL"
    },
    "2396": {
      "op": "SUB"
    },
    "2397": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 14
    },
    "2398": {
      "branch": 21,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "2399": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B9"
    },
    "2402": {
      "branch": 21,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2403": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2406": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2412": {
      "op": "SHL"
    },
    "2413": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2414": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2419": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2420": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "2421": {
      "op": "MSTORE"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2426": {
      "op": "DUP3"
    },
    "2427": {
      "op": "ADD"
    },
    "2428": {
      "op": "MSTORE"
    },
    "2429": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2464": {
      "op": "DUP3"
    },
    "2465": {
      "op": "ADD"
    },
    "2466": {
      "op": "MSTORE"
    },
    "2467": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2476": {
      "op": "SHL"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2479": {
      "op": "DUP3"
    },
    "2480": {
      "op": "ADD"
    },
    "2481": {
      "op": "MSTORE"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2484": {
      "op": "ADD"
    },
    "2485": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D3"
    },
    "2488": {
      "op": "JUMP"
    },
    "2489": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2490": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x9C2"
    },
    "2493": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2494": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C5"
    },
    "2497": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2498": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2499": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "2500": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2501": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2502": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2504": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2505": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2512": {
      "op": "SHL"
    },
    "2513": {
      "op": "SUB"
    },
    "2514": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 16
    },
    "2515": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2516": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2523": {
      "op": "SHL"
    },
    "2524": {
      "op": "SUB"
    },
    "2525": {
      "op": "NOT"
    },
    "2526": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2527": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2528": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2529": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "2530": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2531": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2532": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x40"
    },
    "2534": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2535": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2536": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2537": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2538": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "2539": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2540": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2541": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2542": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2575": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2576": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2577": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2578": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2579": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2580": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2581": {
      "op": "JUMPDEST"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2586": {
      "op": "DUP3"
    },
    "2587": {
      "op": "DUP5"
    },
    "2588": {
      "op": "SUB"
    },
    "2589": {
      "op": "SLT"
    },
    "2590": {
      "op": "ISZERO"
    },
    "2591": {
      "op": "PUSH2",
      "value": "0xA27"
    },
    "2594": {
      "op": "JUMPI"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2597": {
      "op": "DUP1"
    },
    "2598": {
      "op": "REVERT"
    },
    "2599": {
      "op": "JUMPDEST"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "op": "CALLDATALOAD"
    },
    "2602": {
      "op": "SWAP2"
    },
    "2603": {
      "op": "SWAP1"
    },
    "2604": {
      "op": "POP"
    },
    "2605": {
      "jump": "o",
      "op": "JUMP"
    },
    "2606": {
      "op": "JUMPDEST"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2613": {
      "op": "SHL"
    },
    "2614": {
      "op": "SUB"
    },
    "2615": {
      "op": "DUP2"
    },
    "2616": {
      "op": "AND"
    },
    "2617": {
      "op": "DUP2"
    },
    "2618": {
      "op": "EQ"
    },
    "2619": {
      "op": "PUSH2",
      "value": "0x9C2"
    },
    "2622": {
      "op": "JUMPI"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2625": {
      "op": "DUP1"
    },
    "2626": {
      "op": "REVERT"
    },
    "2627": {
      "op": "JUMPDEST"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2630": {
      "op": "DUP1"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2635": {
      "op": "DUP5"
    },
    "2636": {
      "op": "DUP7"
    },
    "2637": {
      "op": "SUB"
    },
    "2638": {
      "op": "SLT"
    },
    "2639": {
      "op": "ISZERO"
    },
    "2640": {
      "op": "PUSH2",
      "value": "0xA58"
    },
    "2643": {
      "op": "JUMPI"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2646": {
      "op": "DUP1"
    },
    "2647": {
      "op": "REVERT"
    },
    "2648": {
      "op": "JUMPDEST"
    },
    "2649": {
      "op": "DUP4"
    },
    "2650": {
      "op": "CALLDATALOAD"
    },
    "2651": {
      "op": "SWAP3"
    },
    "2652": {
      "op": "POP"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2655": {
      "op": "DUP5"
    },
    "2656": {
      "op": "ADD"
    },
    "2657": {
      "op": "CALLDATALOAD"
    },
    "2658": {
      "op": "PUSH2",
      "value": "0xA6A"
    },
    "2661": {
      "op": "DUP2"
    },
    "2662": {
      "op": "PUSH2",
      "value": "0xA2E"
    },
    "2665": {
      "jump": "i",
      "op": "JUMP"
    },
    "2666": {
      "op": "JUMPDEST"
    },
    "2667": {
      "op": "SWAP2"
    },
    "2668": {
      "op": "POP"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2671": {
      "op": "DUP5"
    },
    "2672": {
      "op": "ADD"
    },
    "2673": {
      "op": "CALLDATALOAD"
    },
    "2674": {
      "op": "PUSH2",
      "value": "0xA7A"
    },
    "2677": {
      "op": "DUP2"
    },
    "2678": {
      "op": "PUSH2",
      "value": "0xA2E"
    },
    "2681": {
      "jump": "i",
      "op": "JUMP"
    },
    "2682": {
      "op": "JUMPDEST"
    },
    "2683": {
      "op": "DUP1"
    },
    "2684": {
      "op": "SWAP2"
    },
    "2685": {
      "op": "POP"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "op": "SWAP3"
    },
    "2688": {
      "op": "POP"
    },
    "2689": {
      "op": "SWAP3"
    },
    "2690": {
      "op": "POP"
    },
    "2691": {
      "op": "SWAP3"
    },
    "2692": {
      "jump": "o",
      "op": "JUMP"
    },
    "2693": {
      "op": "JUMPDEST"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2696": {
      "op": "DUP1"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2699": {
      "op": "DUP1"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2704": {
      "op": "DUP7"
    },
    "2705": {
      "op": "DUP9"
    },
    "2706": {
      "op": "SUB"
    },
    "2707": {
      "op": "SLT"
    },
    "2708": {
      "op": "ISZERO"
    },
    "2709": {
      "op": "PUSH2",
      "value": "0xA9D"
    },
    "2712": {
      "op": "JUMPI"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2715": {
      "op": "DUP1"
    },
    "2716": {
      "op": "REVERT"
    },
    "2717": {
      "op": "JUMPDEST"
    },
    "2718": {
      "op": "DUP6"
    },
    "2719": {
      "op": "CALLDATALOAD"
    },
    "2720": {
      "op": "SWAP5"
    },
    "2721": {
      "op": "POP"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2724": {
      "op": "DUP7"
    },
    "2725": {
      "op": "ADD"
    },
    "2726": {
      "op": "CALLDATALOAD"
    },
    "2727": {
      "op": "SWAP4"
    },
    "2728": {
      "op": "POP"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2731": {
      "op": "DUP7"
    },
    "2732": {
      "op": "ADD"
    },
    "2733": {
      "op": "CALLDATALOAD"
    },
    "2734": {
      "op": "SWAP3"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2738": {
      "op": "DUP7"
    },
    "2739": {
      "op": "ADD"
    },
    "2740": {
      "op": "CALLDATALOAD"
    },
    "2741": {
      "op": "SWAP2"
    },
    "2742": {
      "op": "POP"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2745": {
      "op": "DUP7"
    },
    "2746": {
      "op": "ADD"
    },
    "2747": {
      "op": "CALLDATALOAD"
    },
    "2748": {
      "op": "PUSH2",
      "value": "0xAC4"
    },
    "2751": {
      "op": "DUP2"
    },
    "2752": {
      "op": "PUSH2",
      "value": "0xA2E"
    },
    "2755": {
      "jump": "i",
      "op": "JUMP"
    },
    "2756": {
      "op": "JUMPDEST"
    },
    "2757": {
      "op": "DUP1"
    },
    "2758": {
      "op": "SWAP2"
    },
    "2759": {
      "op": "POP"
    },
    "2760": {
      "op": "POP"
    },
    "2761": {
      "op": "SWAP3"
    },
    "2762": {
      "op": "SWAP6"
    },
    "2763": {
      "op": "POP"
    },
    "2764": {
      "op": "SWAP3"
    },
    "2765": {
      "op": "SWAP6"
    },
    "2766": {
      "op": "SWAP1"
    },
    "2767": {
      "op": "SWAP4"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "jump": "o",
      "op": "JUMP"
    },
    "2770": {
      "op": "JUMPDEST"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2773": {
      "op": "DUP1"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2776": {
      "op": "DUP1"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2779": {
      "op": "DUP6"
    },
    "2780": {
      "op": "DUP8"
    },
    "2781": {
      "op": "SUB"
    },
    "2782": {
      "op": "SLT"
    },
    "2783": {
      "op": "ISZERO"
    },
    "2784": {
      "op": "PUSH2",
      "value": "0xAE8"
    },
    "2787": {
      "op": "JUMPI"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2790": {
      "op": "DUP1"
    },
    "2791": {
      "op": "REVERT"
    },
    "2792": {
      "op": "JUMPDEST"
    },
    "2793": {
      "op": "POP"
    },
    "2794": {
      "op": "POP"
    },
    "2795": {
      "op": "DUP3"
    },
    "2796": {
      "op": "CALLDATALOAD"
    },
    "2797": {
      "op": "SWAP5"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2800": {
      "op": "DUP5"
    },
    "2801": {
      "op": "ADD"
    },
    "2802": {
      "op": "CALLDATALOAD"
    },
    "2803": {
      "op": "SWAP5"
    },
    "2804": {
      "op": "POP"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2807": {
      "op": "DUP5"
    },
    "2808": {
      "op": "ADD"
    },
    "2809": {
      "op": "CALLDATALOAD"
    },
    "2810": {
      "op": "SWAP4"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2813": {
      "op": "ADD"
    },
    "2814": {
      "op": "CALLDATALOAD"
    },
    "2815": {
      "op": "SWAP3"
    },
    "2816": {
      "op": "POP"
    },
    "2817": {
      "op": "SWAP1"
    },
    "2818": {
      "op": "POP"
    },
    "2819": {
      "jump": "o",
      "op": "JUMP"
    },
    "2820": {
      "op": "JUMPDEST"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2825": {
      "op": "DUP3"
    },
    "2826": {
      "op": "DUP5"
    },
    "2827": {
      "op": "SUB"
    },
    "2828": {
      "op": "SLT"
    },
    "2829": {
      "op": "ISZERO"
    },
    "2830": {
      "op": "PUSH2",
      "value": "0xB16"
    },
    "2833": {
      "op": "JUMPI"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2836": {
      "op": "DUP1"
    },
    "2837": {
      "op": "REVERT"
    },
    "2838": {
      "op": "JUMPDEST"
    },
    "2839": {
      "op": "DUP2"
    },
    "2840": {
      "op": "CALLDATALOAD"
    },
    "2841": {
      "op": "PUSH2",
      "value": "0xB21"
    },
    "2844": {
      "op": "DUP2"
    },
    "2845": {
      "op": "PUSH2",
      "value": "0xA2E"
    },
    "2848": {
      "jump": "i",
      "op": "JUMP"
    },
    "2849": {
      "op": "JUMPDEST"
    },
    "2850": {
      "op": "SWAP4"
    },
    "2851": {
      "op": "SWAP3"
    },
    "2852": {
      "op": "POP"
    },
    "2853": {
      "op": "POP"
    },
    "2854": {
      "op": "POP"
    },
    "2855": {
      "jump": "o",
      "op": "JUMP"
    },
    "2856": {
      "op": "JUMPDEST"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2859": {
      "op": "DUP1"
    },
    "2860": {
      "op": "DUP3"
    },
    "2861": {
      "op": "MSTORE"
    },
    "2862": {
      "op": "DUP2"
    },
    "2863": {
      "op": "DUP2"
    },
    "2864": {
      "op": "ADD"
    },
    "2865": {
      "op": "MSTORE"
    },
    "2866": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2901": {
      "op": "DUP3"
    },
    "2902": {
      "op": "ADD"
    },
    "2903": {
      "op": "MSTORE"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2906": {
      "op": "ADD"
    },
    "2907": {
      "op": "SWAP1"
    },
    "2908": {
      "jump": "o",
      "op": "JUMP"
    },
    "2909": {
      "op": "JUMPDEST"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2912": {
      "op": "DUP1"
    },
    "2913": {
      "op": "DUP3"
    },
    "2914": {
      "op": "MSTORE"
    },
    "2915": {
      "op": "DUP2"
    },
    "2916": {
      "op": "DUP2"
    },
    "2917": {
      "op": "ADD"
    },
    "2918": {
      "op": "MSTORE"
    },
    "2919": {
      "op": "PUSH32",
      "value": "0x585265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C6572"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2954": {
      "op": "DUP3"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "op": "MSTORE"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "SWAP1"
    },
    "2961": {
      "jump": "o",
      "op": "JUMP"
    },
    "2962": {
      "op": "JUMPDEST"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2967": {
      "op": "DUP3"
    },
    "2968": {
      "op": "DUP5"
    },
    "2969": {
      "op": "SUB"
    },
    "2970": {
      "op": "SLT"
    },
    "2971": {
      "op": "ISZERO"
    },
    "2972": {
      "op": "PUSH2",
      "value": "0xBA4"
    },
    "2975": {
      "op": "JUMPI"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2978": {
      "op": "DUP1"
    },
    "2979": {
      "op": "REVERT"
    },
    "2980": {
      "op": "JUMPDEST"
    },
    "2981": {
      "op": "DUP2"
    },
    "2982": {
      "op": "MLOAD"
    },
    "2983": {
      "op": "PUSH2",
      "value": "0xB21"
    },
    "2986": {
      "op": "DUP2"
    },
    "2987": {
      "op": "PUSH2",
      "value": "0xA2E"
    },
    "2990": {
      "jump": "i",
      "op": "JUMP"
    },
    "2991": {
      "op": "JUMPDEST"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2994": {
      "op": "DUP1"
    },
    "2995": {
      "op": "DUP3"
    },
    "2996": {
      "op": "MSTORE"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2999": {
      "op": "SWAP1"
    },
    "3000": {
      "op": "DUP3"
    },
    "3001": {
      "op": "ADD"
    },
    "3002": {
      "op": "MSTORE"
    },
    "3003": {
      "op": "PUSH32",
      "value": "0x4E6F20726567697374727920617661696C61626C6520666F7220736F75726365"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3038": {
      "op": "DUP3"
    },
    "3039": {
      "op": "ADD"
    },
    "3040": {
      "op": "MSTORE"
    },
    "3041": {
      "op": "PUSH6",
      "value": "0x1031B430B4B7"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "3050": {
      "op": "SHL"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3053": {
      "op": "DUP3"
    },
    "3054": {
      "op": "ADD"
    },
    "3055": {
      "op": "MSTORE"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3058": {
      "op": "ADD"
    },
    "3059": {
      "op": "SWAP1"
    },
    "3060": {
      "jump": "o",
      "op": "JUMP"
    },
    "3061": {
      "op": "JUMPDEST"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3064": {
      "op": "DUP1"
    },
    "3065": {
      "op": "DUP3"
    },
    "3066": {
      "op": "MSTORE"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3069": {
      "op": "SWAP1"
    },
    "3070": {
      "op": "DUP3"
    },
    "3071": {
      "op": "ADD"
    },
    "3072": {
      "op": "MSTORE"
    },
    "3073": {
      "op": "PUSH32",
      "value": "0x4E6F206D657373656E67657220617661696C61626C6520666F7220736F757263"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3108": {
      "op": "DUP3"
    },
    "3109": {
      "op": "ADD"
    },
    "3110": {
      "op": "MSTORE"
    },
    "3111": {
      "op": "PUSH7",
      "value": "0x329031B430B4B7"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3121": {
      "op": "SHL"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3124": {
      "op": "DUP3"
    },
    "3125": {
      "op": "ADD"
    },
    "3126": {
      "op": "MSTORE"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3129": {
      "op": "ADD"
    },
    "3130": {
      "op": "SWAP1"
    },
    "3131": {
      "jump": "o",
      "op": "JUMP"
    },
    "3132": {
      "op": "JUMPDEST"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3135": {
      "op": "DUP1"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3138": {
      "op": "SHL"
    },
    "3139": {
      "op": "SUB"
    },
    "3140": {
      "op": "DUP5"
    },
    "3141": {
      "op": "AND"
    },
    "3142": {
      "op": "DUP2"
    },
    "3143": {
      "op": "MSTORE"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3150": {
      "op": "DUP2"
    },
    "3151": {
      "op": "DUP5"
    },
    "3152": {
      "op": "ADD"
    },
    "3153": {
      "op": "MSTORE"
    },
    "3154": {
      "op": "DUP5"
    },
    "3155": {
      "op": "MLOAD"
    },
    "3156": {
      "op": "DUP1"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3159": {
      "op": "DUP6"
    },
    "3160": {
      "op": "ADD"
    },
    "3161": {
      "op": "MSTORE"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3164": {
      "op": "JUMPDEST"
    },
    "3165": {
      "op": "DUP2"
    },
    "3166": {
      "op": "DUP2"
    },
    "3167": {
      "op": "LT"
    },
    "3168": {
      "op": "ISZERO"
    },
    "3169": {
      "op": "PUSH2",
      "value": "0xC78"
    },
    "3172": {
      "op": "JUMPI"
    },
    "3173": {
      "op": "DUP7"
    },
    "3174": {
      "op": "DUP2"
    },
    "3175": {
      "op": "ADD"
    },
    "3176": {
      "op": "DUP4"
    },
    "3177": {
      "op": "ADD"
    },
    "3178": {
      "op": "MLOAD"
    },
    "3179": {
      "op": "DUP6"
    },
    "3180": {
      "op": "DUP3"
    },
    "3181": {
      "op": "ADD"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "op": "MSTORE"
    },
    "3186": {
      "op": "DUP3"
    },
    "3187": {
      "op": "ADD"
    },
    "3188": {
      "op": "PUSH2",
      "value": "0xC5C"
    },
    "3191": {
      "op": "JUMP"
    },
    "3192": {
      "op": "JUMPDEST"
    },
    "3193": {
      "op": "DUP2"
    },
    "3194": {
      "op": "DUP2"
    },
    "3195": {
      "op": "GT"
    },
    "3196": {
      "op": "ISZERO"
    },
    "3197": {
      "op": "PUSH2",
      "value": "0xC8A"
    },
    "3200": {
      "op": "JUMPI"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3205": {
      "op": "DUP4"
    },
    "3206": {
      "op": "DUP8"
    },
    "3207": {
      "op": "ADD"
    },
    "3208": {
      "op": "ADD"
    },
    "3209": {
      "op": "MSTORE"
    },
    "3210": {
      "op": "JUMPDEST"
    },
    "3211": {
      "op": "POP"
    },
    "3212": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3217": {
      "op": "SWAP5"
    },
    "3218": {
      "op": "SWAP1"
    },
    "3219": {
      "op": "SWAP5"
    },
    "3220": {
      "op": "AND"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3223": {
      "op": "DUP5"
    },
    "3224": {
      "op": "ADD"
    },
    "3225": {
      "op": "MSTORE"
    },
    "3226": {
      "op": "POP"
    },
    "3227": {
      "op": "POP"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3230": {
      "op": "SWAP2"
    },
    "3231": {
      "op": "SWAP1"
    },
    "3232": {
      "op": "SWAP2"
    },
    "3233": {
      "op": "ADD"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3236": {
      "op": "NOT"
    },
    "3237": {
      "op": "AND"
    },
    "3238": {
      "op": "ADD"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3241": {
      "op": "ADD"
    },
    "3242": {
      "op": "SWAP3"
    },
    "3243": {
      "op": "SWAP2"
    },
    "3244": {
      "op": "POP"
    },
    "3245": {
      "op": "POP"
    },
    "3246": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "22ebb425afd7d1a62b2729a86f5d62bc09bde158",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol\";\nimport \"../interfaces/IMessenger.sol\";\nimport \"./ResolutionRegistry.sol\";\nimport \"./CrossDomainRestrictedCalls.sol\";\n\ncontract Resolver is Ownable, CrossDomainRestrictedCalls {\n    struct ResolutionInfos {\n        address resolutionRegistry;\n        address messenger;\n    }\n\n    event Resolution(\n        uint256 sourceChainId,\n        uint256 fillChainId,\n        bytes32 requestHash,\n        address filler,\n        bytes32 fillId\n    );\n\n    mapping(uint256 => ResolutionInfos) public resolutionInfos;\n\n    function resolve(\n        bytes32 requestHash,\n        bytes32 fillId,\n        uint256 fillChainId,\n        uint256 sourceChainId,\n        address filler\n    ) external restricted(fillChainId, msg.sender) {\n        ResolutionInfos storage info = resolutionInfos[sourceChainId];\n        require(\n            info.resolutionRegistry != address(0),\n            \"No registry available for source chain\"\n        );\n        require(\n            info.messenger != address(0),\n            \"No messenger available for source chain\"\n        );\n\n        IMessenger messenger = IMessenger(info.messenger);\n        messenger.sendMessage(\n            info.resolutionRegistry,\n            abi.encodeCall(\n                ResolutionRegistry.resolveRequest,\n                (requestHash, fillId, block.chainid, filler)\n            ),\n            1_000_000\n        );\n\n        emit Resolution(\n            sourceChainId,\n            fillChainId,\n            requestHash,\n            filler,\n            fillId\n        );\n    }\n\n    function resolveNonFill(\n        bytes32 requestHash,\n        bytes32 fillId,\n        uint256 fillChainId,\n        uint256 sourceChainId\n    ) external restricted(fillChainId, msg.sender) {\n        ResolutionInfos storage info = resolutionInfos[sourceChainId];\n        require(\n            info.resolutionRegistry != address(0),\n            \"No registry available for source chain\"\n        );\n        require(\n            info.messenger != address(0),\n            \"No messenger available for source chain\"\n        );\n\n        IMessenger messenger = IMessenger(info.messenger);\n        messenger.sendMessage(\n            info.resolutionRegistry,\n            abi.encodeCall(\n                ResolutionRegistry.invalidateFillHash,\n                (requestHash, fillId, block.chainid)\n            ),\n            1_000_000\n        );\n\n        emit Resolution(\n            sourceChainId,\n            fillChainId,\n            requestHash,\n            address(0),\n            fillId\n        );\n    }\n\n    function addRegistry(\n        uint256 chainId,\n        address resolutionRegistry,\n        address messenger\n    ) external onlyOwner {\n        resolutionInfos[chainId] = ResolutionInfos(\n            resolutionRegistry,\n            messenger\n        );\n    }\n}\n",
  "sourceMap": "257:2664:11:-:0;;;;;;;;;;;;-1:-1:-1;921:32:0;719:10:4;921:18:0;:32::i;:::-;257:2664:11;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;257:2664:11:-;;;;;;;",
  "sourcePath": "contracts/contracts/Resolver.sol",
  "type": "contract"
}