{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l1Resolver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_proofSubmitter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "LPAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "LPRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RequestFilled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newLP",
          "type": "address"
        }
      ],
      "name": "addAllowedLP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedLPs",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetReceiverAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "fillRequest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "fills",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1Resolver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proofSubmitter",
      "outputs": [
        {
          "internalType": "contract IProofSubmitter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldLP",
          "type": "address"
        }
      ],
      "name": "removeAllowedLP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "12": "contracts/contracts/RaisyncUtils.sol",
    "2": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "20": "contracts/interfaces/IProofSubmitter.sol",
    "4": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "5": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "6": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "9": "contracts/contracts/FillManager.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/FillManager.sol",
    "exportedSymbols": {
      "Address": [
        3424
      ],
      "Context": [
        3129
      ],
      "FillManager": [
        276
      ],
      "IERC20": [
        2191
      ],
      "IProofSubmitter": [
        2431
      ],
      "Ownable": [
        2074
      ],
      "RaisyncUtils": [
        475
      ],
      "SafeERC20": [
        2415
      ]
    },
    "id": 277,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 79,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:9"
      },
      {
        "absolutePath": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "id": 80,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 277,
        "sourceUnit": 2192,
        "src": "58:84:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 81,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 277,
        "sourceUnit": 2416,
        "src": "143:93:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "id": 82,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 277,
        "sourceUnit": 2075,
        "src": "237:80:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IProofSubmitter.sol",
        "file": "../interfaces/IProofSubmitter.sol",
        "id": 83,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 277,
        "sourceUnit": 2432,
        "src": "318:43:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/RaisyncUtils.sol",
        "file": "./RaisyncUtils.sol",
        "id": 84,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 277,
        "sourceUnit": 476,
        "src": "362:28:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 85,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2074,
              "src": "417:7:9"
            },
            "id": 86,
            "nodeType": "InheritanceSpecifier",
            "src": "417:7:9"
          }
        ],
        "canonicalName": "FillManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 276,
        "linearizedBaseContracts": [
          276,
          2074,
          3129
        ],
        "name": "FillManager",
        "nameLocation": "402:11:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 90,
            "libraryName": {
              "id": 87,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2415,
              "src": "437:9:9"
            },
            "nodeType": "UsingForDirective",
            "src": "431:27:9",
            "typeName": {
              "id": 89,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2191,
                "src": "451:6:9"
              },
              "referencedDeclaration": 2191,
              "src": "451:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2191",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "anonymous": false,
            "id": 104,
            "name": "RequestFilled",
            "nameLocation": "470:13:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "509:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "493:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "536:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "528:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "568:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "552:29:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "607:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "591:34:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "643:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "635:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "667:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "659:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "483:196:9"
            },
            "src": "464:216:9"
          },
          {
            "anonymous": false,
            "id": 108,
            "name": "LPAdded",
            "nameLocation": "692:7:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lp",
                  "nameLocation": "717:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "709:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "699:26:9"
            },
            "src": "686:40:9"
          },
          {
            "anonymous": false,
            "id": 112,
            "name": "LPRemoved",
            "nameLocation": "738:9:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lp",
                  "nameLocation": "765:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "757:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "747:26:9"
            },
            "src": "732:42:9"
          },
          {
            "constant": false,
            "functionSelector": "935beb1a",
            "id": 114,
            "mutability": "mutable",
            "name": "l1Resolver",
            "nameLocation": "795:10:9",
            "nodeType": "VariableDeclaration",
            "scope": 276,
            "src": "780:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 113,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "780:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "58753357",
            "id": 117,
            "mutability": "mutable",
            "name": "proofSubmitter",
            "nameLocation": "834:14:9",
            "nodeType": "VariableDeclaration",
            "scope": 276,
            "src": "811:37:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IProofSubmitter_$2431",
              "typeString": "contract IProofSubmitter"
            },
            "typeName": {
              "id": 116,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 115,
                "name": "IProofSubmitter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2431,
                "src": "811:15:9"
              },
              "referencedDeclaration": 2431,
              "src": "811:15:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IProofSubmitter_$2431",
                "typeString": "contract IProofSubmitter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20158c44",
            "id": 121,
            "mutability": "mutable",
            "name": "fills",
            "nameLocation": "887:5:9",
            "nodeType": "VariableDeclaration",
            "scope": 276,
            "src": "855:37:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 120,
              "keyType": {
                "id": 118,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "863:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "855:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 119,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "874:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aeea7b",
            "id": 125,
            "mutability": "mutable",
            "name": "allowedLPs",
            "nameLocation": "930:10:9",
            "nodeType": "VariableDeclaration",
            "scope": 276,
            "src": "898:42:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 124,
              "keyType": {
                "id": 122,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "906:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "898:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 123,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "917:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "1009:100:9",
              "statements": [
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "l1Resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "1019:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 133,
                      "name": "_l1Resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "1032:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1019:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:24:9"
                },
                {
                  "expression": {
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 136,
                      "name": "proofSubmitter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "1053:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IProofSubmitter_$2431",
                        "typeString": "contract IProofSubmitter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 138,
                          "name": "_proofSubmitter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 129,
                          "src": "1086:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 137,
                        "name": "IProofSubmitter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2431,
                        "src": "1070:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IProofSubmitter_$2431_$",
                          "typeString": "type(contract IProofSubmitter)"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1070:32:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IProofSubmitter_$2431",
                        "typeString": "contract IProofSubmitter"
                      }
                    },
                    "src": "1053:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IProofSubmitter_$2431",
                      "typeString": "contract IProofSubmitter"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:49:9"
                }
              ]
            },
            "id": 143,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "_l1Resolver",
                  "nameLocation": "967:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "959:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_proofSubmitter",
                  "nameLocation": "988:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "980:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "958:46:9"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:0:9"
            },
            "scope": 276,
            "src": "947:162:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "1338:806:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 159,
                          "name": "allowedLPs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "1356:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 162,
                        "indexExpression": {
                          "expression": {
                            "id": 160,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1367:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1367:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1356:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206e6f742077686974656c6973746564",
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1380:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37",
                          "typeString": "literal_string \"Sender not whitelisted\""
                        },
                        "value": "Sender not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37",
                          "typeString": "literal_string \"Sender not whitelisted\""
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1348:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1348:57:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "1348:57:9"
                },
                {
                  "assignments": [
                    167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 167,
                      "mutability": "mutable",
                      "name": "requestHash",
                      "nameLocation": "1423:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "1415:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 166,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1415:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 170,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "1485:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 171,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "1496:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 172,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1511:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainid",
                        "nodeType": "MemberAccess",
                        "src": "1511:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 174,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "1526:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 175,
                        "name": "targetReceiverAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "1546:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 176,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1569:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 168,
                        "name": "RaisyncUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "1437:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RaisyncUtils_$475_$",
                          "typeString": "type(library RaisyncUtils)"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createRequestHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 424,
                      "src": "1437:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256,address,address,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:152:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1415:174:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1608:19:9",
                        "subExpression": {
                          "baseExpression": {
                            "id": 180,
                            "name": "fills",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1609:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 182,
                          "indexExpression": {
                            "id": 181,
                            "name": "requestHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "1615:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1609:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c72656164792066696c6c6564",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1629:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f1fdd45b3b51c31df82ed6b4ad08141730b73e5c15da80ef36a62b2e6a9c27f",
                          "typeString": "literal_string \"Already filled\""
                        },
                        "value": "Already filled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f1fdd45b3b51c31df82ed6b4ad08141730b73e5c15da80ef36a62b2e6a9c27f",
                          "typeString": "literal_string \"Already filled\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1600:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1600:46:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:46:9"
                },
                {
                  "expression": {
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 187,
                        "name": "fills",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1656:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 189,
                      "indexExpression": {
                        "id": 188,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "1662:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1656:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1677:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1656:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "1656:25:9"
                },
                {
                  "assignments": [
                    195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 195,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "1699:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "1692:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2191",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 194,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 193,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2191,
                          "src": "1692:6:9"
                        },
                        "referencedDeclaration": 2191,
                        "src": "1692:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2191",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 199,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 197,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "1714:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 196,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2191,
                      "src": "1707:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2191_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:26:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2191",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1692:41:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 203,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1766:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1766:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 205,
                        "name": "targetReceiverAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "1778:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 206,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1801:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 200,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "1743:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2191",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2248,
                      "src": "1743:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2191_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2191_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1743:65:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "1743:65:9"
                },
                {
                  "assignments": [
                    210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "fillId",
                      "nameLocation": "1827:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "1819:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 209,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1819:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 219,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 213,
                        "name": "l1Resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "1863:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 214,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "1875:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 215,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "1888:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1903:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1903:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 211,
                        "name": "proofSubmitter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1836:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IProofSubmitter_$2431",
                          "typeString": "contract IProofSubmitter"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2430,
                      "src": "1836:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes32,uint256,address) external returns (bytes32)"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:78:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1819:95:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 221,
                          "name": "fillId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "1945:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1955:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1945:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5375626d697474696e672070726f6f662064617461206661696c6564",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1970:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa10e0d7830ed97727b31f476e68911fae4e78de943bf1d83c23a658ad591999",
                          "typeString": "literal_string \"Submitting proof data failed\""
                        },
                        "value": "Submitting proof data failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa10e0d7830ed97727b31f476e68911fae4e78de943bf1d83c23a658ad591999",
                          "typeString": "literal_string \"Submitting proof data failed\""
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1924:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1924:86:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "1924:86:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 228,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "2040:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 229,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "2051:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 230,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "2059:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 231,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "2074:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 232,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2094:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2094:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 234,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2106:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 227,
                      "name": "RequestFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2026:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,bytes32,uint256,address,address,uint256)"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2026:87:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 236,
                  "nodeType": "EmitStatement",
                  "src": "2021:92:9"
                },
                {
                  "expression": {
                    "id": 237,
                    "name": "fillId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 210,
                    "src": "2131:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 157,
                  "id": 238,
                  "nodeType": "Return",
                  "src": "2124:13:9"
                }
              ]
            },
            "functionSelector": "efd39926",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fillRequest",
            "nameLocation": "1124:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1153:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "1145:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "1180:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "1172:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1172:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "1211:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "1203:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "targetReceiverAddress",
                  "nameLocation": "1247:21:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "1239:29:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1286:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "1278:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1135:163:9"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "1325:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1324:9:9"
            },
            "scope": 276,
            "src": "1115:1029:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "2204:71:9",
              "statements": [
                {
                  "expression": {
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 247,
                        "name": "allowedLPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "2214:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 249,
                      "indexExpression": {
                        "id": 248,
                        "name": "newLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "2225:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2214:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2234:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2214:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:24:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 254,
                        "name": "newLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "2262:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 253,
                      "name": "LPAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "2254:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2254:14:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "EmitStatement",
                  "src": "2249:19:9"
                }
              ]
            },
            "functionSelector": "1cb2eaf9",
            "id": 258,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 245,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 244,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2016,
                  "src": "2194:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2194:9:9"
              }
            ],
            "name": "addAllowedLP",
            "nameLocation": "2159:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "newLP",
                  "nameLocation": "2180:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2172:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2172:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2171:15:9"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2204:0:9"
            },
            "scope": 276,
            "src": "2150:125:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "2338:73:9",
              "statements": [
                {
                  "expression": {
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2348:24:9",
                    "subExpression": {
                      "baseExpression": {
                        "id": 265,
                        "name": "allowedLPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "2355:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 267,
                      "indexExpression": {
                        "id": 266,
                        "name": "oldLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "2366:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2355:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "2348:24:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 271,
                        "name": "oldLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "2398:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 270,
                      "name": "LPRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "2388:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 273,
                  "nodeType": "EmitStatement",
                  "src": "2383:21:9"
                }
              ]
            },
            "functionSelector": "afc4827b",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 262,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2016,
                  "src": "2328:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2328:9:9"
              }
            ],
            "name": "removeAllowedLP",
            "nameLocation": "2290:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "oldLP",
                  "nameLocation": "2314:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "2306:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2306:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2305:15:9"
            },
            "returnParameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2338:0:9"
            },
            "scope": 276,
            "src": "2281:130:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 277,
        "src": "393:2020:9",
        "usedErrors": []
      }
    ],
    "src": "32:2382:9"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610bda380380610bda83398101604081905261002f916100d5565b61003833610069565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055610108565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d057600080fd5b919050565b600080604083850312156100e857600080fd5b6100f1836100b9565b91506100ff602084016100b9565b90509250929050565b610ac3806101176000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610146578063935beb1a14610157578063afc4827b1461016a578063efd399261461017d578063f2fde38b1461019e57600080fd5b80631cb2eaf9146100a357806320158c44146100b857806335aeea7b146100f05780635875335714610113578063715018a61461013e575b600080fd5b6100b66100b1366004610920565b6101b1565b005b6100db6100c636600461093b565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100db6100fe366004610920565b60046020526000908152604090205460ff1681565b600254610126906001600160a01b031681565b6040516001600160a01b0390911681526020016100e7565b6100b661023f565b6000546001600160a01b0316610126565b600154610126906001600160a01b031681565b6100b6610178366004610920565b610275565b61019061018b366004610954565b6102f0565b6040519081526020016100e7565b6100b66101ac366004610920565b61055f565b6000546001600160a01b031633146101e45760405162461bcd60e51b81526004016101db906109a2565b60405180910390fd5b6001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527fc852021e30b95510f55086d8cc9bc5d15d20f2cb411766a7da04804f4ad2fba291015b60405180910390a150565b6000546001600160a01b031633146102695760405162461bcd60e51b81526004016101db906109a2565b61027360006105fa565b565b6000546001600160a01b0316331461029f5760405162461bcd60e51b81526004016101db906109a2565b6001600160a01b038116600081815260046020908152604091829020805460ff1916905590519182527f1abfc08c9d8e95dc2f77c443843422fe9ef89aafb40a5814f65e9c4f557f1faa9101610234565b3360009081526004602052604081205460ff166103485760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b60448201526064016101db565b604080516020808201899052818301889052466060808401919091526bffffffffffffffffffffffff1988821b811660808501529087901b16609483015260a88083018690528351808403909101815260c8909201909252805191012060009060008181526003602052604090205490915060ff16156103fb5760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e48199a5b1b195960921b60448201526064016101db565b6000818152600360205260409020805460ff191660011790558461042a6001600160a01b03821633878761064a565b600254600154604051637d809ceb60e11b81526001600160a01b03918216600482015260248101859052604481018a9052336064820152600092919091169063fb0139d6906084016020604051808303816000875af1158015610491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b591906109d7565b9050806105045760405162461bcd60e51b815260206004820152601c60248201527f5375626d697474696e672070726f6f662064617461206661696c65640000000060448201526064016101db565b604080518281523360208201529081018690526001600160a01b0388169089908b907f036973204944f64cc25b32e5318bd0611f917fedcd9cb77a11651723db2c63239060600160405180910390a498975050505050505050565b6000546001600160a01b031633146105895760405162461bcd60e51b81526004016101db906109a2565b6001600160a01b0381166105ee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101db565b6105f7816105fa565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526106a49085906106aa565b50505050565b60006106ff826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107819092919063ffffffff16565b80519091501561077c578080602001905181019061071d91906109f0565b61077c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101db565b505050565b6060610790848460008561079a565b90505b9392505050565b6060824710156107fb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101db565b6001600160a01b0385163b6108525760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101db565b600080866001600160a01b0316858760405161086e9190610a3e565b60006040518083038185875af1925050503d80600081146108ab576040519150601f19603f3d011682016040523d82523d6000602084013e6108b0565b606091505b50915091506108c08282866108cb565b979650505050505050565b606083156108da575081610793565b8251156108ea5782518084602001fd5b8160405162461bcd60e51b81526004016101db9190610a5a565b80356001600160a01b038116811461091b57600080fd5b919050565b60006020828403121561093257600080fd5b61079382610904565b60006020828403121561094d57600080fd5b5035919050565b600080600080600060a0868803121561096c57600080fd5b853594506020860135935061098360408701610904565b925061099160608701610904565b949793965091946080013592915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156109e957600080fd5b5051919050565b600060208284031215610a0257600080fd5b8151801515811461079357600080fd5b60005b83811015610a2d578181015183820152602001610a15565b838111156106a45750506000910152565b60008251610a50818460208701610a12565b9190910192915050565b6020815260008251806020840152610a79816040850160208701610a12565b601f01601f1916919091016040019291505056fea26469706673582212201609a16095f26a917bdff41855f3ffa6f848c34a51d2803f732dc9cb54f897b864736f6c634300080c0033",
  "bytecodeSha1": "7547ff5a40230a6dba344f7f933ccc82a87de329",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "FillManager",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "34": [
            2006,
            2028,
            true
          ]
        }
      },
      "12": {},
      "2": {},
      "20": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "35": [
            3735,
            3756,
            false
          ],
          "36": [
            3819,
            3849,
            true
          ]
        }
      },
      "5": {
        "Address.functionCallWithValue": {
          "31": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "32": [
            7735,
            7742,
            false
          ],
          "33": [
            7876,
            7897,
            false
          ]
        }
      },
      "6": {},
      "9": {
        "FillManager.fillRequest": {
          "28": [
            1356,
            1378,
            true
          ],
          "29": [
            1608,
            1627,
            true
          ],
          "30": [
            1945,
            1956,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "17": [
            2378,
            2395
          ],
          "18": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "4": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "15": [
            1998,
            2071
          ],
          "16": [
            2081,
            2109
          ]
        }
      },
      "12": {
        "RaisyncUtils.createRequestHash": {
          "8": [
            349,
            527
          ]
        }
      },
      "2": {},
      "20": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "20": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "19": [
            1050,
            1146
          ]
        }
      },
      "5": {
        "Address.functionCall": {
          "21": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "22": [
            5137,
            5218
          ],
          "24": [
            5228,
            5288
          ],
          "25": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "23": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "26": [
            7758,
            7775
          ],
          "27": [
            8202,
            8222
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "1": [
            712,
            729
          ]
        }
      },
      "9": {
        "FillManager.addAllowedLP": {
          "2": [
            2214,
            2238
          ],
          "3": [
            2249,
            2268
          ]
        },
        "FillManager.fillRequest": {
          "7": [
            1348,
            1405
          ],
          "9": [
            1600,
            1646
          ],
          "10": [
            1656,
            1681
          ],
          "11": [
            1743,
            1808
          ],
          "12": [
            1924,
            2010
          ],
          "13": [
            2021,
            2113
          ],
          "14": [
            2124,
            2137
          ]
        },
        "FillManager.removeAllowedLP": {
          "5": [
            2348,
            2372
          ],
          "6": [
            2383,
            2404
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "IProofSubmitter",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "RaisyncUtils",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610146578063935beb1a14610157578063afc4827b1461016a578063efd399261461017d578063f2fde38b1461019e57600080fd5b80631cb2eaf9146100a357806320158c44146100b857806335aeea7b146100f05780635875335714610113578063715018a61461013e575b600080fd5b6100b66100b1366004610920565b6101b1565b005b6100db6100c636600461093b565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100db6100fe366004610920565b60046020526000908152604090205460ff1681565b600254610126906001600160a01b031681565b6040516001600160a01b0390911681526020016100e7565b6100b661023f565b6000546001600160a01b0316610126565b600154610126906001600160a01b031681565b6100b6610178366004610920565b610275565b61019061018b366004610954565b6102f0565b6040519081526020016100e7565b6100b66101ac366004610920565b61055f565b6000546001600160a01b031633146101e45760405162461bcd60e51b81526004016101db906109a2565b60405180910390fd5b6001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527fc852021e30b95510f55086d8cc9bc5d15d20f2cb411766a7da04804f4ad2fba291015b60405180910390a150565b6000546001600160a01b031633146102695760405162461bcd60e51b81526004016101db906109a2565b61027360006105fa565b565b6000546001600160a01b0316331461029f5760405162461bcd60e51b81526004016101db906109a2565b6001600160a01b038116600081815260046020908152604091829020805460ff1916905590519182527f1abfc08c9d8e95dc2f77c443843422fe9ef89aafb40a5814f65e9c4f557f1faa9101610234565b3360009081526004602052604081205460ff166103485760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b60448201526064016101db565b604080516020808201899052818301889052466060808401919091526bffffffffffffffffffffffff1988821b811660808501529087901b16609483015260a88083018690528351808403909101815260c8909201909252805191012060009060008181526003602052604090205490915060ff16156103fb5760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e48199a5b1b195960921b60448201526064016101db565b6000818152600360205260409020805460ff191660011790558461042a6001600160a01b03821633878761064a565b600254600154604051637d809ceb60e11b81526001600160a01b03918216600482015260248101859052604481018a9052336064820152600092919091169063fb0139d6906084016020604051808303816000875af1158015610491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b591906109d7565b9050806105045760405162461bcd60e51b815260206004820152601c60248201527f5375626d697474696e672070726f6f662064617461206661696c65640000000060448201526064016101db565b604080518281523360208201529081018690526001600160a01b0388169089908b907f036973204944f64cc25b32e5318bd0611f917fedcd9cb77a11651723db2c63239060600160405180910390a498975050505050505050565b6000546001600160a01b031633146105895760405162461bcd60e51b81526004016101db906109a2565b6001600160a01b0381166105ee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101db565b6105f7816105fa565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526106a49085906106aa565b50505050565b60006106ff826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107819092919063ffffffff16565b80519091501561077c578080602001905181019061071d91906109f0565b61077c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101db565b505050565b6060610790848460008561079a565b90505b9392505050565b6060824710156107fb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101db565b6001600160a01b0385163b6108525760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101db565b600080866001600160a01b0316858760405161086e9190610a3e565b60006040518083038185875af1925050503d80600081146108ab576040519150601f19603f3d011682016040523d82523d6000602084013e6108b0565b606091505b50915091506108c08282866108cb565b979650505050505050565b606083156108da575081610793565b8251156108ea5782518084602001fd5b8160405162461bcd60e51b81526004016101db9190610a5a565b80356001600160a01b038116811461091b57600080fd5b919050565b60006020828403121561093257600080fd5b61079382610904565b60006020828403121561094d57600080fd5b5035919050565b600080600080600060a0868803121561096c57600080fd5b853594506020860135935061098360408701610904565b925061099160608701610904565b949793965091946080013592915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156109e957600080fd5b5051919050565b600060208284031215610a0257600080fd5b8151801515811461079357600080fd5b60005b83811015610a2d578181015183820152602001610a15565b838111156106a45750506000910152565b60008251610a50818460208701610a12565b9190910192915050565b6020815260008251806020840152610a79816040850160208701610a12565b601f01601f1916919091016040019291505056fea26469706673582212201609a16095f26a917bdff41855f3ffa6f848c34a51d2803f732dc9cb54f897b864736f6c634300080c0033",
  "deployedSourceMap": "393:2020:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2150:125;;;;;;:::i;:::-;;:::i;:::-;;855:37;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;733:14:21;;726:22;708:41;;696:2;681:18;855:37:9;;;;;;;;898:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;811:37;;;;;-1:-1:-1;;;;;811:37:9;;;;;;-1:-1:-1;;;;;948:32:21;;;930:51;;918:2;903:18;811:37:9;760:227:21;1668:101:0;;;:::i;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;780:25:9;;;;;-1:-1:-1;;;;;780:25:9;;;2281:130;;;;;;:::i;:::-;;:::i;1115:1029::-;;;;;;:::i;:::-;;:::i;:::-;;;1817:25:21;;;1805:2;1790:18;1115:1029:9;1671:177:21;1918:198:0;;;;;;:::i;:::-;;:::i;2150:125:9:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2214:17:9;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;;:24;;-1:-1:-1;;2214:24:9::1;2234:4;2214:24;::::0;;2254:14;;930:51:21;;;2254:14:9::1;::::0;903:18:21;2254:14:9::1;;;;;;;;2150:125:::0;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2281:130:9:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2355:17:9;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;;2348:24;;-1:-1:-1;;2348:24:9::1;::::0;;2388:16;;930:51:21;;;2388:16:9::1;::::0;903:18:21;2388:16:9::1;760:227:21::0;1115:1029:9;1367:10;1325:7;1356:22;;;:10;:22;;;;;;;;1348:57;;;;-1:-1:-1;;;1348:57:9;;2416:2:21;1348:57:9;;;2398:21:21;2455:2;2435:18;;;2428:30;-1:-1:-1;;;2474:18:21;;;2467:52;2536:18;;1348:57:9;2214:346:21;1348:57:9;379:138:12;;;;;;;4932:19:21;;;4967:12;;;4960:28;;;1511:13:9;5004:12:21;;;;4997:28;;;;-1:-1:-1;;5109:15:21;;;5105:24;;5091:12;;;5084:46;5165:15;;;;5161:24;5146:13;;;5139:47;5202:13;;;;5195:29;;;379:138:12;;;;;;;;;;5240:13:21;;;;379:138:12;;;356:171;;;;;1415:19:9;;1609:18;;;;:5;:18;;;;;;1415:174;;-1:-1:-1;1609:18:9;;1608:19;1600:46;;;;-1:-1:-1;;;1600:46:9;;2767:2:21;1600:46:9;;;2749:21:21;2806:2;2786:18;;;2779:30;-1:-1:-1;;;2825:18:21;;;2818:44;2879:18;;1600:46:9;2565:338:21;1600:46:9;1656:18;;;;:5;:18;;;;;:25;;-1:-1:-1;;1656:25:9;1677:4;1656:25;;;1714:18;1743:65;-1:-1:-1;;;;;1743:22:9;;1766:10;1778:21;1801:6;1743:22;:65::i;:::-;1836:14;;;1863:10;1836:78;;-1:-1:-1;;;1836:78:9;;-1:-1:-1;;;;;1863:10:9;;;1836:78;;;3177:34:21;3227:18;;;3220:34;;;3270:18;;;3263:34;;;1903:10:9;3313:18:21;;;3306:43;1819:14:9;;1836;;;;;:26;;3111:19:21;;1836:78:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1819:95;-1:-1:-1;1945:11:9;1924:86;;;;-1:-1:-1;;;1924:86:9;;3751:2:21;1924:86:9;;;3733:21:21;3790:2;3770:18;;;3763:30;3829;3809:18;;;3802:58;3877:18;;1924:86:9;3549:352:21;1924:86:9;2026:87;;;4108:25:21;;;2094:10:9;4164:2:21;4149:18;;4142:60;4218:18;;;4211:34;;;-1:-1:-1;;;;;2026:87:9;;;2059:13;;2040:9;;2026:87;;4096:2:21;4081:18;2026:87:9;;;;;;;2131:6;1115:1029;-1:-1:-1;;;;;;;;1115:1029:9:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4458:2:21;1998:73:0::1;::::0;::::1;4440:21:21::0;4497:2;4477:18;;;4470:30;4536:34;4516:18;;;4509:62;-1:-1:-1;;;4587:18:21;;;4580:36;4633:19;;1998:73:0::1;4256:402:21::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;912:241:4:-;1077:68;;;-1:-1:-1;;;;;5522:15:21;;;1077:68:4;;;5504:34:21;5574:15;;5554:18;;;5547:43;5606:18;;;;5599:34;;;1077:68:4;;;;;;;;;;5439:18:21;;;;1077:68:4;;;;;;;;-1:-1:-1;;;;;1077:68:4;-1:-1:-1;;;1077:68:4;;;1050:96;;1070:5;;1050:19;:96::i;:::-;912:241;;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:4;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:4;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:4;;6128:2:21;3811:85:4;;;6110:21:21;6167:2;6147:18;;;6140:30;6206:34;6186:18;;;6179:62;-1:-1:-1;;;6257:18:21;;;6250:40;6307:19;;3811:85:4;5926:406:21;3811:85:4;3277:636;3207:706;;:::o;3861:223:5:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:5;;6539:2:21;5137:81:5;;;6521:21:21;6578:2;6558:18;;;6551:30;6617:34;6597:18;;;6590:62;-1:-1:-1;;;6668:18:21;;;6661:36;6714:19;;5137:81:5;6337:402:21;5137:81:5;-1:-1:-1;;;;;1465:19:5;;;5228:60;;;;-1:-1:-1;;;5228:60:5;;6946:2:21;5228:60:5;;;6928:21:21;6985:2;6965:18;;;6958:30;7024:31;7004:18;;;6997:59;7073:18;;5228:60:5;6744:353:21;5228:60:5;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:5;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:5:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:5;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:5;;;;;;;;:::i;14:173:21:-;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:180::-;442:6;495:2;483:9;474:7;470:23;466:32;463:52;;;511:1;508;501:12;463:52;-1:-1:-1;534:23:21;;383:180;-1:-1:-1;383:180:21:o;1200:466::-;1295:6;1303;1311;1319;1327;1380:3;1368:9;1359:7;1355:23;1351:33;1348:53;;;1397:1;1394;1387:12;1348:53;1433:9;1420:23;1410:33;;1490:2;1479:9;1475:18;1462:32;1452:42;;1513:38;1547:2;1536:9;1532:18;1513:38;:::i;:::-;1503:48;;1570:38;1604:2;1593:9;1589:18;1570:38;:::i;:::-;1200:466;;;;-1:-1:-1;1200:466:21;;1655:3;1640:19;1627:33;;1200:466;-1:-1:-1;;1200:466:21:o;1853:356::-;2055:2;2037:21;;;2074:18;;;2067:30;2133:34;2128:2;2113:18;;2106:62;2200:2;2185:18;;1853:356::o;3360:184::-;3430:6;3483:2;3471:9;3462:7;3458:23;3454:32;3451:52;;;3499:1;3496;3489:12;3451:52;-1:-1:-1;3522:16:21;;3360:184;-1:-1:-1;3360:184:21:o;5644:277::-;5711:6;5764:2;5752:9;5743:7;5739:23;5735:32;5732:52;;;5780:1;5777;5770:12;5732:52;5812:9;5806:16;5865:5;5858:13;5851:21;5844:5;5841:32;5831:60;;5887:1;5884;5877:12;7102:258;7174:1;7184:113;7198:6;7195:1;7192:13;7184:113;;;7274:11;;;7268:18;7255:11;;;7248:39;7220:2;7213:10;7184:113;;;7315:6;7312:1;7309:13;7306:48;;;-1:-1:-1;;7350:1:21;7332:16;;7325:27;7102:258::o;7365:274::-;7494:3;7532:6;7526:13;7548:53;7594:6;7589:3;7582:4;7574:6;7570:17;7548:53;:::i;:::-;7617:16;;;;;7365:274;-1:-1:-1;;7365:274:21:o;7644:383::-;7793:2;7782:9;7775:21;7756:4;7825:6;7819:13;7868:6;7863:2;7852:9;7848:18;7841:34;7884:66;7943:6;7938:2;7927:9;7923:18;7918:2;7910:6;7906:15;7884:66;:::i;:::-;8011:2;7990:15;-1:-1:-1;;7986:29:21;7971:45;;;;8018:2;7967:54;;7644:383;-1:-1:-1;;7644:383:21:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    393,
    2413
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x935BEB1A EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xAFC4827B EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xEFD39926 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1CB2EAF9 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x20158C44 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x35AEEA7B EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x58753357 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x126 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE7 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x126 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x126 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x954 JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE7 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB SWAP1 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xC852021E30B95510F55086D8CC9BC5D15D20F2CB411766A7DA04804F4AD2FBA2 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB SWAP1 PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x273 PUSH1 0x0 PUSH2 0x5FA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB SWAP1 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1ABFC08C9D8E95DC2F77C443843422FE9EF89AAFB40A5814F65E9C4F557F1FAA SWAP2 ADD PUSH2 0x234 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x348 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE DUP2 DUP4 ADD DUP9 SWAP1 MSTORE CHAINID PUSH1 0x60 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP9 DUP3 SHL DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP8 SWAP1 SHL AND PUSH1 0x94 DUP4 ADD MSTORE PUSH1 0xA8 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC8 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E48199A5B1B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP5 PUSH2 0x42A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP8 DUP8 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7D809CEB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP11 SWAP1 MSTORE CALLER PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xFB0139D6 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x491 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5375626D697474696E672070726F6F662064617461206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 DUP10 SWAP1 DUP12 SWAP1 PUSH32 0x36973204944F64CC25B32E5318BD0611F917FEDCD9CB77A11651723DB2C6323 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB SWAP1 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1DB JUMP JUMPDEST PUSH2 0x5F7 DUP2 PUSH2 0x5FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x6A4 SWAP1 DUP6 SWAP1 PUSH2 0x6AA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FF DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x781 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x77C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x71D SWAP2 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x790 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x79A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x852 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x86E SWAP2 SWAP1 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x8C0 DUP3 DUP3 DUP7 PUSH2 0x8CB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x8DA JUMPI POP DUP2 PUSH2 0x793 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x8EA JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x91B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x793 DUP3 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x96C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x983 PUSH1 0x40 DUP8 ADD PUSH2 0x904 JUMP JUMPDEST SWAP3 POP PUSH2 0x991 PUSH1 0x60 DUP8 ADD PUSH2 0x904 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA2D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA15 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6A4 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xA50 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xA12 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xA79 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND MULMOD LOG1 PUSH1 0x95 CALLCODE PUSH11 0x917BDFF41855F3FFA6F848 0xC3 0x4A MLOAD 0xD2 DUP1 EXTCODEHASH PUSH20 0x2DC9CB54F897B864736F6C634300080C00330000 ",
  "pcMap": {
    "0": {
      "offset": [
        393,
        2413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "6": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "8": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "REVERT",
      "path": "9"
    },
    "16": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "17": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "POP",
      "path": "9"
    },
    "18": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "21": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "LT",
      "path": "9"
    },
    "22": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "26": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "29": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "SHR",
      "path": "9"
    },
    "32": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "33": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "GT",
      "path": "9"
    },
    "39": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "43": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "44": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "EQ",
      "path": "9"
    },
    "50": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x146"
    },
    "53": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "54": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "55": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x935BEB1A"
    },
    "60": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "EQ",
      "path": "9"
    },
    "61": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x157"
    },
    "64": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "65": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "66": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xAFC4827B"
    },
    "71": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "EQ",
      "path": "9"
    },
    "72": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16A"
    },
    "75": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "76": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "77": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xEFD39926"
    },
    "82": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "EQ",
      "path": "9"
    },
    "83": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x17D"
    },
    "86": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "87": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "88": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "EQ",
      "path": "9"
    },
    "94": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19E"
    },
    "97": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "98": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "101": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "REVERT",
      "path": "9"
    },
    "102": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "103": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "104": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x1CB2EAF9"
    },
    "109": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "EQ",
      "path": "9"
    },
    "110": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "114": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "115": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x20158C44"
    },
    "120": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "EQ",
      "path": "9"
    },
    "121": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB8"
    },
    "124": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "125": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "126": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x35AEEA7B"
    },
    "131": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "EQ",
      "path": "9"
    },
    "132": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF0"
    },
    "135": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "136": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "137": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x58753357"
    },
    "142": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "EQ",
      "path": "9"
    },
    "143": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x113"
    },
    "146": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "147": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "148": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x715018A6"
    },
    "153": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "EQ",
      "path": "9"
    },
    "154": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13E"
    },
    "157": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "158": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "159": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        393,
        2413
      ],
      "op": "REVERT",
      "path": "9"
    },
    "163": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2150,
        2275
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "164": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2150,
        2275
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB6"
    },
    "167": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2150,
        2275
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB1"
    },
    "170": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2150,
        2275
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "171": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2150,
        2275
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "173": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2150,
        2275
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x920"
    },
    "176": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        2150,
        2275
      ],
      "op": "JUMP",
      "path": "9"
    },
    "177": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2150,
        2275
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "178": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2150,
        2275
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B1"
    },
    "181": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        2150,
        2275
      ],
      "op": "JUMP",
      "path": "9"
    },
    "182": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2150,
        2275
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "183": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2150,
        2275
      ],
      "op": "STOP",
      "path": "9"
    },
    "184": {
      "offset": [
        855,
        892
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "185": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDB"
    },
    "188": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC6"
    },
    "191": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "192": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "194": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x93B"
    },
    "197": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        855,
        892
      ],
      "op": "JUMP",
      "path": "9"
    },
    "198": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "199": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "201": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "203": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "204": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "206": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "207": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "DUP2",
      "path": "9"
    },
    "208": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "209": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "211": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "212": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "213": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "214": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "216": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "AND",
      "path": "9"
    },
    "217": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "DUP2",
      "path": "9"
    },
    "218": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "JUMP",
      "path": "9"
    },
    "219": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "220": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "222": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "223": {
      "op": "SWAP1"
    },
    "224": {
      "op": "ISZERO"
    },
    "225": {
      "op": "ISZERO"
    },
    "226": {
      "op": "DUP2"
    },
    "227": {
      "op": "MSTORE"
    },
    "228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "230": {
      "op": "ADD"
    },
    "231": {
      "offset": [
        855,
        892
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "232": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "234": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "235": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "DUP1",
      "path": "9"
    },
    "236": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "237": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "SUB",
      "path": "9"
    },
    "238": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "239": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        855,
        892
      ],
      "op": "RETURN",
      "path": "9"
    },
    "240": {
      "offset": [
        898,
        940
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "241": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDB"
    },
    "244": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFE"
    },
    "247": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "248": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "250": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x920"
    },
    "253": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        898,
        940
      ],
      "op": "JUMP",
      "path": "9"
    },
    "254": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "255": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "257": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "259": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "260": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "262": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "263": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "DUP2",
      "path": "9"
    },
    "264": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "265": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "267": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "268": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "269": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "270": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "272": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "AND",
      "path": "9"
    },
    "273": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "DUP2",
      "path": "9"
    },
    "274": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        898,
        940
      ],
      "op": "JUMP",
      "path": "9"
    },
    "275": {
      "offset": [
        811,
        848
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "276": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        811,
        848
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "278": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        811,
        848
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "279": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        811,
        848
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x126"
    },
    "282": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        811,
        848
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "289": {
      "op": "SHL"
    },
    "290": {
      "op": "SUB"
    },
    "291": {
      "offset": [
        811,
        848
      ],
      "op": "AND",
      "path": "9"
    },
    "292": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        811,
        848
      ],
      "op": "DUP2",
      "path": "9"
    },
    "293": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        811,
        848
      ],
      "op": "JUMP",
      "path": "9"
    },
    "294": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        811,
        848
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "295": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        811,
        848
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "297": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        811,
        848
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "304": {
      "op": "SHL"
    },
    "305": {
      "op": "SUB"
    },
    "306": {
      "op": "SWAP1"
    },
    "307": {
      "op": "SWAP2"
    },
    "308": {
      "op": "AND"
    },
    "309": {
      "op": "DUP2"
    },
    "310": {
      "op": "MSTORE"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "313": {
      "op": "ADD"
    },
    "314": {
      "offset": [
        811,
        848
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE7"
    },
    "317": {
      "op": "JUMP"
    },
    "318": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "319": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "322": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23F"
    },
    "325": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "326": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "327": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "329": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "336": {
      "op": "SHL"
    },
    "337": {
      "op": "SUB"
    },
    "338": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "339": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126"
    },
    "342": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "343": {
      "offset": [
        780,
        805
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "344": {
      "fn": "Ownable.owner",
      "offset": [
        780,
        805
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "346": {
      "fn": "Ownable.owner",
      "offset": [
        780,
        805
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "347": {
      "fn": "Ownable.owner",
      "offset": [
        780,
        805
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x126"
    },
    "350": {
      "fn": "Ownable.owner",
      "offset": [
        780,
        805
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "357": {
      "op": "SHL"
    },
    "358": {
      "op": "SUB"
    },
    "359": {
      "offset": [
        780,
        805
      ],
      "op": "AND",
      "path": "9"
    },
    "360": {
      "fn": "Ownable.owner",
      "offset": [
        780,
        805
      ],
      "op": "DUP2",
      "path": "9"
    },
    "361": {
      "fn": "Ownable.owner",
      "offset": [
        780,
        805
      ],
      "op": "JUMP",
      "path": "9"
    },
    "362": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2281,
        2411
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "363": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2281,
        2411
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB6"
    },
    "366": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2281,
        2411
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x178"
    },
    "369": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2281,
        2411
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "370": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2281,
        2411
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "372": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2281,
        2411
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x920"
    },
    "375": {
      "fn": "FillManager.removeAllowedLP",
      "jump": "i",
      "offset": [
        2281,
        2411
      ],
      "op": "JUMP",
      "path": "9"
    },
    "376": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2281,
        2411
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "377": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2281,
        2411
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x275"
    },
    "380": {
      "fn": "FillManager.removeAllowedLP",
      "jump": "i",
      "offset": [
        2281,
        2411
      ],
      "op": "JUMP",
      "path": "9"
    },
    "381": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "382": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x190"
    },
    "385": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18B"
    },
    "388": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "389": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "391": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x954"
    },
    "394": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1115,
        2144
      ],
      "op": "JUMP",
      "path": "9"
    },
    "395": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "396": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F0"
    },
    "399": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1115,
        2144
      ],
      "op": "JUMP",
      "path": "9"
    },
    "400": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "401": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "403": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "404": {
      "op": "SWAP1"
    },
    "405": {
      "op": "DUP2"
    },
    "406": {
      "op": "MSTORE"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "409": {
      "op": "ADD"
    },
    "410": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE7"
    },
    "413": {
      "op": "JUMP"
    },
    "414": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "415": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC"
    },
    "421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "422": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "424": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x920"
    },
    "427": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "428": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55F"
    },
    "432": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "433": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2150,
        2275
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "434": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "436": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "443": {
      "op": "SHL"
    },
    "444": {
      "op": "SUB"
    },
    "445": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "446": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 1
    },
    "447": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "448": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4"
    },
    "451": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "452": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "454": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "461": {
      "op": "SHL"
    },
    "462": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "463": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "464": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "466": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "467": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB"
    },
    "470": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "471": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A2"
    },
    "474": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "475": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "476": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "478": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "479": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "480": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "481": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "482": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "483": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "484": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "491": {
      "op": "SHL"
    },
    "492": {
      "op": "SUB"
    },
    "493": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 2
    },
    "494": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "AND",
      "path": "9"
    },
    "495": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "497": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "DUP2",
      "path": "9"
    },
    "498": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "DUP2",
      "path": "9"
    },
    "499": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "500": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2224
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "502": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "504": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "505": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "DUP2",
      "path": "9"
    },
    "506": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "507": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "509": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "510": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "DUP3",
      "path": "9"
    },
    "511": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "512": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2231
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "513": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2238
      ],
      "op": "DUP1",
      "path": "9"
    },
    "514": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2238
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "515": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "517": {
      "op": "NOT"
    },
    "518": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2238
      ],
      "op": "AND",
      "path": "9"
    },
    "519": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2234,
        2238
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "521": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2238
      ],
      "op": "OR",
      "path": "9"
    },
    "522": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2238
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "523": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2214,
        2238
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "524": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2254,
        2268
      ],
      "op": "SWAP1",
      "path": "9",
      "statement": 3
    },
    "525": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2254,
        2268
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "526": {
      "op": "SWAP2"
    },
    "527": {
      "op": "DUP3"
    },
    "528": {
      "op": "MSTORE"
    },
    "529": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2254,
        2268
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xC852021E30B95510F55086D8CC9BC5D15D20F2CB411766A7DA04804F4AD2FBA2"
    },
    "562": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2254,
        2268
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "563": {
      "op": "ADD"
    },
    "564": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2254,
        2268
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "565": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2254,
        2268
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "567": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2254,
        2268
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "568": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2254,
        2268
      ],
      "op": "DUP1",
      "path": "9"
    },
    "569": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2254,
        2268
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "570": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2254,
        2268
      ],
      "op": "SUB",
      "path": "9"
    },
    "571": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2254,
        2268
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "572": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2254,
        2268
      ],
      "op": "LOG1",
      "path": "9"
    },
    "573": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2150,
        2275
      ],
      "op": "POP",
      "path": "9"
    },
    "574": {
      "fn": "FillManager.addAllowedLP",
      "jump": "o",
      "offset": [
        2150,
        2275
      ],
      "op": "JUMP",
      "path": "9"
    },
    "575": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "576": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "578": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "585": {
      "op": "SHL"
    },
    "586": {
      "op": "SUB"
    },
    "587": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "588": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "589": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "590": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269"
    },
    "593": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "594": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "596": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "597": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "601": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "603": {
      "op": "SHL"
    },
    "604": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "605": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "606": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "608": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "609": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB"
    },
    "612": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "613": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A2"
    },
    "616": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "617": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "618": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x273"
    },
    "621": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "623": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FA"
    },
    "626": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "627": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "628": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "629": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2281,
        2411
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "630": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "632": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "639": {
      "op": "SHL"
    },
    "640": {
      "op": "SUB"
    },
    "641": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "642": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "643": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "644": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F"
    },
    "647": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "648": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "650": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "651": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "655": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "657": {
      "op": "SHL"
    },
    "658": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "659": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "660": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "662": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "663": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB"
    },
    "666": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "667": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A2"
    },
    "670": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "671": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "678": {
      "op": "SHL"
    },
    "679": {
      "op": "SUB"
    },
    "680": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 5
    },
    "681": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "AND",
      "path": "9"
    },
    "682": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "684": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "DUP2",
      "path": "9"
    },
    "685": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "DUP2",
      "path": "9"
    },
    "686": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "687": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2365
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "689": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "691": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "692": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "DUP2",
      "path": "9"
    },
    "693": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "694": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "696": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "697": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "DUP3",
      "path": "9"
    },
    "698": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "699": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2355,
        2372
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "700": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2348,
        2372
      ],
      "op": "DUP1",
      "path": "9"
    },
    "701": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2348,
        2372
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "702": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "704": {
      "op": "NOT"
    },
    "705": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2348,
        2372
      ],
      "op": "AND",
      "path": "9"
    },
    "706": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2348,
        2372
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "707": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2348,
        2372
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "708": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2388,
        2404
      ],
      "op": "SWAP1",
      "path": "9",
      "statement": 6
    },
    "709": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2388,
        2404
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "710": {
      "op": "SWAP2"
    },
    "711": {
      "op": "DUP3"
    },
    "712": {
      "op": "MSTORE"
    },
    "713": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2388,
        2404
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x1ABFC08C9D8E95DC2F77C443843422FE9EF89AAFB40A5814F65E9C4F557F1FAA"
    },
    "746": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2388,
        2404
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "747": {
      "op": "ADD"
    },
    "748": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2388,
        2404
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x234"
    },
    "751": {
      "op": "JUMP"
    },
    "752": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "753": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1367,
        1377
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 7
    },
    "754": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1325,
        1332
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "756": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1356,
        1378
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "757": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1356,
        1378
      ],
      "op": "DUP2",
      "path": "9"
    },
    "758": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1356,
        1378
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "759": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1356,
        1366
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "761": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1356,
        1378
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "763": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1356,
        1378
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "764": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1356,
        1378
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "766": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1356,
        1378
      ],
      "op": "DUP2",
      "path": "9"
    },
    "767": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1356,
        1378
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "768": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1356,
        1378
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "769": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1356,
        1378
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "771": {
      "branch": 28,
      "fn": "FillManager.fillRequest",
      "offset": [
        1356,
        1378
      ],
      "op": "AND",
      "path": "9"
    },
    "772": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1348,
        1405
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x348"
    },
    "775": {
      "branch": 28,
      "fn": "FillManager.fillRequest",
      "offset": [
        1348,
        1405
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "776": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1348,
        1405
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "778": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1348,
        1405
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "779": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "783": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "785": {
      "op": "SHL"
    },
    "786": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1348,
        1405
      ],
      "op": "DUP2",
      "path": "9"
    },
    "787": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1348,
        1405
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "790": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1348,
        1405
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "792": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1348,
        1405
      ],
      "op": "DUP3",
      "path": "9"
    },
    "793": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1348,
        1405
      ],
      "op": "ADD",
      "path": "9"
    },
    "794": {
      "op": "MSTORE"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "799": {
      "op": "DUP3"
    },
    "800": {
      "op": "ADD"
    },
    "801": {
      "op": "MSTORE"
    },
    "802": {
      "op": "PUSH22",
      "value": "0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "827": {
      "op": "SHL"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "830": {
      "op": "DUP3"
    },
    "831": {
      "op": "ADD"
    },
    "832": {
      "op": "MSTORE"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "835": {
      "op": "ADD"
    },
    "836": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1348,
        1405
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1DB"
    },
    "839": {
      "op": "JUMP"
    },
    "840": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1348,
        1405
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "841": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 8,
      "value": "0x40"
    },
    "843": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "DUP1",
      "path": "12"
    },
    "844": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "845": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "847": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "DUP1",
      "path": "12"
    },
    "848": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "DUP3",
      "path": "12"
    },
    "849": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "ADD",
      "path": "12"
    },
    "850": {
      "op": "DUP10"
    },
    "851": {
      "op": "SWAP1"
    },
    "852": {
      "op": "MSTORE"
    },
    "853": {
      "op": "DUP2"
    },
    "854": {
      "op": "DUP4"
    },
    "855": {
      "op": "ADD"
    },
    "856": {
      "op": "DUP9"
    },
    "857": {
      "op": "SWAP1"
    },
    "858": {
      "op": "MSTORE"
    },
    "859": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1511,
        1524
      ],
      "op": "CHAINID",
      "path": "9"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "862": {
      "op": "DUP1"
    },
    "863": {
      "op": "DUP5"
    },
    "864": {
      "op": "ADD"
    },
    "865": {
      "op": "SWAP2"
    },
    "866": {
      "op": "SWAP1"
    },
    "867": {
      "op": "SWAP2"
    },
    "868": {
      "op": "MSTORE"
    },
    "869": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "882": {
      "op": "NOT"
    },
    "883": {
      "op": "DUP9"
    },
    "884": {
      "op": "DUP3"
    },
    "885": {
      "op": "SHL"
    },
    "886": {
      "op": "DUP2"
    },
    "887": {
      "op": "AND"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "890": {
      "op": "DUP6"
    },
    "891": {
      "op": "ADD"
    },
    "892": {
      "op": "MSTORE"
    },
    "893": {
      "op": "SWAP1"
    },
    "894": {
      "op": "DUP8"
    },
    "895": {
      "op": "SWAP1"
    },
    "896": {
      "op": "SHL"
    },
    "897": {
      "op": "AND"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "900": {
      "op": "DUP4"
    },
    "901": {
      "op": "ADD"
    },
    "902": {
      "op": "MSTORE"
    },
    "903": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "905": {
      "op": "DUP1"
    },
    "906": {
      "op": "DUP4"
    },
    "907": {
      "op": "ADD"
    },
    "908": {
      "op": "DUP7"
    },
    "909": {
      "op": "SWAP1"
    },
    "910": {
      "op": "MSTORE"
    },
    "911": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "DUP4",
      "path": "12"
    },
    "912": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "913": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "DUP1",
      "path": "12"
    },
    "914": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "DUP5",
      "path": "12"
    },
    "915": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "SUB",
      "path": "12"
    },
    "916": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "917": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "918": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "ADD",
      "path": "12"
    },
    "919": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "DUP2",
      "path": "12"
    },
    "920": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "921": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "923": {
      "op": "SWAP1"
    },
    "924": {
      "op": "SWAP3"
    },
    "925": {
      "op": "ADD"
    },
    "926": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "927": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "928": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        379,
        517
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "929": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        356,
        527
      ],
      "op": "DUP1",
      "path": "12"
    },
    "930": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        356,
        527
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "931": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        356,
        527
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "932": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        356,
        527
      ],
      "op": "ADD",
      "path": "12"
    },
    "933": {
      "fn": "RaisyncUtils.createRequestHash",
      "offset": [
        356,
        527
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "934": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1415,
        1434
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "936": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1415,
        1434
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "937": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1609,
        1627
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 9,
      "value": "0x0"
    },
    "939": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1609,
        1627
      ],
      "op": "DUP2",
      "path": "9"
    },
    "940": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1609,
        1627
      ],
      "op": "DUP2",
      "path": "9"
    },
    "941": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1609,
        1627
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "942": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1609,
        1614
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "944": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1609,
        1627
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "946": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1609,
        1627
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "947": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1609,
        1627
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "949": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1609,
        1627
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "950": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1609,
        1627
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "951": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1609,
        1627
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "952": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1415,
        1589
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "953": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1415,
        1589
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "954": {
      "op": "POP"
    },
    "955": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1609,
        1627
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "957": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1609,
        1627
      ],
      "op": "AND",
      "path": "9"
    },
    "958": {
      "branch": 29,
      "fn": "FillManager.fillRequest",
      "offset": [
        1608,
        1627
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "959": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1600,
        1646
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3FB"
    },
    "962": {
      "branch": 29,
      "fn": "FillManager.fillRequest",
      "offset": [
        1600,
        1646
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "963": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1600,
        1646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "965": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1600,
        1646
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "966": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "970": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "972": {
      "op": "SHL"
    },
    "973": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1600,
        1646
      ],
      "op": "DUP2",
      "path": "9"
    },
    "974": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1600,
        1646
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "977": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1600,
        1646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "979": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1600,
        1646
      ],
      "op": "DUP3",
      "path": "9"
    },
    "980": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1600,
        1646
      ],
      "op": "ADD",
      "path": "9"
    },
    "981": {
      "op": "MSTORE"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "986": {
      "op": "DUP3"
    },
    "987": {
      "op": "ADD"
    },
    "988": {
      "op": "MSTORE"
    },
    "989": {
      "op": "PUSH14",
      "value": "0x105B1C9958591E48199A5B1B1959"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1006": {
      "op": "SHL"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1009": {
      "op": "DUP3"
    },
    "1010": {
      "op": "ADD"
    },
    "1011": {
      "op": "MSTORE"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1014": {
      "op": "ADD"
    },
    "1015": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1600,
        1646
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1DB"
    },
    "1018": {
      "op": "JUMP"
    },
    "1019": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1600,
        1646
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1020": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1674
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 10,
      "value": "0x0"
    },
    "1022": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1674
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1023": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1674
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1024": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1674
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1025": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1661
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1027": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1674
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1029": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1674
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1030": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1674
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1032": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1674
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1033": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1674
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1034": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1681
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1035": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1681
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1038": {
      "op": "NOT"
    },
    "1039": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1681
      ],
      "op": "AND",
      "path": "9"
    },
    "1040": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1677,
        1681
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1042": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1681
      ],
      "op": "OR",
      "path": "9"
    },
    "1043": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1681
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1044": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1656,
        1681
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1045": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1714,
        1732
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1046": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1743,
        1808
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 11,
      "value": "0x42A"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1055": {
      "op": "SHL"
    },
    "1056": {
      "op": "SUB"
    },
    "1057": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1743,
        1765
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1058": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1743,
        1765
      ],
      "op": "AND",
      "path": "9"
    },
    "1059": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1766,
        1776
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1060": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1778,
        1799
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1061": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1801,
        1807
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1062": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1743,
        1765
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x64A"
    },
    "1065": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1743,
        1808
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1066": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1743,
        1808
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1067": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1850
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1069": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1850
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1070": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1850
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1072": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1863,
        1873
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1073": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1075": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1076": {
      "op": "PUSH4",
      "value": "0x7D809CEB"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1083": {
      "op": "SHL"
    },
    "1084": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1085": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1092": {
      "op": "SHL"
    },
    "1093": {
      "op": "SUB"
    },
    "1094": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1863,
        1873
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1095": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1863,
        1873
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1096": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1863,
        1873
      ],
      "op": "AND",
      "path": "9"
    },
    "1097": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1099": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1100": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "ADD",
      "path": "9"
    },
    "1101": {
      "op": "MSTORE"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1104": {
      "op": "DUP2"
    },
    "1105": {
      "op": "ADD"
    },
    "1106": {
      "op": "DUP6"
    },
    "1107": {
      "op": "SWAP1"
    },
    "1108": {
      "op": "MSTORE"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1111": {
      "op": "DUP2"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "op": "DUP11"
    },
    "1114": {
      "op": "SWAP1"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1903,
        1913
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1119": {
      "op": "DUP3"
    },
    "1120": {
      "op": "ADD"
    },
    "1121": {
      "op": "MSTORE"
    },
    "1122": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1819,
        1833
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1124": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1819,
        1833
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1125": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1850
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1126": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1850
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1127": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1850
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1128": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1850
      ],
      "op": "AND",
      "path": "9"
    },
    "1129": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1850
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1130": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1862
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFB0139D6"
    },
    "1135": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1862
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1138": {
      "op": "ADD"
    },
    "1139": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1141": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1143": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1144": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1145": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1146": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "SUB",
      "path": "9"
    },
    "1147": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1148": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1150": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1151": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "GAS",
      "path": "9"
    },
    "1152": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "CALL",
      "path": "9"
    },
    "1153": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1154": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1155": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1156": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x491"
    },
    "1159": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1160": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1161": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1163": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1164": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "1165": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1166": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1168": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1169": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1170": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "POP",
      "path": "9"
    },
    "1171": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "POP",
      "path": "9"
    },
    "1172": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "POP",
      "path": "9"
    },
    "1173": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "POP",
      "path": "9"
    },
    "1174": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1176": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1177": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1178": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1180": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "NOT",
      "path": "9"
    },
    "1181": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1183": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1184": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "ADD",
      "path": "9"
    },
    "1185": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "AND",
      "path": "9"
    },
    "1186": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1187": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "ADD",
      "path": "9"
    },
    "1188": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1189": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1191": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1192": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "POP",
      "path": "9"
    },
    "1193": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1194": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "ADD",
      "path": "9"
    },
    "1195": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1196": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4B5"
    },
    "1199": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1200": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1201": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D7"
    },
    "1204": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1836,
        1914
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1205": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1836,
        1914
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1206": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1819,
        1914
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1207": {
      "op": "POP"
    },
    "1208": {
      "branch": 30,
      "fn": "FillManager.fillRequest",
      "offset": [
        1945,
        1956
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 12
    },
    "1209": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1924,
        2010
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x504"
    },
    "1212": {
      "branch": 30,
      "fn": "FillManager.fillRequest",
      "offset": [
        1924,
        2010
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1213": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1924,
        2010
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1215": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1924,
        2010
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1222": {
      "op": "SHL"
    },
    "1223": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1924,
        2010
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1224": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1924,
        2010
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1227": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1924,
        2010
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1229": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1924,
        2010
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1230": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1924,
        2010
      ],
      "op": "ADD",
      "path": "9"
    },
    "1231": {
      "op": "MSTORE"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1236": {
      "op": "DUP3"
    },
    "1237": {
      "op": "ADD"
    },
    "1238": {
      "op": "MSTORE"
    },
    "1239": {
      "op": "PUSH32",
      "value": "0x5375626D697474696E672070726F6F662064617461206661696C656400000000"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1274": {
      "op": "DUP3"
    },
    "1275": {
      "op": "ADD"
    },
    "1276": {
      "op": "MSTORE"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1279": {
      "op": "ADD"
    },
    "1280": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1924,
        2010
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1DB"
    },
    "1283": {
      "op": "JUMP"
    },
    "1284": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1924,
        2010
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1285": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 13,
      "value": "0x40"
    },
    "1287": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1288": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1289": {
      "op": "DUP3"
    },
    "1290": {
      "op": "DUP2"
    },
    "1291": {
      "op": "MSTORE"
    },
    "1292": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2094,
        2104
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1295": {
      "op": "DUP3"
    },
    "1296": {
      "op": "ADD"
    },
    "1297": {
      "op": "MSTORE"
    },
    "1298": {
      "op": "SWAP1"
    },
    "1299": {
      "op": "DUP2"
    },
    "1300": {
      "op": "ADD"
    },
    "1301": {
      "op": "DUP7"
    },
    "1302": {
      "op": "SWAP1"
    },
    "1303": {
      "op": "MSTORE"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1310": {
      "op": "SHL"
    },
    "1311": {
      "op": "SUB"
    },
    "1312": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "DUP9",
      "path": "9"
    },
    "1313": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "AND",
      "path": "9"
    },
    "1314": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1315": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2059,
        2072
      ],
      "op": "DUP10",
      "path": "9"
    },
    "1316": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2059,
        2072
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1317": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2040,
        2049
      ],
      "op": "DUP12",
      "path": "9"
    },
    "1318": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2040,
        2049
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1319": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x36973204944F64CC25B32E5318BD0611F917FEDCD9CB77A11651723DB2C6323"
    },
    "1352": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1355": {
      "op": "ADD"
    },
    "1356": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1358": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1359": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1360": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1361": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "SUB",
      "path": "9"
    },
    "1362": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1363": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2026,
        2113
      ],
      "op": "LOG4",
      "path": "9"
    },
    "1364": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2131,
        2137
      ],
      "op": "SWAP9",
      "path": "9",
      "statement": 14
    },
    "1365": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1115,
        2144
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "1366": {
      "op": "POP"
    },
    "1367": {
      "op": "POP"
    },
    "1368": {
      "op": "POP"
    },
    "1369": {
      "op": "POP"
    },
    "1370": {
      "op": "POP"
    },
    "1371": {
      "op": "POP"
    },
    "1372": {
      "op": "POP"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "fn": "FillManager.fillRequest",
      "jump": "o",
      "offset": [
        1115,
        2144
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1375": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1376": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1378": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1385": {
      "op": "SHL"
    },
    "1386": {
      "op": "SUB"
    },
    "1387": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1388": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1389": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1390": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x589"
    },
    "1393": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1394": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1396": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1397": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1403": {
      "op": "SHL"
    },
    "1404": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1405": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1406": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1408": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1409": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB"
    },
    "1412": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1413": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A2"
    },
    "1416": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1424": {
      "op": "SHL"
    },
    "1425": {
      "op": "SUB"
    },
    "1426": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 15
    },
    "1427": {
      "branch": 34,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1428": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EE"
    },
    "1431": {
      "branch": 34,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1432": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1434": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1435": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1441": {
      "op": "SHL"
    },
    "1442": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1443": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1446": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1448": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1450": {
      "op": "MSTORE"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1455": {
      "op": "DUP3"
    },
    "1456": {
      "op": "ADD"
    },
    "1457": {
      "op": "MSTORE"
    },
    "1458": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1493": {
      "op": "DUP3"
    },
    "1494": {
      "op": "ADD"
    },
    "1495": {
      "op": "MSTORE"
    },
    "1496": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1505": {
      "op": "SHL"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1508": {
      "op": "DUP3"
    },
    "1509": {
      "op": "ADD"
    },
    "1510": {
      "op": "MSTORE"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1513": {
      "op": "ADD"
    },
    "1514": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB"
    },
    "1517": {
      "op": "JUMP"
    },
    "1518": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1519": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x5F7"
    },
    "1522": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1523": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FA"
    },
    "1526": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1527": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1528": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1529": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1530": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1531": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1533": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1534": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1541": {
      "op": "SHL"
    },
    "1542": {
      "op": "SUB"
    },
    "1543": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 17
    },
    "1544": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1545": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1552": {
      "op": "SHL"
    },
    "1553": {
      "op": "SUB"
    },
    "1554": {
      "op": "NOT"
    },
    "1555": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1556": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1557": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1558": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "1559": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1560": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1561": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x40"
    },
    "1563": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1564": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1565": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1566": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1567": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "1568": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1569": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1570": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1571": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1604": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1605": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1606": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1607": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1608": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1609": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1610": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1611": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 19,
      "value": "0x40"
    },
    "1613": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1614": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1621": {
      "op": "SHL"
    },
    "1622": {
      "op": "SUB"
    },
    "1623": {
      "op": "DUP6"
    },
    "1624": {
      "op": "DUP2"
    },
    "1625": {
      "op": "AND"
    },
    "1626": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "1628": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1629": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "4"
    },
    "1630": {
      "op": "MSTORE"
    },
    "1631": {
      "op": "DUP5"
    },
    "1632": {
      "op": "AND"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1635": {
      "op": "DUP3"
    },
    "1636": {
      "op": "ADD"
    },
    "1637": {
      "op": "MSTORE"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1640": {
      "op": "DUP1"
    },
    "1641": {
      "op": "DUP3"
    },
    "1642": {
      "op": "ADD"
    },
    "1643": {
      "op": "DUP5"
    },
    "1644": {
      "op": "SWAP1"
    },
    "1645": {
      "op": "MSTORE"
    },
    "1646": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1647": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1648": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1649": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1650": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SUB",
      "path": "4"
    },
    "1651": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1652": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1653": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "4"
    },
    "1654": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1655": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1658": {
      "op": "SWAP1"
    },
    "1659": {
      "op": "SWAP2"
    },
    "1660": {
      "op": "ADD"
    },
    "1661": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1662": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1663": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1664": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1666": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1667": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "4"
    },
    "1668": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1669": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1676": {
      "op": "SHL"
    },
    "1677": {
      "op": "SUB"
    },
    "1678": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "4"
    },
    "1679": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1686": {
      "op": "SHL"
    },
    "1687": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "OR",
      "path": "4"
    },
    "1688": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1689": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1690": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6A4"
    },
    "1693": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1694": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1695": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1696": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1069
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6AA"
    },
    "1699": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1700": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1701": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "4"
    },
    "1702": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "4"
    },
    "1703": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "4"
    },
    "1704": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "4"
    },
    "1705": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        912,
        1153
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1706": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1707": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1709": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6FF"
    },
    "1712": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1713": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1715": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1716": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1717": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1719": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "4"
    },
    "1720": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1722": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1723": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1724": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1726": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1727": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1728": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1730": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "4"
    },
    "1731": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "1764": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1765": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1766": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "4"
    },
    "1767": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1774": {
      "op": "SHL"
    },
    "1775": {
      "op": "SUB"
    },
    "1776": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "4"
    },
    "1777": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x781"
    },
    "1780": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1781": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1782": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1783": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1784": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "1789": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "4"
    },
    "1790": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1791": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1792": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1793": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1794": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1795": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1796": {
      "op": "POP"
    },
    "1797": {
      "branch": 35,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1798": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x77C"
    },
    "1801": {
      "branch": 35,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1802": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 20
    },
    "1803": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1804": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1806": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "4"
    },
    "1807": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1808": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1809": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1810": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "4"
    },
    "1811": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1812": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71D"
    },
    "1815": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1816": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1817": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9F0"
    },
    "1820": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1821": {
      "branch": 36,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1822": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x77C"
    },
    "1825": {
      "branch": 36,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1826": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1828": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1829": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1835": {
      "op": "SHL"
    },
    "1836": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1837": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1840": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1842": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1843": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "4"
    },
    "1844": {
      "op": "MSTORE"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1849": {
      "op": "DUP3"
    },
    "1850": {
      "op": "ADD"
    },
    "1851": {
      "op": "MSTORE"
    },
    "1852": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1887": {
      "op": "DUP3"
    },
    "1888": {
      "op": "ADD"
    },
    "1889": {
      "op": "MSTORE"
    },
    "1890": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "1903": {
      "op": "SHL"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1906": {
      "op": "DUP3"
    },
    "1907": {
      "op": "ADD"
    },
    "1908": {
      "op": "MSTORE"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1911": {
      "op": "ADD"
    },
    "1912": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DB"
    },
    "1915": {
      "op": "JUMP"
    },
    "1916": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1917": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3277,
        3913
      ],
      "op": "POP",
      "path": "4"
    },
    "1918": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "POP",
      "path": "4"
    },
    "1919": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "POP",
      "path": "4"
    },
    "1920": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "o",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1921": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1922": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1924": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 21,
      "value": "0x790"
    },
    "1927": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1928": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1929": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1931": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1932": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x79A"
    },
    "1935": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1936": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1937": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1938": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "POP",
      "path": "5"
    },
    "1939": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1940": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1941": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1942": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "5"
    },
    "1943": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "5"
    },
    "1944": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "5"
    },
    "1945": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1946": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1947": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 22
    },
    "1950": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "1951": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "5"
    },
    "1952": {
      "branch": 31,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7FB"
    },
    "1956": {
      "branch": 31,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1957": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1959": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1960": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1968": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1971": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1974": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "5"
    },
    "1975": {
      "op": "MSTORE"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1980": {
      "op": "DUP3"
    },
    "1981": {
      "op": "ADD"
    },
    "1982": {
      "op": "MSTORE"
    },
    "1983": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2018": {
      "op": "DUP3"
    },
    "2019": {
      "op": "ADD"
    },
    "2020": {
      "op": "MSTORE"
    },
    "2021": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2030": {
      "op": "SHL"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2033": {
      "op": "DUP3"
    },
    "2034": {
      "op": "ADD"
    },
    "2035": {
      "op": "MSTORE"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2038": {
      "op": "ADD"
    },
    "2039": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DB"
    },
    "2042": {
      "op": "JUMP"
    },
    "2043": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "op": "SUB"
    },
    "2052": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 23
    },
    "2053": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "5"
    },
    "2054": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "2055": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 24,
      "value": "0x852"
    },
    "2058": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2059": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2061": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2062": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2068": {
      "op": "SHL"
    },
    "2069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2070": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2073": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2075": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2076": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "5"
    },
    "2077": {
      "op": "MSTORE"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2082": {
      "op": "DUP3"
    },
    "2083": {
      "op": "ADD"
    },
    "2084": {
      "op": "MSTORE"
    },
    "2085": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2120": {
      "op": "DUP3"
    },
    "2121": {
      "op": "ADD"
    },
    "2122": {
      "op": "MSTORE"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2125": {
      "op": "ADD"
    },
    "2126": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DB"
    },
    "2129": {
      "op": "JUMP"
    },
    "2130": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2131": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2133": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2134": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "op": "SUB"
    },
    "2143": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "5"
    },
    "2144": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2145": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2146": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2148": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2149": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "2152": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2153": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2154": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA3E"
    },
    "2157": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2158": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2161": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2163": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2164": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2165": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2166": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "5"
    },
    "2167": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2168": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2169": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2170": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "5"
    },
    "2171": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "5"
    },
    "2172": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2173": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2174": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2175": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2176": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2177": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2178": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2180": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2181": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "5"
    },
    "2182": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8AB"
    },
    "2185": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2186": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2188": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2189": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2190": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2191": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2193": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "5"
    },
    "2194": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "2196": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2197": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "5"
    },
    "2198": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "5"
    },
    "2199": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2200": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "5"
    },
    "2201": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2203": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2204": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2205": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2206": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2207": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2208": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2210": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2212": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2213": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "5"
    },
    "2214": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2215": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8B0"
    },
    "2218": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2219": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2220": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2222": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2223": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2224": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2225": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2226": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2227": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2228": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2229": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2230": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 25,
      "value": "0x8C0"
    },
    "2233": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2234": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2235": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2236": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8CB"
    },
    "2239": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2240": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2241": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "2242": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "2243": {
      "op": "POP"
    },
    "2244": {
      "op": "POP"
    },
    "2245": {
      "op": "POP"
    },
    "2246": {
      "op": "POP"
    },
    "2247": {
      "op": "POP"
    },
    "2248": {
      "op": "POP"
    },
    "2249": {
      "op": "POP"
    },
    "2250": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2251": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2252": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2254": {
      "branch": 32,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2255": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2256": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8DA"
    },
    "2259": {
      "branch": 32,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2260": {
      "op": "POP"
    },
    "2261": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 26
    },
    "2262": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x793"
    },
    "2265": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2266": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2267": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2268": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2269": {
      "branch": 33,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2270": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8EA"
    },
    "2273": {
      "branch": 33,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2274": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2275": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2276": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2277": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2278": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2280": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "5"
    },
    "2281": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2282": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2283": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 27
    },
    "2284": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2286": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2287": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2293": {
      "op": "SHL"
    },
    "2294": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2295": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2296": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2298": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "5"
    },
    "2299": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DB"
    },
    "2302": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2303": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2304": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA5A"
    },
    "2307": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2308": {
      "op": "JUMPDEST"
    },
    "2309": {
      "op": "DUP1"
    },
    "2310": {
      "op": "CALLDATALOAD"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2317": {
      "op": "SHL"
    },
    "2318": {
      "op": "SUB"
    },
    "2319": {
      "op": "DUP2"
    },
    "2320": {
      "op": "AND"
    },
    "2321": {
      "op": "DUP2"
    },
    "2322": {
      "op": "EQ"
    },
    "2323": {
      "op": "PUSH2",
      "value": "0x91B"
    },
    "2326": {
      "op": "JUMPI"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2329": {
      "op": "DUP1"
    },
    "2330": {
      "op": "REVERT"
    },
    "2331": {
      "op": "JUMPDEST"
    },
    "2332": {
      "op": "SWAP2"
    },
    "2333": {
      "op": "SWAP1"
    },
    "2334": {
      "op": "POP"
    },
    "2335": {
      "jump": "o",
      "op": "JUMP"
    },
    "2336": {
      "op": "JUMPDEST"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2341": {
      "op": "DUP3"
    },
    "2342": {
      "op": "DUP5"
    },
    "2343": {
      "op": "SUB"
    },
    "2344": {
      "op": "SLT"
    },
    "2345": {
      "op": "ISZERO"
    },
    "2346": {
      "op": "PUSH2",
      "value": "0x932"
    },
    "2349": {
      "op": "JUMPI"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2352": {
      "op": "DUP1"
    },
    "2353": {
      "op": "REVERT"
    },
    "2354": {
      "op": "JUMPDEST"
    },
    "2355": {
      "op": "PUSH2",
      "value": "0x793"
    },
    "2358": {
      "op": "DUP3"
    },
    "2359": {
      "op": "PUSH2",
      "value": "0x904"
    },
    "2362": {
      "jump": "i",
      "op": "JUMP"
    },
    "2363": {
      "op": "JUMPDEST"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2368": {
      "op": "DUP3"
    },
    "2369": {
      "op": "DUP5"
    },
    "2370": {
      "op": "SUB"
    },
    "2371": {
      "op": "SLT"
    },
    "2372": {
      "op": "ISZERO"
    },
    "2373": {
      "op": "PUSH2",
      "value": "0x94D"
    },
    "2376": {
      "op": "JUMPI"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2379": {
      "op": "DUP1"
    },
    "2380": {
      "op": "REVERT"
    },
    "2381": {
      "op": "JUMPDEST"
    },
    "2382": {
      "op": "POP"
    },
    "2383": {
      "op": "CALLDATALOAD"
    },
    "2384": {
      "op": "SWAP2"
    },
    "2385": {
      "op": "SWAP1"
    },
    "2386": {
      "op": "POP"
    },
    "2387": {
      "jump": "o",
      "op": "JUMP"
    },
    "2388": {
      "op": "JUMPDEST"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2391": {
      "op": "DUP1"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2394": {
      "op": "DUP1"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2399": {
      "op": "DUP7"
    },
    "2400": {
      "op": "DUP9"
    },
    "2401": {
      "op": "SUB"
    },
    "2402": {
      "op": "SLT"
    },
    "2403": {
      "op": "ISZERO"
    },
    "2404": {
      "op": "PUSH2",
      "value": "0x96C"
    },
    "2407": {
      "op": "JUMPI"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2410": {
      "op": "DUP1"
    },
    "2411": {
      "op": "REVERT"
    },
    "2412": {
      "op": "JUMPDEST"
    },
    "2413": {
      "op": "DUP6"
    },
    "2414": {
      "op": "CALLDATALOAD"
    },
    "2415": {
      "op": "SWAP5"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2419": {
      "op": "DUP7"
    },
    "2420": {
      "op": "ADD"
    },
    "2421": {
      "op": "CALLDATALOAD"
    },
    "2422": {
      "op": "SWAP4"
    },
    "2423": {
      "op": "POP"
    },
    "2424": {
      "op": "PUSH2",
      "value": "0x983"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2429": {
      "op": "DUP8"
    },
    "2430": {
      "op": "ADD"
    },
    "2431": {
      "op": "PUSH2",
      "value": "0x904"
    },
    "2434": {
      "jump": "i",
      "op": "JUMP"
    },
    "2435": {
      "op": "JUMPDEST"
    },
    "2436": {
      "op": "SWAP3"
    },
    "2437": {
      "op": "POP"
    },
    "2438": {
      "op": "PUSH2",
      "value": "0x991"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2443": {
      "op": "DUP8"
    },
    "2444": {
      "op": "ADD"
    },
    "2445": {
      "op": "PUSH2",
      "value": "0x904"
    },
    "2448": {
      "jump": "i",
      "op": "JUMP"
    },
    "2449": {
      "op": "JUMPDEST"
    },
    "2450": {
      "op": "SWAP5"
    },
    "2451": {
      "op": "SWAP8"
    },
    "2452": {
      "op": "SWAP4"
    },
    "2453": {
      "op": "SWAP7"
    },
    "2454": {
      "op": "POP"
    },
    "2455": {
      "op": "SWAP2"
    },
    "2456": {
      "op": "SWAP5"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2459": {
      "op": "ADD"
    },
    "2460": {
      "op": "CALLDATALOAD"
    },
    "2461": {
      "op": "SWAP3"
    },
    "2462": {
      "op": "SWAP2"
    },
    "2463": {
      "op": "POP"
    },
    "2464": {
      "op": "POP"
    },
    "2465": {
      "jump": "o",
      "op": "JUMP"
    },
    "2466": {
      "op": "JUMPDEST"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2469": {
      "op": "DUP1"
    },
    "2470": {
      "op": "DUP3"
    },
    "2471": {
      "op": "MSTORE"
    },
    "2472": {
      "op": "DUP2"
    },
    "2473": {
      "op": "DUP2"
    },
    "2474": {
      "op": "ADD"
    },
    "2475": {
      "op": "MSTORE"
    },
    "2476": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2511": {
      "op": "DUP3"
    },
    "2512": {
      "op": "ADD"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2516": {
      "op": "ADD"
    },
    "2517": {
      "op": "SWAP1"
    },
    "2518": {
      "jump": "o",
      "op": "JUMP"
    },
    "2519": {
      "op": "JUMPDEST"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2524": {
      "op": "DUP3"
    },
    "2525": {
      "op": "DUP5"
    },
    "2526": {
      "op": "SUB"
    },
    "2527": {
      "op": "SLT"
    },
    "2528": {
      "op": "ISZERO"
    },
    "2529": {
      "op": "PUSH2",
      "value": "0x9E9"
    },
    "2532": {
      "op": "JUMPI"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2535": {
      "op": "DUP1"
    },
    "2536": {
      "op": "REVERT"
    },
    "2537": {
      "op": "JUMPDEST"
    },
    "2538": {
      "op": "POP"
    },
    "2539": {
      "op": "MLOAD"
    },
    "2540": {
      "op": "SWAP2"
    },
    "2541": {
      "op": "SWAP1"
    },
    "2542": {
      "op": "POP"
    },
    "2543": {
      "jump": "o",
      "op": "JUMP"
    },
    "2544": {
      "op": "JUMPDEST"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2549": {
      "op": "DUP3"
    },
    "2550": {
      "op": "DUP5"
    },
    "2551": {
      "op": "SUB"
    },
    "2552": {
      "op": "SLT"
    },
    "2553": {
      "op": "ISZERO"
    },
    "2554": {
      "op": "PUSH2",
      "value": "0xA02"
    },
    "2557": {
      "op": "JUMPI"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2560": {
      "op": "DUP1"
    },
    "2561": {
      "op": "REVERT"
    },
    "2562": {
      "op": "JUMPDEST"
    },
    "2563": {
      "op": "DUP2"
    },
    "2564": {
      "op": "MLOAD"
    },
    "2565": {
      "op": "DUP1"
    },
    "2566": {
      "op": "ISZERO"
    },
    "2567": {
      "op": "ISZERO"
    },
    "2568": {
      "op": "DUP2"
    },
    "2569": {
      "op": "EQ"
    },
    "2570": {
      "op": "PUSH2",
      "value": "0x793"
    },
    "2573": {
      "op": "JUMPI"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2576": {
      "op": "DUP1"
    },
    "2577": {
      "op": "REVERT"
    },
    "2578": {
      "op": "JUMPDEST"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2581": {
      "op": "JUMPDEST"
    },
    "2582": {
      "op": "DUP4"
    },
    "2583": {
      "op": "DUP2"
    },
    "2584": {
      "op": "LT"
    },
    "2585": {
      "op": "ISZERO"
    },
    "2586": {
      "op": "PUSH2",
      "value": "0xA2D"
    },
    "2589": {
      "op": "JUMPI"
    },
    "2590": {
      "op": "DUP2"
    },
    "2591": {
      "op": "DUP2"
    },
    "2592": {
      "op": "ADD"
    },
    "2593": {
      "op": "MLOAD"
    },
    "2594": {
      "op": "DUP4"
    },
    "2595": {
      "op": "DUP3"
    },
    "2596": {
      "op": "ADD"
    },
    "2597": {
      "op": "MSTORE"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2600": {
      "op": "ADD"
    },
    "2601": {
      "op": "PUSH2",
      "value": "0xA15"
    },
    "2604": {
      "op": "JUMP"
    },
    "2605": {
      "op": "JUMPDEST"
    },
    "2606": {
      "op": "DUP4"
    },
    "2607": {
      "op": "DUP2"
    },
    "2608": {
      "op": "GT"
    },
    "2609": {
      "op": "ISZERO"
    },
    "2610": {
      "op": "PUSH2",
      "value": "0x6A4"
    },
    "2613": {
      "op": "JUMPI"
    },
    "2614": {
      "op": "POP"
    },
    "2615": {
      "op": "POP"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2618": {
      "op": "SWAP2"
    },
    "2619": {
      "op": "ADD"
    },
    "2620": {
      "op": "MSTORE"
    },
    "2621": {
      "jump": "o",
      "op": "JUMP"
    },
    "2622": {
      "op": "JUMPDEST"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2625": {
      "op": "DUP3"
    },
    "2626": {
      "op": "MLOAD"
    },
    "2627": {
      "op": "PUSH2",
      "value": "0xA50"
    },
    "2630": {
      "op": "DUP2"
    },
    "2631": {
      "op": "DUP5"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2634": {
      "op": "DUP8"
    },
    "2635": {
      "op": "ADD"
    },
    "2636": {
      "op": "PUSH2",
      "value": "0xA12"
    },
    "2639": {
      "jump": "i",
      "op": "JUMP"
    },
    "2640": {
      "op": "JUMPDEST"
    },
    "2641": {
      "op": "SWAP2"
    },
    "2642": {
      "op": "SWAP1"
    },
    "2643": {
      "op": "SWAP2"
    },
    "2644": {
      "op": "ADD"
    },
    "2645": {
      "op": "SWAP3"
    },
    "2646": {
      "op": "SWAP2"
    },
    "2647": {
      "op": "POP"
    },
    "2648": {
      "op": "POP"
    },
    "2649": {
      "jump": "o",
      "op": "JUMP"
    },
    "2650": {
      "op": "JUMPDEST"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2653": {
      "op": "DUP2"
    },
    "2654": {
      "op": "MSTORE"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2657": {
      "op": "DUP3"
    },
    "2658": {
      "op": "MLOAD"
    },
    "2659": {
      "op": "DUP1"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2662": {
      "op": "DUP5"
    },
    "2663": {
      "op": "ADD"
    },
    "2664": {
      "op": "MSTORE"
    },
    "2665": {
      "op": "PUSH2",
      "value": "0xA79"
    },
    "2668": {
      "op": "DUP2"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2671": {
      "op": "DUP6"
    },
    "2672": {
      "op": "ADD"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2675": {
      "op": "DUP8"
    },
    "2676": {
      "op": "ADD"
    },
    "2677": {
      "op": "PUSH2",
      "value": "0xA12"
    },
    "2680": {
      "jump": "i",
      "op": "JUMP"
    },
    "2681": {
      "op": "JUMPDEST"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2684": {
      "op": "ADD"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2687": {
      "op": "NOT"
    },
    "2688": {
      "op": "AND"
    },
    "2689": {
      "op": "SWAP2"
    },
    "2690": {
      "op": "SWAP1"
    },
    "2691": {
      "op": "SWAP2"
    },
    "2692": {
      "op": "ADD"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2695": {
      "op": "ADD"
    },
    "2696": {
      "op": "SWAP3"
    },
    "2697": {
      "op": "SWAP2"
    },
    "2698": {
      "op": "POP"
    },
    "2699": {
      "op": "POP"
    },
    "2700": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ef3e8c0bb297a92cecf117953c916050e7f6832b",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol\";\nimport \"../interfaces/IProofSubmitter.sol\";\nimport \"./RaisyncUtils.sol\";\n\n\ncontract FillManager is Ownable {\n    using SafeERC20 for IERC20;\n\n    event RequestFilled(\n        uint256 indexed requestId,\n        bytes32 fillId,\n        uint256 indexed sourceChainId,\n        address indexed targetTokenAddress,\n        address filler,\n        uint256 amount\n    );\n\n    event LPAdded(\n        address lp\n    );\n\n    event LPRemoved(\n        address lp\n    );\n\n    address public l1Resolver;\n    IProofSubmitter public proofSubmitter;\n\n    mapping(bytes32 => bool) public fills;\n    mapping(address => bool) public allowedLPs;\n\n    constructor(address _l1Resolver, address _proofSubmitter)\n    {\n        l1Resolver = _l1Resolver;\n        proofSubmitter = IProofSubmitter(_proofSubmitter);\n    }\n\n    function fillRequest(\n        uint256 requestId,\n        uint256 sourceChainId,\n        address targetTokenAddress,\n        address targetReceiverAddress,\n        uint256 amount\n    )\n    external\n    returns (bytes32)\n    {\n        require(allowedLPs[msg.sender], \"Sender not whitelisted\");\n        bytes32 requestHash = RaisyncUtils.createRequestHash(\n                requestId, sourceChainId, block.chainid, targetTokenAddress, targetReceiverAddress, amount\n            );\n\n        require(!fills[requestHash], \"Already filled\");\n        fills[requestHash] = true;\n\n        IERC20 token = IERC20(targetTokenAddress);\n        token.safeTransferFrom(msg.sender, targetReceiverAddress, amount);\n\n        bytes32 fillId = proofSubmitter.submitProof(l1Resolver, requestHash, sourceChainId, msg.sender);\n        require(\n            fillId != 0,\n            \"Submitting proof data failed\"\n        );\n\n        emit RequestFilled(requestId, fillId, sourceChainId, targetTokenAddress, msg.sender, amount);\n\n        return fillId;\n    }\n\n    function addAllowedLP(address newLP) public onlyOwner {\n        allowedLPs[newLP] = true;\n\n        emit LPAdded(newLP);\n    }\n\n    function removeAllowedLP(address oldLP) public onlyOwner {\n        delete allowedLPs[oldLP];\n\n        emit LPRemoved(oldLP);\n    }\n}\n",
  "sourceMap": "393:2020:9:-:0;;;947:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:6;921:18:0;:32::i;:::-;1019:10:9;:24;;-1:-1:-1;;;;;1019:24:9;;;-1:-1:-1;;;;;;1019:24:9;;;;;;;1053:14;:49;;;;;;;;;;;393:2020;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:21:-;93:13;;-1:-1:-1;;;;;135:31:21;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;393:2020:9;;;;;;",
  "sourcePath": "contracts/contracts/FillManager.sol",
  "type": "contract"
}