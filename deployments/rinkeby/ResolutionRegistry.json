{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillHash",
          "type": "bytes32"
        }
      ],
      "name": "FillHashInvalidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "RequestResolved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "fillers",
      "outputs": [
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "invalidFillHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "resolutionChainId",
          "type": "uint256"
        }
      ],
      "name": "invalidateFill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "messengers",
      "outputs": [
        {
          "internalType": "contract IMessenger",
          "name": "messenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "resolutionChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        }
      ],
      "name": "resolveRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "13": "contracts/contracts/ResolutionRegistry.sol",
    "6": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "8": "contracts/contracts/BeamerUtils.sol",
    "9": "contracts/contracts/CrossDomainRestrictedCalls.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/ResolutionRegistry.sol",
    "exportedSymbols": {
      "BeamerUtils": [
        87
      ],
      "Context": [
        4099
      ],
      "CrossDomainRestrictedCalls": [
        192
      ],
      "IMessenger": [
        3063
      ],
      "Ownable": [
        3037
      ],
      "ResolutionRegistry": [
        2168
      ]
    },
    "id": 2169,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2020,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:13"
      },
      {
        "absolutePath": "contracts/contracts/CrossDomainRestrictedCalls.sol",
        "file": "./CrossDomainRestrictedCalls.sol",
        "id": 2021,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2169,
        "sourceUnit": 193,
        "src": "58:42:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/BeamerUtils.sol",
        "file": "./BeamerUtils.sol",
        "id": 2022,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2169,
        "sourceUnit": 88,
        "src": "101:27:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2024,
              "name": "CrossDomainRestrictedCalls",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 192,
              "src": "665:26:13"
            },
            "id": 2025,
            "nodeType": "InheritanceSpecifier",
            "src": "665:26:13"
          }
        ],
        "canonicalName": "ResolutionRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2023,
          "nodeType": "StructuredDocumentation",
          "src": "130:504:13",
          "text": "The resolution registry.\n This contract resides on the source L2 chain and is tasked with keeping track of results\n of L1 resolution. In particular, it stores the information about known fills and fillers,\n as well as fills that were marked invalid. This information is used by the :sol:contract:`RequestManager`\n to resolve claims.\n .. note::\n   This contract can only be called by the :sol:contract:`Resolver` contract, via a\n   chain-dependent messenger contract."
        },
        "fullyImplemented": true,
        "id": 2168,
        "linearizedBaseContracts": [
          2168,
          192,
          3037,
          4099
        ],
        "name": "ResolutionRegistry",
        "nameLocation": "643:18:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 2026,
              "nodeType": "StructuredDocumentation",
              "src": "698:119:13",
              "text": "Emitted when a request has been resolved via L1 resolution.\n .. seealso:: :sol:func:`resolveRequest`"
            },
            "eventSelector": "b32d3c8b5539b0cc3050d5b75e9dad8eca8744a0892259bda27fdb51b9956736",
            "id": 2034,
            "name": "RequestResolved",
            "nameLocation": "828:15:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2028,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "852:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2034,
                  "src": "844:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2027,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2030,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "873:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2034,
                  "src": "865:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2032,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "889:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2034,
                  "src": "881:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2031,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "843:53:13"
            },
            "src": "822:75:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2035,
              "nodeType": "StructuredDocumentation",
              "src": "903:106:13",
              "text": "Emitted when a fill hash has been invalidated.\n .. seealso:: :sol:func:`invalidateFill`"
            },
            "eventSelector": "d2ed11d62e8abe0378a90806e61f7299c93ec10ac51b53acf184634c2ae0d963",
            "id": 2039,
            "name": "FillHashInvalidated",
            "nameLocation": "1020:19:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2037,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillHash",
                  "nameLocation": "1048:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "1040:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2036,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1039:18:13"
            },
            "src": "1014:44:13"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2040,
              "nodeType": "StructuredDocumentation",
              "src": "1064:38:13",
              "text": "Maps request hashes to fill infos."
            },
            "functionSelector": "a64a2271",
            "id": 2045,
            "mutability": "mutable",
            "name": "fillers",
            "nameLocation": "1155:7:13",
            "nodeType": "VariableDeclaration",
            "scope": 2168,
            "src": "1107:55:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FillInfo_$6_storage_$",
              "typeString": "mapping(bytes32 => struct BeamerUtils.FillInfo)"
            },
            "typeName": {
              "id": 2044,
              "keyType": {
                "id": 2041,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1115:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1107:40:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FillInfo_$6_storage_$",
                "typeString": "mapping(bytes32 => struct BeamerUtils.FillInfo)"
              },
              "valueType": {
                "id": 2043,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2042,
                  "name": "BeamerUtils.FillInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6,
                  "src": "1126:20:13"
                },
                "referencedDeclaration": 6,
                "src": "1126:20:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FillInfo_$6_storage_ptr",
                  "typeString": "struct BeamerUtils.FillInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2046,
              "nodeType": "StructuredDocumentation",
              "src": "1169:35:13",
              "text": "The set of invalid fill hashes."
            },
            "functionSelector": "a751732f",
            "id": 2050,
            "mutability": "mutable",
            "name": "invalidFillHashes",
            "nameLocation": "1241:17:13",
            "nodeType": "VariableDeclaration",
            "scope": 2168,
            "src": "1209:49:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 2049,
              "keyType": {
                "id": 2047,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1217:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1209:24:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 2048,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1228:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2110,
              "nodeType": "Block",
              "src": "2002:461:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2068,
                              "name": "fillers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2045,
                              "src": "2033:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FillInfo_$6_storage_$",
                                "typeString": "mapping(bytes32 => struct BeamerUtils.FillInfo storage ref)"
                              }
                            },
                            "id": 2070,
                            "indexExpression": {
                              "id": 2069,
                              "name": "requestHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2053,
                              "src": "2041:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2033:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FillInfo_$6_storage",
                              "typeString": "struct BeamerUtils.FillInfo storage ref"
                            }
                          },
                          "id": 2071,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "filler",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3,
                          "src": "2033:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2072:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2064:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2072,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2064:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2064:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2033:41:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265736f6c7574696f6e20616c7265616479207265636f72646564",
                        "id": 2077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2088:29:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80dfbb234bb0ba9e0400be72c26dac23212e8f221d275ba1afa2fe3c58c3a523",
                          "typeString": "literal_string \"Resolution already recorded\""
                        },
                        "value": "Resolution already recorded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80dfbb234bb0ba9e0400be72c26dac23212e8f221d275ba1afa2fe3c58c3a523",
                          "typeString": "literal_string \"Resolution already recorded\""
                        }
                      ],
                      "id": 2067,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2012:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2012:115:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2079,
                  "nodeType": "ExpressionStatement",
                  "src": "2012:115:13"
                },
                {
                  "expression": {
                    "id": 2088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2080,
                        "name": "fillers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2045,
                        "src": "2137:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FillInfo_$6_storage_$",
                          "typeString": "mapping(bytes32 => struct BeamerUtils.FillInfo storage ref)"
                        }
                      },
                      "id": 2082,
                      "indexExpression": {
                        "id": 2081,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2053,
                        "src": "2145:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2137:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillInfo_$6_storage",
                        "typeString": "struct BeamerUtils.FillInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2085,
                          "name": "filler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2059,
                          "src": "2181:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2086,
                          "name": "fillId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2055,
                          "src": "2189:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 2083,
                          "name": "BeamerUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "2160:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$87_$",
                            "typeString": "type(library BeamerUtils)"
                          }
                        },
                        "id": 2084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FillInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6,
                        "src": "2160:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FillInfo_$6_storage_ptr_$",
                          "typeString": "type(struct BeamerUtils.FillInfo storage pointer)"
                        }
                      },
                      "id": 2087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2160:36:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillInfo_$6_memory_ptr",
                        "typeString": "struct BeamerUtils.FillInfo memory"
                      }
                    },
                    "src": "2137:59:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillInfo_$6_storage",
                      "typeString": "struct BeamerUtils.FillInfo storage ref"
                    }
                  },
                  "id": 2089,
                  "nodeType": "ExpressionStatement",
                  "src": "2137:59:13"
                },
                {
                  "assignments": [
                    2091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2091,
                      "mutability": "mutable",
                      "name": "fillHash",
                      "nameLocation": "2293:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2110,
                      "src": "2285:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2090,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2285:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2097,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2094,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2053,
                        "src": "2331:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2095,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2055,
                        "src": "2344:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2092,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "2304:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$87_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 2093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createFillHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "2304:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 2096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2304:47:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2285:66:13"
                },
                {
                  "expression": {
                    "id": 2102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2098,
                        "name": "invalidFillHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "2361:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2100,
                      "indexExpression": {
                        "id": 2099,
                        "name": "fillHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2091,
                        "src": "2379:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2361:27:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2391:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2361:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2103,
                  "nodeType": "ExpressionStatement",
                  "src": "2361:35:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2105,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2053,
                        "src": "2428:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2106,
                        "name": "filler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2059,
                        "src": "2441:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2107,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2055,
                        "src": "2449:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2104,
                      "name": "RequestResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2034,
                      "src": "2412:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,address,bytes32)"
                      }
                    },
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2412:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2109,
                  "nodeType": "EmitStatement",
                  "src": "2407:49:13"
                }
              ]
            },
            "documentation": {
              "id": 2051,
              "nodeType": "StructuredDocumentation",
              "src": "1265:539:13",
              "text": "Mark the request identified by ``requestHash`` as filled by ``filler``.\n .. note::\n     This function is callable only by the native L2 messenger contract,\n     which simply delivers the message sent from L1 by the\n     Beamer's L2 :sol:interface:`messenger <IMessenger>` contract.\n @param requestHash The request hash.\n @param fillId The fill ID.\n @param resolutionChainId The resolution (L1) chain ID.\n @param filler The address that filled the request."
            },
            "functionSelector": "5b3a6ef2",
            "id": 2111,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2062,
                    "name": "resolutionChainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2057,
                    "src": "1971:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "expression": {
                      "id": 2063,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1990:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1990:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2065,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2061,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 191,
                  "src": "1960:10:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1960:41:13"
              }
            ],
            "name": "resolveRequest",
            "nameLocation": "1818:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2053,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "1850:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2111,
                  "src": "1842:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2052,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1842:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2055,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "1879:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2111,
                  "src": "1871:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2054,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1871:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2057,
                  "mutability": "mutable",
                  "name": "resolutionChainId",
                  "nameLocation": "1903:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2111,
                  "src": "1895:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2059,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "1938:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2111,
                  "src": "1930:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1930:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1832:118:13"
            },
            "returnParameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2002:0:13"
            },
            "scope": 2168,
            "src": "1809:654:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2166,
              "nodeType": "Block",
              "src": "3102:429:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2127,
                              "name": "fillers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2045,
                              "src": "3133:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FillInfo_$6_storage_$",
                                "typeString": "mapping(bytes32 => struct BeamerUtils.FillInfo storage ref)"
                              }
                            },
                            "id": 2129,
                            "indexExpression": {
                              "id": 2128,
                              "name": "requestHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2114,
                              "src": "3141:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3133:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FillInfo_$6_storage",
                              "typeString": "struct BeamerUtils.FillInfo storage ref"
                            }
                          },
                          "id": 2130,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "filler",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3,
                          "src": "3133:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3172:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3164:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2131,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3164:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3164:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3133:41:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420696e76616c6964617465207265736f6c7665642066696c6c486173686573",
                        "id": 2136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3188:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6bcd16092e60b2cb2e99f8dba49c4a77959250b6c9057bf7cbac41d7ca84c22e",
                          "typeString": "literal_string \"Cannot invalidate resolved fillHashes\""
                        },
                        "value": "Cannot invalidate resolved fillHashes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6bcd16092e60b2cb2e99f8dba49c4a77959250b6c9057bf7cbac41d7ca84c22e",
                          "typeString": "literal_string \"Cannot invalidate resolved fillHashes\""
                        }
                      ],
                      "id": 2126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3112:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:125:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2138,
                  "nodeType": "ExpressionStatement",
                  "src": "3112:125:13"
                },
                {
                  "assignments": [
                    2140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2140,
                      "mutability": "mutable",
                      "name": "fillHash",
                      "nameLocation": "3255:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2166,
                      "src": "3247:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2139,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3247:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2146,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2143,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2114,
                        "src": "3293:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2144,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2116,
                        "src": "3306:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2141,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "3266:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$87_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 2142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createFillHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "3266:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3266:47:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3247:66:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2148,
                            "name": "invalidFillHashes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2050,
                            "src": "3344:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 2150,
                          "indexExpression": {
                            "id": 2149,
                            "name": "fillHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2140,
                            "src": "3362:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3344:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 2151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3375:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3344:36:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c6c4861736820616c726561647920696e76616c696461746564",
                        "id": 2153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3394:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_52207bbc4ed199b6be22190087c385bbf9f8a06cb373210d07fcc260b474a8a1",
                          "typeString": "literal_string \"FillHash already invalidated\""
                        },
                        "value": "FillHash already invalidated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_52207bbc4ed199b6be22190087c385bbf9f8a06cb373210d07fcc260b474a8a1",
                          "typeString": "literal_string \"FillHash already invalidated\""
                        }
                      ],
                      "id": 2147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3323:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3323:111:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2155,
                  "nodeType": "ExpressionStatement",
                  "src": "3323:111:13"
                },
                {
                  "expression": {
                    "id": 2160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2156,
                        "name": "invalidFillHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "3445:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2158,
                      "indexExpression": {
                        "id": 2157,
                        "name": "fillHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2140,
                        "src": "3463:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3445:27:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3475:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3445:34:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2161,
                  "nodeType": "ExpressionStatement",
                  "src": "3445:34:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2163,
                        "name": "fillHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2140,
                        "src": "3515:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2162,
                      "name": "FillHashInvalidated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "3495:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 2164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3495:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2165,
                  "nodeType": "EmitStatement",
                  "src": "3490:34:13"
                }
              ]
            },
            "documentation": {
              "id": 2112,
              "nodeType": "StructuredDocumentation",
              "src": "2469:459:13",
              "text": "Mark the fill identified by ``fillId`` as invalid.\n .. note::\n     This function is callable only by the native L2 messenger contract,\n     which simply delivers the message sent from L1 by the\n     Beamer's L2 :sol:interface:`messenger <IMessenger>` contract.\n @param requestHash The request hash.\n @param fillId The fill ID.\n @param resolutionChainId The resolution (L1) chain ID."
            },
            "functionSelector": "03fc4c37",
            "id": 2167,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2121,
                    "name": "resolutionChainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2118,
                    "src": "3071:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "expression": {
                      "id": 2122,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3090:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3090:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2124,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2120,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 191,
                  "src": "3060:10:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3060:41:13"
              }
            ],
            "name": "invalidateFill",
            "nameLocation": "2942:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2114,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "2974:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2167,
                  "src": "2966:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2113,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2966:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2116,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "3003:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2167,
                  "src": "2995:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2115,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2995:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2118,
                  "mutability": "mutable",
                  "name": "resolutionChainId",
                  "nameLocation": "3027:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2167,
                  "src": "3019:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3019:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2956:94:13"
            },
            "returnParameters": {
              "id": 2125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3102:0:13"
            },
            "scope": 2168,
            "src": "2933:598:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2169,
        "src": "634:2899:13",
        "usedErrors": []
      }
    ],
    "src": "32:3502:13"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610b3f8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637203ae3b116100665780637203ae3b146101215780638da5cb5b14610134578063a64a22711461014f578063a751732f146101a1578063f2fde38b146101d457600080fd5b806303fc4c371461009857806324ec66b3146100ad5780635b3a6ef214610106578063715018a614610119575b600080fd5b6100ab6100a6366004610981565b6101e7565b005b6100e16100bb3660046109ad565b600160208190526000918252604090912080549101546001600160a01b03918216911682565b604080516001600160a01b039384168152929091166020830152015b60405180910390f35b6100ab6101143660046109db565b6104ba565b6100ab61077b565b6100ab61012f366004610a1c565b6107b1565b6000546040516001600160a01b0390911681526020016100fd565b61018261015d3660046109ad565b600260205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016100fd565b6101c46101af3660046109ad565b60036020526000908152604090205460ff1681565b60405190151581526020016100fd565b6100ab6101e2366004610a5e565b610896565b60008181526001602052604090208054829133916001600160a01b03166102295760405162461bcd60e51b815260040161022090610a82565b60405180910390fd5b805460408051630ef12e4760e31b815290516001600160a01b03909216916377897238916004808201926020929091908290030181865afa158015610272573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102969190610ab7565b6001600160a01b0316826001600160a01b0316146102c65760405162461bcd60e51b815260040161022090610a82565b600181015481546040805163383d6f0760e11b815290516001600160a01b03938416939092169163707ade0e916004808201926020929091908290030181865afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c9190610ab7565b6001600160a01b0316146103625760405162461bcd60e51b815260040161022090610a82565b6000868152600260205260409020546001600160a01b0316156103d55760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f7420696e76616c6964617465207265736f6c7665642066696c6c48604482015264617368657360d81b6064820152608401610220565b60408051602080820189905281830188905282518083038401815260609092018352815191810191909120600081815260039092529190205460ff161561045e5760405162461bcd60e51b815260206004820152601c60248201527f46696c6c4861736820616c726561647920696e76616c696461746564000000006044820152606401610220565b60008181526003602052604090819020805460ff19166001179055517fd2ed11d62e8abe0378a90806e61f7299c93ec10ac51b53acf184634c2ae0d963906104a99083815260200190565b60405180910390a150505050505050565b60008281526001602052604090208054839133916001600160a01b03166104f35760405162461bcd60e51b815260040161022090610a82565b805460408051630ef12e4760e31b815290516001600160a01b03909216916377897238916004808201926020929091908290030181865afa15801561053c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105609190610ab7565b6001600160a01b0316826001600160a01b0316146105905760405162461bcd60e51b815260040161022090610a82565b600181015481546040805163383d6f0760e11b815290516001600160a01b03938416939092169163707ade0e916004808201926020929091908290030181865afa1580156105e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106069190610ab7565b6001600160a01b03161461062c5760405162461bcd60e51b815260040161022090610a82565b6000878152600260205260409020546001600160a01b0316156106915760405162461bcd60e51b815260206004820152601b60248201527f5265736f6c7574696f6e20616c7265616479207265636f7264656400000000006044820152606401610220565b6040805180820182526001600160a01b03868116825260208083018a815260008c81526002909252938120925183546001600160a01b0319169216919091178255915160019091015561070b8888604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600081815260036020908152604091829020805460ff1916905581518b81526001600160a01b038916918101919091529081018990529091507fb32d3c8b5539b0cc3050d5b75e9dad8eca8744a0892259bda27fdb51b99567369060600160405180910390a15050505050505050565b6000546001600160a01b031633146107a55760405162461bcd60e51b815260040161022090610ad4565b6107af6000610931565b565b6000546001600160a01b031633146107db5760405162461bcd60e51b815260040161022090610ad4565b6001600160a01b03821661083d5760405162461bcd60e51b815260206004820152602360248201527f585265737472696374656443616c6c733a20696e76616c6964206d657373656e60448201526233b2b960e91b6064820152608401610220565b6040805180820182526001600160a01b0393841681529183166020808401918252600095865260019081905291909420915182546001600160a01b03199081169185169190911783559351910180549093169116179055565b6000546001600160a01b031633146108c05760405162461bcd60e51b815260040161022090610ad4565b6001600160a01b0381166109255760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610220565b61092e81610931565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060006060848603121561099657600080fd5b505081359360208301359350604090920135919050565b6000602082840312156109bf57600080fd5b5035919050565b6001600160a01b038116811461092e57600080fd5b600080600080608085870312156109f157600080fd5b8435935060208501359250604085013591506060850135610a11816109c6565b939692955090935050565b600080600060608486031215610a3157600080fd5b833592506020840135610a43816109c6565b91506040840135610a53816109c6565b809150509250925092565b600060208284031215610a7057600080fd5b8135610a7b816109c6565b9392505050565b6020808252818101527f585265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c6572604082015260600190565b600060208284031215610ac957600080fd5b8151610a7b816109c6565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220b66d4c3a12412c742d32961bc972508568c340b331caab4f469f1730637ca95b64736f6c634300080d0033",
  "bytecodeSha1": "aff29c4e30f4f0162f1fe68820e9ad8161a60540",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ResolutionRegistry",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "24": [
            2006,
            2028,
            true
          ]
        }
      },
      "13": {
        "ResolutionRegistry.invalidateFill": {
          "18": [
            3133,
            3174,
            true
          ],
          "19": [
            3344,
            3380,
            true
          ]
        },
        "ResolutionRegistry.resolveRequest": {
          "20": [
            2033,
            2074,
            true
          ]
        }
      },
      "6": {},
      "8": {},
      "9": {
        "CrossDomainRestrictedCalls.addCaller": {
          "23": [
            1378,
            1401,
            true
          ]
        },
        "ResolutionRegistry.resolveRequest": {
          "21": [
            2087,
            2126,
            true
          ],
          "22": [
            2215,
            2255,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "16": [
            2378,
            2395
          ],
          "17": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "11": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "14": [
            1998,
            2071
          ],
          "15": [
            2081,
            2109
          ]
        }
      },
      "13": {
        "ResolutionRegistry.invalidateFill": {
          "1": [
            3112,
            3237
          ],
          "3": [
            3323,
            3434
          ],
          "4": [
            3445,
            3479
          ],
          "5": [
            3490,
            3524
          ]
        },
        "ResolutionRegistry.resolveRequest": {
          "6": [
            2012,
            2127
          ],
          "7": [
            2137,
            2196
          ],
          "8": [
            2361,
            2396
          ],
          "9": [
            2407,
            2456
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "10": [
            712,
            729
          ]
        }
      },
      "8": {
        "BeamerUtils.createFillHash": {
          "2": [
            874,
            929
          ]
        }
      },
      "9": {
        "CrossDomainRestrictedCalls.addCaller": {
          "12": [
            1370,
            1441
          ],
          "13": [
            1451,
            1519
          ]
        }
      }
    }
  },
  "dependencies": [
    "BeamerUtils",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "CrossDomainRestrictedCalls",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c80637203ae3b116100665780637203ae3b146101215780638da5cb5b14610134578063a64a22711461014f578063a751732f146101a1578063f2fde38b146101d457600080fd5b806303fc4c371461009857806324ec66b3146100ad5780635b3a6ef214610106578063715018a614610119575b600080fd5b6100ab6100a6366004610981565b6101e7565b005b6100e16100bb3660046109ad565b600160208190526000918252604090912080549101546001600160a01b03918216911682565b604080516001600160a01b039384168152929091166020830152015b60405180910390f35b6100ab6101143660046109db565b6104ba565b6100ab61077b565b6100ab61012f366004610a1c565b6107b1565b6000546040516001600160a01b0390911681526020016100fd565b61018261015d3660046109ad565b600260205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016100fd565b6101c46101af3660046109ad565b60036020526000908152604090205460ff1681565b60405190151581526020016100fd565b6100ab6101e2366004610a5e565b610896565b60008181526001602052604090208054829133916001600160a01b03166102295760405162461bcd60e51b815260040161022090610a82565b60405180910390fd5b805460408051630ef12e4760e31b815290516001600160a01b03909216916377897238916004808201926020929091908290030181865afa158015610272573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102969190610ab7565b6001600160a01b0316826001600160a01b0316146102c65760405162461bcd60e51b815260040161022090610a82565b600181015481546040805163383d6f0760e11b815290516001600160a01b03938416939092169163707ade0e916004808201926020929091908290030181865afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c9190610ab7565b6001600160a01b0316146103625760405162461bcd60e51b815260040161022090610a82565b6000868152600260205260409020546001600160a01b0316156103d55760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f7420696e76616c6964617465207265736f6c7665642066696c6c48604482015264617368657360d81b6064820152608401610220565b60408051602080820189905281830188905282518083038401815260609092018352815191810191909120600081815260039092529190205460ff161561045e5760405162461bcd60e51b815260206004820152601c60248201527f46696c6c4861736820616c726561647920696e76616c696461746564000000006044820152606401610220565b60008181526003602052604090819020805460ff19166001179055517fd2ed11d62e8abe0378a90806e61f7299c93ec10ac51b53acf184634c2ae0d963906104a99083815260200190565b60405180910390a150505050505050565b60008281526001602052604090208054839133916001600160a01b03166104f35760405162461bcd60e51b815260040161022090610a82565b805460408051630ef12e4760e31b815290516001600160a01b03909216916377897238916004808201926020929091908290030181865afa15801561053c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105609190610ab7565b6001600160a01b0316826001600160a01b0316146105905760405162461bcd60e51b815260040161022090610a82565b600181015481546040805163383d6f0760e11b815290516001600160a01b03938416939092169163707ade0e916004808201926020929091908290030181865afa1580156105e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106069190610ab7565b6001600160a01b03161461062c5760405162461bcd60e51b815260040161022090610a82565b6000878152600260205260409020546001600160a01b0316156106915760405162461bcd60e51b815260206004820152601b60248201527f5265736f6c7574696f6e20616c7265616479207265636f7264656400000000006044820152606401610220565b6040805180820182526001600160a01b03868116825260208083018a815260008c81526002909252938120925183546001600160a01b0319169216919091178255915160019091015561070b8888604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600081815260036020908152604091829020805460ff1916905581518b81526001600160a01b038916918101919091529081018990529091507fb32d3c8b5539b0cc3050d5b75e9dad8eca8744a0892259bda27fdb51b99567369060600160405180910390a15050505050505050565b6000546001600160a01b031633146107a55760405162461bcd60e51b815260040161022090610ad4565b6107af6000610931565b565b6000546001600160a01b031633146107db5760405162461bcd60e51b815260040161022090610ad4565b6001600160a01b03821661083d5760405162461bcd60e51b815260206004820152602360248201527f585265737472696374656443616c6c733a20696e76616c6964206d657373656e60448201526233b2b960e91b6064820152608401610220565b6040805180820182526001600160a01b0393841681529183166020808401918252600095865260019081905291909420915182546001600160a01b03199081169185169190911783559351910180549093169116179055565b6000546001600160a01b031633146108c05760405162461bcd60e51b815260040161022090610ad4565b6001600160a01b0381166109255760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610220565b61092e81610931565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060006060848603121561099657600080fd5b505081359360208301359350604090920135919050565b6000602082840312156109bf57600080fd5b5035919050565b6001600160a01b038116811461092e57600080fd5b600080600080608085870312156109f157600080fd5b8435935060208501359250604085013591506060850135610a11816109c6565b939692955090935050565b600080600060608486031215610a3157600080fd5b833592506020840135610a43816109c6565b91506040840135610a53816109c6565b809150509250925092565b600060208284031215610a7057600080fd5b8135610a7b816109c6565b9392505050565b6020808252818101527f585265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c6572604082015260600190565b600060208284031215610ac957600080fd5b8151610a7b816109c6565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220b66d4c3a12412c742d32961bc972508568c340b331caab4f469f1730637ca95b64736f6c634300080d0033",
  "deployedSourceMap": "634:2899:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2933:598;;;;;;:::i;:::-;;:::i;:::-;;906:53:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;906:53:9;;;;;;;;;;;-1:-1:-1;;;;;769:15:25;;;751:34;;821:15;;;;816:2;801:18;;794:43;686:18;906:53:9;;;;;;;;1809:654:13;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;1240:286:9:-;;;;;;:::i;:::-;;:::i;1036:85:0:-;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;2048:51:25;;2036:2;2021:18;1036:85:0;1902:203:25;1107:55:13;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1107:55:13;;;;;;;;;;-1:-1:-1;;;;;2487:32:25;;;2469:51;;2551:2;2536:18;;2529:34;;;;2442:18;1107:55:13;2295:274:25;1209:49:13;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2739:14:25;;2732:22;2714:41;;2702:2;2687:18;1209:49:13;2574:187:25;1918:198:0;;;;;;:::i;:::-;;:::i;2933:598:13:-;1886:25:9;1914:19;;;:10;:19;;;;;1972:11;;3071:17:13;;3090:10;;-1:-1:-1;;;;;1972:11:9;1943:113;;;;-1:-1:-1;;;1943:113:9;;;;;;;:::i;:::-;;;;;;;;;2097:11;;:29;;;-1:-1:-1;;;2097:29:9;;;;-1:-1:-1;;;;;2097:11:9;;;;:27;;:29;;;;;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2087:39:9;:6;-1:-1:-1;;;;;2087:39:9;;2066:118;;;;-1:-1:-1;;;2066:118:9;;;;;;;:::i;:::-;2247:8;;;;2215:11;;:28;;;-1:-1:-1;;;2215:28:9;;;;-1:-1:-1;;;;;2247:8:9;;;;2215:11;;;;:26;;:28;;;;;;;;;;;;;;;:11;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2215:40:9;;2194:119;;;;-1:-1:-1;;;2194:119:9;;;;;;;:::i;:::-;3172:1:13::1;3133:20:::0;;;:7:::1;:20;::::0;;;;:27;-1:-1:-1;;;;;3133:27:13::1;:41:::0;3112:125:::1;;;::::0;-1:-1:-1;;;3112:125:13;;3837:2:25;3112:125:13::1;::::0;::::1;3819:21:25::0;3876:2;3856:18;;;3849:30;3915:34;3895:18;;;3888:62;-1:-1:-1;;;3966:18:25;;;3959:35;4011:19;;3112:125:13::1;3635:401:25::0;3112:125:13::1;891:37:8::0;;;;;;;6615:19:25;;;6650:12;;;6643:28;;;891:37:8;;;;;;;;;6687:12:25;;;;891:37:8;;881:48;;;;;;;;;-1:-1:-1;3344:27:13;;;:17:::1;:27:::0;;;;;;;::::1;;:36;3323:111;;;::::0;-1:-1:-1;;;3323:111:13;;4243:2:25;3323:111:13::1;::::0;::::1;4225:21:25::0;4282:2;4262:18;;;4255:30;4321;4301:18;;;4294:58;4369:18;;3323:111:13::1;4041:352:25::0;3323:111:13::1;3445:27;::::0;;;:17:::1;:27;::::0;;;;;;:34;;-1:-1:-1;;3445:34:13::1;3475:4;3445:34;::::0;;3495:29;::::1;::::0;::::1;::::0;3463:8;4544:25:25;;4532:2;4517:18;;4398:177;3495:29:13::1;;;;;;;;3102:429;1876:455:9::0;2933:598:13;;;;;:::o;1809:654::-;1886:25:9;1914:19;;;:10;:19;;;;;1972:11;;1971:17:13;;1990:10;;-1:-1:-1;;;;;1972:11:9;1943:113;;;;-1:-1:-1;;;1943:113:9;;;;;;;:::i;:::-;2097:11;;:29;;;-1:-1:-1;;;2097:29:9;;;;-1:-1:-1;;;;;2097:11:9;;;;:27;;:29;;;;;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2087:39:9;:6;-1:-1:-1;;;;;2087:39:9;;2066:118;;;;-1:-1:-1;;;2066:118:9;;;;;;;:::i;:::-;2247:8;;;;2215:11;;:28;;;-1:-1:-1;;;2215:28:9;;;;-1:-1:-1;;;;;2247:8:9;;;;2215:11;;;;:26;;:28;;;;;;;;;;;;;;;:11;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2215:40:9;;2194:119;;;;-1:-1:-1;;;2194:119:9;;;;;;;:::i;:::-;2072:1:13::1;2033:20:::0;;;:7:::1;:20;::::0;;;;:27;-1:-1:-1;;;;;2033:27:13::1;:41:::0;2012:115:::1;;;::::0;-1:-1:-1;;;2012:115:13;;4782:2:25;2012:115:13::1;::::0;::::1;4764:21:25::0;4821:2;4801:18;;;4794:30;4860:29;4840:18;;;4833:57;4907:18;;2012:115:13::1;4580:351:25::0;2012:115:13::1;2160:36;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;2160:36:13;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;2137:20:13;;;:7:::1;:20:::0;;;;;;:59;;;;-1:-1:-1;;;;;;2137:59:13::1;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;2137:59:13;;::::1;::::0;2304:47:::1;2137:20:::0;2160:36;891:37:8;;;;;;;6615:19:25;;;;6650:12;;;6643:28;;;;891:37:8;;;;;;;;;6687:12:25;;;;891:37:8;;881:48;;;;;;743:193;2304:47:13::1;2391:5;2361:27:::0;;;:17:::1;:27;::::0;;;;;;;;:35;;-1:-1:-1;;2361:35:13::1;::::0;;2412:44;;5138:25:25;;;-1:-1:-1;;;;;5199:32:25;;5179:18;;;5172:60;;;;5248:18;;;5241:34;;;2361:27:13;;-1:-1:-1;2412:44:13::1;::::0;5126:2:25;5111:18;2412:44:13::1;;;;;;;2002:461;1876:455:9::0;1809:654:13;;;;;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1240:286:9:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1378:23:9;::::1;1370:71;;;::::0;-1:-1:-1;;;1370:71:9;;5849:2:25;1370:71:9::1;::::0;::::1;5831:21:25::0;5888:2;5868:18;;;5861:30;5927:34;5907:18;;;5900:62;-1:-1:-1;;;5978:18:25;;;5971:33;6021:19;;1370:71:9::1;5647:399:25::0;1370:71:9::1;1473:46;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;1473:46:9;;::::1;::::0;;;;::::1;;::::0;;::::1;::::0;;;-1:-1:-1;1451:19:9;;;:10:::1;:19:::0;;;;;;;;:68;;;;-1:-1:-1;;;;;;1451:68:9;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;::::0;::::1;;::::0;;1240:286::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;6253:2:25;1998:73:0::1;::::0;::::1;6235:21:25::0;6292:2;6272:18;;;6265:30;6331:34;6311:18;;;6304:62;-1:-1:-1;;;6382:18:25;;;6375:36;6428:19;;1998:73:0::1;6051:402:25::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:316:25:-;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:25;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:25;305:18;;;292:32;;14:316;-1:-1:-1;14:316:25:o;335:180::-;394:6;447:2;435:9;426:7;422:23;418:32;415:52;;;463:1;460;453:12;415:52;-1:-1:-1;486:23:25;;335:180;-1:-1:-1;335:180:25:o;848:131::-;-1:-1:-1;;;;;923:31:25;;913:42;;903:70;;969:1;966;959:12;984:452;1070:6;1078;1086;1094;1147:3;1135:9;1126:7;1122:23;1118:33;1115:53;;;1164:1;1161;1154:12;1115:53;1200:9;1187:23;1177:33;;1257:2;1246:9;1242:18;1229:32;1219:42;;1308:2;1297:9;1293:18;1280:32;1270:42;;1362:2;1351:9;1347:18;1334:32;1375:31;1400:5;1375:31;:::i;:::-;984:452;;;;-1:-1:-1;984:452:25;;-1:-1:-1;;984:452:25:o;1441:456::-;1518:6;1526;1534;1587:2;1575:9;1566:7;1562:23;1558:32;1555:52;;;1603:1;1600;1593:12;1555:52;1639:9;1626:23;1616:33;;1699:2;1688:9;1684:18;1671:32;1712:31;1737:5;1712:31;:::i;:::-;1762:5;-1:-1:-1;1819:2:25;1804:18;;1791:32;1832:33;1791:32;1832:33;:::i;:::-;1884:7;1874:17;;;1441:456;;;;;:::o;2766:247::-;2825:6;2878:2;2866:9;2857:7;2853:23;2849:32;2846:52;;;2894:1;2891;2884:12;2846:52;2933:9;2920:23;2952:31;2977:5;2952:31;:::i;:::-;3002:5;2766:247;-1:-1:-1;;;2766:247:25:o;3018:356::-;3220:2;3202:21;;;3239:18;;;3232:30;3298:34;3293:2;3278:18;;3271:62;3365:2;3350:18;;3018:356::o;3379:251::-;3449:6;3502:2;3490:9;3481:7;3477:23;3473:32;3470:52;;;3518:1;3515;3508:12;3470:52;3550:9;3544:16;3569:31;3594:5;3569:31;:::i;5286:356::-;5488:2;5470:21;;;5507:18;;;5500:30;5566:34;5561:2;5546:18;;5539:62;5633:2;5618:18;;5286:356::o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "FillHashInvalidated(bytes32)": {
        "notice": "Emitted when a fill hash has been invalidated. .. seealso:: :sol:func:`invalidateFill`"
      },
      "RequestResolved(bytes32,address,bytes32)": {
        "notice": "Emitted when a request has been resolved via L1 resolution. .. seealso:: :sol:func:`resolveRequest`"
      }
    },
    "kind": "dev",
    "methods": {
      "addCaller(uint256,address,address)": {
        "notice": "Add a caller for the given chain ID. .. note:: There can only be one caller per chain.",
        "params": {
          "caller": "The caller.",
          "chainId": "The chain ID.",
          "messenger": "The messenger, an instance of :sol:interface:`IMessenger`."
        }
      },
      "fillers(bytes32)": {
        "notice": "Maps request hashes to fill infos."
      },
      "invalidFillHashes(bytes32)": {
        "notice": "The set of invalid fill hashes."
      },
      "invalidateFill(bytes32,bytes32,uint256)": {
        "notice": "Mark the fill identified by ``fillId`` as invalid. .. note::     This function is callable only by the native L2 messenger contract,     which simply delivers the message sent from L1 by the     Beamer's L2 :sol:interface:`messenger <IMessenger>` contract.",
        "params": {
          "fillId": "The fill ID.",
          "requestHash": "The request hash.",
          "resolutionChainId": "The resolution (L1) chain ID."
        }
      },
      "messengers(uint256)": {
        "notice": "Maps chain IDs to messenger and callers."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "resolveRequest(bytes32,bytes32,uint256,address)": {
        "notice": "Mark the request identified by ``requestHash`` as filled by ``filler``. .. note::     This function is callable only by the native L2 messenger contract,     which simply delivers the message sent from L1 by the     Beamer's L2 :sol:interface:`messenger <IMessenger>` contract.",
        "params": {
          "fillId": "The fill ID.",
          "filler": "The address that filled the request.",
          "requestHash": "The request hash.",
          "resolutionChainId": "The resolution (L1) chain ID."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "The resolution registry. This contract resides on the source L2 chain and is tasked with keeping track of results of L1 resolution. In particular, it stores the information about known fills and fillers, as well as fills that were marked invalid. This information is used by the :sol:contract:`RequestManager` to resolve claims. .. note::   This contract can only be called by the :sol:contract:`Resolver` contract, via a   chain-dependent messenger contract.",
    "version": 1
  },
  "offset": [
    634,
    3533
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7203AE3B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x7203AE3B EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xA64A2271 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA751732F EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FC4C37 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x24EC66B3 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x5B3A6EF2 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x119 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x981 JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST PUSH2 0xAB PUSH2 0x77B JUMP JUMPDEST PUSH2 0xAB PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xA1C JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH2 0x182 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xFD JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST PUSH2 0xAB PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xEF12E47 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x77897238 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x272 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x383D6F07 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND SWAP2 PUSH4 0x707ADE0E SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x362 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420696E76616C6964617465207265736F6C7665642066696C6C48 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6173686573 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE DUP2 DUP4 ADD DUP9 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD DUP4 MSTORE DUP2 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x45E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696C6C4861736820616C726561647920696E76616C69646174656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xD2ED11D62E8ABE0378A90806E61F7299C93EC10AC51B53ACF184634C2AE0D963 SWAP1 PUSH2 0x4A9 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220 SWAP1 PUSH2 0xA82 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xEF12E47 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x77897238 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x560 SWAP2 SWAP1 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x383D6F07 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND SWAP2 PUSH4 0x707ADE0E SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x606 SWAP2 SWAP1 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265736F6C7574696F6E20616C7265616479207265636F726465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP11 DUP2 MSTORE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE SWAP4 DUP2 KECCAK256 SWAP3 MLOAD DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP2 MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH2 0x70B DUP9 DUP9 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD DUP12 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0xB32D3C8B5539B0CC3050D5B75E9DAD8ECA8744A0892259BDA27FDB51B9956736 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220 SWAP1 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0x7AF PUSH1 0x0 PUSH2 0x931 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220 SWAP1 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x585265737472696374656443616C6C733A20696E76616C6964206D657373656E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x33B2B9 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x1 SWAP1 DUP2 SWAP1 MSTORE SWAP2 SWAP1 SWAP5 KECCAK256 SWAP2 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR DUP4 SSTORE SWAP4 MLOAD SWAP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220 SWAP1 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x925 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x92E DUP2 PUSH2 0x931 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0xA11 DUP2 PUSH2 0x9C6 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xA43 DUP2 PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xA53 DUP2 PUSH2 0x9C6 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA7B DUP2 PUSH2 0x9C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x585265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA7B DUP2 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH14 0x4C3A12412C742D32961BC9725085 PUSH9 0xC340B331CAAB4F469F OR ADDRESS PUSH4 0x7CA95B64 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        634,
        3533
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "6": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "7": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "12": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "REVERT",
      "path": "13"
    },
    "16": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "17": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "POP",
      "path": "13"
    },
    "18": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "21": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "LT",
      "path": "13"
    },
    "22": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "29": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "SHR",
      "path": "13"
    },
    "32": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "33": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7203AE3B"
    },
    "38": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "GT",
      "path": "13"
    },
    "39": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "43": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "44": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7203AE3B"
    },
    "49": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "EQ",
      "path": "13"
    },
    "50": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x121"
    },
    "53": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "54": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "55": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "EQ",
      "path": "13"
    },
    "61": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x134"
    },
    "64": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "65": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "66": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA64A2271"
    },
    "71": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "EQ",
      "path": "13"
    },
    "72": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14F"
    },
    "75": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "76": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "77": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA751732F"
    },
    "82": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "EQ",
      "path": "13"
    },
    "83": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1A1"
    },
    "86": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "87": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "88": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "EQ",
      "path": "13"
    },
    "94": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1D4"
    },
    "97": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "98": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "101": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "REVERT",
      "path": "13"
    },
    "102": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "103": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "104": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x3FC4C37"
    },
    "109": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "EQ",
      "path": "13"
    },
    "110": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "114": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "115": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x24EC66B3"
    },
    "120": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "EQ",
      "path": "13"
    },
    "121": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAD"
    },
    "124": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "125": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "126": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x5B3A6EF2"
    },
    "131": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "EQ",
      "path": "13"
    },
    "132": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x106"
    },
    "135": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "136": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "137": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x715018A6"
    },
    "142": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "EQ",
      "path": "13"
    },
    "143": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x119"
    },
    "146": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "147": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "148": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "DUP1",
      "path": "13"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        634,
        3533
      ],
      "op": "REVERT",
      "path": "13"
    },
    "152": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "153": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAB"
    },
    "156": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA6"
    },
    "159": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "160": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "162": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x981"
    },
    "165": {
      "fn": "ResolutionRegistry.invalidateFill",
      "jump": "i",
      "offset": [
        2933,
        3531
      ],
      "op": "JUMP",
      "path": "13"
    },
    "166": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "167": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1E7"
    },
    "170": {
      "fn": "ResolutionRegistry.invalidateFill",
      "jump": "i",
      "offset": [
        2933,
        3531
      ],
      "op": "JUMP",
      "path": "13"
    },
    "171": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "172": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "STOP",
      "path": "13"
    },
    "173": {
      "offset": [
        906,
        959
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "174": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE1"
    },
    "177": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBB"
    },
    "180": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "181": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "183": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9AD"
    },
    "186": {
      "fn": "ResolutionRegistry.invalidateFill",
      "jump": "i",
      "offset": [
        906,
        959
      ],
      "op": "JUMP",
      "path": "9"
    },
    "187": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "188": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "190": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "192": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "DUP2",
      "path": "9"
    },
    "193": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "194": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "195": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "197": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "198": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "DUP3",
      "path": "9"
    },
    "199": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "200": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "202": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "203": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "204": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "205": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "DUP1",
      "path": "9"
    },
    "206": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "207": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "208": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "ADD",
      "path": "9"
    },
    "209": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "216": {
      "op": "SHL"
    },
    "217": {
      "op": "SUB"
    },
    "218": {
      "offset": [
        906,
        959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "219": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "DUP3",
      "path": "9"
    },
    "220": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "AND",
      "path": "9"
    },
    "221": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "222": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "AND",
      "path": "9"
    },
    "223": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "DUP3",
      "path": "9"
    },
    "224": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "JUMP",
      "path": "9"
    },
    "225": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "226": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "228": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "DUP1",
      "path": "9"
    },
    "229": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "236": {
      "op": "SHL"
    },
    "237": {
      "op": "SUB"
    },
    "238": {
      "op": "SWAP4"
    },
    "239": {
      "op": "DUP5"
    },
    "240": {
      "op": "AND"
    },
    "241": {
      "op": "DUP2"
    },
    "242": {
      "op": "MSTORE"
    },
    "243": {
      "op": "SWAP3"
    },
    "244": {
      "op": "SWAP1"
    },
    "245": {
      "op": "SWAP2"
    },
    "246": {
      "op": "AND"
    },
    "247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "249": {
      "op": "DUP4"
    },
    "250": {
      "op": "ADD"
    },
    "251": {
      "op": "MSTORE"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "offset": [
        906,
        959
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "254": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "256": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "257": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "DUP1",
      "path": "9"
    },
    "258": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "259": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "SUB",
      "path": "9"
    },
    "260": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "261": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        906,
        959
      ],
      "op": "RETURN",
      "path": "9"
    },
    "262": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "263": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAB"
    },
    "266": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x114"
    },
    "269": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "270": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "272": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9DB"
    },
    "275": {
      "fn": "ResolutionRegistry.resolveRequest",
      "jump": "i",
      "offset": [
        1809,
        2463
      ],
      "op": "JUMP",
      "path": "13"
    },
    "276": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "277": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4BA"
    },
    "280": {
      "fn": "ResolutionRegistry.resolveRequest",
      "jump": "i",
      "offset": [
        1809,
        2463
      ],
      "op": "JUMP",
      "path": "13"
    },
    "281": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "282": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "285": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77B"
    },
    "288": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "289": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "290": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAB"
    },
    "293": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12F"
    },
    "296": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "297": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "299": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA1C"
    },
    "302": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1240,
        1526
      ],
      "op": "JUMP",
      "path": "9"
    },
    "303": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "304": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7B1"
    },
    "307": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1240,
        1526
      ],
      "op": "JUMP",
      "path": "9"
    },
    "308": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "309": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "311": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "312": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "314": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "321": {
      "op": "SHL"
    },
    "322": {
      "op": "SUB"
    },
    "323": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "324": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "325": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "326": {
      "op": "DUP2"
    },
    "327": {
      "op": "MSTORE"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "330": {
      "op": "ADD"
    },
    "331": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD"
    },
    "334": {
      "op": "JUMP"
    },
    "335": {
      "offset": [
        1107,
        1162
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "336": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x182"
    },
    "339": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15D"
    },
    "342": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "343": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "345": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9AD"
    },
    "348": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1107,
        1162
      ],
      "op": "JUMP",
      "path": "13"
    },
    "349": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "350": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "352": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "354": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "355": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "357": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "358": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "DUP2",
      "path": "13"
    },
    "359": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "360": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "362": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "363": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "364": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "DUP1",
      "path": "13"
    },
    "365": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "366": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "368": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "369": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "370": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "ADD",
      "path": "13"
    },
    "371": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "378": {
      "op": "SHL"
    },
    "379": {
      "op": "SUB"
    },
    "380": {
      "offset": [
        1107,
        1162
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "381": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "382": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "AND",
      "path": "13"
    },
    "383": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "384": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "DUP3",
      "path": "13"
    },
    "385": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "JUMP",
      "path": "13"
    },
    "386": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "387": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "389": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "DUP1",
      "path": "13"
    },
    "390": {
      "fn": "Ownable.owner",
      "offset": [
        1107,
        1162
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "op": "SUB"
    },
    "399": {
      "op": "SWAP1"
    },
    "400": {
      "op": "SWAP4"
    },
    "401": {
      "op": "AND"
    },
    "402": {
      "op": "DUP4"
    },
    "403": {
      "op": "MSTORE"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "406": {
      "op": "DUP4"
    },
    "407": {
      "op": "ADD"
    },
    "408": {
      "op": "SWAP2"
    },
    "409": {
      "op": "SWAP1"
    },
    "410": {
      "op": "SWAP2"
    },
    "411": {
      "op": "MSTORE"
    },
    "412": {
      "op": "ADD"
    },
    "413": {
      "offset": [
        1107,
        1162
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFD"
    },
    "416": {
      "op": "JUMP"
    },
    "417": {
      "offset": [
        1209,
        1258
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "418": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1C4"
    },
    "421": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1AF"
    },
    "424": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "425": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "427": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9AD"
    },
    "430": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1209,
        1258
      ],
      "op": "JUMP",
      "path": "13"
    },
    "431": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "432": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "434": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "436": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "437": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "439": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "440": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "DUP2",
      "path": "13"
    },
    "441": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "442": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "444": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "445": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "446": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "447": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "449": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "AND",
      "path": "13"
    },
    "450": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "DUP2",
      "path": "13"
    },
    "451": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "JUMP",
      "path": "13"
    },
    "452": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "453": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "455": {
      "fn": "Ownable.owner",
      "offset": [
        1209,
        1258
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "456": {
      "op": "SWAP1"
    },
    "457": {
      "op": "ISZERO"
    },
    "458": {
      "op": "ISZERO"
    },
    "459": {
      "op": "DUP2"
    },
    "460": {
      "op": "MSTORE"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "463": {
      "op": "ADD"
    },
    "464": {
      "offset": [
        1209,
        1258
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFD"
    },
    "467": {
      "op": "JUMP"
    },
    "468": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "469": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "472": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E2"
    },
    "475": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "476": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "478": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5E"
    },
    "481": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "482": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "483": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x896"
    },
    "486": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "487": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "488": {
      "offset": [
        1886,
        1911
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "490": {
      "offset": [
        1914,
        1933
      ],
      "op": "DUP2",
      "path": "9"
    },
    "491": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1914,
        1933
      ],
      "op": "DUP2",
      "path": "9"
    },
    "492": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1914,
        1933
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "493": {
      "offset": [
        1914,
        1924
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "495": {
      "offset": [
        1914,
        1933
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "497": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1914,
        1933
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "498": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1914,
        1933
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "500": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1914,
        1933
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "501": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1914,
        1933
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "502": {
      "offset": [
        1972,
        1983
      ],
      "op": "DUP1",
      "path": "9"
    },
    "503": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1972,
        1983
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "504": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3071,
        3088
      ],
      "op": "DUP3",
      "path": "13"
    },
    "505": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3071,
        3088
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "506": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3090,
        3100
      ],
      "op": "CALLER",
      "path": "13"
    },
    "507": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3090,
        3100
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "514": {
      "op": "SHL"
    },
    "515": {
      "op": "SUB"
    },
    "516": {
      "offset": [
        1972,
        1983
      ],
      "op": "AND",
      "path": "9"
    },
    "517": {
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x229"
    },
    "520": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "521": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "523": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "524": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "528": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "530": {
      "op": "SHL"
    },
    "531": {
      "offset": [
        1943,
        2056
      ],
      "op": "DUP2",
      "path": "9"
    },
    "532": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "533": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "535": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "ADD",
      "path": "9"
    },
    "536": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x220"
    },
    "539": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "540": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA82"
    },
    "543": {
      "fn": "ResolutionRegistry.invalidateFill",
      "jump": "i",
      "offset": [
        1943,
        2056
      ],
      "op": "JUMP",
      "path": "9"
    },
    "544": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "545": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "547": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "548": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "DUP1",
      "path": "9"
    },
    "549": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "550": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "SUB",
      "path": "9"
    },
    "551": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "552": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "9"
    },
    "553": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        1943,
        2056
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "554": {
      "offset": [
        2097,
        2108
      ],
      "op": "DUP1",
      "path": "9"
    },
    "555": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2108
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "556": {
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "558": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "559": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "560": {
      "op": "PUSH4",
      "value": "0xEF12E47"
    },
    "565": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "567": {
      "op": "SHL"
    },
    "568": {
      "offset": [
        2097,
        2126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "569": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "570": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "571": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "578": {
      "op": "SHL"
    },
    "579": {
      "op": "SUB"
    },
    "580": {
      "offset": [
        2097,
        2108
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "581": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2108
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "582": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2108
      ],
      "op": "AND",
      "path": "9"
    },
    "583": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2108
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "584": {
      "offset": [
        2097,
        2124
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x77897238"
    },
    "589": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2124
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "590": {
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "592": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "593": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP3",
      "path": "9"
    },
    "594": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "595": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "596": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "598": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "599": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "600": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "601": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "602": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP3",
      "path": "9"
    },
    "603": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "604": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "SUB",
      "path": "9"
    },
    "605": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "606": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "607": {
      "offset": [
        2097,
        2108
      ],
      "op": "DUP7",
      "path": "9"
    },
    "608": {
      "offset": [
        2097,
        2126
      ],
      "op": "GAS",
      "path": "9"
    },
    "609": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "610": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "611": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "612": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "613": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x272"
    },
    "616": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "617": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "618": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "620": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "621": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "622": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "623": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "625": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "REVERT",
      "path": "9"
    },
    "626": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "627": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "628": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "629": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "630": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "631": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "633": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "634": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "635": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "637": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "NOT",
      "path": "9"
    },
    "638": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "640": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP3",
      "path": "9"
    },
    "641": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "642": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "AND",
      "path": "9"
    },
    "643": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP3",
      "path": "9"
    },
    "644": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "645": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "646": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "648": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "649": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "650": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "651": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "652": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "653": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x296"
    },
    "656": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "657": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "658": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAB7"
    },
    "661": {
      "fn": "ResolutionRegistry.invalidateFill",
      "jump": "i",
      "offset": [
        2097,
        2126
      ],
      "op": "JUMP",
      "path": "9"
    },
    "662": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2097,
        2126
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "669": {
      "op": "SHL"
    },
    "670": {
      "op": "SUB"
    },
    "671": {
      "offset": [
        2087,
        2126
      ],
      "op": "AND",
      "path": "9"
    },
    "672": {
      "offset": [
        2087,
        2093
      ],
      "op": "DUP3",
      "path": "9"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "679": {
      "op": "SHL"
    },
    "680": {
      "op": "SUB"
    },
    "681": {
      "offset": [
        2087,
        2126
      ],
      "op": "AND",
      "path": "9"
    },
    "682": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2087,
        2126
      ],
      "op": "EQ",
      "path": "9"
    },
    "683": {
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2C6"
    },
    "686": {
      "offset": [
        2066,
        2184
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "687": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "689": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2066,
        2184
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "696": {
      "op": "SHL"
    },
    "697": {
      "offset": [
        2066,
        2184
      ],
      "op": "DUP2",
      "path": "9"
    },
    "698": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2066,
        2184
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "699": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "701": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2066,
        2184
      ],
      "op": "ADD",
      "path": "9"
    },
    "702": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x220"
    },
    "705": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2066,
        2184
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "706": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA82"
    },
    "709": {
      "fn": "ResolutionRegistry.invalidateFill",
      "jump": "i",
      "offset": [
        2066,
        2184
      ],
      "op": "JUMP",
      "path": "9"
    },
    "710": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2066,
        2184
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "711": {
      "offset": [
        2247,
        2255
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "713": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2247,
        2255
      ],
      "op": "DUP2",
      "path": "9"
    },
    "714": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2247,
        2255
      ],
      "op": "ADD",
      "path": "9"
    },
    "715": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2247,
        2255
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "716": {
      "offset": [
        2215,
        2226
      ],
      "op": "DUP2",
      "path": "9"
    },
    "717": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2226
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "718": {
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "720": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "721": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "722": {
      "op": "PUSH4",
      "value": "0x383D6F07"
    },
    "727": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "729": {
      "op": "SHL"
    },
    "730": {
      "offset": [
        2215,
        2243
      ],
      "op": "DUP2",
      "path": "9"
    },
    "731": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "732": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "733": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "740": {
      "op": "SHL"
    },
    "741": {
      "op": "SUB"
    },
    "742": {
      "offset": [
        2247,
        2255
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "743": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2247,
        2255
      ],
      "op": "DUP5",
      "path": "9"
    },
    "744": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2247,
        2255
      ],
      "op": "AND",
      "path": "9"
    },
    "745": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2247,
        2255
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "746": {
      "offset": [
        2215,
        2226
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "747": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2226
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "748": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2226
      ],
      "op": "AND",
      "path": "9"
    },
    "749": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2226
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "750": {
      "offset": [
        2215,
        2241
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x707ADE0E"
    },
    "755": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2241
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "756": {
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "758": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "759": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP3",
      "path": "9"
    },
    "760": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "761": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "762": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "764": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "765": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "766": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "767": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "768": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP3",
      "path": "9"
    },
    "769": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "770": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "SUB",
      "path": "9"
    },
    "771": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "772": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP2",
      "path": "9"
    },
    "773": {
      "offset": [
        2215,
        2226
      ],
      "op": "DUP7",
      "path": "9"
    },
    "774": {
      "offset": [
        2215,
        2243
      ],
      "op": "GAS",
      "path": "9"
    },
    "775": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "776": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "777": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "778": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "779": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x318"
    },
    "782": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "783": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "784": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "786": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "787": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "788": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "789": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "791": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "REVERT",
      "path": "9"
    },
    "792": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "793": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "794": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "795": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "796": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "797": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "799": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "800": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "801": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "803": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "NOT",
      "path": "9"
    },
    "804": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "806": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP3",
      "path": "9"
    },
    "807": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "808": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "AND",
      "path": "9"
    },
    "809": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP3",
      "path": "9"
    },
    "810": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "811": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "812": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "814": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "815": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "816": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP2",
      "path": "9"
    },
    "817": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "818": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "819": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x33C"
    },
    "822": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "823": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "824": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAB7"
    },
    "827": {
      "fn": "ResolutionRegistry.invalidateFill",
      "jump": "i",
      "offset": [
        2215,
        2243
      ],
      "op": "JUMP",
      "path": "9"
    },
    "828": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2243
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "835": {
      "op": "SHL"
    },
    "836": {
      "op": "SUB"
    },
    "837": {
      "offset": [
        2215,
        2255
      ],
      "op": "AND",
      "path": "9"
    },
    "838": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2215,
        2255
      ],
      "op": "EQ",
      "path": "9"
    },
    "839": {
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x362"
    },
    "842": {
      "offset": [
        2194,
        2313
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "843": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "845": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2194,
        2313
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "852": {
      "op": "SHL"
    },
    "853": {
      "offset": [
        2194,
        2313
      ],
      "op": "DUP2",
      "path": "9"
    },
    "854": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2194,
        2313
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "855": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "857": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2194,
        2313
      ],
      "op": "ADD",
      "path": "9"
    },
    "858": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x220"
    },
    "861": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2194,
        2313
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "862": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA82"
    },
    "865": {
      "fn": "ResolutionRegistry.invalidateFill",
      "jump": "i",
      "offset": [
        2194,
        2313
      ],
      "op": "JUMP",
      "path": "9"
    },
    "866": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2194,
        2313
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "867": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3172,
        3173
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 1,
      "value": "0x0"
    },
    "869": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3133,
        3153
      ],
      "op": "DUP7",
      "path": "13"
    },
    "870": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3133,
        3153
      ],
      "op": "DUP2",
      "path": "13"
    },
    "871": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3133,
        3153
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "872": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3133,
        3140
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "874": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3133,
        3153
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "876": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3133,
        3153
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "877": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3133,
        3153
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "879": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3133,
        3153
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "880": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3133,
        3153
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "881": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3133,
        3160
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "SUB"
    },
    "890": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3133,
        3160
      ],
      "op": "AND",
      "path": "13"
    },
    "891": {
      "branch": 18,
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3133,
        3174
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "892": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3112,
        3237
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3D5"
    },
    "895": {
      "branch": 18,
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3112,
        3237
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "896": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3112,
        3237
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "898": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3112,
        3237
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "899": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "903": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "905": {
      "op": "SHL"
    },
    "906": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3112,
        3237
      ],
      "op": "DUP2",
      "path": "13"
    },
    "907": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3112,
        3237
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "910": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3112,
        3237
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "912": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3112,
        3237
      ],
      "op": "DUP3",
      "path": "13"
    },
    "913": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3112,
        3237
      ],
      "op": "ADD",
      "path": "13"
    },
    "914": {
      "op": "MSTORE"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "919": {
      "op": "DUP3"
    },
    "920": {
      "op": "ADD"
    },
    "921": {
      "op": "MSTORE"
    },
    "922": {
      "op": "PUSH32",
      "value": "0x43616E6E6F7420696E76616C6964617465207265736F6C7665642066696C6C48"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "957": {
      "op": "DUP3"
    },
    "958": {
      "op": "ADD"
    },
    "959": {
      "op": "MSTORE"
    },
    "960": {
      "op": "PUSH5",
      "value": "0x6173686573"
    },
    "966": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "968": {
      "op": "SHL"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "971": {
      "op": "DUP3"
    },
    "972": {
      "op": "ADD"
    },
    "973": {
      "op": "MSTORE"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "976": {
      "op": "ADD"
    },
    "977": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3112,
        3237
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x220"
    },
    "980": {
      "op": "JUMP"
    },
    "981": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3112,
        3237
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "982": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x40"
    },
    "984": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "985": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "986": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "988": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "989": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP3",
      "path": "8"
    },
    "990": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "ADD",
      "path": "8"
    },
    "991": {
      "op": "DUP10"
    },
    "992": {
      "op": "SWAP1"
    },
    "993": {
      "op": "MSTORE"
    },
    "994": {
      "op": "DUP2"
    },
    "995": {
      "op": "DUP4"
    },
    "996": {
      "op": "ADD"
    },
    "997": {
      "op": "DUP9"
    },
    "998": {
      "op": "SWAP1"
    },
    "999": {
      "op": "MSTORE"
    },
    "1000": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1001": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1002": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1003": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1004": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "SUB",
      "path": "8"
    },
    "1005": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1006": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "ADD",
      "path": "8"
    },
    "1007": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1008": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1011": {
      "op": "SWAP1"
    },
    "1012": {
      "op": "SWAP3"
    },
    "1013": {
      "op": "ADD"
    },
    "1014": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1015": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1016": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1017": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1018": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1019": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1020": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "ADD",
      "path": "8"
    },
    "1021": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1022": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1023": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1024": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1027": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3371
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 3
    },
    "1028": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3371
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1029": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3371
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1030": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3361
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "1032": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3371
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1033": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3371
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1034": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3371
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1035": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3371
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1036": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3371
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1037": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3371
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1038": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3371
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1039": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3371
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1041": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3371
      ],
      "op": "AND",
      "path": "13"
    },
    "1042": {
      "branch": 19,
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3344,
        3380
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1043": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3323,
        3434
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x45E"
    },
    "1046": {
      "branch": 19,
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3323,
        3434
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1047": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3323,
        3434
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1049": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3323,
        3434
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1050": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1056": {
      "op": "SHL"
    },
    "1057": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3323,
        3434
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1058": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3323,
        3434
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1061": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3323,
        3434
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1063": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3323,
        3434
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1064": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3323,
        3434
      ],
      "op": "ADD",
      "path": "13"
    },
    "1065": {
      "op": "MSTORE"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1070": {
      "op": "DUP3"
    },
    "1071": {
      "op": "ADD"
    },
    "1072": {
      "op": "MSTORE"
    },
    "1073": {
      "op": "PUSH32",
      "value": "0x46696C6C4861736820616C726561647920696E76616C69646174656400000000"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1108": {
      "op": "DUP3"
    },
    "1109": {
      "op": "ADD"
    },
    "1110": {
      "op": "MSTORE"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1113": {
      "op": "ADD"
    },
    "1114": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3323,
        3434
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x220"
    },
    "1117": {
      "op": "JUMP"
    },
    "1118": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3323,
        3434
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1119": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3472
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 4,
      "value": "0x0"
    },
    "1121": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3472
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1122": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3472
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1123": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3472
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1124": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3462
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "1126": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3472
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1128": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3472
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1129": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3472
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1131": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3472
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1132": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3472
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1133": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3472
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1134": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3472
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1135": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3479
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1136": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3479
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1139": {
      "op": "NOT"
    },
    "1140": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3479
      ],
      "op": "AND",
      "path": "13"
    },
    "1141": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3475,
        3479
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1143": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3479
      ],
      "op": "OR",
      "path": "13"
    },
    "1144": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3479
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1145": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3445,
        3479
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1146": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3495,
        3524
      ],
      "op": "MLOAD",
      "path": "13",
      "statement": 5
    },
    "1147": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3495,
        3524
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xD2ED11D62E8ABE0378A90806E61F7299C93EC10AC51B53ACF184634C2AE0D963"
    },
    "1180": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3495,
        3524
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1181": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3495,
        3524
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4A9"
    },
    "1184": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3495,
        3524
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1185": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3463,
        3471
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1186": {
      "op": "DUP2"
    },
    "1187": {
      "op": "MSTORE"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1190": {
      "op": "ADD"
    },
    "1191": {
      "op": "SWAP1"
    },
    "1192": {
      "op": "JUMP"
    },
    "1193": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3495,
        3524
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1194": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3495,
        3524
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1196": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3495,
        3524
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1197": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3495,
        3524
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1198": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3495,
        3524
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1199": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3495,
        3524
      ],
      "op": "SUB",
      "path": "13"
    },
    "1200": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3495,
        3524
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1201": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3495,
        3524
      ],
      "op": "LOG1",
      "path": "13"
    },
    "1202": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        3102,
        3531
      ],
      "op": "POP",
      "path": "13"
    },
    "1203": {
      "offset": [
        1876,
        2331
      ],
      "op": "POP",
      "path": "9"
    },
    "1204": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "POP",
      "path": "13"
    },
    "1205": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "POP",
      "path": "13"
    },
    "1206": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "POP",
      "path": "13"
    },
    "1207": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "POP",
      "path": "13"
    },
    "1208": {
      "fn": "ResolutionRegistry.invalidateFill",
      "offset": [
        2933,
        3531
      ],
      "op": "POP",
      "path": "13"
    },
    "1209": {
      "fn": "ResolutionRegistry.invalidateFill",
      "jump": "o",
      "offset": [
        2933,
        3531
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1210": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1211": {
      "offset": [
        1886,
        1911
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1213": {
      "offset": [
        1914,
        1933
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1214": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1914,
        1933
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1215": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1914,
        1933
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1216": {
      "offset": [
        1914,
        1924
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1218": {
      "offset": [
        1914,
        1933
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1220": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1914,
        1933
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1221": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1914,
        1933
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1223": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1914,
        1933
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1224": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1914,
        1933
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1225": {
      "offset": [
        1972,
        1983
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1226": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1972,
        1983
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1227": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1971,
        1988
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1228": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1971,
        1988
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1229": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1990,
        2000
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1230": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1990,
        2000
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "op": "SUB"
    },
    "1239": {
      "offset": [
        1972,
        1983
      ],
      "op": "AND",
      "path": "9"
    },
    "1240": {
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4F3"
    },
    "1243": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1943,
        2056
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1244": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1246": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1943,
        2056
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1253": {
      "op": "SHL"
    },
    "1254": {
      "offset": [
        1943,
        2056
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1255": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1943,
        2056
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1256": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1258": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1943,
        2056
      ],
      "op": "ADD",
      "path": "9"
    },
    "1259": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x220"
    },
    "1262": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1943,
        2056
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1263": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA82"
    },
    "1266": {
      "fn": "ResolutionRegistry.resolveRequest",
      "jump": "i",
      "offset": [
        1943,
        2056
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1267": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1943,
        2056
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1268": {
      "offset": [
        2097,
        2108
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1269": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2108
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1270": {
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1272": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1273": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1274": {
      "op": "PUSH4",
      "value": "0xEF12E47"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1281": {
      "op": "SHL"
    },
    "1282": {
      "offset": [
        2097,
        2126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1283": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1284": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1285": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1292": {
      "op": "SHL"
    },
    "1293": {
      "op": "SUB"
    },
    "1294": {
      "offset": [
        2097,
        2108
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1295": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2108
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1296": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2108
      ],
      "op": "AND",
      "path": "9"
    },
    "1297": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2108
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1298": {
      "offset": [
        2097,
        2124
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x77897238"
    },
    "1303": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2124
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1304": {
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1306": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1307": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1308": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "1309": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1310": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1312": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1313": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1314": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1315": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1316": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1317": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1318": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "SUB",
      "path": "9"
    },
    "1319": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "1320": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1321": {
      "offset": [
        2097,
        2108
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1322": {
      "offset": [
        2097,
        2126
      ],
      "op": "GAS",
      "path": "9"
    },
    "1323": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "1324": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1325": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1326": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1327": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x53C"
    },
    "1330": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1331": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1332": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1334": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1335": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "1336": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1337": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1339": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1340": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1341": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "1342": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "1343": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "1344": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "1345": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1347": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1348": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1349": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1351": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "NOT",
      "path": "9"
    },
    "1352": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1354": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1355": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "1356": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "AND",
      "path": "9"
    },
    "1357": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1358": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "1359": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1360": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1362": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1363": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "1364": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1365": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "1366": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1367": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x560"
    },
    "1370": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1371": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1372": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAB7"
    },
    "1375": {
      "fn": "ResolutionRegistry.resolveRequest",
      "jump": "i",
      "offset": [
        2097,
        2126
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1376": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2097,
        2126
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1383": {
      "op": "SHL"
    },
    "1384": {
      "op": "SUB"
    },
    "1385": {
      "offset": [
        2087,
        2126
      ],
      "op": "AND",
      "path": "9"
    },
    "1386": {
      "offset": [
        2087,
        2093
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "op": "SUB"
    },
    "1395": {
      "offset": [
        2087,
        2126
      ],
      "op": "AND",
      "path": "9"
    },
    "1396": {
      "branch": 21,
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2087,
        2126
      ],
      "op": "EQ",
      "path": "9"
    },
    "1397": {
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x590"
    },
    "1400": {
      "branch": 21,
      "offset": [
        2066,
        2184
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1401": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1403": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2066,
        2184
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1404": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1410": {
      "op": "SHL"
    },
    "1411": {
      "offset": [
        2066,
        2184
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1412": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2066,
        2184
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1413": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1415": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2066,
        2184
      ],
      "op": "ADD",
      "path": "9"
    },
    "1416": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x220"
    },
    "1419": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2066,
        2184
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1420": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA82"
    },
    "1423": {
      "fn": "ResolutionRegistry.resolveRequest",
      "jump": "i",
      "offset": [
        2066,
        2184
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1424": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2066,
        2184
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1425": {
      "offset": [
        2247,
        2255
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1427": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2247,
        2255
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1428": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2247,
        2255
      ],
      "op": "ADD",
      "path": "9"
    },
    "1429": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2247,
        2255
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1430": {
      "offset": [
        2215,
        2226
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1431": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2226
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1432": {
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1434": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1435": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1436": {
      "op": "PUSH4",
      "value": "0x383D6F07"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1443": {
      "op": "SHL"
    },
    "1444": {
      "offset": [
        2215,
        2243
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1445": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1446": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1447": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "op": "SUB"
    },
    "1456": {
      "offset": [
        2247,
        2255
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1457": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2247,
        2255
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1458": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2247,
        2255
      ],
      "op": "AND",
      "path": "9"
    },
    "1459": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2247,
        2255
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1460": {
      "offset": [
        2215,
        2226
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1461": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2226
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1462": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2226
      ],
      "op": "AND",
      "path": "9"
    },
    "1463": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2226
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1464": {
      "offset": [
        2215,
        2241
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x707ADE0E"
    },
    "1469": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2241
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1470": {
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1472": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1473": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1474": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "1475": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1476": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1478": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1479": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1480": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1481": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1482": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1483": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1484": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "SUB",
      "path": "9"
    },
    "1485": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "1486": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1487": {
      "offset": [
        2215,
        2226
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1488": {
      "offset": [
        2215,
        2243
      ],
      "op": "GAS",
      "path": "9"
    },
    "1489": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "1490": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1491": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1492": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1493": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5E2"
    },
    "1496": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1497": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1498": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1500": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1501": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "1502": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1503": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1505": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1506": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1507": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "1508": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "1509": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "1510": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "1511": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1513": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1514": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1515": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1517": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "NOT",
      "path": "9"
    },
    "1518": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1520": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1521": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "1522": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "AND",
      "path": "9"
    },
    "1523": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1524": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "1525": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1526": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1528": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1529": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "1530": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1531": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "1532": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1533": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x606"
    },
    "1536": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1537": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1538": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAB7"
    },
    "1541": {
      "fn": "ResolutionRegistry.resolveRequest",
      "jump": "i",
      "offset": [
        2215,
        2243
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1542": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2243
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1549": {
      "op": "SHL"
    },
    "1550": {
      "op": "SUB"
    },
    "1551": {
      "offset": [
        2215,
        2255
      ],
      "op": "AND",
      "path": "9"
    },
    "1552": {
      "branch": 22,
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2215,
        2255
      ],
      "op": "EQ",
      "path": "9"
    },
    "1553": {
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x62C"
    },
    "1556": {
      "branch": 22,
      "offset": [
        2194,
        2313
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1557": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1559": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2194,
        2313
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1560": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1566": {
      "op": "SHL"
    },
    "1567": {
      "offset": [
        2194,
        2313
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1568": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2194,
        2313
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1569": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1571": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2194,
        2313
      ],
      "op": "ADD",
      "path": "9"
    },
    "1572": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x220"
    },
    "1575": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2194,
        2313
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1576": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA82"
    },
    "1579": {
      "fn": "ResolutionRegistry.resolveRequest",
      "jump": "i",
      "offset": [
        2194,
        2313
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1580": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2194,
        2313
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1581": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2072,
        2073
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 6,
      "value": "0x0"
    },
    "1583": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2033,
        2053
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1584": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2033,
        2053
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1585": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2033,
        2053
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1586": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2033,
        2040
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1588": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2033,
        2053
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1590": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2033,
        2053
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1591": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2033,
        2053
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1593": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2033,
        2053
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1594": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2033,
        2053
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1595": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2033,
        2060
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1602": {
      "op": "SHL"
    },
    "1603": {
      "op": "SUB"
    },
    "1604": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2033,
        2060
      ],
      "op": "AND",
      "path": "13"
    },
    "1605": {
      "branch": 20,
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2033,
        2074
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1606": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2012,
        2127
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x691"
    },
    "1609": {
      "branch": 20,
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2012,
        2127
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1610": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2012,
        2127
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1612": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2012,
        2127
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1613": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1619": {
      "op": "SHL"
    },
    "1620": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2012,
        2127
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1621": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2012,
        2127
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1624": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2012,
        2127
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1626": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2012,
        2127
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1627": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2012,
        2127
      ],
      "op": "ADD",
      "path": "13"
    },
    "1628": {
      "op": "MSTORE"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1633": {
      "op": "DUP3"
    },
    "1634": {
      "op": "ADD"
    },
    "1635": {
      "op": "MSTORE"
    },
    "1636": {
      "op": "PUSH32",
      "value": "0x5265736F6C7574696F6E20616C7265616479207265636F726465640000000000"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1671": {
      "op": "DUP3"
    },
    "1672": {
      "op": "ADD"
    },
    "1673": {
      "op": "MSTORE"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1676": {
      "op": "ADD"
    },
    "1677": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2012,
        2127
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x220"
    },
    "1680": {
      "op": "JUMP"
    },
    "1681": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2012,
        2127
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1682": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 7,
      "value": "0x40"
    },
    "1684": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1685": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1686": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1687": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1688": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "ADD",
      "path": "13"
    },
    "1689": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1690": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1697": {
      "op": "SHL"
    },
    "1698": {
      "op": "SUB"
    },
    "1699": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1700": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1701": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "AND",
      "path": "13"
    },
    "1702": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1703": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1704": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1706": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1707": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1708": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "ADD",
      "path": "13"
    },
    "1709": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "DUP11",
      "path": "13"
    },
    "1710": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1711": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1714": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2157
      ],
      "op": "DUP13",
      "path": "13"
    },
    "1715": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2157
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1716": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2157
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1717": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2144
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1719": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2157
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1720": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2157
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1721": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2157
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1722": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2157
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1723": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2157
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1724": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2157
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1725": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1726": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1727": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1728": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1735": {
      "op": "SHL"
    },
    "1736": {
      "op": "SUB"
    },
    "1737": {
      "op": "NOT"
    },
    "1738": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "AND",
      "path": "13"
    },
    "1739": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1740": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "AND",
      "path": "13"
    },
    "1741": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1742": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1743": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1744": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "OR",
      "path": "13"
    },
    "1745": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1746": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1747": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1748": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1752": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1753": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "ADD",
      "path": "13"
    },
    "1754": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2196
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1755": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2304,
        2351
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x70B"
    },
    "1758": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2137,
        2157
      ],
      "op": "DUP9",
      "path": "13"
    },
    "1759": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2160,
        2196
      ],
      "op": "DUP9",
      "path": "13"
    },
    "1760": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1762": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1763": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1764": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1766": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1767": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1768": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "ADD",
      "path": "8"
    },
    "1769": {
      "op": "SWAP5"
    },
    "1770": {
      "op": "SWAP1"
    },
    "1771": {
      "op": "SWAP5"
    },
    "1772": {
      "op": "MSTORE"
    },
    "1773": {
      "op": "DUP1"
    },
    "1774": {
      "op": "DUP3"
    },
    "1775": {
      "op": "ADD"
    },
    "1776": {
      "op": "SWAP3"
    },
    "1777": {
      "op": "SWAP1"
    },
    "1778": {
      "op": "SWAP3"
    },
    "1779": {
      "op": "MSTORE"
    },
    "1780": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1781": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1782": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1783": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1784": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "SUB",
      "path": "8"
    },
    "1785": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1786": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "ADD",
      "path": "8"
    },
    "1787": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1788": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1791": {
      "op": "SWAP1"
    },
    "1792": {
      "op": "SWAP3"
    },
    "1793": {
      "op": "ADD"
    },
    "1794": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1795": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1796": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1797": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1798": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1799": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "ADD",
      "path": "8"
    },
    "1800": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1801": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1802": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        743,
        936
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1803": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2304,
        2351
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1804": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2391,
        2396
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 8,
      "value": "0x0"
    },
    "1806": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1807": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1808": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1809": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2378
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "1811": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1813": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1814": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1815": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1816": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1818": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1819": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1820": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1821": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1822": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2396
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1823": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2396
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1826": {
      "op": "NOT"
    },
    "1827": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2396
      ],
      "op": "AND",
      "path": "13"
    },
    "1828": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2396
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1829": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2396
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1830": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2412,
        2456
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 9
    },
    "1831": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2412,
        2456
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1832": {
      "op": "DUP12"
    },
    "1833": {
      "op": "DUP2"
    },
    "1834": {
      "op": "MSTORE"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1841": {
      "op": "SHL"
    },
    "1842": {
      "op": "SUB"
    },
    "1843": {
      "op": "DUP10"
    },
    "1844": {
      "op": "AND"
    },
    "1845": {
      "op": "SWAP2"
    },
    "1846": {
      "op": "DUP2"
    },
    "1847": {
      "op": "ADD"
    },
    "1848": {
      "op": "SWAP2"
    },
    "1849": {
      "op": "SWAP1"
    },
    "1850": {
      "op": "SWAP2"
    },
    "1851": {
      "op": "MSTORE"
    },
    "1852": {
      "op": "SWAP1"
    },
    "1853": {
      "op": "DUP2"
    },
    "1854": {
      "op": "ADD"
    },
    "1855": {
      "op": "DUP10"
    },
    "1856": {
      "op": "SWAP1"
    },
    "1857": {
      "op": "MSTORE"
    },
    "1858": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1859": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2361,
        2388
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1860": {
      "op": "POP"
    },
    "1861": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2412,
        2456
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xB32D3C8B5539B0CC3050D5B75E9DAD8ECA8744A0892259BDA27FDB51B9956736"
    },
    "1894": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2412,
        2456
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1897": {
      "op": "ADD"
    },
    "1898": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2412,
        2456
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1900": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2412,
        2456
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1901": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2412,
        2456
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1902": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2412,
        2456
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1903": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2412,
        2456
      ],
      "op": "SUB",
      "path": "13"
    },
    "1904": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2412,
        2456
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1905": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2412,
        2456
      ],
      "op": "LOG1",
      "path": "13"
    },
    "1906": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        2002,
        2463
      ],
      "op": "POP",
      "path": "13"
    },
    "1907": {
      "offset": [
        1876,
        2331
      ],
      "op": "POP",
      "path": "9"
    },
    "1908": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "POP",
      "path": "13"
    },
    "1909": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "POP",
      "path": "13"
    },
    "1910": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "POP",
      "path": "13"
    },
    "1911": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "POP",
      "path": "13"
    },
    "1912": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "POP",
      "path": "13"
    },
    "1913": {
      "fn": "ResolutionRegistry.resolveRequest",
      "offset": [
        1809,
        2463
      ],
      "op": "POP",
      "path": "13"
    },
    "1914": {
      "fn": "ResolutionRegistry.resolveRequest",
      "jump": "o",
      "offset": [
        1809,
        2463
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1915": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1916": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1918": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1925": {
      "op": "SHL"
    },
    "1926": {
      "op": "SUB"
    },
    "1927": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1928": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 10
    },
    "1929": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1930": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A5"
    },
    "1933": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1934": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1936": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1937": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1943": {
      "op": "SHL"
    },
    "1944": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1945": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1946": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1948": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1949": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "1952": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1953": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD4"
    },
    "1956": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1957": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1958": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x7AF"
    },
    "1961": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1963": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x931"
    },
    "1966": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1967": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1968": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1969": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1970": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1972": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1979": {
      "op": "SHL"
    },
    "1980": {
      "op": "SUB"
    },
    "1981": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1982": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1983": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1984": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7DB"
    },
    "1987": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1988": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1990": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1991": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1997": {
      "op": "SHL"
    },
    "1998": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1999": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2000": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2002": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2003": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2006": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2007": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD4"
    },
    "2010": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2011": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2018": {
      "op": "SHL"
    },
    "2019": {
      "op": "SUB"
    },
    "2020": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1378,
        1401
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 12
    },
    "2021": {
      "branch": 23,
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1378,
        1401
      ],
      "op": "AND",
      "path": "9"
    },
    "2022": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x83D"
    },
    "2025": {
      "branch": 23,
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2026": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2028": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2029": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2035": {
      "op": "SHL"
    },
    "2036": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2037": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2040": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2042": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2043": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "ADD",
      "path": "9"
    },
    "2044": {
      "op": "MSTORE"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2049": {
      "op": "DUP3"
    },
    "2050": {
      "op": "ADD"
    },
    "2051": {
      "op": "MSTORE"
    },
    "2052": {
      "op": "PUSH32",
      "value": "0x585265737472696374656443616C6C733A20696E76616C6964206D657373656E"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2087": {
      "op": "DUP3"
    },
    "2088": {
      "op": "ADD"
    },
    "2089": {
      "op": "MSTORE"
    },
    "2090": {
      "op": "PUSH3",
      "value": "0x33B2B9"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "2096": {
      "op": "SHL"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2099": {
      "op": "DUP3"
    },
    "2100": {
      "op": "ADD"
    },
    "2101": {
      "op": "MSTORE"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2104": {
      "op": "ADD"
    },
    "2105": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x220"
    },
    "2108": {
      "op": "JUMP"
    },
    "2109": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2110": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 13,
      "value": "0x40"
    },
    "2112": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2113": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2114": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2115": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2116": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "ADD",
      "path": "9"
    },
    "2117": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2118": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2125": {
      "op": "SHL"
    },
    "2126": {
      "op": "SUB"
    },
    "2127": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2128": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2129": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "AND",
      "path": "9"
    },
    "2130": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2131": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2132": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2133": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2134": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "AND",
      "path": "9"
    },
    "2135": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2137": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2138": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2139": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "ADD",
      "path": "9"
    },
    "2140": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2141": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2142": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2145": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "2146": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2147": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2148": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1461
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2150": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2151": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2152": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2153": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2154": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2155": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2156": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2157": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2158": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2159": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2160": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2161": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2168": {
      "op": "SHL"
    },
    "2169": {
      "op": "SUB"
    },
    "2170": {
      "op": "NOT"
    },
    "2171": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2172": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2173": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "AND",
      "path": "9"
    },
    "2174": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2175": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2176": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "AND",
      "path": "9"
    },
    "2177": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2178": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2179": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2180": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "OR",
      "path": "9"
    },
    "2181": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2182": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2183": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2184": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2185": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2186": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "ADD",
      "path": "9"
    },
    "2187": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2188": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2189": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2190": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2191": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "AND",
      "path": "9"
    },
    "2192": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2193": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "AND",
      "path": "9"
    },
    "2194": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "OR",
      "path": "9"
    },
    "2195": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2196": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2197": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        1240,
        1526
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2198": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2199": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2201": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2208": {
      "op": "SHL"
    },
    "2209": {
      "op": "SUB"
    },
    "2210": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2211": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2212": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2213": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C0"
    },
    "2216": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2217": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2219": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2220": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2226": {
      "op": "SHL"
    },
    "2227": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2228": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2229": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2231": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2232": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2235": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2236": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD4"
    },
    "2239": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2240": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "op": "SUB"
    },
    "2249": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 14
    },
    "2250": {
      "branch": 24,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "2251": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x925"
    },
    "2254": {
      "branch": 24,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2255": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2258": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2264": {
      "op": "SHL"
    },
    "2265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2266": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2269": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2271": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2272": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "2273": {
      "op": "MSTORE"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2278": {
      "op": "DUP3"
    },
    "2279": {
      "op": "ADD"
    },
    "2280": {
      "op": "MSTORE"
    },
    "2281": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2316": {
      "op": "DUP3"
    },
    "2317": {
      "op": "ADD"
    },
    "2318": {
      "op": "MSTORE"
    },
    "2319": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2328": {
      "op": "SHL"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2331": {
      "op": "DUP3"
    },
    "2332": {
      "op": "ADD"
    },
    "2333": {
      "op": "MSTORE"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2340": {
      "op": "JUMP"
    },
    "2341": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2342": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x92E"
    },
    "2345": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2346": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x931"
    },
    "2349": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2350": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2351": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "2352": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2353": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2354": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2356": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2357": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2364": {
      "op": "SHL"
    },
    "2365": {
      "op": "SUB"
    },
    "2366": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 16
    },
    "2367": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2368": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2375": {
      "op": "SHL"
    },
    "2376": {
      "op": "SUB"
    },
    "2377": {
      "op": "NOT"
    },
    "2378": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2379": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2380": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2381": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "2382": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2383": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2384": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x40"
    },
    "2386": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2387": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2388": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2389": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2390": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "2391": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2392": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2393": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2394": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2427": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2428": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2429": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2430": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2431": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2432": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2433": {
      "op": "JUMPDEST"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2436": {
      "op": "DUP1"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2441": {
      "op": "DUP5"
    },
    "2442": {
      "op": "DUP7"
    },
    "2443": {
      "op": "SUB"
    },
    "2444": {
      "op": "SLT"
    },
    "2445": {
      "op": "ISZERO"
    },
    "2446": {
      "op": "PUSH2",
      "value": "0x996"
    },
    "2449": {
      "op": "JUMPI"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2452": {
      "op": "DUP1"
    },
    "2453": {
      "op": "REVERT"
    },
    "2454": {
      "op": "JUMPDEST"
    },
    "2455": {
      "op": "POP"
    },
    "2456": {
      "op": "POP"
    },
    "2457": {
      "op": "DUP2"
    },
    "2458": {
      "op": "CALLDATALOAD"
    },
    "2459": {
      "op": "SWAP4"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2462": {
      "op": "DUP4"
    },
    "2463": {
      "op": "ADD"
    },
    "2464": {
      "op": "CALLDATALOAD"
    },
    "2465": {
      "op": "SWAP4"
    },
    "2466": {
      "op": "POP"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2469": {
      "op": "SWAP1"
    },
    "2470": {
      "op": "SWAP3"
    },
    "2471": {
      "op": "ADD"
    },
    "2472": {
      "op": "CALLDATALOAD"
    },
    "2473": {
      "op": "SWAP2"
    },
    "2474": {
      "op": "SWAP1"
    },
    "2475": {
      "op": "POP"
    },
    "2476": {
      "jump": "o",
      "op": "JUMP"
    },
    "2477": {
      "op": "JUMPDEST"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2482": {
      "op": "DUP3"
    },
    "2483": {
      "op": "DUP5"
    },
    "2484": {
      "op": "SUB"
    },
    "2485": {
      "op": "SLT"
    },
    "2486": {
      "op": "ISZERO"
    },
    "2487": {
      "op": "PUSH2",
      "value": "0x9BF"
    },
    "2490": {
      "op": "JUMPI"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2493": {
      "op": "DUP1"
    },
    "2494": {
      "op": "REVERT"
    },
    "2495": {
      "op": "JUMPDEST"
    },
    "2496": {
      "op": "POP"
    },
    "2497": {
      "op": "CALLDATALOAD"
    },
    "2498": {
      "op": "SWAP2"
    },
    "2499": {
      "op": "SWAP1"
    },
    "2500": {
      "op": "POP"
    },
    "2501": {
      "jump": "o",
      "op": "JUMP"
    },
    "2502": {
      "op": "JUMPDEST"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2509": {
      "op": "SHL"
    },
    "2510": {
      "op": "SUB"
    },
    "2511": {
      "op": "DUP2"
    },
    "2512": {
      "op": "AND"
    },
    "2513": {
      "op": "DUP2"
    },
    "2514": {
      "op": "EQ"
    },
    "2515": {
      "op": "PUSH2",
      "value": "0x92E"
    },
    "2518": {
      "op": "JUMPI"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2521": {
      "op": "DUP1"
    },
    "2522": {
      "op": "REVERT"
    },
    "2523": {
      "op": "JUMPDEST"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2526": {
      "op": "DUP1"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2529": {
      "op": "DUP1"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2532": {
      "op": "DUP6"
    },
    "2533": {
      "op": "DUP8"
    },
    "2534": {
      "op": "SUB"
    },
    "2535": {
      "op": "SLT"
    },
    "2536": {
      "op": "ISZERO"
    },
    "2537": {
      "op": "PUSH2",
      "value": "0x9F1"
    },
    "2540": {
      "op": "JUMPI"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2543": {
      "op": "DUP1"
    },
    "2544": {
      "op": "REVERT"
    },
    "2545": {
      "op": "JUMPDEST"
    },
    "2546": {
      "op": "DUP5"
    },
    "2547": {
      "op": "CALLDATALOAD"
    },
    "2548": {
      "op": "SWAP4"
    },
    "2549": {
      "op": "POP"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2552": {
      "op": "DUP6"
    },
    "2553": {
      "op": "ADD"
    },
    "2554": {
      "op": "CALLDATALOAD"
    },
    "2555": {
      "op": "SWAP3"
    },
    "2556": {
      "op": "POP"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2559": {
      "op": "DUP6"
    },
    "2560": {
      "op": "ADD"
    },
    "2561": {
      "op": "CALLDATALOAD"
    },
    "2562": {
      "op": "SWAP2"
    },
    "2563": {
      "op": "POP"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2566": {
      "op": "DUP6"
    },
    "2567": {
      "op": "ADD"
    },
    "2568": {
      "op": "CALLDATALOAD"
    },
    "2569": {
      "op": "PUSH2",
      "value": "0xA11"
    },
    "2572": {
      "op": "DUP2"
    },
    "2573": {
      "op": "PUSH2",
      "value": "0x9C6"
    },
    "2576": {
      "jump": "i",
      "op": "JUMP"
    },
    "2577": {
      "op": "JUMPDEST"
    },
    "2578": {
      "op": "SWAP4"
    },
    "2579": {
      "op": "SWAP7"
    },
    "2580": {
      "op": "SWAP3"
    },
    "2581": {
      "op": "SWAP6"
    },
    "2582": {
      "op": "POP"
    },
    "2583": {
      "op": "SWAP1"
    },
    "2584": {
      "op": "SWAP4"
    },
    "2585": {
      "op": "POP"
    },
    "2586": {
      "op": "POP"
    },
    "2587": {
      "jump": "o",
      "op": "JUMP"
    },
    "2588": {
      "op": "JUMPDEST"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2591": {
      "op": "DUP1"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2596": {
      "op": "DUP5"
    },
    "2597": {
      "op": "DUP7"
    },
    "2598": {
      "op": "SUB"
    },
    "2599": {
      "op": "SLT"
    },
    "2600": {
      "op": "ISZERO"
    },
    "2601": {
      "op": "PUSH2",
      "value": "0xA31"
    },
    "2604": {
      "op": "JUMPI"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2607": {
      "op": "DUP1"
    },
    "2608": {
      "op": "REVERT"
    },
    "2609": {
      "op": "JUMPDEST"
    },
    "2610": {
      "op": "DUP4"
    },
    "2611": {
      "op": "CALLDATALOAD"
    },
    "2612": {
      "op": "SWAP3"
    },
    "2613": {
      "op": "POP"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2616": {
      "op": "DUP5"
    },
    "2617": {
      "op": "ADD"
    },
    "2618": {
      "op": "CALLDATALOAD"
    },
    "2619": {
      "op": "PUSH2",
      "value": "0xA43"
    },
    "2622": {
      "op": "DUP2"
    },
    "2623": {
      "op": "PUSH2",
      "value": "0x9C6"
    },
    "2626": {
      "jump": "i",
      "op": "JUMP"
    },
    "2627": {
      "op": "JUMPDEST"
    },
    "2628": {
      "op": "SWAP2"
    },
    "2629": {
      "op": "POP"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2632": {
      "op": "DUP5"
    },
    "2633": {
      "op": "ADD"
    },
    "2634": {
      "op": "CALLDATALOAD"
    },
    "2635": {
      "op": "PUSH2",
      "value": "0xA53"
    },
    "2638": {
      "op": "DUP2"
    },
    "2639": {
      "op": "PUSH2",
      "value": "0x9C6"
    },
    "2642": {
      "jump": "i",
      "op": "JUMP"
    },
    "2643": {
      "op": "JUMPDEST"
    },
    "2644": {
      "op": "DUP1"
    },
    "2645": {
      "op": "SWAP2"
    },
    "2646": {
      "op": "POP"
    },
    "2647": {
      "op": "POP"
    },
    "2648": {
      "op": "SWAP3"
    },
    "2649": {
      "op": "POP"
    },
    "2650": {
      "op": "SWAP3"
    },
    "2651": {
      "op": "POP"
    },
    "2652": {
      "op": "SWAP3"
    },
    "2653": {
      "jump": "o",
      "op": "JUMP"
    },
    "2654": {
      "op": "JUMPDEST"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2659": {
      "op": "DUP3"
    },
    "2660": {
      "op": "DUP5"
    },
    "2661": {
      "op": "SUB"
    },
    "2662": {
      "op": "SLT"
    },
    "2663": {
      "op": "ISZERO"
    },
    "2664": {
      "op": "PUSH2",
      "value": "0xA70"
    },
    "2667": {
      "op": "JUMPI"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2670": {
      "op": "DUP1"
    },
    "2671": {
      "op": "REVERT"
    },
    "2672": {
      "op": "JUMPDEST"
    },
    "2673": {
      "op": "DUP2"
    },
    "2674": {
      "op": "CALLDATALOAD"
    },
    "2675": {
      "op": "PUSH2",
      "value": "0xA7B"
    },
    "2678": {
      "op": "DUP2"
    },
    "2679": {
      "op": "PUSH2",
      "value": "0x9C6"
    },
    "2682": {
      "jump": "i",
      "op": "JUMP"
    },
    "2683": {
      "op": "JUMPDEST"
    },
    "2684": {
      "op": "SWAP4"
    },
    "2685": {
      "op": "SWAP3"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "op": "POP"
    },
    "2688": {
      "op": "POP"
    },
    "2689": {
      "jump": "o",
      "op": "JUMP"
    },
    "2690": {
      "op": "JUMPDEST"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2693": {
      "op": "DUP1"
    },
    "2694": {
      "op": "DUP3"
    },
    "2695": {
      "op": "MSTORE"
    },
    "2696": {
      "op": "DUP2"
    },
    "2697": {
      "op": "DUP2"
    },
    "2698": {
      "op": "ADD"
    },
    "2699": {
      "op": "MSTORE"
    },
    "2700": {
      "op": "PUSH32",
      "value": "0x585265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C6572"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2735": {
      "op": "DUP3"
    },
    "2736": {
      "op": "ADD"
    },
    "2737": {
      "op": "MSTORE"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2740": {
      "op": "ADD"
    },
    "2741": {
      "op": "SWAP1"
    },
    "2742": {
      "jump": "o",
      "op": "JUMP"
    },
    "2743": {
      "op": "JUMPDEST"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2748": {
      "op": "DUP3"
    },
    "2749": {
      "op": "DUP5"
    },
    "2750": {
      "op": "SUB"
    },
    "2751": {
      "op": "SLT"
    },
    "2752": {
      "op": "ISZERO"
    },
    "2753": {
      "op": "PUSH2",
      "value": "0xAC9"
    },
    "2756": {
      "op": "JUMPI"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2759": {
      "op": "DUP1"
    },
    "2760": {
      "op": "REVERT"
    },
    "2761": {
      "op": "JUMPDEST"
    },
    "2762": {
      "op": "DUP2"
    },
    "2763": {
      "op": "MLOAD"
    },
    "2764": {
      "op": "PUSH2",
      "value": "0xA7B"
    },
    "2767": {
      "op": "DUP2"
    },
    "2768": {
      "op": "PUSH2",
      "value": "0x9C6"
    },
    "2771": {
      "jump": "i",
      "op": "JUMP"
    },
    "2772": {
      "op": "JUMPDEST"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2775": {
      "op": "DUP1"
    },
    "2776": {
      "op": "DUP3"
    },
    "2777": {
      "op": "MSTORE"
    },
    "2778": {
      "op": "DUP2"
    },
    "2779": {
      "op": "DUP2"
    },
    "2780": {
      "op": "ADD"
    },
    "2781": {
      "op": "MSTORE"
    },
    "2782": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2817": {
      "op": "DUP3"
    },
    "2818": {
      "op": "ADD"
    },
    "2819": {
      "op": "MSTORE"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2822": {
      "op": "ADD"
    },
    "2823": {
      "op": "SWAP1"
    },
    "2824": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "5e67832d1c8d5781da6c90cd5ad32baad584487e",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"./CrossDomainRestrictedCalls.sol\";\nimport \"./BeamerUtils.sol\";\n\n/// The resolution registry.\n///\n/// This contract resides on the source L2 chain and is tasked with keeping track of results\n/// of L1 resolution. In particular, it stores the information about known fills and fillers,\n/// as well as fills that were marked invalid. This information is used by the :sol:contract:`RequestManager`\n/// to resolve claims.\n///\n/// .. note::\n///\n///   This contract can only be called by the :sol:contract:`Resolver` contract, via a\n///   chain-dependent messenger contract.\ncontract ResolutionRegistry is CrossDomainRestrictedCalls {\n    /// Emitted when a request has been resolved via L1 resolution.\n    ///\n    /// .. seealso:: :sol:func:`resolveRequest`\n    event RequestResolved(bytes32 requestHash, address filler, bytes32 fillId);\n\n    /// Emitted when a fill hash has been invalidated.\n    ///\n    /// .. seealso:: :sol:func:`invalidateFill`\n    event FillHashInvalidated(bytes32 fillHash);\n\n    /// Maps request hashes to fill infos.\n    mapping(bytes32 => BeamerUtils.FillInfo) public fillers;\n\n    /// The set of invalid fill hashes.\n    mapping(bytes32 => bool) public invalidFillHashes;\n\n    /// Mark the request identified by ``requestHash`` as filled by ``filler``.\n    ///\n    /// .. note::\n    ///\n    ///     This function is callable only by the native L2 messenger contract,\n    ///     which simply delivers the message sent from L1 by the\n    ///     Beamer's L2 :sol:interface:`messenger <IMessenger>` contract.\n    ///\n    /// @param requestHash The request hash.\n    /// @param fillId The fill ID.\n    /// @param resolutionChainId The resolution (L1) chain ID.\n    /// @param filler The address that filled the request.\n    function resolveRequest(\n        bytes32 requestHash,\n        bytes32 fillId,\n        uint256 resolutionChainId,\n        address filler\n    ) external restricted(resolutionChainId, msg.sender) {\n        require(\n            fillers[requestHash].filler == address(0),\n            \"Resolution already recorded\"\n        );\n        fillers[requestHash] = BeamerUtils.FillInfo(filler, fillId);\n        // Revert fill hash invalidation, fill proofs outweigh an invalidation\n        bytes32 fillHash = BeamerUtils.createFillHash(requestHash, fillId);\n        invalidFillHashes[fillHash] = false;\n\n        emit RequestResolved(requestHash, filler, fillId);\n    }\n\n    /// Mark the fill identified by ``fillId`` as invalid.\n    ///\n    /// .. note::\n    ///\n    ///     This function is callable only by the native L2 messenger contract,\n    ///     which simply delivers the message sent from L1 by the\n    ///     Beamer's L2 :sol:interface:`messenger <IMessenger>` contract.\n    ///\n    /// @param requestHash The request hash.\n    /// @param fillId The fill ID.\n    /// @param resolutionChainId The resolution (L1) chain ID.\n    function invalidateFill(\n        bytes32 requestHash,\n        bytes32 fillId,\n        uint256 resolutionChainId\n    ) external restricted(resolutionChainId, msg.sender) {\n        require(\n            fillers[requestHash].filler == address(0),\n            \"Cannot invalidate resolved fillHashes\"\n        );\n        bytes32 fillHash = BeamerUtils.createFillHash(requestHash, fillId);\n        require(\n            invalidFillHashes[fillHash] == false,\n            \"FillHash already invalidated\"\n        );\n\n        invalidFillHashes[fillHash] = true;\n\n        emit FillHashInvalidated(fillHash);\n    }\n}\n",
  "sourceMap": "634:2899:13:-:0;;;;;;;;;;;;-1:-1:-1;921:32:0;719:10:6;921:18:0;:32::i;:::-;634:2899:13;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;634:2899:13:-;;;;;;;",
  "sourcePath": "contracts/contracts/ResolutionRegistry.sol",
  "type": "contract"
}