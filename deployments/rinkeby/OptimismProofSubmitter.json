{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messenger",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "callers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messenger",
      "outputs": [
        {
          "internalType": "contract ICrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "l1Resolver",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        }
      ],
      "name": "submitProof",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "12": "contracts/contracts/OptimismProofSubmitter.sol",
    "16": "contracts/contracts/RestrictedCalls.sol",
    "19": "contracts/interfaces/ICrossDomainMessenger.sol",
    "20": "contracts/interfaces/IProofSubmitter.sol",
    "6": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "8": "contracts/contracts/BeamerUtils.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/OptimismProofSubmitter.sol",
    "exportedSymbols": {
      "BeamerUtils": [
        82
      ],
      "Context": [
        3135
      ],
      "CrossDomainRestrictedCalls": [
        160
      ],
      "ICrossDomainMessenger": [
        2119
      ],
      "IProofSubmitter": [
        2437
      ],
      "OptimismProofSubmitter": [
        475
      ],
      "Ownable": [
        2080
      ],
      "ResolutionRegistry": [
        1699
      ],
      "Resolver": [
        1830
      ],
      "RestrictedCalls": [
        1899
      ]
    },
    "id": 476,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 396,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:12"
      },
      {
        "absolutePath": "contracts/interfaces/IProofSubmitter.sol",
        "file": "../interfaces/IProofSubmitter.sol",
        "id": 397,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 476,
        "sourceUnit": 2438,
        "src": "58:43:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ICrossDomainMessenger.sol",
        "file": "../interfaces/ICrossDomainMessenger.sol",
        "id": 398,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 476,
        "sourceUnit": 2120,
        "src": "102:49:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/BeamerUtils.sol",
        "file": "./BeamerUtils.sol",
        "id": 399,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 476,
        "sourceUnit": 83,
        "src": "153:27:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/Resolver.sol",
        "file": "./Resolver.sol",
        "id": 400,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 476,
        "sourceUnit": 1831,
        "src": "181:24:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/RestrictedCalls.sol",
        "file": "./RestrictedCalls.sol",
        "id": 401,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 476,
        "sourceUnit": 1900,
        "src": "206:31:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 402,
              "name": "IProofSubmitter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2437,
              "src": "274:15:12"
            },
            "id": 403,
            "nodeType": "InheritanceSpecifier",
            "src": "274:15:12"
          },
          {
            "baseName": {
              "id": 404,
              "name": "RestrictedCalls",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1899,
              "src": "291:15:12"
            },
            "id": 405,
            "nodeType": "InheritanceSpecifier",
            "src": "291:15:12"
          }
        ],
        "canonicalName": "OptimismProofSubmitter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 475,
        "linearizedBaseContracts": [
          475,
          1899,
          2080,
          3135,
          2437
        ],
        "name": "OptimismProofSubmitter",
        "nameLocation": "248:22:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3cb747bf",
            "id": 408,
            "mutability": "mutable",
            "name": "messenger",
            "nameLocation": "342:9:12",
            "nodeType": "VariableDeclaration",
            "scope": 475,
            "src": "313:38:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICrossDomainMessenger_$2119",
              "typeString": "contract ICrossDomainMessenger"
            },
            "typeName": {
              "id": 407,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 406,
                "name": "ICrossDomainMessenger",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2119,
                "src": "313:21:12"
              },
              "referencedDeclaration": 2119,
              "src": "313:21:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICrossDomainMessenger_$2119",
                "typeString": "contract ICrossDomainMessenger"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 419,
              "nodeType": "Block",
              "src": "394:62:12",
              "statements": [
                {
                  "expression": {
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 413,
                      "name": "messenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "404:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICrossDomainMessenger_$2119",
                        "typeString": "contract ICrossDomainMessenger"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 415,
                          "name": "_messenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "438:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 414,
                        "name": "ICrossDomainMessenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2119,
                        "src": "416:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICrossDomainMessenger_$2119_$",
                          "typeString": "type(contract ICrossDomainMessenger)"
                        }
                      },
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "416:33:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICrossDomainMessenger_$2119",
                        "typeString": "contract ICrossDomainMessenger"
                      }
                    },
                    "src": "404:45:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICrossDomainMessenger_$2119",
                      "typeString": "contract ICrossDomainMessenger"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "404:45:12"
                }
              ]
            },
            "id": 420,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 410,
                  "mutability": "mutable",
                  "name": "_messenger",
                  "nameLocation": "378:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "370:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "369:20:12"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "394:0:12"
            },
            "scope": 475,
            "src": "358:98:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2436
            ],
            "body": {
              "id": 473,
              "nodeType": "Block",
              "src": "640:461:12",
              "statements": [
                {
                  "assignments": [
                    440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 440,
                      "mutability": "mutable",
                      "name": "fillId",
                      "nameLocation": "658:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 473,
                      "src": "650:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 439,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "650:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 448,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 444,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "688:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "688:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 442,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "677:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "677:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "677:24:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 441,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "667:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:35:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "650:52:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 452,
                        "name": "l1Resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "748:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 455,
                              "name": "Resolver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1830,
                              "src": "804:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Resolver_$1830_$",
                                "typeString": "type(contract Resolver)"
                              }
                            },
                            "id": 456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "resolve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1808,
                            "src": "804:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function Resolver.resolve(bytes32,uint256,uint256,address)"
                            }
                          },
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "id": 459,
                                    "name": "requestHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 424,
                                    "src": "887:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 460,
                                    "name": "fillId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 440,
                                    "src": "900:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 457,
                                    "name": "BeamerUtils",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82,
                                    "src": "860:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$82_$",
                                      "typeString": "type(library BeamerUtils)"
                                    }
                                  },
                                  "id": 458,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "createFillHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 49,
                                  "src": "860:26:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                                  }
                                },
                                "id": 461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "860:47:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 462,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "929:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chainid",
                                "nodeType": "MemberAccess",
                                "src": "929:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 464,
                                "name": "sourceChainId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 426,
                                "src": "964:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 465,
                                "name": "filler",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 428,
                                "src": "999:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 466,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "838:185:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$",
                              "typeString": "tuple(bytes32,uint256,uint256,address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function Resolver.resolve(bytes32,uint256,uint256,address)"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$",
                              "typeString": "tuple(bytes32,uint256,uint256,address)"
                            }
                          ],
                          "expression": {
                            "id": 453,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "772:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "772:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "772:265:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1051:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "id": 449,
                        "name": "messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "713:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICrossDomainMessenger_$2119",
                          "typeString": "contract ICrossDomainMessenger"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2118,
                      "src": "713:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,bytes memory,uint32) external"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "713:357:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "713:357:12"
                },
                {
                  "expression": {
                    "id": 471,
                    "name": "fillId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 440,
                    "src": "1088:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 438,
                  "id": 472,
                  "nodeType": "Return",
                  "src": "1081:13:12"
                }
              ]
            },
            "functionSelector": "fb0139d6",
            "id": 474,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 431,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "591:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "chainid",
                    "nodeType": "MemberAccess",
                    "src": "591:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "expression": {
                      "id": 433,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "606:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "606:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 435,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 430,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1898,
                  "src": "580:10:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "580:37:12"
              }
            ],
            "name": "submitProof",
            "nameLocation": "471:11:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "l1Resolver",
                  "nameLocation": "491:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 474,
                  "src": "483:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "511:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 474,
                  "src": "503:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 426,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "532:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 474,
                  "src": "524:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 428,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "555:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 474,
                  "src": "547:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "482:80:12"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 474,
                  "src": "627:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "626:9:12"
            },
            "scope": 475,
            "src": "462:639:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 476,
        "src": "239:864:12",
        "usedErrors": []
      }
    ],
    "src": "32:1072:12"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516107cd3803806107cd83398101604081905261002f916100ad565b6100383361005d565b600280546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b6106e1806100ec6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ef578063ef1556d314610100578063f2fde38b14610113578063fb0139d61461012657600080fd5b80633cb747bf14610082578063715018a6146100b25780637936464e146100bc575b600080fd5b600254610095906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ba610147565b005b6100df6100ca36600461053a565b60016020526000908152604090205460ff1681565b60405190151581526020016100a9565b6000546001600160a01b0316610095565b6100ba61010e36600461056f565b610186565b6100ba61012136600461059b565b610287565b6101396101343660046105bd565b610322565b6040519081526020016100a9565b6000546001600160a01b0316331461017a5760405162461bcd60e51b815260040161017190610603565b60405180910390fd5b61018460006104ea565b565b6000546001600160a01b031633146101b05760405162461bcd60e51b815260040161017190610603565b600082826040516020016101e092919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f1981840301815291815281516020928301206000818152600190935291205490915060ff16156102675760405162461bcd60e51b815260206004820152602660248201527f5265737472696374656443616c6c733a2063616c6c657220616c72656164792060448201526565786973747360d01b6064820152608401610171565b6000908152600160208190526040909120805460ff191690911790555050565b6000546001600160a01b031633146102b15760405162461bcd60e51b815260040161017190610603565b6001600160a01b0381166103165760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610171565b61031f816104ea565b50565b600046336000828260405160200161035692919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f1981840301815291815281516020928301206000818152600190935291205490915060ff166103cd5760405162461bcd60e51b815260206004820152601f60248201527f5265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c6572006044820152606401610171565b604080514360208083019190915282518083038201815291830190925280519101206002546001600160a01b0316633dbb202b8a6104328b85604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040516024810191909152466044820152606481018b90526001600160a01b038a16608482015260a40160408051601f198184030181529181526020820180516001600160e01b03166307bdee7b60e11b179052516001600160e01b031960e085901b1681526104ab929190620f424090600401610638565b600060405180830381600087803b1580156104c557600080fd5b505af11580156104d9573d6000803e3d6000fd5b50929b9a5050505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561054c57600080fd5b5035919050565b80356001600160a01b038116811461056a57600080fd5b919050565b6000806040838503121561058257600080fd5b8235915061059260208401610553565b90509250929050565b6000602082840312156105ad57600080fd5b6105b682610553565b9392505050565b600080600080608085870312156105d357600080fd5b6105dc85610553565b935060208501359250604085013591506105f860608601610553565b905092959194509250565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60018060a01b038416815260006020606081840152845180606085015260005b8181101561067457868101830151858201608001528201610658565b81811115610686576000608083870101525b5063ffffffff9490941660408401525050601f91909101601f1916016080019291505056fea2646970667358221220cdd08e326a69efe6bab3982aa37d18cd4ce01d802881899ac0264b7e9079688764736f6c634300080c0033",
  "bytecodeSha1": "59076b348ff62210869a23cf49c449c25f32aeb1",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "OptimismProofSubmitter",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "12": [
            2006,
            2028,
            true
          ]
        }
      },
      "12": {},
      "16": {
        "OptimismProofSubmitter.submitProof": {
          "14": [
            625,
            637,
            true
          ]
        },
        "RestrictedCalls.addCaller": {
          "13": [
            387,
            400,
            true
          ]
        }
      },
      "19": {},
      "20": {},
      "6": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "10": [
            2378,
            2395
          ],
          "11": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "2": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "5": [
            1998,
            2071
          ],
          "6": [
            2081,
            2109
          ]
        }
      },
      "12": {
        "OptimismProofSubmitter.submitProof": {
          "7": [
            713,
            1070
          ],
          "9": [
            1081,
            1094
          ]
        }
      },
      "16": {
        "RestrictedCalls.addCaller": {
          "3": [
            379,
            443
          ],
          "4": [
            453,
            472
          ]
        }
      },
      "19": {},
      "20": {},
      "6": {
        "Context._msgSender": {
          "1": [
            712,
            729
          ]
        }
      },
      "8": {
        "BeamerUtils.createFillHash": {
          "8": [
            641,
            696
          ]
        }
      }
    }
  },
  "dependencies": [
    "BeamerUtils",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "ICrossDomainMessenger",
    "IProofSubmitter",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "RestrictedCalls"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ef578063ef1556d314610100578063f2fde38b14610113578063fb0139d61461012657600080fd5b80633cb747bf14610082578063715018a6146100b25780637936464e146100bc575b600080fd5b600254610095906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ba610147565b005b6100df6100ca36600461053a565b60016020526000908152604090205460ff1681565b60405190151581526020016100a9565b6000546001600160a01b0316610095565b6100ba61010e36600461056f565b610186565b6100ba61012136600461059b565b610287565b6101396101343660046105bd565b610322565b6040519081526020016100a9565b6000546001600160a01b0316331461017a5760405162461bcd60e51b815260040161017190610603565b60405180910390fd5b61018460006104ea565b565b6000546001600160a01b031633146101b05760405162461bcd60e51b815260040161017190610603565b600082826040516020016101e092919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f1981840301815291815281516020928301206000818152600190935291205490915060ff16156102675760405162461bcd60e51b815260206004820152602660248201527f5265737472696374656443616c6c733a2063616c6c657220616c72656164792060448201526565786973747360d01b6064820152608401610171565b6000908152600160208190526040909120805460ff191690911790555050565b6000546001600160a01b031633146102b15760405162461bcd60e51b815260040161017190610603565b6001600160a01b0381166103165760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610171565b61031f816104ea565b50565b600046336000828260405160200161035692919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f1981840301815291815281516020928301206000818152600190935291205490915060ff166103cd5760405162461bcd60e51b815260206004820152601f60248201527f5265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c6572006044820152606401610171565b604080514360208083019190915282518083038201815291830190925280519101206002546001600160a01b0316633dbb202b8a6104328b85604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040516024810191909152466044820152606481018b90526001600160a01b038a16608482015260a40160408051601f198184030181529181526020820180516001600160e01b03166307bdee7b60e11b179052516001600160e01b031960e085901b1681526104ab929190620f424090600401610638565b600060405180830381600087803b1580156104c557600080fd5b505af11580156104d9573d6000803e3d6000fd5b50929b9a5050505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561054c57600080fd5b5035919050565b80356001600160a01b038116811461056a57600080fd5b919050565b6000806040838503121561058257600080fd5b8235915061059260208401610553565b90509250929050565b6000602082840312156105ad57600080fd5b6105b682610553565b9392505050565b600080600080608085870312156105d357600080fd5b6105dc85610553565b935060208501359250604085013591506105f860608601610553565b905092959194509250565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60018060a01b038416815260006020606081840152845180606085015260005b8181101561067457868101830151858201608001528201610658565b81811115610686576000608083870101525b5063ffffffff9490941660408401525050601f91909101601f1916016080019291505056fea2646970667358221220cdd08e326a69efe6bab3982aa37d18cd4ce01d802881899ac0264b7e9079688764736f6c634300080c0033",
  "deployedSourceMap": "239:864:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;313:38;;;;;-1:-1:-1;;;;;313:38:12;;;;;;-1:-1:-1;;;;;208:32:21;;;190:51;;178:2;163:18;313:38:12;;;;;;;;1668:101:0;;;:::i;:::-;;182:40:16;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;602:14:21;;595:22;577:41;;565:2;550:18;182:40:16;437:187:21;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;229:250:16;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;462:639:12:-;;;;;;:::i;:::-;;:::i;:::-;;;2013:25:21;;;2001:2;1986:18;462:639:12;1867:177:21;1668:101:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;229:250:16:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;310:11:16::1;351:7;360:6;334:33;;;;;;;;2567:19:21::0;;;2624:2;2620:15;-1:-1:-1;;2616:53:21;2611:2;2602:12;;2595:75;2695:2;2686:12;;2410:294;334:33:16::1;;::::0;;-1:-1:-1;;334:33:16;;::::1;::::0;;;;;;324:44;;334:33:::1;324:44:::0;;::::1;::::0;388:12:::1;::::0;;;:7:::1;:12:::0;;;;;;324:44;;-1:-1:-1;388:12:16::1;;387:13;379:64;;;::::0;-1:-1:-1;;;379:64:16;;2911:2:21;379:64:16::1;::::0;::::1;2893:21:21::0;2950:2;2930:18;;;2923:30;2989:34;2969:18;;;2962:62;-1:-1:-1;;;3040:18:21;;;3033:36;3086:19;;379:64:16::1;2709:402:21::0;379:64:16::1;453:12;::::0;;;468:4:::1;453:12;::::0;;;;;;;:19;;-1:-1:-1;;453:19:16::1;::::0;;::::1;::::0;;-1:-1:-1;;229:250:16:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;3318:2:21;1998:73:0::1;::::0;::::1;3300:21:21::0;3357:2;3337:18;;;3330:30;3396:34;3376:18;;;3369:62;-1:-1:-1;;;3447:18:21;;;3440:36;3493:19;;1998:73:0::1;3116:402:21::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;462:639:12:-;627:7;591:13;606:10;548:11:16;589:7;598:6;572:33;;;;;;;;2567:19:21;;;2624:2;2620:15;-1:-1:-1;;2616:53:21;2611:2;2602:12;;2595:75;2695:2;2686:12;;2410:294;572:33:16;;;;-1:-1:-1;;572:33:16;;;;;;;;;562:44;;572:33;562:44;;;;625:12;;;;:7;:12;;;;;;562:44;;-1:-1:-1;625:12:16;;617:56;;;;-1:-1:-1;;;617:56:16;;3725:2:21;617:56:16;;;3707:21:21;3764:2;3744:18;;;3737:30;3803:33;3783:18;;;3776:61;3854:18;;617:56:16;3523:355:21;617:56:16;677:24:12::1;::::0;;688:12:::1;677:24;::::0;;::::1;2013:25:21::0;;;;677:24:12;;;;;;;;;1986:18:21;;;677:24:12;;;667:35;;;::::1;::::0;713:9:::1;::::0;-1:-1:-1;;;;;713:9:12::1;:21;748:10:::0;860:47:::1;887:11:::0;667:35;658:37:8;;;;;;;5445:19:21;;;;5480:12;;;5473:28;;;;658:37:8;;;;;;;;;5517:12:21;;;;658:37:8;;648:48;;;;;;539:164;860:47:12::1;772:265;::::0;::::1;::::0;::::1;4296:25:21::0;;;;929:13:12::1;4337:18:21::0;;;4330:34;4380:18;;;4373:34;;;-1:-1:-1;;;;;4443:32:21;;4423:18;;;4416:60;4268:19;;772:265:12::1;::::0;;-1:-1:-1;;772:265:12;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;772:265:12::1;-1:-1:-1::0;;;772:265:12::1;::::0;;713:357;-1:-1:-1;;;;;;772:265:12::1;713:357:::0;;;;;;::::1;::::0;;772:265;1051:9:::1;::::0;713:357:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1088:6:12;;462:639;-1:-1:-1;;;;;;;;;;;462:639:12:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;252:180:21:-;311:6;364:2;352:9;343:7;339:23;335:32;332:52;;;380:1;377;370:12;332:52;-1:-1:-1;403:23:21;;252:180;-1:-1:-1;252:180:21:o;837:173::-;905:20;;-1:-1:-1;;;;;954:31:21;;944:42;;934:70;;1000:1;997;990:12;934:70;837:173;;;:::o;1015:254::-;1083:6;1091;1144:2;1132:9;1123:7;1119:23;1115:32;1112:52;;;1160:1;1157;1150:12;1112:52;1196:9;1183:23;1173:33;;1225:38;1259:2;1248:9;1244:18;1225:38;:::i;:::-;1215:48;;1015:254;;;;;:::o;1274:186::-;1333:6;1386:2;1374:9;1365:7;1361:23;1357:32;1354:52;;;1402:1;1399;1392:12;1354:52;1425:29;1444:9;1425:29;:::i;:::-;1415:39;1274:186;-1:-1:-1;;;1274:186:21:o;1465:397::-;1551:6;1559;1567;1575;1628:3;1616:9;1607:7;1603:23;1599:33;1596:53;;;1645:1;1642;1635:12;1596:53;1668:29;1687:9;1668:29;:::i;:::-;1658:39;;1744:2;1733:9;1729:18;1716:32;1706:42;;1795:2;1784:9;1780:18;1767:32;1757:42;;1818:38;1852:2;1841:9;1837:18;1818:38;:::i;:::-;1808:48;;1465:397;;;;;;;:::o;2049:356::-;2251:2;2233:21;;;2270:18;;;2263:30;2329:34;2324:2;2309:18;;2302:62;2396:2;2381:18;;2049:356::o;4487:796::-;4732:1;4728;4723:3;4719:11;4715:19;4707:6;4703:32;4692:9;4685:51;4666:4;4755:2;4793;4788;4777:9;4773:18;4766:30;4825:6;4819:13;4868:6;4863:2;4852:9;4848:18;4841:34;4893:1;4903:141;4917:6;4914:1;4911:13;4903:141;;;5013:14;;;5009:23;;5003:30;4978:17;;;4997:3;4974:27;4967:67;4932:10;;4903:141;;;5062:6;5059:1;5056:13;5053:92;;;5133:1;5127:3;5118:6;5107:9;5103:22;5099:32;5092:43;5053:92;-1:-1:-1;5265:10:21;5253:23;;;;5248:2;5233:18;;5226:51;-1:-1:-1;;5206:2:21;5185:15;;;;-1:-1:-1;;5181:29:21;5166:45;5213:3;5162:55;;4487:796;-1:-1:-1;;4487:796:21:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    239,
    1103
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xEF1556D3 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xFB0139D6 EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CB747BF EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x7936464E EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x95 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH2 0x147 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH2 0xCA CALLDATASIZE PUSH1 0x4 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x95 JUMP JUMPDEST PUSH2 0xBA PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x186 JUMP JUMPDEST PUSH2 0xBA PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x59B JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BD JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171 SWAP1 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x184 PUSH1 0x0 PUSH2 0x4EA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171 SWAP1 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E0 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C657220616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x657869737473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171 SWAP1 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x31F DUP2 PUSH2 0x4EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CHAINID CALLER PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x356 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD NUMBER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3DBB202B DUP11 PUSH2 0x432 DUP12 DUP6 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CHAINID PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x7BDEE7B PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x4AB SWAP3 SWAP2 SWAP1 PUSH3 0xF4240 SWAP1 PUSH1 0x4 ADD PUSH2 0x638 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x592 PUSH1 0x20 DUP5 ADD PUSH2 0x553 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B6 DUP3 PUSH2 0x553 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DC DUP6 PUSH2 0x553 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x5F8 PUSH1 0x60 DUP7 ADD PUSH2 0x553 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x60 DUP2 DUP5 ADD MSTORE DUP5 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x674 JUMPI DUP7 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0x658 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x686 JUMPI PUSH1 0x0 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH4 0xFFFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD PUSH1 0x80 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xD0 DUP15 ORIGIN PUSH11 0x69EFE6BAB3982AA37D18CD 0x4C 0xE0 SAR DUP1 0x28 DUP2 DUP10 SWAP11 0xC0 0x26 0x4B PUSH31 0x9079688764736F6C634300080C003300000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        239,
        1103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "6": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "REVERT",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "POP",
      "path": "12"
    },
    "18": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "21": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "LT",
      "path": "12"
    },
    "22": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "29": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "SHR",
      "path": "12"
    },
    "32": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "33": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "GT",
      "path": "12"
    },
    "39": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "43": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "44": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "EQ",
      "path": "12"
    },
    "50": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xEF"
    },
    "53": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "54": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "55": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xEF1556D3"
    },
    "60": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "EQ",
      "path": "12"
    },
    "61": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "64": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "65": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "66": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "EQ",
      "path": "12"
    },
    "72": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x113"
    },
    "75": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "76": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "77": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFB0139D6"
    },
    "82": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "EQ",
      "path": "12"
    },
    "83": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x126"
    },
    "86": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "87": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "90": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "REVERT",
      "path": "12"
    },
    "91": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "92": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "93": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3CB747BF"
    },
    "98": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "EQ",
      "path": "12"
    },
    "99": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "103": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "104": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x715018A6"
    },
    "109": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "EQ",
      "path": "12"
    },
    "110": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB2"
    },
    "113": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "114": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "115": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x7936464E"
    },
    "120": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "EQ",
      "path": "12"
    },
    "121": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBC"
    },
    "124": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "125": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "126": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "DUP1",
      "path": "12"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        239,
        1103
      ],
      "op": "REVERT",
      "path": "12"
    },
    "130": {
      "offset": [
        313,
        351
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "131": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "133": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "134": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x95"
    },
    "137": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "144": {
      "op": "SHL"
    },
    "145": {
      "op": "SUB"
    },
    "146": {
      "offset": [
        313,
        351
      ],
      "op": "AND",
      "path": "12"
    },
    "147": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "DUP2",
      "path": "12"
    },
    "148": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "JUMP",
      "path": "12"
    },
    "149": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "150": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "152": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "159": {
      "op": "SHL"
    },
    "160": {
      "op": "SUB"
    },
    "161": {
      "op": "SWAP1"
    },
    "162": {
      "op": "SWAP2"
    },
    "163": {
      "op": "AND"
    },
    "164": {
      "op": "DUP2"
    },
    "165": {
      "op": "MSTORE"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "168": {
      "op": "ADD"
    },
    "169": {
      "offset": [
        313,
        351
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "170": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "172": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "173": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "DUP1",
      "path": "12"
    },
    "174": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "175": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "SUB",
      "path": "12"
    },
    "176": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "177": {
      "fn": null,
      "offset": [
        313,
        351
      ],
      "op": "RETURN",
      "path": "12"
    },
    "178": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "179": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA"
    },
    "182": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147"
    },
    "185": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "186": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "187": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "188": {
      "offset": [
        182,
        222
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "189": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDF"
    },
    "192": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCA"
    },
    "195": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "196": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "198": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x53A"
    },
    "201": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        182,
        222
      ],
      "op": "JUMP",
      "path": "16"
    },
    "202": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "203": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "205": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "207": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "208": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "210": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "211": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "DUP2",
      "path": "16"
    },
    "212": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "213": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "215": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "216": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "217": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "218": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "220": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "AND",
      "path": "16"
    },
    "221": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "DUP2",
      "path": "16"
    },
    "222": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "JUMP",
      "path": "16"
    },
    "223": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "224": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "226": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        182,
        222
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "offset": [
        182,
        222
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA9"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "240": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "242": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "249": {
      "op": "SHL"
    },
    "250": {
      "op": "SUB"
    },
    "251": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "252": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "255": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "256": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        229,
        479
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "257": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        229,
        479
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA"
    },
    "260": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        229,
        479
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10E"
    },
    "263": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        229,
        479
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "264": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        229,
        479
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "266": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        229,
        479
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x56F"
    },
    "269": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        229,
        479
      ],
      "op": "JUMP",
      "path": "16"
    },
    "270": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        229,
        479
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "271": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        229,
        479
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x186"
    },
    "274": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        229,
        479
      ],
      "op": "JUMP",
      "path": "16"
    },
    "275": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA"
    },
    "279": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121"
    },
    "282": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "283": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "285": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59B"
    },
    "288": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "289": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "290": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "293": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "294": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "295": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x139"
    },
    "298": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x134"
    },
    "301": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "302": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "304": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5BD"
    },
    "307": {
      "fn": "OptimismProofSubmitter.submitProof",
      "jump": "i",
      "offset": [
        462,
        1101
      ],
      "op": "JUMP",
      "path": "12"
    },
    "308": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "309": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x322"
    },
    "312": {
      "fn": "OptimismProofSubmitter.submitProof",
      "jump": "i",
      "offset": [
        462,
        1101
      ],
      "op": "JUMP",
      "path": "12"
    },
    "313": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "314": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "316": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "317": {
      "op": "SWAP1"
    },
    "318": {
      "op": "DUP2"
    },
    "319": {
      "op": "MSTORE"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "322": {
      "op": "ADD"
    },
    "323": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA9"
    },
    "326": {
      "op": "JUMP"
    },
    "327": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "328": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "330": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "337": {
      "op": "SHL"
    },
    "338": {
      "op": "SUB"
    },
    "339": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "340": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 1
    },
    "341": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "342": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17A"
    },
    "345": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "346": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "348": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "349": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "353": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "355": {
      "op": "SHL"
    },
    "356": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "357": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "358": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "360": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "361": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x171"
    },
    "364": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x603"
    },
    "368": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "369": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "370": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "372": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "373": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "374": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "375": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "377": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "378": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "379": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x184"
    },
    "382": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "384": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EA"
    },
    "387": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "388": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "390": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        229,
        479
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "391": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "393": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "400": {
      "op": "SHL"
    },
    "401": {
      "op": "SUB"
    },
    "402": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "403": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "404": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "405": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0"
    },
    "408": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "409": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "411": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "412": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "416": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "418": {
      "op": "SHL"
    },
    "419": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "420": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "421": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "423": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "424": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x171"
    },
    "427": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "428": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x603"
    },
    "431": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "432": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "433": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        310,
        321
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "435": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        351,
        358
      ],
      "op": "DUP3",
      "path": "16"
    },
    "436": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        360,
        366
      ],
      "op": "DUP3",
      "path": "16"
    },
    "437": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "439": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "440": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "442": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "ADD",
      "path": "16"
    },
    "443": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E0"
    },
    "446": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "447": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "448": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "449": {
      "op": "SWAP2"
    },
    "450": {
      "op": "DUP3"
    },
    "451": {
      "op": "MSTORE"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "454": {
      "op": "SHL"
    },
    "455": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "468": {
      "op": "NOT"
    },
    "469": {
      "op": "AND"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "472": {
      "op": "DUP3"
    },
    "473": {
      "op": "ADD"
    },
    "474": {
      "op": "MSTORE"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "477": {
      "op": "ADD"
    },
    "478": {
      "op": "SWAP1"
    },
    "479": {
      "op": "JUMP"
    },
    "480": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "481": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "483": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "DUP1",
      "path": "16"
    },
    "484": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "487": {
      "op": "NOT"
    },
    "488": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "DUP2",
      "path": "16"
    },
    "489": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "DUP5",
      "path": "16"
    },
    "490": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "SUB",
      "path": "16"
    },
    "491": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "ADD",
      "path": "16"
    },
    "492": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "DUP2",
      "path": "16"
    },
    "493": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "494": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "495": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "DUP2",
      "path": "16"
    },
    "496": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "497": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        324,
        368
      ],
      "op": "DUP2",
      "path": "16"
    },
    "498": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        324,
        368
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "499": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        334,
        367
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "501": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        324,
        368
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "502": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        324,
        368
      ],
      "op": "DUP4",
      "path": "16"
    },
    "503": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        324,
        368
      ],
      "op": "ADD",
      "path": "16"
    },
    "504": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        324,
        368
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "505": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        388,
        400
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 3,
      "value": "0x0"
    },
    "507": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        388,
        400
      ],
      "op": "DUP2",
      "path": "16"
    },
    "508": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        388,
        400
      ],
      "op": "DUP2",
      "path": "16"
    },
    "509": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        388,
        400
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "510": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        388,
        395
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "512": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        388,
        400
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "513": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        388,
        400
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "514": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        388,
        400
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "515": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        388,
        400
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "516": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        388,
        400
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "517": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        388,
        400
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "518": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        324,
        368
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "519": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        324,
        368
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "520": {
      "op": "POP"
    },
    "521": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        388,
        400
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "523": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        388,
        400
      ],
      "op": "AND",
      "path": "16"
    },
    "524": {
      "branch": 13,
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        387,
        400
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "525": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        379,
        443
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x267"
    },
    "528": {
      "branch": 13,
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        379,
        443
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "529": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        379,
        443
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "531": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        379,
        443
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "532": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "536": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "538": {
      "op": "SHL"
    },
    "539": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        379,
        443
      ],
      "op": "DUP2",
      "path": "16"
    },
    "540": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        379,
        443
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "543": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        379,
        443
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "545": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        379,
        443
      ],
      "op": "DUP3",
      "path": "16"
    },
    "546": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        379,
        443
      ],
      "op": "ADD",
      "path": "16"
    },
    "547": {
      "op": "MSTORE"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "552": {
      "op": "DUP3"
    },
    "553": {
      "op": "ADD"
    },
    "554": {
      "op": "MSTORE"
    },
    "555": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C657220616C726561647920"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "590": {
      "op": "DUP3"
    },
    "591": {
      "op": "ADD"
    },
    "592": {
      "op": "MSTORE"
    },
    "593": {
      "op": "PUSH6",
      "value": "0x657869737473"
    },
    "600": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "602": {
      "op": "SHL"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "605": {
      "op": "DUP3"
    },
    "606": {
      "op": "ADD"
    },
    "607": {
      "op": "MSTORE"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        379,
        443
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x171"
    },
    "614": {
      "op": "JUMP"
    },
    "615": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        379,
        443
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "616": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        465
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 4,
      "value": "0x0"
    },
    "618": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        465
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "619": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        465
      ],
      "op": "DUP2",
      "path": "16"
    },
    "620": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        465
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "621": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        468,
        472
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "623": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        465
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "625": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        465
      ],
      "op": "DUP2",
      "path": "16"
    },
    "626": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        465
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "627": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        465
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "628": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        465
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "630": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        465
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "631": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        465
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "632": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        465
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "633": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        472
      ],
      "op": "DUP1",
      "path": "16"
    },
    "634": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        472
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "637": {
      "op": "NOT"
    },
    "638": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        472
      ],
      "op": "AND",
      "path": "16"
    },
    "639": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        472
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "640": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        472
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "641": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        472
      ],
      "op": "OR",
      "path": "16"
    },
    "642": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        472
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "643": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        453,
        472
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "644": {
      "op": "POP"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        229,
        479
      ],
      "op": "JUMP",
      "path": "16"
    },
    "647": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "648": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "650": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "657": {
      "op": "SHL"
    },
    "658": {
      "op": "SUB"
    },
    "659": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "660": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "661": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "662": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B1"
    },
    "665": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "666": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "668": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "669": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "673": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "675": {
      "op": "SHL"
    },
    "676": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "677": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "678": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "680": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "681": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x171"
    },
    "684": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "685": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x603"
    },
    "688": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "689": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "696": {
      "op": "SHL"
    },
    "697": {
      "op": "SUB"
    },
    "698": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 5
    },
    "699": {
      "branch": 12,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "700": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x316"
    },
    "703": {
      "branch": 12,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "704": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "706": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "715": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "718": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "720": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "721": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "722": {
      "op": "MSTORE"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "727": {
      "op": "DUP3"
    },
    "728": {
      "op": "ADD"
    },
    "729": {
      "op": "MSTORE"
    },
    "730": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "765": {
      "op": "DUP3"
    },
    "766": {
      "op": "ADD"
    },
    "767": {
      "op": "MSTORE"
    },
    "768": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "780": {
      "op": "DUP3"
    },
    "781": {
      "op": "ADD"
    },
    "782": {
      "op": "MSTORE"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "785": {
      "op": "ADD"
    },
    "786": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x171"
    },
    "789": {
      "op": "JUMP"
    },
    "790": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x31F"
    },
    "794": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "795": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EA"
    },
    "798": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "799": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "801": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "802": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "803": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        627,
        634
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "805": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        591,
        604
      ],
      "op": "CHAINID",
      "path": "12"
    },
    "806": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        606,
        616
      ],
      "op": "CALLER",
      "path": "12"
    },
    "807": {
      "offset": [
        548,
        559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "809": {
      "offset": [
        589,
        596
      ],
      "op": "DUP3",
      "path": "16"
    },
    "810": {
      "offset": [
        598,
        604
      ],
      "op": "DUP3",
      "path": "16"
    },
    "811": {
      "offset": [
        572,
        605
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "813": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "814": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "816": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "ADD",
      "path": "16"
    },
    "817": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x356"
    },
    "820": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "821": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "822": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "823": {
      "op": "SWAP2"
    },
    "824": {
      "op": "DUP3"
    },
    "825": {
      "op": "MSTORE"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "828": {
      "op": "SHL"
    },
    "829": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "842": {
      "op": "NOT"
    },
    "843": {
      "op": "AND"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "846": {
      "op": "DUP3"
    },
    "847": {
      "op": "ADD"
    },
    "848": {
      "op": "MSTORE"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "851": {
      "op": "ADD"
    },
    "852": {
      "op": "SWAP1"
    },
    "853": {
      "op": "JUMP"
    },
    "854": {
      "offset": [
        572,
        605
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "855": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "857": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "DUP1",
      "path": "16"
    },
    "858": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "861": {
      "op": "NOT"
    },
    "862": {
      "offset": [
        572,
        605
      ],
      "op": "DUP2",
      "path": "16"
    },
    "863": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "DUP5",
      "path": "16"
    },
    "864": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "SUB",
      "path": "16"
    },
    "865": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "ADD",
      "path": "16"
    },
    "866": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "DUP2",
      "path": "16"
    },
    "867": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "868": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "869": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "DUP2",
      "path": "16"
    },
    "870": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        572,
        605
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "871": {
      "offset": [
        562,
        606
      ],
      "op": "DUP2",
      "path": "16"
    },
    "872": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        562,
        606
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "873": {
      "offset": [
        572,
        605
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "875": {
      "offset": [
        562,
        606
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "876": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        562,
        606
      ],
      "op": "DUP4",
      "path": "16"
    },
    "877": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        562,
        606
      ],
      "op": "ADD",
      "path": "16"
    },
    "878": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        562,
        606
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "879": {
      "offset": [
        625,
        637
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "881": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        625,
        637
      ],
      "op": "DUP2",
      "path": "16"
    },
    "882": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        625,
        637
      ],
      "op": "DUP2",
      "path": "16"
    },
    "883": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        625,
        637
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "884": {
      "offset": [
        625,
        632
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "886": {
      "offset": [
        625,
        637
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "887": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        625,
        637
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "888": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        625,
        637
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "889": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        625,
        637
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "890": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        625,
        637
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "891": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        625,
        637
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "892": {
      "offset": [
        562,
        606
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "893": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        562,
        606
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "894": {
      "op": "POP"
    },
    "895": {
      "offset": [
        625,
        637
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "897": {
      "branch": 14,
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        625,
        637
      ],
      "op": "AND",
      "path": "16"
    },
    "898": {
      "offset": [
        617,
        673
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3CD"
    },
    "901": {
      "branch": 14,
      "offset": [
        617,
        673
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "902": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        617,
        673
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "904": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        617,
        673
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "905": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "909": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "911": {
      "op": "SHL"
    },
    "912": {
      "offset": [
        617,
        673
      ],
      "op": "DUP2",
      "path": "16"
    },
    "913": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        617,
        673
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "916": {
      "offset": [
        617,
        673
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "918": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        617,
        673
      ],
      "op": "DUP3",
      "path": "16"
    },
    "919": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        617,
        673
      ],
      "op": "ADD",
      "path": "16"
    },
    "920": {
      "op": "MSTORE"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "925": {
      "op": "DUP3"
    },
    "926": {
      "op": "ADD"
    },
    "927": {
      "op": "MSTORE"
    },
    "928": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C657200"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "963": {
      "op": "DUP3"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "op": "MSTORE"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "968": {
      "op": "ADD"
    },
    "969": {
      "offset": [
        617,
        673
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x171"
    },
    "972": {
      "op": "JUMP"
    },
    "973": {
      "offset": [
        617,
        673
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "974": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "976": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "DUP1",
      "path": "12"
    },
    "977": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "978": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        688,
        700
      ],
      "op": "NUMBER",
      "path": "12"
    },
    "979": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "981": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "DUP1",
      "path": "12"
    },
    "982": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "DUP4",
      "path": "12"
    },
    "983": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "ADD",
      "path": "12"
    },
    "984": {
      "op": "SWAP2"
    },
    "985": {
      "op": "SWAP1"
    },
    "986": {
      "op": "SWAP2"
    },
    "987": {
      "op": "MSTORE"
    },
    "988": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "DUP3",
      "path": "12"
    },
    "989": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "990": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "DUP1",
      "path": "12"
    },
    "991": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "DUP4",
      "path": "12"
    },
    "992": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "SUB",
      "path": "12"
    },
    "993": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "DUP3",
      "path": "12"
    },
    "994": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "ADD",
      "path": "12"
    },
    "995": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "DUP2",
      "path": "12"
    },
    "996": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "997": {
      "op": "SWAP2"
    },
    "998": {
      "op": "DUP4"
    },
    "999": {
      "op": "ADD"
    },
    "1000": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1001": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1002": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        677,
        701
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1003": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        667,
        702
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1004": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        667,
        702
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1005": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        667,
        702
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1006": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        667,
        702
      ],
      "op": "ADD",
      "path": "12"
    },
    "1007": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        667,
        702
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1008": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        722
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 7,
      "value": "0x2"
    },
    "1010": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        722
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1017": {
      "op": "SHL"
    },
    "1018": {
      "op": "SUB"
    },
    "1019": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        722
      ],
      "op": "AND",
      "path": "12"
    },
    "1020": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        734
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3DBB202B"
    },
    "1025": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        748,
        758
      ],
      "op": "DUP11",
      "path": "12"
    },
    "1026": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        860,
        907
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x432"
    },
    "1029": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        887,
        898
      ],
      "op": "DUP12",
      "path": "12"
    },
    "1030": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        667,
        702
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1031": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 8,
      "value": "0x40"
    },
    "1033": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1034": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1035": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1037": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1038": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1039": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "ADD",
      "path": "8"
    },
    "1040": {
      "op": "SWAP5"
    },
    "1041": {
      "op": "SWAP1"
    },
    "1042": {
      "op": "SWAP5"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "DUP1"
    },
    "1045": {
      "op": "DUP3"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "op": "SWAP3"
    },
    "1048": {
      "op": "SWAP1"
    },
    "1049": {
      "op": "SWAP3"
    },
    "1050": {
      "op": "MSTORE"
    },
    "1051": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1052": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1053": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1054": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1055": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "SUB",
      "path": "8"
    },
    "1056": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1057": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "ADD",
      "path": "8"
    },
    "1058": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1059": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1062": {
      "op": "SWAP1"
    },
    "1063": {
      "op": "SWAP3"
    },
    "1064": {
      "op": "ADD"
    },
    "1065": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1066": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        658,
        695
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1067": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        648,
        696
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1068": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        648,
        696
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1069": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        648,
        696
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1070": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        648,
        696
      ],
      "op": "ADD",
      "path": "8"
    },
    "1071": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        648,
        696
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1072": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        648,
        696
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1073": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        539,
        703
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1074": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        860,
        907
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1075": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1077": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1078": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "1080": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1081": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "ADD",
      "path": "12"
    },
    "1082": {
      "op": "SWAP2"
    },
    "1083": {
      "op": "SWAP1"
    },
    "1084": {
      "op": "SWAP2"
    },
    "1085": {
      "op": "MSTORE"
    },
    "1086": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        929,
        942
      ],
      "op": "CHAINID",
      "path": "12"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1089": {
      "op": "DUP3"
    },
    "1090": {
      "op": "ADD"
    },
    "1091": {
      "op": "MSTORE"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1094": {
      "op": "DUP2"
    },
    "1095": {
      "op": "ADD"
    },
    "1096": {
      "op": "DUP12"
    },
    "1097": {
      "op": "SWAP1"
    },
    "1098": {
      "op": "MSTORE"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1105": {
      "op": "SHL"
    },
    "1106": {
      "op": "SUB"
    },
    "1107": {
      "op": "DUP11"
    },
    "1108": {
      "op": "AND"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1111": {
      "op": "DUP3"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "op": "MSTORE"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1116": {
      "op": "ADD"
    },
    "1117": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1119": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1120": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1123": {
      "op": "NOT"
    },
    "1124": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1125": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1126": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "SUB",
      "path": "12"
    },
    "1127": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "ADD",
      "path": "12"
    },
    "1128": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1129": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1130": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1131": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1132": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1133": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1135": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1136": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "ADD",
      "path": "12"
    },
    "1137": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1138": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1145": {
      "op": "SHL"
    },
    "1146": {
      "op": "SUB"
    },
    "1147": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "AND",
      "path": "12"
    },
    "1148": {
      "op": "PUSH4",
      "value": "0x7BDEE7B"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1155": {
      "op": "SHL"
    },
    "1156": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "OR",
      "path": "12"
    },
    "1157": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1158": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1159": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1166": {
      "op": "SHL"
    },
    "1167": {
      "op": "SUB"
    },
    "1168": {
      "op": "NOT"
    },
    "1169": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "1171": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1172": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1173": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "SHL",
      "path": "12"
    },
    "1174": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "AND",
      "path": "12"
    },
    "1175": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1176": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1177": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4AB"
    },
    "1180": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1181": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1182": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        1037
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1183": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1051,
        1060
      ],
      "op": "PUSH3",
      "path": "12",
      "value": "0xF4240"
    },
    "1187": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1051,
        1060
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1188": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1190": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "ADD",
      "path": "12"
    },
    "1191": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x638"
    },
    "1194": {
      "fn": "OptimismProofSubmitter.submitProof",
      "jump": "i",
      "offset": [
        713,
        1070
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1195": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1196": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1198": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1200": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1201": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1202": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1203": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "SUB",
      "path": "12"
    },
    "1204": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1205": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1207": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1208": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1209": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "1210": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1211": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1212": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1213": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4C5"
    },
    "1216": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1217": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1219": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1220": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1221": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1222": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "POP",
      "path": "12"
    },
    "1223": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "GAS",
      "path": "12"
    },
    "1224": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "CALL",
      "path": "12"
    },
    "1225": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1226": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1227": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1228": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4D9"
    },
    "1231": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1232": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1233": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1235": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1236": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "1237": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1238": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1240": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1241": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        713,
        1070
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1242": {
      "op": "POP"
    },
    "1243": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1088,
        1094
      ],
      "op": "SWAP3",
      "path": "12",
      "statement": 9
    },
    "1244": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1088,
        1094
      ],
      "op": "SWAP12",
      "path": "12"
    },
    "1245": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        462,
        1101
      ],
      "op": "SWAP11",
      "path": "12"
    },
    "1246": {
      "op": "POP"
    },
    "1247": {
      "op": "POP"
    },
    "1248": {
      "op": "POP"
    },
    "1249": {
      "op": "POP"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "op": "POP"
    },
    "1252": {
      "op": "POP"
    },
    "1253": {
      "op": "POP"
    },
    "1254": {
      "op": "POP"
    },
    "1255": {
      "op": "POP"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "fn": "OptimismProofSubmitter.submitProof",
      "jump": "o",
      "offset": [
        462,
        1101
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1258": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1259": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1261": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1262": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1269": {
      "op": "SHL"
    },
    "1270": {
      "op": "SUB"
    },
    "1271": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 10
    },
    "1272": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1273": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1280": {
      "op": "SHL"
    },
    "1281": {
      "op": "SUB"
    },
    "1282": {
      "op": "NOT"
    },
    "1283": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1284": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1285": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1286": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "1287": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1288": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1289": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x40"
    },
    "1291": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1292": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1293": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1294": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1295": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "1296": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1297": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1298": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1299": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1332": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1333": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1334": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1335": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1336": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1337": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1338": {
      "op": "JUMPDEST"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1343": {
      "op": "DUP3"
    },
    "1344": {
      "op": "DUP5"
    },
    "1345": {
      "op": "SUB"
    },
    "1346": {
      "op": "SLT"
    },
    "1347": {
      "op": "ISZERO"
    },
    "1348": {
      "op": "PUSH2",
      "value": "0x54C"
    },
    "1351": {
      "op": "JUMPI"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1354": {
      "op": "DUP1"
    },
    "1355": {
      "op": "REVERT"
    },
    "1356": {
      "op": "JUMPDEST"
    },
    "1357": {
      "op": "POP"
    },
    "1358": {
      "op": "CALLDATALOAD"
    },
    "1359": {
      "op": "SWAP2"
    },
    "1360": {
      "op": "SWAP1"
    },
    "1361": {
      "op": "POP"
    },
    "1362": {
      "jump": "o",
      "op": "JUMP"
    },
    "1363": {
      "op": "JUMPDEST"
    },
    "1364": {
      "op": "DUP1"
    },
    "1365": {
      "op": "CALLDATALOAD"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1372": {
      "op": "SHL"
    },
    "1373": {
      "op": "SUB"
    },
    "1374": {
      "op": "DUP2"
    },
    "1375": {
      "op": "AND"
    },
    "1376": {
      "op": "DUP2"
    },
    "1377": {
      "op": "EQ"
    },
    "1378": {
      "op": "PUSH2",
      "value": "0x56A"
    },
    "1381": {
      "op": "JUMPI"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1384": {
      "op": "DUP1"
    },
    "1385": {
      "op": "REVERT"
    },
    "1386": {
      "op": "JUMPDEST"
    },
    "1387": {
      "op": "SWAP2"
    },
    "1388": {
      "op": "SWAP1"
    },
    "1389": {
      "op": "POP"
    },
    "1390": {
      "jump": "o",
      "op": "JUMP"
    },
    "1391": {
      "op": "JUMPDEST"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1394": {
      "op": "DUP1"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1397": {
      "op": "DUP4"
    },
    "1398": {
      "op": "DUP6"
    },
    "1399": {
      "op": "SUB"
    },
    "1400": {
      "op": "SLT"
    },
    "1401": {
      "op": "ISZERO"
    },
    "1402": {
      "op": "PUSH2",
      "value": "0x582"
    },
    "1405": {
      "op": "JUMPI"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1408": {
      "op": "DUP1"
    },
    "1409": {
      "op": "REVERT"
    },
    "1410": {
      "op": "JUMPDEST"
    },
    "1411": {
      "op": "DUP3"
    },
    "1412": {
      "op": "CALLDATALOAD"
    },
    "1413": {
      "op": "SWAP2"
    },
    "1414": {
      "op": "POP"
    },
    "1415": {
      "op": "PUSH2",
      "value": "0x592"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1420": {
      "op": "DUP5"
    },
    "1421": {
      "op": "ADD"
    },
    "1422": {
      "op": "PUSH2",
      "value": "0x553"
    },
    "1425": {
      "jump": "i",
      "op": "JUMP"
    },
    "1426": {
      "op": "JUMPDEST"
    },
    "1427": {
      "op": "SWAP1"
    },
    "1428": {
      "op": "POP"
    },
    "1429": {
      "op": "SWAP3"
    },
    "1430": {
      "op": "POP"
    },
    "1431": {
      "op": "SWAP3"
    },
    "1432": {
      "op": "SWAP1"
    },
    "1433": {
      "op": "POP"
    },
    "1434": {
      "jump": "o",
      "op": "JUMP"
    },
    "1435": {
      "op": "JUMPDEST"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1440": {
      "op": "DUP3"
    },
    "1441": {
      "op": "DUP5"
    },
    "1442": {
      "op": "SUB"
    },
    "1443": {
      "op": "SLT"
    },
    "1444": {
      "op": "ISZERO"
    },
    "1445": {
      "op": "PUSH2",
      "value": "0x5AD"
    },
    "1448": {
      "op": "JUMPI"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1451": {
      "op": "DUP1"
    },
    "1452": {
      "op": "REVERT"
    },
    "1453": {
      "op": "JUMPDEST"
    },
    "1454": {
      "op": "PUSH2",
      "value": "0x5B6"
    },
    "1457": {
      "op": "DUP3"
    },
    "1458": {
      "op": "PUSH2",
      "value": "0x553"
    },
    "1461": {
      "jump": "i",
      "op": "JUMP"
    },
    "1462": {
      "op": "JUMPDEST"
    },
    "1463": {
      "op": "SWAP4"
    },
    "1464": {
      "op": "SWAP3"
    },
    "1465": {
      "op": "POP"
    },
    "1466": {
      "op": "POP"
    },
    "1467": {
      "op": "POP"
    },
    "1468": {
      "jump": "o",
      "op": "JUMP"
    },
    "1469": {
      "op": "JUMPDEST"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1472": {
      "op": "DUP1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1475": {
      "op": "DUP1"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1478": {
      "op": "DUP6"
    },
    "1479": {
      "op": "DUP8"
    },
    "1480": {
      "op": "SUB"
    },
    "1481": {
      "op": "SLT"
    },
    "1482": {
      "op": "ISZERO"
    },
    "1483": {
      "op": "PUSH2",
      "value": "0x5D3"
    },
    "1486": {
      "op": "JUMPI"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1489": {
      "op": "DUP1"
    },
    "1490": {
      "op": "REVERT"
    },
    "1491": {
      "op": "JUMPDEST"
    },
    "1492": {
      "op": "PUSH2",
      "value": "0x5DC"
    },
    "1495": {
      "op": "DUP6"
    },
    "1496": {
      "op": "PUSH2",
      "value": "0x553"
    },
    "1499": {
      "jump": "i",
      "op": "JUMP"
    },
    "1500": {
      "op": "JUMPDEST"
    },
    "1501": {
      "op": "SWAP4"
    },
    "1502": {
      "op": "POP"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1505": {
      "op": "DUP6"
    },
    "1506": {
      "op": "ADD"
    },
    "1507": {
      "op": "CALLDATALOAD"
    },
    "1508": {
      "op": "SWAP3"
    },
    "1509": {
      "op": "POP"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1512": {
      "op": "DUP6"
    },
    "1513": {
      "op": "ADD"
    },
    "1514": {
      "op": "CALLDATALOAD"
    },
    "1515": {
      "op": "SWAP2"
    },
    "1516": {
      "op": "POP"
    },
    "1517": {
      "op": "PUSH2",
      "value": "0x5F8"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1522": {
      "op": "DUP7"
    },
    "1523": {
      "op": "ADD"
    },
    "1524": {
      "op": "PUSH2",
      "value": "0x553"
    },
    "1527": {
      "jump": "i",
      "op": "JUMP"
    },
    "1528": {
      "op": "JUMPDEST"
    },
    "1529": {
      "op": "SWAP1"
    },
    "1530": {
      "op": "POP"
    },
    "1531": {
      "op": "SWAP3"
    },
    "1532": {
      "op": "SWAP6"
    },
    "1533": {
      "op": "SWAP2"
    },
    "1534": {
      "op": "SWAP5"
    },
    "1535": {
      "op": "POP"
    },
    "1536": {
      "op": "SWAP3"
    },
    "1537": {
      "op": "POP"
    },
    "1538": {
      "jump": "o",
      "op": "JUMP"
    },
    "1539": {
      "op": "JUMPDEST"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1542": {
      "op": "DUP1"
    },
    "1543": {
      "op": "DUP3"
    },
    "1544": {
      "op": "MSTORE"
    },
    "1545": {
      "op": "DUP2"
    },
    "1546": {
      "op": "DUP2"
    },
    "1547": {
      "op": "ADD"
    },
    "1548": {
      "op": "MSTORE"
    },
    "1549": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1584": {
      "op": "DUP3"
    },
    "1585": {
      "op": "ADD"
    },
    "1586": {
      "op": "MSTORE"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1589": {
      "op": "ADD"
    },
    "1590": {
      "op": "SWAP1"
    },
    "1591": {
      "jump": "o",
      "op": "JUMP"
    },
    "1592": {
      "op": "JUMPDEST"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "DUP1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1598": {
      "op": "SHL"
    },
    "1599": {
      "op": "SUB"
    },
    "1600": {
      "op": "DUP5"
    },
    "1601": {
      "op": "AND"
    },
    "1602": {
      "op": "DUP2"
    },
    "1603": {
      "op": "MSTORE"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1610": {
      "op": "DUP2"
    },
    "1611": {
      "op": "DUP5"
    },
    "1612": {
      "op": "ADD"
    },
    "1613": {
      "op": "MSTORE"
    },
    "1614": {
      "op": "DUP5"
    },
    "1615": {
      "op": "MLOAD"
    },
    "1616": {
      "op": "DUP1"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1619": {
      "op": "DUP6"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "op": "MSTORE"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1624": {
      "op": "JUMPDEST"
    },
    "1625": {
      "op": "DUP2"
    },
    "1626": {
      "op": "DUP2"
    },
    "1627": {
      "op": "LT"
    },
    "1628": {
      "op": "ISZERO"
    },
    "1629": {
      "op": "PUSH2",
      "value": "0x674"
    },
    "1632": {
      "op": "JUMPI"
    },
    "1633": {
      "op": "DUP7"
    },
    "1634": {
      "op": "DUP2"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "op": "DUP4"
    },
    "1637": {
      "op": "ADD"
    },
    "1638": {
      "op": "MLOAD"
    },
    "1639": {
      "op": "DUP6"
    },
    "1640": {
      "op": "DUP3"
    },
    "1641": {
      "op": "ADD"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1644": {
      "op": "ADD"
    },
    "1645": {
      "op": "MSTORE"
    },
    "1646": {
      "op": "DUP3"
    },
    "1647": {
      "op": "ADD"
    },
    "1648": {
      "op": "PUSH2",
      "value": "0x658"
    },
    "1651": {
      "op": "JUMP"
    },
    "1652": {
      "op": "JUMPDEST"
    },
    "1653": {
      "op": "DUP2"
    },
    "1654": {
      "op": "DUP2"
    },
    "1655": {
      "op": "GT"
    },
    "1656": {
      "op": "ISZERO"
    },
    "1657": {
      "op": "PUSH2",
      "value": "0x686"
    },
    "1660": {
      "op": "JUMPI"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1665": {
      "op": "DUP4"
    },
    "1666": {
      "op": "DUP8"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "ADD"
    },
    "1669": {
      "op": "MSTORE"
    },
    "1670": {
      "op": "JUMPDEST"
    },
    "1671": {
      "op": "POP"
    },
    "1672": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1677": {
      "op": "SWAP5"
    },
    "1678": {
      "op": "SWAP1"
    },
    "1679": {
      "op": "SWAP5"
    },
    "1680": {
      "op": "AND"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1683": {
      "op": "DUP5"
    },
    "1684": {
      "op": "ADD"
    },
    "1685": {
      "op": "MSTORE"
    },
    "1686": {
      "op": "POP"
    },
    "1687": {
      "op": "POP"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1690": {
      "op": "SWAP2"
    },
    "1691": {
      "op": "SWAP1"
    },
    "1692": {
      "op": "SWAP2"
    },
    "1693": {
      "op": "ADD"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1696": {
      "op": "NOT"
    },
    "1697": {
      "op": "AND"
    },
    "1698": {
      "op": "ADD"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1701": {
      "op": "ADD"
    },
    "1702": {
      "op": "SWAP3"
    },
    "1703": {
      "op": "SWAP2"
    },
    "1704": {
      "op": "POP"
    },
    "1705": {
      "op": "POP"
    },
    "1706": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "19a09a4a10db978a270ab5c85f46aa29e3495d96",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"../interfaces/IProofSubmitter.sol\";\nimport \"../interfaces/ICrossDomainMessenger.sol\";\n\nimport \"./BeamerUtils.sol\";\nimport \"./Resolver.sol\";\nimport \"./RestrictedCalls.sol\";\n\ncontract OptimismProofSubmitter is IProofSubmitter, RestrictedCalls {\n    ICrossDomainMessenger public messenger;\n\n    constructor(address _messenger)\n    {\n        messenger = ICrossDomainMessenger(_messenger);\n    }\n\n    function submitProof(address l1Resolver, bytes32 requestHash, uint256 sourceChainId, address filler)\n        external restricted(block.chainid, msg.sender) returns (bytes32)\n    {\n        bytes32 fillId = keccak256(abi.encode(block.number));\n\n        messenger.sendMessage(\n            l1Resolver,\n            abi.encodeCall(\n                Resolver.resolve,\n                (\n                    BeamerUtils.createFillHash(requestHash, fillId),\n                    block.chainid,\n                    sourceChainId,\n                    filler\n                )\n            ),\n            1_000_000\n        );\n\n        return fillId;\n    }\n}\n",
  "sourceMap": "239:864:12:-:0;;;358:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:6;921:18:0;:32::i;:::-;404:9:12;:45;;-1:-1:-1;;;;;;404:45:12;-1:-1:-1;;;;;404:45:12;;;;;;;;;;239:864;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:21:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:21;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:21:o;:::-;239:864:12;;;;;;",
  "sourcePath": "contracts/contracts/OptimismProofSubmitter.sol",
  "type": "contract"
}