{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fillChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "Resolution",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "resolutionRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        }
      ],
      "name": "addRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "messengers",
      "outputs": [
        {
          "internalType": "contract IMessenger",
          "name": "messenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "fillChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        }
      ],
      "name": "resolve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sourceChainInfos",
      "outputs": [
        {
          "internalType": "address",
          "name": "resolutionRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "14": "contracts/contracts/Resolver.sol",
    "23": "contracts/interfaces/IMessenger.sol",
    "6": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "9": "contracts/contracts/CrossDomainRestrictedCalls.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/Resolver.sol",
    "exportedSymbols": {
      "BeamerUtils": [
        87
      ],
      "Context": [
        4099
      ],
      "CrossDomainRestrictedCalls": [
        192
      ],
      "IMessenger": [
        3063
      ],
      "Ownable": [
        3037
      ],
      "ResolutionRegistry": [
        2168
      ],
      "Resolver": [
        2339
      ]
    },
    "id": 2340,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2170,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:14"
      },
      {
        "absolutePath": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "id": 2171,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2340,
        "sourceUnit": 3038,
        "src": "58:80:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IMessenger.sol",
        "file": "../interfaces/IMessenger.sol",
        "id": 2172,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2340,
        "sourceUnit": 3064,
        "src": "139:38:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/ResolutionRegistry.sol",
        "file": "./ResolutionRegistry.sol",
        "id": 2173,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2340,
        "sourceUnit": 2169,
        "src": "178:34:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/CrossDomainRestrictedCalls.sol",
        "file": "./CrossDomainRestrictedCalls.sol",
        "id": 2174,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2340,
        "sourceUnit": 193,
        "src": "213:42:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2176,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3037,
              "src": "518:7:14"
            },
            "id": 2177,
            "nodeType": "InheritanceSpecifier",
            "src": "518:7:14"
          },
          {
            "baseName": {
              "id": 2178,
              "name": "CrossDomainRestrictedCalls",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 192,
              "src": "527:26:14"
            },
            "id": 2179,
            "nodeType": "InheritanceSpecifier",
            "src": "527:26:14"
          }
        ],
        "canonicalName": "Resolver",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2175,
          "nodeType": "StructuredDocumentation",
          "src": "257:240:14",
          "text": "The resolver.\n This contract resides on the L1 chain and is tasked with receiving the\n fill or non-fill proofs from the target L2 chain and forwarding them to\n the :sol:contract:`ResolutionRegistry` on the source L2 chain."
        },
        "fullyImplemented": true,
        "id": 2339,
        "linearizedBaseContracts": [
          2339,
          192,
          3037,
          4099
        ],
        "name": "Resolver",
        "nameLocation": "506:8:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Resolver.SourceChainInfo",
            "id": 2184,
            "members": [
              {
                "constant": false,
                "id": 2181,
                "mutability": "mutable",
                "name": "resolutionRegistry",
                "nameLocation": "601:18:14",
                "nodeType": "VariableDeclaration",
                "scope": 2184,
                "src": "593:26:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2180,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "593:7:14",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2183,
                "mutability": "mutable",
                "name": "messenger",
                "nameLocation": "637:9:14",
                "nodeType": "VariableDeclaration",
                "scope": 2184,
                "src": "629:17:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2182,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "629:7:14",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SourceChainInfo",
            "nameLocation": "567:15:14",
            "nodeType": "StructDefinition",
            "scope": 2339,
            "src": "560:93:14",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2185,
              "nodeType": "StructuredDocumentation",
              "src": "659:176:14",
              "text": "Emitted when a fill or a non-fill proof is received and sent to the resolution registry.\n .. note:: In case of a non-fill proof, the ``filler`` will be zero."
            },
            "eventSelector": "44702e0d5959cc77a7f68b33530b86546d1b157d0d74b27010d5f519adae07cb",
            "id": 2197,
            "name": "Resolution",
            "nameLocation": "846:10:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2187,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "874:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2197,
                  "src": "866:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2189,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillChainId",
                  "nameLocation": "905:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2197,
                  "src": "897:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2191,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "934:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2197,
                  "src": "926:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2190,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2193,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "963:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2197,
                  "src": "955:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2195,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "987:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2197,
                  "src": "979:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2194,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "979:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "856:143:14"
            },
            "src": "840:160:14"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2198,
              "nodeType": "StructuredDocumentation",
              "src": "1006:48:14",
              "text": "Maps source chain IDs to source chain infos."
            },
            "functionSelector": "308634a5",
            "id": 2203,
            "mutability": "mutable",
            "name": "sourceChainInfos",
            "nameLocation": "1102:16:14",
            "nodeType": "VariableDeclaration",
            "scope": 2339,
            "src": "1059:59:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SourceChainInfo_$2184_storage_$",
              "typeString": "mapping(uint256 => struct Resolver.SourceChainInfo)"
            },
            "typeName": {
              "id": 2202,
              "keyType": {
                "id": 2199,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1067:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1059:35:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SourceChainInfo_$2184_storage_$",
                "typeString": "mapping(uint256 => struct Resolver.SourceChainInfo)"
              },
              "valueType": {
                "id": 2201,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2200,
                  "name": "SourceChainInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2184,
                  "src": "1078:15:14"
                },
                "referencedDeclaration": 2184,
                "src": "1078:15:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SourceChainInfo_$2184_storage_ptr",
                  "typeString": "struct Resolver.SourceChainInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2315,
              "nodeType": "Block",
              "src": "2254:1041:14",
              "statements": [
                {
                  "assignments": [
                    2224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2224,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "2288:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2315,
                      "src": "2264:28:14",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SourceChainInfo_$2184_storage_ptr",
                        "typeString": "struct Resolver.SourceChainInfo"
                      },
                      "typeName": {
                        "id": 2223,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2222,
                          "name": "SourceChainInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2184,
                          "src": "2264:15:14"
                        },
                        "referencedDeclaration": 2184,
                        "src": "2264:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SourceChainInfo_$2184_storage_ptr",
                          "typeString": "struct Resolver.SourceChainInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2228,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2225,
                      "name": "sourceChainInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2203,
                      "src": "2295:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SourceChainInfo_$2184_storage_$",
                        "typeString": "mapping(uint256 => struct Resolver.SourceChainInfo storage ref)"
                      }
                    },
                    "id": 2227,
                    "indexExpression": {
                      "id": 2226,
                      "name": "sourceChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2212,
                      "src": "2312:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2295:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SourceChainInfo_$2184_storage",
                      "typeString": "struct Resolver.SourceChainInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2264:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2230,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2224,
                            "src": "2357:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SourceChainInfo_$2184_storage_ptr",
                              "typeString": "struct Resolver.SourceChainInfo storage pointer"
                            }
                          },
                          "id": 2231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "resolutionRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2181,
                          "src": "2357:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2392:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2384:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2232,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2384:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2384:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2357:37:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20726567697374727920617661696c61626c6520666f7220736f7572636520636861696e",
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2408:40:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ee00403712f8bc6fbdc260df11d132cbf1f0263c418fa61c9527622b09c476d",
                          "typeString": "literal_string \"No registry available for source chain\""
                        },
                        "value": "No registry available for source chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ee00403712f8bc6fbdc260df11d132cbf1f0263c418fa61c9527622b09c476d",
                          "typeString": "literal_string \"No registry available for source chain\""
                        }
                      ],
                      "id": 2229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2336:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2336:122:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2239,
                  "nodeType": "ExpressionStatement",
                  "src": "2336:122:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2241,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2224,
                            "src": "2489:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SourceChainInfo_$2184_storage_ptr",
                              "typeString": "struct Resolver.SourceChainInfo storage pointer"
                            }
                          },
                          "id": 2242,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "messenger",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2183,
                          "src": "2489:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2515:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2507:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2243,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2507:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2507:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2489:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206d657373656e67657220617661696c61626c6520666f7220736f7572636520636861696e",
                        "id": 2248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2531:41:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d26b5a0618e5494cf176ee41dec1dbca8fb3bc55523487f35a7d4d4aefdad044",
                          "typeString": "literal_string \"No messenger available for source chain\""
                        },
                        "value": "No messenger available for source chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d26b5a0618e5494cf176ee41dec1dbca8fb3bc55523487f35a7d4d4aefdad044",
                          "typeString": "literal_string \"No messenger available for source chain\""
                        }
                      ],
                      "id": 2240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2468:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2468:114:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2250,
                  "nodeType": "ExpressionStatement",
                  "src": "2468:114:14"
                },
                {
                  "assignments": [
                    2252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2252,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "2606:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2315,
                      "src": "2593:20:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2251,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2593:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2253,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2593:20:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2254,
                      "name": "filler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2214,
                      "src": "2628:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2646:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2638:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2638:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2638:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2628:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2288,
                    "nodeType": "Block",
                    "src": "2824:176:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2274,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2252,
                            "src": "2838:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2277,
                                  "name": "ResolutionRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2168,
                                  "src": "2880:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ResolutionRegistry_$2168_$",
                                    "typeString": "type(contract ResolutionRegistry)"
                                  }
                                },
                                "id": 2278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "resolveRequest",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2111,
                                "src": "2880:33:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                                  "typeString": "function ResolutionRegistry.resolveRequest(bytes32,bytes32,uint256,address)"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 2279,
                                    "name": "requestHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2206,
                                    "src": "2932:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 2280,
                                    "name": "fillId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2208,
                                    "src": "2945:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2281,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "2953:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2282,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "chainid",
                                    "nodeType": "MemberAccess",
                                    "src": "2953:13:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2283,
                                    "name": "filler",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2214,
                                    "src": "2968:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "id": 2284,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2931:44:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$",
                                  "typeString": "tuple(bytes32,bytes32,uint256,address)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                                  "typeString": "function ResolutionRegistry.resolveRequest(bytes32,bytes32,uint256,address)"
                                },
                                {
                                  "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$",
                                  "typeString": "tuple(bytes32,bytes32,uint256,address)"
                                }
                              ],
                              "expression": {
                                "id": 2275,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2848:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodeCall",
                              "nodeType": "MemberAccess",
                              "src": "2848:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 2285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2848:141:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "2838:151:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 2287,
                        "nodeType": "ExpressionStatement",
                        "src": "2838:151:14"
                      }
                    ]
                  },
                  "id": 2289,
                  "nodeType": "IfStatement",
                  "src": "2624:376:14",
                  "trueBody": {
                    "id": 2273,
                    "nodeType": "Block",
                    "src": "2650:168:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2260,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2252,
                            "src": "2664:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2263,
                                  "name": "ResolutionRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2168,
                                  "src": "2706:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ResolutionRegistry_$2168_$",
                                    "typeString": "type(contract ResolutionRegistry)"
                                  }
                                },
                                "id": 2264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "invalidateFill",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2167,
                                "src": "2706:33:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$",
                                  "typeString": "function ResolutionRegistry.invalidateFill(bytes32,bytes32,uint256)"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 2265,
                                    "name": "requestHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2206,
                                    "src": "2758:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 2266,
                                    "name": "fillId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2208,
                                    "src": "2771:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2267,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "2779:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2268,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "chainid",
                                    "nodeType": "MemberAccess",
                                    "src": "2779:13:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2269,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2757:36:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$",
                                  "typeString": "tuple(bytes32,bytes32,uint256)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$",
                                  "typeString": "function ResolutionRegistry.invalidateFill(bytes32,bytes32,uint256)"
                                },
                                {
                                  "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$",
                                  "typeString": "tuple(bytes32,bytes32,uint256)"
                                }
                              ],
                              "expression": {
                                "id": 2261,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2674:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodeCall",
                              "nodeType": "MemberAccess",
                              "src": "2674:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 2270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2674:133:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "2664:143:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 2272,
                        "nodeType": "ExpressionStatement",
                        "src": "2664:143:14"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2292,
                      "mutability": "mutable",
                      "name": "messenger",
                      "nameLocation": "3021:9:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2315,
                      "src": "3010:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMessenger_$3063",
                        "typeString": "contract IMessenger"
                      },
                      "typeName": {
                        "id": 2291,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2290,
                          "name": "IMessenger",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3063,
                          "src": "3010:10:14"
                        },
                        "referencedDeclaration": 3063,
                        "src": "3010:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMessenger_$3063",
                          "typeString": "contract IMessenger"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2297,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2294,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2224,
                          "src": "3044:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SourceChainInfo_$2184_storage_ptr",
                            "typeString": "struct Resolver.SourceChainInfo storage pointer"
                          }
                        },
                        "id": 2295,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "messenger",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2183,
                        "src": "3044:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2293,
                      "name": "IMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3063,
                      "src": "3033:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IMessenger_$3063_$",
                        "typeString": "type(contract IMessenger)"
                      }
                    },
                    "id": 2296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3033:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMessenger_$3063",
                      "typeString": "contract IMessenger"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3010:49:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2301,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2224,
                          "src": "3091:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SourceChainInfo_$2184_storage_ptr",
                            "typeString": "struct Resolver.SourceChainInfo storage pointer"
                          }
                        },
                        "id": 2302,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "resolutionRegistry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2181,
                        "src": "3091:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2303,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2252,
                        "src": "3116:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 2304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3125:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "id": 2298,
                        "name": "messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2292,
                        "src": "3069:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMessenger_$3063",
                          "typeString": "contract IMessenger"
                        }
                      },
                      "id": 2300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3050,
                      "src": "3069:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,bytes memory,uint32) external"
                      }
                    },
                    "id": 2305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3069:66:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2306,
                  "nodeType": "ExpressionStatement",
                  "src": "3069:66:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2308,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2212,
                        "src": "3175:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2309,
                        "name": "fillChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2210,
                        "src": "3202:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2310,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2206,
                        "src": "3227:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2311,
                        "name": "filler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2214,
                        "src": "3252:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2312,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2208,
                        "src": "3272:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2307,
                      "name": "Resolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2197,
                      "src": "3151:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,bytes32,address,bytes32)"
                      }
                    },
                    "id": 2313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3151:137:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2314,
                  "nodeType": "EmitStatement",
                  "src": "3146:142:14"
                }
              ]
            },
            "documentation": {
              "id": 2204,
              "nodeType": "StructuredDocumentation",
              "src": "1125:919:14",
              "text": "Resolve the specified request.\n This marks the request identified by ``requestHash`` as filled by ``filler``.\n If the ``filler`` is zero, the fill be marked invalid.\n Information about the fill will be sent to the source chain's :sol:contract:`ResolutionRegistry`,\n using the messenger responsible for the source chain.\n .. note::\n     This function is callable only by the native L1 messenger contract,\n     which simply delivers the message sent from the target chain by the\n     Beamer's L2 :sol:interface:`messenger <IMessenger>` contract.\n @param requestHash The request hash.\n @param fillId The fill ID.\n @param fillChainId The fill (target) chain ID.\n @param sourceChainId The source chain ID.\n @param filler The address that filled the request, or zero to invalidate the fill."
            },
            "functionSelector": "a56e3c38",
            "id": 2316,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2217,
                    "name": "fillChainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2210,
                    "src": "2229:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "expression": {
                      "id": 2218,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2242:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2242:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2220,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2216,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 191,
                  "src": "2218:10:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2218:35:14"
              }
            ],
            "name": "resolve",
            "nameLocation": "2058:7:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2206,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "2083:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2316,
                  "src": "2075:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2205,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2075:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2208,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "2112:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2316,
                  "src": "2104:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2207,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2104:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2210,
                  "mutability": "mutable",
                  "name": "fillChainId",
                  "nameLocation": "2136:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2316,
                  "src": "2128:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2212,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "2165:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2316,
                  "src": "2157:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2157:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2214,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "2196:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2316,
                  "src": "2188:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2065:143:14"
            },
            "returnParameters": {
              "id": 2221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2254:0:14"
            },
            "scope": 2339,
            "src": "2049:1246:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2337,
              "nodeType": "Block",
              "src": "4127:125:14",
              "statements": [
                {
                  "expression": {
                    "id": 2335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2328,
                        "name": "sourceChainInfos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2203,
                        "src": "4137:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SourceChainInfo_$2184_storage_$",
                          "typeString": "mapping(uint256 => struct Resolver.SourceChainInfo storage ref)"
                        }
                      },
                      "id": 2330,
                      "indexExpression": {
                        "id": 2329,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2319,
                        "src": "4154:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4137:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SourceChainInfo_$2184_storage",
                        "typeString": "struct Resolver.SourceChainInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2332,
                          "name": "resolutionRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2321,
                          "src": "4194:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2333,
                          "name": "messenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2323,
                          "src": "4226:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2331,
                        "name": "SourceChainInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2184,
                        "src": "4165:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SourceChainInfo_$2184_storage_ptr_$",
                          "typeString": "type(struct Resolver.SourceChainInfo storage pointer)"
                        }
                      },
                      "id": 2334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4165:80:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SourceChainInfo_$2184_memory_ptr",
                        "typeString": "struct Resolver.SourceChainInfo memory"
                      }
                    },
                    "src": "4137:108:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SourceChainInfo_$2184_storage",
                      "typeString": "struct Resolver.SourceChainInfo storage ref"
                    }
                  },
                  "id": 2336,
                  "nodeType": "ExpressionStatement",
                  "src": "4137:108:14"
                }
              ]
            },
            "documentation": {
              "id": 2317,
              "nodeType": "StructuredDocumentation",
              "src": "3301:687:14",
              "text": "Add a resolution registry.\n In order to be able to send messages to the :sol:contract:`ResolutionRegistry`,\n the resolver contract needs to know the address of the registry on the source\n chain, as well as the address of the messenger contract responsible for\n transferring messages to the L2 chain.\n .. note:: This function can only be called by the contract owner.\n @param chainId The source L2 chain ID.\n @param resolutionRegistry The resolution registry.\n @param messenger The messenger contract responsible for chain ``chainId``.\n                  Must implement :sol:interface:`IMessenger`."
            },
            "functionSelector": "bfa9dd3a",
            "id": 2338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2326,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2325,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2979,
                  "src": "4117:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4117:9:14"
              }
            ],
            "name": "addRegistry",
            "nameLocation": "4002:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2319,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "4031:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2338,
                  "src": "4023:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4023:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2321,
                  "mutability": "mutable",
                  "name": "resolutionRegistry",
                  "nameLocation": "4056:18:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2338,
                  "src": "4048:26:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4048:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2323,
                  "mutability": "mutable",
                  "name": "messenger",
                  "nameLocation": "4092:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2338,
                  "src": "4084:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4084:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4013:94:14"
            },
            "returnParameters": {
              "id": 2327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4127:0:14"
            },
            "scope": 2339,
            "src": "3993:259:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2340,
        "src": "497:3757:14",
        "usedErrors": []
      }
    ],
    "src": "32:4223:14"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a048061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610137578063a56e3c3814610152578063bfa9dd3a14610165578063f2fde38b1461017857600080fd5b806324ec66b31461008d578063308634a5146100e6578063715018a61461011a5780637203ae3b14610124575b600080fd5b6100c161009b3660046107f3565b600160208190526000918252604090912080549101546001600160a01b03918216911682565b604080516001600160a01b039384168152929091166020830152015b60405180910390f35b6100c16100f43660046107f3565b600260205260009081526040902080546001909101546001600160a01b03918216911682565b61012261018b565b005b610122610132366004610821565b6101ca565b6000546040516001600160a01b0390911681526020016100dd565b610122610160366004610863565b6102af565b610122610173366004610821565b610686565b6101226101863660046108b0565b610708565b6000546001600160a01b031633146101be5760405162461bcd60e51b81526004016101b5906108d4565b60405180910390fd5b6101c860006107a3565b565b6000546001600160a01b031633146101f45760405162461bcd60e51b81526004016101b5906108d4565b6001600160a01b0382166102565760405162461bcd60e51b815260206004820152602360248201527f585265737472696374656443616c6c733a20696e76616c6964206d657373656e60448201526233b2b960e91b60648201526084016101b5565b6040805180820182526001600160a01b0393841681529183166020808401918252600095865260019081905291909420915182546001600160a01b03199081169185169190911783559351910180549093169116179055565b60008381526001602052604090208054849133916001600160a01b03166102e85760405162461bcd60e51b81526004016101b590610909565b805460408051630ef12e4760e31b815290516001600160a01b03909216916377897238916004808201926020929091908290030181865afa158015610331573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610355919061093e565b6001600160a01b0316826001600160a01b0316146103855760405162461bcd60e51b81526004016101b590610909565b600181015481546040805163383d6f0760e11b815290516001600160a01b03938416939092169163707ade0e916004808201926020929091908290030181865afa1580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb919061093e565b6001600160a01b0316146104215760405162461bcd60e51b81526004016101b590610909565b600085815260026020526040902080546001600160a01b03166104955760405162461bcd60e51b815260206004820152602660248201527f4e6f20726567697374727920617661696c61626c6520666f7220736f757263656044820152651031b430b4b760d11b60648201526084016101b5565b60018101546001600160a01b03166104ff5760405162461bcd60e51b815260206004820152602760248201527f4e6f206d657373656e67657220617661696c61626c6520666f7220736f757263604482015266329031b430b4b760c91b60648201526084016101b5565b60606001600160a01b03861661055a57604051602481018b9052604481018a905246606482015260840160408051601f198184030181529190526020810180516001600160e01b03166303fc4c3760e01b17905290506105b0565b604051602481018b9052604481018a90524660648201526001600160a01b038716608482015260a40160408051601f198184030181529190526020810180516001600160e01b0316632d9d377960e11b17905290505b60018201548254604051633dbb202b60e01b81526001600160a01b03928316928392633dbb202b926105ef92909116908690620f42409060040161095b565b600060405180830381600087803b15801561060957600080fd5b505af115801561061d573d6000803e3d6000fd5b5050604080518b8152602081018d90529081018e90526001600160a01b038a166060820152608081018d90527f44702e0d5959cc77a7f68b33530b86546d1b157d0d74b27010d5f519adae07cb925060a001905060405180910390a15050505050505050505050565b6000546001600160a01b031633146106b05760405162461bcd60e51b81526004016101b5906108d4565b6040805180820182526001600160a01b03938416815291831660208084019182526000958652600290529320905181546001600160a01b03199081169184169190911782559251600190910180549093169116179055565b6000546001600160a01b031633146107325760405162461bcd60e51b81526004016101b5906108d4565b6001600160a01b0381166107975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101b5565b6107a0816107a3565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561080557600080fd5b5035919050565b6001600160a01b03811681146107a057600080fd5b60008060006060848603121561083657600080fd5b8335925060208401356108488161080c565b915060408401356108588161080c565b809150509250925092565b600080600080600060a0868803121561087b57600080fd5b8535945060208601359350604086013592506060860135915060808601356108a28161080c565b809150509295509295909350565b6000602082840312156108c257600080fd5b81356108cd8161080c565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252818101527f585265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c6572604082015260600190565b60006020828403121561095057600080fd5b81516108cd8161080c565b60018060a01b038416815260006020606081840152845180606085015260005b818110156109975786810183015185820160800152820161097b565b818111156109a9576000608083870101525b5063ffffffff9490941660408401525050601f91909101601f1916016080019291505056fea2646970667358221220a6c43b197193147db068026f481d9f9cde30459d294a1449b84d6523ff14c18964736f6c634300080d0033",
  "bytecodeSha1": "c63080d1a0337441a73665a627bbbdab4cf3431f",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Resolver",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "20": [
            2006,
            2028,
            true
          ]
        }
      },
      "14": {
        "Resolver.resolve": {
          "16": [
            2628,
            2648,
            false
          ]
        }
      },
      "23": {},
      "6": {},
      "9": {
        "CrossDomainRestrictedCalls.addCaller": {
          "17": [
            1378,
            1401,
            true
          ]
        },
        "Resolver.resolve": {
          "18": [
            2087,
            2126,
            true
          ],
          "19": [
            2215,
            2255,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "14": [
            2378,
            2395
          ],
          "15": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "2": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "12": [
            1998,
            2071
          ],
          "13": [
            2081,
            2109
          ]
        }
      },
      "14": {
        "Resolver.addRegistry": {
          "11": [
            4137,
            4245
          ]
        },
        "Resolver.resolve": {
          "5": [
            2336,
            2458
          ],
          "6": [
            2468,
            2582
          ],
          "7": [
            2664,
            2807
          ],
          "8": [
            2838,
            2989
          ],
          "9": [
            3069,
            3135
          ],
          "10": [
            3146,
            3288
          ]
        }
      },
      "23": {},
      "6": {
        "Context._msgSender": {
          "1": [
            712,
            729
          ]
        }
      },
      "9": {
        "CrossDomainRestrictedCalls.addCaller": {
          "3": [
            1370,
            1441
          ],
          "4": [
            1451,
            1519
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "CrossDomainRestrictedCalls",
    "IMessenger",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610137578063a56e3c3814610152578063bfa9dd3a14610165578063f2fde38b1461017857600080fd5b806324ec66b31461008d578063308634a5146100e6578063715018a61461011a5780637203ae3b14610124575b600080fd5b6100c161009b3660046107f3565b600160208190526000918252604090912080549101546001600160a01b03918216911682565b604080516001600160a01b039384168152929091166020830152015b60405180910390f35b6100c16100f43660046107f3565b600260205260009081526040902080546001909101546001600160a01b03918216911682565b61012261018b565b005b610122610132366004610821565b6101ca565b6000546040516001600160a01b0390911681526020016100dd565b610122610160366004610863565b6102af565b610122610173366004610821565b610686565b6101226101863660046108b0565b610708565b6000546001600160a01b031633146101be5760405162461bcd60e51b81526004016101b5906108d4565b60405180910390fd5b6101c860006107a3565b565b6000546001600160a01b031633146101f45760405162461bcd60e51b81526004016101b5906108d4565b6001600160a01b0382166102565760405162461bcd60e51b815260206004820152602360248201527f585265737472696374656443616c6c733a20696e76616c6964206d657373656e60448201526233b2b960e91b60648201526084016101b5565b6040805180820182526001600160a01b0393841681529183166020808401918252600095865260019081905291909420915182546001600160a01b03199081169185169190911783559351910180549093169116179055565b60008381526001602052604090208054849133916001600160a01b03166102e85760405162461bcd60e51b81526004016101b590610909565b805460408051630ef12e4760e31b815290516001600160a01b03909216916377897238916004808201926020929091908290030181865afa158015610331573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610355919061093e565b6001600160a01b0316826001600160a01b0316146103855760405162461bcd60e51b81526004016101b590610909565b600181015481546040805163383d6f0760e11b815290516001600160a01b03938416939092169163707ade0e916004808201926020929091908290030181865afa1580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb919061093e565b6001600160a01b0316146104215760405162461bcd60e51b81526004016101b590610909565b600085815260026020526040902080546001600160a01b03166104955760405162461bcd60e51b815260206004820152602660248201527f4e6f20726567697374727920617661696c61626c6520666f7220736f757263656044820152651031b430b4b760d11b60648201526084016101b5565b60018101546001600160a01b03166104ff5760405162461bcd60e51b815260206004820152602760248201527f4e6f206d657373656e67657220617661696c61626c6520666f7220736f757263604482015266329031b430b4b760c91b60648201526084016101b5565b60606001600160a01b03861661055a57604051602481018b9052604481018a905246606482015260840160408051601f198184030181529190526020810180516001600160e01b03166303fc4c3760e01b17905290506105b0565b604051602481018b9052604481018a90524660648201526001600160a01b038716608482015260a40160408051601f198184030181529190526020810180516001600160e01b0316632d9d377960e11b17905290505b60018201548254604051633dbb202b60e01b81526001600160a01b03928316928392633dbb202b926105ef92909116908690620f42409060040161095b565b600060405180830381600087803b15801561060957600080fd5b505af115801561061d573d6000803e3d6000fd5b5050604080518b8152602081018d90529081018e90526001600160a01b038a166060820152608081018d90527f44702e0d5959cc77a7f68b33530b86546d1b157d0d74b27010d5f519adae07cb925060a001905060405180910390a15050505050505050505050565b6000546001600160a01b031633146106b05760405162461bcd60e51b81526004016101b5906108d4565b6040805180820182526001600160a01b03938416815291831660208084019182526000958652600290529320905181546001600160a01b03199081169184169190911782559251600190910180549093169116179055565b6000546001600160a01b031633146107325760405162461bcd60e51b81526004016101b5906108d4565b6001600160a01b0381166107975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101b5565b6107a0816107a3565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561080557600080fd5b5035919050565b6001600160a01b03811681146107a057600080fd5b60008060006060848603121561083657600080fd5b8335925060208401356108488161080c565b915060408401356108588161080c565b809150509250925092565b600080600080600060a0868803121561087b57600080fd5b8535945060208601359350604086013592506060860135915060808601356108a28161080c565b809150509295509295909350565b6000602082840312156108c257600080fd5b81356108cd8161080c565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252818101527f585265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c6572604082015260600190565b60006020828403121561095057600080fd5b81516108cd8161080c565b60018060a01b038416815260006020606081840152845180606085015260005b818110156109975786810183015185820160800152820161097b565b818111156109a9576000608083870101525b5063ffffffff9490941660408401525050601f91909101601f1916016080019291505056fea2646970667358221220a6c43b197193147db068026f481d9f9cde30459d294a1449b84d6523ff14c18964736f6c634300080d0033",
  "deployedSourceMap": "497:3757:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;906:53:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;906:53:9;;;;;;;;;;;-1:-1:-1;;;;;448:15:25;;;430:34;;500:15;;;;495:2;480:18;;473:43;365:18;906:53:9;;;;;;;;1059:59:14;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1059:59:14;;;;;;;1668:101:0;;;:::i;:::-;;1240:286:9;;;;;;:::i;:::-;;:::i;1036:85:0:-;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;1579:51:25;;1567:2;1552:18;1036:85:0;1433:203:25;2049:1246:14;;;;;;:::i;:::-;;:::i;3993:259::-;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;1668:101::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1240:286:9:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1378:23:9;::::1;1370:71;;;::::0;-1:-1:-1;;;1370:71:9;;2982:2:25;1370:71:9::1;::::0;::::1;2964:21:25::0;3021:2;3001:18;;;2994:30;3060:34;3040:18;;;3033:62;-1:-1:-1;;;3111:18:25;;;3104:33;3154:19;;1370:71:9::1;2780:399:25::0;1370:71:9::1;1473:46;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;1473:46:9;;::::1;::::0;;;;::::1;;::::0;;::::1;::::0;;;-1:-1:-1;1451:19:9;;;:10:::1;:19:::0;;;;;;;;:68;;;;-1:-1:-1;;;;;;1451:68:9;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;::::0;::::1;;::::0;;1240:286::o;2049:1246:14:-;1886:25:9;1914:19;;;:10;:19;;;;;1972:11;;2229::14;;2242:10;;-1:-1:-1;;;;;1972:11:9;1943:113;;;;-1:-1:-1;;;1943:113:9;;;;;;;:::i;:::-;2097:11;;:29;;;-1:-1:-1;;;2097:29:9;;;;-1:-1:-1;;;;;2097:11:9;;;;:27;;:29;;;;;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2087:39:9;:6;-1:-1:-1;;;;;2087:39:9;;2066:118;;;;-1:-1:-1;;;2066:118:9;;;;;;;:::i;:::-;2247:8;;;;2215:11;;:28;;;-1:-1:-1;;;2215:28:9;;;;-1:-1:-1;;;;;2247:8:9;;;;2215:11;;;;:26;;:28;;;;;;;;;;;;;;;:11;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2215:40:9;;2194:119;;;;-1:-1:-1;;;2194:119:9;;;;;;;:::i;:::-;2264:28:14::1;2295:31:::0;;;:16:::1;:31;::::0;;;;2357:23;;-1:-1:-1;;;;;2357:23:14::1;2336:122;;;::::0;-1:-1:-1;;;2336:122:14;;4003:2:25;2336:122:14::1;::::0;::::1;3985:21:25::0;4042:2;4022:18;;;4015:30;4081:34;4061:18;;;4054:62;-1:-1:-1;;;4132:18:25;;;4125:36;4178:19;;2336:122:14::1;3801:402:25::0;2336:122:14::1;2489:14;::::0;::::1;::::0;-1:-1:-1;;;;;2489:14:14::1;2468:114;;;::::0;-1:-1:-1;;;2468:114:14;;4410:2:25;2468:114:14::1;::::0;::::1;4392:21:25::0;4449:2;4429:18;;;4422:30;4488:34;4468:18;;;4461:62;-1:-1:-1;;;4539:18:25;;;4532:37;4586:19;;2468:114:14::1;4208:403:25::0;2468:114:14::1;2593:20;-1:-1:-1::0;;;;;2628:20:14;::::1;2624:376;;2674:133;::::0;::::1;::::0;::::1;4818:25:25::0;;;4859:18;;;4852:34;;;2779:13:14::1;4902:18:25::0;;;4895:34;4791:18;;2674:133:14::1;::::0;;-1:-1:-1;;2674:133:14;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;2674:133:14::1;-1:-1:-1::0;;;2674:133:14::1;::::0;;;-1:-1:-1;2624:376:14::1;;;2848:141;::::0;::::1;::::0;::::1;5171:25:25::0;;;5212:18;;;5205:34;;;2953:13:14::1;5255:18:25::0;;;5248:34;-1:-1:-1;;;;;5318:32:25;;5298:18;;;5291:60;5143:19;;2848:141:14::1;::::0;;-1:-1:-1;;2848:141:14;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;2848:141:14::1;-1:-1:-1::0;;;2848:141:14::1;::::0;;;-1:-1:-1;2624:376:14::1;3044:14;::::0;::::1;::::0;3091:23;;3069:66:::1;::::0;-1:-1:-1;;;3069:66:14;;-1:-1:-1;;;;;3044:14:14;;::::1;::::0;;;3069:21:::1;::::0;:66:::1;::::0;3091:23;;::::1;::::0;3116:7;;3125:9:::1;::::0;3069:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3151:137:14::1;::::0;;6422:25:25;;;6478:2;6463:18;;6456:34;;;6506:18;;;6499:34;;;-1:-1:-1;;;;;6569:32:25;;6564:2;6549:18;;6542:60;6633:3;6618:19;;6611:35;;;3151:137:14::1;::::0;-1:-1:-1;6409:3:25;6394:19;;-1:-1:-1;3151:137:14::1;;;;;;;2254:1041;;;1876:455:9::0;2049:1246:14;;;;;;;:::o;3993:259::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4165:80:14::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;4165:80:14;;::::1;::::0;;;;::::1;;::::0;;::::1;::::0;;;-1:-1:-1;4137:25:14;;;:16:::1;:25:::0;;;;:108;;;;-1:-1:-1;;;;;;4137:108:14;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;4137:108:14;;::::1;::::0;;;;::::1;::::0;::::1;;::::0;;3993:259::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;6859:2:25;1998:73:0::1;::::0;::::1;6841:21:25::0;6898:2;6878:18;;;6871:30;6937:34;6917:18;;;6910:62;-1:-1:-1;;;6988:18:25;;;6981:36;7034:19;;1998:73:0::1;6657:402:25::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:180:25:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:25;;14:180;-1:-1:-1;14:180:25:o;836:131::-;-1:-1:-1;;;;;911:31:25;;901:42;;891:70;;957:1;954;947:12;972:456;1049:6;1057;1065;1118:2;1106:9;1097:7;1093:23;1089:32;1086:52;;;1134:1;1131;1124:12;1086:52;1170:9;1157:23;1147:33;;1230:2;1219:9;1215:18;1202:32;1243:31;1268:5;1243:31;:::i;:::-;1293:5;-1:-1:-1;1350:2:25;1335:18;;1322:32;1363:33;1322:32;1363:33;:::i;:::-;1415:7;1405:17;;;972:456;;;;;:::o;1641:521::-;1736:6;1744;1752;1760;1768;1821:3;1809:9;1800:7;1796:23;1792:33;1789:53;;;1838:1;1835;1828:12;1789:53;1874:9;1861:23;1851:33;;1931:2;1920:9;1916:18;1903:32;1893:42;;1982:2;1971:9;1967:18;1954:32;1944:42;;2033:2;2022:9;2018:18;2005:32;1995:42;;2087:3;2076:9;2072:19;2059:33;2101:31;2126:5;2101:31;:::i;:::-;2151:5;2141:15;;;1641:521;;;;;;;;:::o;2167:247::-;2226:6;2279:2;2267:9;2258:7;2254:23;2250:32;2247:52;;;2295:1;2292;2285:12;2247:52;2334:9;2321:23;2353:31;2378:5;2353:31;:::i;:::-;2403:5;2167:247;-1:-1:-1;;;2167:247:25:o;2419:356::-;2621:2;2603:21;;;2640:18;;;2633:30;2699:34;2694:2;2679:18;;2672:62;2766:2;2751:18;;2419:356::o;3184:::-;3386:2;3368:21;;;3405:18;;;3398:30;3464:34;3459:2;3444:18;;3437:62;3531:2;3516:18;;3184:356::o;3545:251::-;3615:6;3668:2;3656:9;3647:7;3643:23;3639:32;3636:52;;;3684:1;3681;3674:12;3636:52;3716:9;3710:16;3735:31;3760:5;3735:31;:::i;5362:796::-;5607:1;5603;5598:3;5594:11;5590:19;5582:6;5578:32;5567:9;5560:51;5541:4;5630:2;5668;5663;5652:9;5648:18;5641:30;5700:6;5694:13;5743:6;5738:2;5727:9;5723:18;5716:34;5768:1;5778:141;5792:6;5789:1;5786:13;5778:141;;;5888:14;;;5884:23;;5878:30;5853:17;;;5872:3;5849:27;5842:67;5807:10;;5778:141;;;5937:6;5934:1;5931:13;5928:92;;;6008:1;6002:3;5993:6;5982:9;5978:22;5974:32;5967:43;5928:92;-1:-1:-1;6140:10:25;6128:23;;;;6123:2;6108:18;;6101:51;-1:-1:-1;;6081:2:25;6060:15;;;;-1:-1:-1;;6056:29:25;6041:45;6088:3;6037:55;;5362:796;-1:-1:-1;;5362:796:25:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Resolution(uint256,uint256,bytes32,address,bytes32)": {
        "notice": "Emitted when a fill or a non-fill proof is received and sent to the resolution registry. .. note:: In case of a non-fill proof, the ``filler`` will be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "addCaller(uint256,address,address)": {
        "notice": "Add a caller for the given chain ID. .. note:: There can only be one caller per chain.",
        "params": {
          "caller": "The caller.",
          "chainId": "The chain ID.",
          "messenger": "The messenger, an instance of :sol:interface:`IMessenger`."
        }
      },
      "addRegistry(uint256,address,address)": {
        "notice": "Add a resolution registry. In order to be able to send messages to the :sol:contract:`ResolutionRegistry`, the resolver contract needs to know the address of the registry on the source chain, as well as the address of the messenger contract responsible for transferring messages to the L2 chain. .. note:: This function can only be called by the contract owner.",
        "params": {
          "chainId": "The source L2 chain ID.",
          "messenger": "The messenger contract responsible for chain ``chainId``.                  Must implement :sol:interface:`IMessenger`.",
          "resolutionRegistry": "The resolution registry."
        }
      },
      "messengers(uint256)": {
        "notice": "Maps chain IDs to messenger and callers."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "resolve(bytes32,bytes32,uint256,uint256,address)": {
        "notice": "Resolve the specified request. This marks the request identified by ``requestHash`` as filled by ``filler``. If the ``filler`` is zero, the fill be marked invalid. Information about the fill will be sent to the source chain's :sol:contract:`ResolutionRegistry`, using the messenger responsible for the source chain. .. note::     This function is callable only by the native L1 messenger contract,     which simply delivers the message sent from the target chain by the     Beamer's L2 :sol:interface:`messenger <IMessenger>` contract.",
        "params": {
          "fillChainId": "The fill (target) chain ID.",
          "fillId": "The fill ID.",
          "filler": "The address that filled the request, or zero to invalidate the fill.",
          "requestHash": "The request hash.",
          "sourceChainId": "The source chain ID."
        }
      },
      "sourceChainInfos(uint256)": {
        "notice": "Maps source chain IDs to source chain infos."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "The resolver. This contract resides on the L1 chain and is tasked with receiving the fill or non-fill proofs from the target L2 chain and forwarding them to the :sol:contract:`ResolutionRegistry` on the source L2 chain.",
    "version": 1
  },
  "offset": [
    497,
    4254
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xA56E3C38 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xBFA9DD3A EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24EC66B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x308634A5 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x7203AE3B EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP3 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x18B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x821 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDD JUMP JUMPDEST PUSH2 0x122 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x122 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x821 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5 SWAP1 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C8 PUSH1 0x0 PUSH2 0x7A3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5 SWAP1 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x585265737472696374656443616C6C733A20696E76616C6964206D657373656E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x33B2B9 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x1 SWAP1 DUP2 SWAP1 MSTORE SWAP2 SWAP1 SWAP5 KECCAK256 SWAP2 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR DUP4 SSTORE SWAP4 MLOAD SWAP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP5 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5 SWAP1 PUSH2 0x909 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xEF12E47 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x77897238 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x331 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x383D6F07 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND SWAP2 PUSH4 0x707ADE0E SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x421 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20726567697374727920617661696C61626C6520666F7220736F75726365 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1031B430B4B7 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206D657373656E67657220617661696C61626C6520666F7220736F757263 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x329031B430B4B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP11 SWAP1 MSTORE CHAINID PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x3FC4C37 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 POP PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP11 SWAP1 MSTORE CHAINID PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2D9D3779 PUSH1 0xE1 SHL OR SWAP1 MSTORE SWAP1 POP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3DBB202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP4 SWAP3 PUSH4 0x3DBB202B SWAP3 PUSH2 0x5EF SWAP3 SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH3 0xF4240 SWAP1 PUSH1 0x4 ADD PUSH2 0x95B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP12 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP14 SWAP1 MSTORE SWAP1 DUP2 ADD DUP15 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP14 SWAP1 MSTORE PUSH32 0x44702E0D5959CC77A7F68B33530B86546D1B157D0D74B27010D5F519ADAE07CB SWAP3 POP PUSH1 0xA0 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5 SWAP1 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x2 SWAP1 MSTORE SWAP4 KECCAK256 SWAP1 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x732 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5 SWAP1 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x7A0 DUP2 PUSH2 0x7A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x848 DUP2 PUSH2 0x80C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x858 DUP2 PUSH2 0x80C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x87B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x8A2 DUP2 PUSH2 0x80C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8CD DUP2 PUSH2 0x80C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x585265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8CD DUP2 PUSH2 0x80C JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x60 DUP2 DUP5 ADD MSTORE DUP5 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x997 JUMPI DUP7 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0x97B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9A9 JUMPI PUSH1 0x0 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH4 0xFFFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD PUSH1 0x80 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xC4 EXTCODESIZE NOT PUSH18 0x93147DB068026F481D9F9CDE30459D294A14 0x49 0xB8 0x4D PUSH6 0x23FF14C18964 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        497,
        4254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "12": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "DUP1",
      "path": "14"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "REVERT",
      "path": "14"
    },
    "16": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "17": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "POP",
      "path": "14"
    },
    "18": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "LT",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "26": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "29": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "SHR",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "DUP1",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "GT",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "DUP1",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "EQ",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x137"
    },
    "53": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "DUP1",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA56E3C38"
    },
    "60": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "EQ",
      "path": "14"
    },
    "61": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x152"
    },
    "64": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "65": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "DUP1",
      "path": "14"
    },
    "66": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xBFA9DD3A"
    },
    "71": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "EQ",
      "path": "14"
    },
    "72": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x165"
    },
    "75": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "76": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "DUP1",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "EQ",
      "path": "14"
    },
    "83": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x178"
    },
    "86": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "87": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "DUP1",
      "path": "14"
    },
    "90": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "REVERT",
      "path": "14"
    },
    "91": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "92": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "DUP1",
      "path": "14"
    },
    "93": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x24EC66B3"
    },
    "98": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "EQ",
      "path": "14"
    },
    "99": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "103": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "DUP1",
      "path": "14"
    },
    "104": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x308634A5"
    },
    "109": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "EQ",
      "path": "14"
    },
    "110": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE6"
    },
    "113": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "114": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "DUP1",
      "path": "14"
    },
    "115": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "EQ",
      "path": "14"
    },
    "121": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11A"
    },
    "124": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "125": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "DUP1",
      "path": "14"
    },
    "126": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x7203AE3B"
    },
    "131": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "EQ",
      "path": "14"
    },
    "132": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x124"
    },
    "135": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "136": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "137": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "DUP1",
      "path": "14"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        497,
        4254
      ],
      "op": "REVERT",
      "path": "14"
    },
    "141": {
      "offset": [
        906,
        959
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "142": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC1"
    },
    "145": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9B"
    },
    "148": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "149": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "151": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7F3"
    },
    "154": {
      "fn": null,
      "jump": "i",
      "offset": [
        906,
        959
      ],
      "op": "JUMP",
      "path": "9"
    },
    "155": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "156": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "158": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "160": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "DUP2",
      "path": "9"
    },
    "161": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "162": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "163": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "165": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "166": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "DUP3",
      "path": "9"
    },
    "167": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "168": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "170": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "171": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "172": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "173": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "DUP1",
      "path": "9"
    },
    "174": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "175": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "176": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "ADD",
      "path": "9"
    },
    "177": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "184": {
      "op": "SHL"
    },
    "185": {
      "op": "SUB"
    },
    "186": {
      "offset": [
        906,
        959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "187": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "DUP3",
      "path": "9"
    },
    "188": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "AND",
      "path": "9"
    },
    "189": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "190": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "AND",
      "path": "9"
    },
    "191": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "DUP3",
      "path": "9"
    },
    "192": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "JUMP",
      "path": "9"
    },
    "193": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "194": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "196": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "DUP1",
      "path": "9"
    },
    "197": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "204": {
      "op": "SHL"
    },
    "205": {
      "op": "SUB"
    },
    "206": {
      "op": "SWAP4"
    },
    "207": {
      "op": "DUP5"
    },
    "208": {
      "op": "AND"
    },
    "209": {
      "op": "DUP2"
    },
    "210": {
      "op": "MSTORE"
    },
    "211": {
      "op": "SWAP3"
    },
    "212": {
      "op": "SWAP1"
    },
    "213": {
      "op": "SWAP2"
    },
    "214": {
      "op": "AND"
    },
    "215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "217": {
      "op": "DUP4"
    },
    "218": {
      "op": "ADD"
    },
    "219": {
      "op": "MSTORE"
    },
    "220": {
      "op": "ADD"
    },
    "221": {
      "offset": [
        906,
        959
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "222": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "224": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "225": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "DUP1",
      "path": "9"
    },
    "226": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "227": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "SUB",
      "path": "9"
    },
    "228": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "229": {
      "fn": null,
      "offset": [
        906,
        959
      ],
      "op": "RETURN",
      "path": "9"
    },
    "230": {
      "offset": [
        1059,
        1118
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "231": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC1"
    },
    "234": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF4"
    },
    "237": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "238": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "240": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7F3"
    },
    "243": {
      "fn": null,
      "jump": "i",
      "offset": [
        1059,
        1118
      ],
      "op": "JUMP",
      "path": "14"
    },
    "244": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "245": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "247": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "249": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "250": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "252": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "253": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "DUP2",
      "path": "14"
    },
    "254": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "255": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "257": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "258": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "259": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "260": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "261": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "263": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "264": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "265": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "ADD",
      "path": "14"
    },
    "266": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "273": {
      "op": "SHL"
    },
    "274": {
      "op": "SUB"
    },
    "275": {
      "offset": [
        1059,
        1118
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "276": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "DUP3",
      "path": "14"
    },
    "277": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "AND",
      "path": "14"
    },
    "278": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "279": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "AND",
      "path": "14"
    },
    "280": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "DUP3",
      "path": "14"
    },
    "281": {
      "fn": null,
      "offset": [
        1059,
        1118
      ],
      "op": "JUMP",
      "path": "14"
    },
    "282": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "283": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x122"
    },
    "286": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18B"
    },
    "289": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "290": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "291": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "292": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "293": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x122"
    },
    "296": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x132"
    },
    "299": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "300": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "302": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x821"
    },
    "305": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1240,
        1526
      ],
      "op": "JUMP",
      "path": "9"
    },
    "306": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "307": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1CA"
    },
    "310": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1240,
        1526
      ],
      "op": "JUMP",
      "path": "9"
    },
    "311": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "312": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "314": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "315": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "317": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "324": {
      "op": "SHL"
    },
    "325": {
      "op": "SUB"
    },
    "326": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "327": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "328": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "329": {
      "op": "DUP2"
    },
    "330": {
      "op": "MSTORE"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "333": {
      "op": "ADD"
    },
    "334": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD"
    },
    "337": {
      "op": "JUMP"
    },
    "338": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "339": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x122"
    },
    "342": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x160"
    },
    "345": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "346": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "348": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x863"
    },
    "351": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        2049,
        3295
      ],
      "op": "JUMP",
      "path": "14"
    },
    "352": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "353": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2AF"
    },
    "356": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        2049,
        3295
      ],
      "op": "JUMP",
      "path": "14"
    },
    "357": {
      "fn": "Resolver.addRegistry",
      "offset": [
        3993,
        4252
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "358": {
      "fn": "Resolver.addRegistry",
      "offset": [
        3993,
        4252
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x122"
    },
    "361": {
      "fn": "Resolver.addRegistry",
      "offset": [
        3993,
        4252
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x173"
    },
    "364": {
      "fn": "Resolver.addRegistry",
      "offset": [
        3993,
        4252
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "365": {
      "fn": "Resolver.addRegistry",
      "offset": [
        3993,
        4252
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "367": {
      "fn": "Resolver.addRegistry",
      "offset": [
        3993,
        4252
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x821"
    },
    "370": {
      "fn": "Resolver.addRegistry",
      "jump": "i",
      "offset": [
        3993,
        4252
      ],
      "op": "JUMP",
      "path": "14"
    },
    "371": {
      "fn": "Resolver.addRegistry",
      "offset": [
        3993,
        4252
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "372": {
      "fn": "Resolver.addRegistry",
      "offset": [
        3993,
        4252
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x686"
    },
    "375": {
      "fn": "Resolver.addRegistry",
      "jump": "i",
      "offset": [
        3993,
        4252
      ],
      "op": "JUMP",
      "path": "14"
    },
    "376": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "377": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x122"
    },
    "380": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x186"
    },
    "383": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "384": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "386": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B0"
    },
    "389": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "390": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "391": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x708"
    },
    "394": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "395": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "396": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "398": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "408": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 1
    },
    "409": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "410": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BE"
    },
    "413": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "414": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "416": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "417": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "421": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "423": {
      "op": "SHL"
    },
    "424": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "425": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "426": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "428": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "429": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B5"
    },
    "432": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "433": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D4"
    },
    "436": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "437": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "438": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "440": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "441": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "442": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "443": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "444": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "445": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "446": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "447": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x1C8"
    },
    "450": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "452": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A3"
    },
    "455": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "456": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "457": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "458": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1240,
        1526
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "459": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "461": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "468": {
      "op": "SHL"
    },
    "469": {
      "op": "SUB"
    },
    "470": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "471": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "472": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "473": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F4"
    },
    "476": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "477": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "479": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "480": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "484": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "486": {
      "op": "SHL"
    },
    "487": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "488": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "489": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "491": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "492": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B5"
    },
    "495": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "496": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D4"
    },
    "499": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "500": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "507": {
      "op": "SHL"
    },
    "508": {
      "op": "SUB"
    },
    "509": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1378,
        1401
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 3
    },
    "510": {
      "branch": 17,
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1378,
        1401
      ],
      "op": "AND",
      "path": "9"
    },
    "511": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x256"
    },
    "514": {
      "branch": 17,
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "515": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "517": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "518": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "522": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "524": {
      "op": "SHL"
    },
    "525": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "DUP2",
      "path": "9"
    },
    "526": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "529": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "531": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "DUP3",
      "path": "9"
    },
    "532": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "ADD",
      "path": "9"
    },
    "533": {
      "op": "MSTORE"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "538": {
      "op": "DUP3"
    },
    "539": {
      "op": "ADD"
    },
    "540": {
      "op": "MSTORE"
    },
    "541": {
      "op": "PUSH32",
      "value": "0x585265737472696374656443616C6C733A20696E76616C6964206D657373656E"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "576": {
      "op": "DUP3"
    },
    "577": {
      "op": "ADD"
    },
    "578": {
      "op": "MSTORE"
    },
    "579": {
      "op": "PUSH3",
      "value": "0x33B2B9"
    },
    "583": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "585": {
      "op": "SHL"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "588": {
      "op": "DUP3"
    },
    "589": {
      "op": "ADD"
    },
    "590": {
      "op": "MSTORE"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "593": {
      "op": "ADD"
    },
    "594": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B5"
    },
    "597": {
      "op": "JUMP"
    },
    "598": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1370,
        1441
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "599": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 4,
      "value": "0x40"
    },
    "601": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP1",
      "path": "9"
    },
    "602": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "603": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP1",
      "path": "9"
    },
    "604": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP3",
      "path": "9"
    },
    "605": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "ADD",
      "path": "9"
    },
    "606": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP3",
      "path": "9"
    },
    "607": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "614": {
      "op": "SHL"
    },
    "615": {
      "op": "SUB"
    },
    "616": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "617": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP5",
      "path": "9"
    },
    "618": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "AND",
      "path": "9"
    },
    "619": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP2",
      "path": "9"
    },
    "620": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "621": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "622": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP4",
      "path": "9"
    },
    "623": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "AND",
      "path": "9"
    },
    "624": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "626": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP1",
      "path": "9"
    },
    "627": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP5",
      "path": "9"
    },
    "628": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "ADD",
      "path": "9"
    },
    "629": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "630": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "DUP3",
      "path": "9"
    },
    "631": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1473,
        1519
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "634": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "635": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "DUP7",
      "path": "9"
    },
    "636": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "637": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1461
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "639": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "640": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "DUP2",
      "path": "9"
    },
    "641": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "642": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "643": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "644": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "645": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "646": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1470
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "647": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "648": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "649": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "DUP3",
      "path": "9"
    },
    "650": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "657": {
      "op": "SHL"
    },
    "658": {
      "op": "SUB"
    },
    "659": {
      "op": "NOT"
    },
    "660": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "661": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "DUP2",
      "path": "9"
    },
    "662": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "AND",
      "path": "9"
    },
    "663": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "664": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "DUP6",
      "path": "9"
    },
    "665": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "AND",
      "path": "9"
    },
    "666": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "667": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "668": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "669": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "OR",
      "path": "9"
    },
    "670": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "DUP4",
      "path": "9"
    },
    "671": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "672": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "673": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "674": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "675": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "ADD",
      "path": "9"
    },
    "676": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "DUP1",
      "path": "9"
    },
    "677": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "678": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "679": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "680": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "AND",
      "path": "9"
    },
    "681": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "682": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "AND",
      "path": "9"
    },
    "683": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "OR",
      "path": "9"
    },
    "684": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "685": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "offset": [
        1451,
        1519
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "686": {
      "fn": "CrossDomainRestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        1240,
        1526
      ],
      "op": "JUMP",
      "path": "9"
    },
    "687": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "688": {
      "offset": [
        1886,
        1911
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "690": {
      "offset": [
        1914,
        1933
      ],
      "op": "DUP4",
      "path": "9"
    },
    "691": {
      "fn": "Resolver.resolve",
      "offset": [
        1914,
        1933
      ],
      "op": "DUP2",
      "path": "9"
    },
    "692": {
      "fn": "Resolver.resolve",
      "offset": [
        1914,
        1933
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "693": {
      "offset": [
        1914,
        1924
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "695": {
      "offset": [
        1914,
        1933
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "697": {
      "fn": "Resolver.resolve",
      "offset": [
        1914,
        1933
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "698": {
      "fn": "Resolver.resolve",
      "offset": [
        1914,
        1933
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "700": {
      "fn": "Resolver.resolve",
      "offset": [
        1914,
        1933
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "701": {
      "fn": "Resolver.resolve",
      "offset": [
        1914,
        1933
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "702": {
      "offset": [
        1972,
        1983
      ],
      "op": "DUP1",
      "path": "9"
    },
    "703": {
      "fn": "Resolver.resolve",
      "offset": [
        1972,
        1983
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "704": {
      "fn": "Resolver.resolve",
      "offset": [
        2229,
        2240
      ],
      "op": "DUP5",
      "path": "14"
    },
    "705": {
      "fn": "Resolver.resolve",
      "offset": [
        2229,
        2240
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "706": {
      "fn": "Resolver.resolve",
      "offset": [
        2242,
        2252
      ],
      "op": "CALLER",
      "path": "14"
    },
    "707": {
      "fn": "Resolver.resolve",
      "offset": [
        2242,
        2252
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "714": {
      "op": "SHL"
    },
    "715": {
      "op": "SUB"
    },
    "716": {
      "offset": [
        1972,
        1983
      ],
      "op": "AND",
      "path": "9"
    },
    "717": {
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2E8"
    },
    "720": {
      "fn": "Resolver.resolve",
      "offset": [
        1943,
        2056
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "721": {
      "fn": "Resolver.resolve",
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "723": {
      "fn": "Resolver.resolve",
      "offset": [
        1943,
        2056
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "724": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "730": {
      "op": "SHL"
    },
    "731": {
      "offset": [
        1943,
        2056
      ],
      "op": "DUP2",
      "path": "9"
    },
    "732": {
      "fn": "Resolver.resolve",
      "offset": [
        1943,
        2056
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "733": {
      "fn": "Resolver.resolve",
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "735": {
      "fn": "Resolver.resolve",
      "offset": [
        1943,
        2056
      ],
      "op": "ADD",
      "path": "9"
    },
    "736": {
      "fn": "Resolver.resolve",
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B5"
    },
    "739": {
      "fn": "Resolver.resolve",
      "offset": [
        1943,
        2056
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "740": {
      "fn": "Resolver.resolve",
      "offset": [
        1943,
        2056
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x909"
    },
    "743": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        1943,
        2056
      ],
      "op": "JUMP",
      "path": "9"
    },
    "744": {
      "fn": "Resolver.resolve",
      "offset": [
        1943,
        2056
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "745": {
      "offset": [
        2097,
        2108
      ],
      "op": "DUP1",
      "path": "9"
    },
    "746": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2108
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "747": {
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "749": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "750": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "751": {
      "op": "PUSH4",
      "value": "0xEF12E47"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "offset": [
        2097,
        2126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "760": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "761": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "762": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "769": {
      "op": "SHL"
    },
    "770": {
      "op": "SUB"
    },
    "771": {
      "offset": [
        2097,
        2108
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "772": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2108
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "773": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2108
      ],
      "op": "AND",
      "path": "9"
    },
    "774": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2108
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "775": {
      "offset": [
        2097,
        2124
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x77897238"
    },
    "780": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2124
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "781": {
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "783": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "784": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP3",
      "path": "9"
    },
    "785": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "786": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "787": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "789": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "790": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "791": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "792": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "793": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP3",
      "path": "9"
    },
    "794": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "795": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "SUB",
      "path": "9"
    },
    "796": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "797": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "798": {
      "offset": [
        2097,
        2108
      ],
      "op": "DUP7",
      "path": "9"
    },
    "799": {
      "offset": [
        2097,
        2126
      ],
      "op": "GAS",
      "path": "9"
    },
    "800": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "801": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "802": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "803": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "804": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x331"
    },
    "807": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "808": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "809": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "811": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "812": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "813": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "814": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "816": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "REVERT",
      "path": "9"
    },
    "817": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "818": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "819": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "820": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "821": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "822": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "824": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "825": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "826": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "828": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "NOT",
      "path": "9"
    },
    "829": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "831": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP3",
      "path": "9"
    },
    "832": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "833": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "AND",
      "path": "9"
    },
    "834": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP3",
      "path": "9"
    },
    "835": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "836": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "837": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "839": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "840": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "POP",
      "path": "9"
    },
    "841": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "842": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "ADD",
      "path": "9"
    },
    "843": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "844": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x355"
    },
    "847": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "848": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "849": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x93E"
    },
    "852": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        2097,
        2126
      ],
      "op": "JUMP",
      "path": "9"
    },
    "853": {
      "fn": "Resolver.resolve",
      "offset": [
        2097,
        2126
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "860": {
      "op": "SHL"
    },
    "861": {
      "op": "SUB"
    },
    "862": {
      "offset": [
        2087,
        2126
      ],
      "op": "AND",
      "path": "9"
    },
    "863": {
      "offset": [
        2087,
        2093
      ],
      "op": "DUP3",
      "path": "9"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "870": {
      "op": "SHL"
    },
    "871": {
      "op": "SUB"
    },
    "872": {
      "offset": [
        2087,
        2126
      ],
      "op": "AND",
      "path": "9"
    },
    "873": {
      "branch": 18,
      "fn": "Resolver.resolve",
      "offset": [
        2087,
        2126
      ],
      "op": "EQ",
      "path": "9"
    },
    "874": {
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x385"
    },
    "877": {
      "branch": 18,
      "offset": [
        2066,
        2184
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "878": {
      "fn": "Resolver.resolve",
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "880": {
      "fn": "Resolver.resolve",
      "offset": [
        2066,
        2184
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "881": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "885": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "887": {
      "op": "SHL"
    },
    "888": {
      "offset": [
        2066,
        2184
      ],
      "op": "DUP2",
      "path": "9"
    },
    "889": {
      "fn": "Resolver.resolve",
      "offset": [
        2066,
        2184
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "890": {
      "fn": "Resolver.resolve",
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "892": {
      "fn": "Resolver.resolve",
      "offset": [
        2066,
        2184
      ],
      "op": "ADD",
      "path": "9"
    },
    "893": {
      "fn": "Resolver.resolve",
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B5"
    },
    "896": {
      "fn": "Resolver.resolve",
      "offset": [
        2066,
        2184
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "897": {
      "fn": "Resolver.resolve",
      "offset": [
        2066,
        2184
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x909"
    },
    "900": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        2066,
        2184
      ],
      "op": "JUMP",
      "path": "9"
    },
    "901": {
      "fn": "Resolver.resolve",
      "offset": [
        2066,
        2184
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "902": {
      "offset": [
        2247,
        2255
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "904": {
      "fn": "Resolver.resolve",
      "offset": [
        2247,
        2255
      ],
      "op": "DUP2",
      "path": "9"
    },
    "905": {
      "fn": "Resolver.resolve",
      "offset": [
        2247,
        2255
      ],
      "op": "ADD",
      "path": "9"
    },
    "906": {
      "fn": "Resolver.resolve",
      "offset": [
        2247,
        2255
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "907": {
      "offset": [
        2215,
        2226
      ],
      "op": "DUP2",
      "path": "9"
    },
    "908": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2226
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "909": {
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "911": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "912": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "913": {
      "op": "PUSH4",
      "value": "0x383D6F07"
    },
    "918": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "920": {
      "op": "SHL"
    },
    "921": {
      "offset": [
        2215,
        2243
      ],
      "op": "DUP2",
      "path": "9"
    },
    "922": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "923": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "924": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "931": {
      "op": "SHL"
    },
    "932": {
      "op": "SUB"
    },
    "933": {
      "offset": [
        2247,
        2255
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "934": {
      "fn": "Resolver.resolve",
      "offset": [
        2247,
        2255
      ],
      "op": "DUP5",
      "path": "9"
    },
    "935": {
      "fn": "Resolver.resolve",
      "offset": [
        2247,
        2255
      ],
      "op": "AND",
      "path": "9"
    },
    "936": {
      "fn": "Resolver.resolve",
      "offset": [
        2247,
        2255
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "937": {
      "offset": [
        2215,
        2226
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "938": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2226
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "939": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2226
      ],
      "op": "AND",
      "path": "9"
    },
    "940": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2226
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "941": {
      "offset": [
        2215,
        2241
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x707ADE0E"
    },
    "946": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2241
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "947": {
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "949": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "950": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP3",
      "path": "9"
    },
    "951": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "952": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "953": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "955": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "956": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "957": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "958": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "959": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP3",
      "path": "9"
    },
    "960": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "961": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "SUB",
      "path": "9"
    },
    "962": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "963": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP2",
      "path": "9"
    },
    "964": {
      "offset": [
        2215,
        2226
      ],
      "op": "DUP7",
      "path": "9"
    },
    "965": {
      "offset": [
        2215,
        2243
      ],
      "op": "GAS",
      "path": "9"
    },
    "966": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "967": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "968": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "969": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "970": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3D7"
    },
    "973": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "974": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "975": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "977": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "978": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "979": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "980": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "982": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "REVERT",
      "path": "9"
    },
    "983": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "984": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "985": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "986": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "987": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "988": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "990": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "991": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "992": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "994": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "NOT",
      "path": "9"
    },
    "995": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "997": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP3",
      "path": "9"
    },
    "998": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "999": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "AND",
      "path": "9"
    },
    "1000": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1001": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "1002": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1003": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1005": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1006": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "POP",
      "path": "9"
    },
    "1007": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1008": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "ADD",
      "path": "9"
    },
    "1009": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1010": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3FB"
    },
    "1013": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1014": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1015": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x93E"
    },
    "1018": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        2215,
        2243
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1019": {
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2243
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1026": {
      "op": "SHL"
    },
    "1027": {
      "op": "SUB"
    },
    "1028": {
      "offset": [
        2215,
        2255
      ],
      "op": "AND",
      "path": "9"
    },
    "1029": {
      "branch": 19,
      "fn": "Resolver.resolve",
      "offset": [
        2215,
        2255
      ],
      "op": "EQ",
      "path": "9"
    },
    "1030": {
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x421"
    },
    "1033": {
      "branch": 19,
      "offset": [
        2194,
        2313
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1034": {
      "fn": "Resolver.resolve",
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1036": {
      "fn": "Resolver.resolve",
      "offset": [
        2194,
        2313
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1037": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1043": {
      "op": "SHL"
    },
    "1044": {
      "offset": [
        2194,
        2313
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1045": {
      "fn": "Resolver.resolve",
      "offset": [
        2194,
        2313
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1046": {
      "fn": "Resolver.resolve",
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1048": {
      "fn": "Resolver.resolve",
      "offset": [
        2194,
        2313
      ],
      "op": "ADD",
      "path": "9"
    },
    "1049": {
      "fn": "Resolver.resolve",
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B5"
    },
    "1052": {
      "fn": "Resolver.resolve",
      "offset": [
        2194,
        2313
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1053": {
      "fn": "Resolver.resolve",
      "offset": [
        2194,
        2313
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x909"
    },
    "1056": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        2194,
        2313
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1057": {
      "fn": "Resolver.resolve",
      "offset": [
        2194,
        2313
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1058": {
      "fn": "Resolver.resolve",
      "offset": [
        2264,
        2292
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1060": {
      "fn": "Resolver.resolve",
      "offset": [
        2295,
        2326
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1061": {
      "fn": "Resolver.resolve",
      "offset": [
        2295,
        2326
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1062": {
      "fn": "Resolver.resolve",
      "offset": [
        2295,
        2326
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1063": {
      "fn": "Resolver.resolve",
      "offset": [
        2295,
        2311
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1065": {
      "fn": "Resolver.resolve",
      "offset": [
        2295,
        2326
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1067": {
      "fn": "Resolver.resolve",
      "offset": [
        2295,
        2326
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1068": {
      "fn": "Resolver.resolve",
      "offset": [
        2295,
        2326
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1070": {
      "fn": "Resolver.resolve",
      "offset": [
        2295,
        2326
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1071": {
      "fn": "Resolver.resolve",
      "offset": [
        2295,
        2326
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1072": {
      "fn": "Resolver.resolve",
      "offset": [
        2357,
        2380
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 5
    },
    "1073": {
      "fn": "Resolver.resolve",
      "offset": [
        2357,
        2380
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1080": {
      "op": "SHL"
    },
    "1081": {
      "op": "SUB"
    },
    "1082": {
      "fn": "Resolver.resolve",
      "offset": [
        2357,
        2380
      ],
      "op": "AND",
      "path": "14"
    },
    "1083": {
      "fn": "Resolver.resolve",
      "offset": [
        2336,
        2458
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x495"
    },
    "1086": {
      "fn": "Resolver.resolve",
      "offset": [
        2336,
        2458
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1087": {
      "fn": "Resolver.resolve",
      "offset": [
        2336,
        2458
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1089": {
      "fn": "Resolver.resolve",
      "offset": [
        2336,
        2458
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1090": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "fn": "Resolver.resolve",
      "offset": [
        2336,
        2458
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1098": {
      "fn": "Resolver.resolve",
      "offset": [
        2336,
        2458
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1101": {
      "fn": "Resolver.resolve",
      "offset": [
        2336,
        2458
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1103": {
      "fn": "Resolver.resolve",
      "offset": [
        2336,
        2458
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1104": {
      "fn": "Resolver.resolve",
      "offset": [
        2336,
        2458
      ],
      "op": "ADD",
      "path": "14"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1110": {
      "op": "DUP3"
    },
    "1111": {
      "op": "ADD"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH32",
      "value": "0x4E6F20726567697374727920617661696C61626C6520666F7220736F75726365"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH6",
      "value": "0x1031B430B4B7"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "1160": {
      "op": "SHL"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1163": {
      "op": "DUP3"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "op": "MSTORE"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1168": {
      "op": "ADD"
    },
    "1169": {
      "fn": "Resolver.resolve",
      "offset": [
        2336,
        2458
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B5"
    },
    "1172": {
      "op": "JUMP"
    },
    "1173": {
      "fn": "Resolver.resolve",
      "offset": [
        2336,
        2458
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1174": {
      "fn": "Resolver.resolve",
      "offset": [
        2489,
        2503
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 6,
      "value": "0x1"
    },
    "1176": {
      "fn": "Resolver.resolve",
      "offset": [
        2489,
        2503
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1177": {
      "fn": "Resolver.resolve",
      "offset": [
        2489,
        2503
      ],
      "op": "ADD",
      "path": "14"
    },
    "1178": {
      "fn": "Resolver.resolve",
      "offset": [
        2489,
        2503
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1185": {
      "op": "SHL"
    },
    "1186": {
      "op": "SUB"
    },
    "1187": {
      "fn": "Resolver.resolve",
      "offset": [
        2489,
        2503
      ],
      "op": "AND",
      "path": "14"
    },
    "1188": {
      "fn": "Resolver.resolve",
      "offset": [
        2468,
        2582
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4FF"
    },
    "1191": {
      "fn": "Resolver.resolve",
      "offset": [
        2468,
        2582
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1192": {
      "fn": "Resolver.resolve",
      "offset": [
        2468,
        2582
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1194": {
      "fn": "Resolver.resolve",
      "offset": [
        2468,
        2582
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1195": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1201": {
      "op": "SHL"
    },
    "1202": {
      "fn": "Resolver.resolve",
      "offset": [
        2468,
        2582
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1203": {
      "fn": "Resolver.resolve",
      "offset": [
        2468,
        2582
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1206": {
      "fn": "Resolver.resolve",
      "offset": [
        2468,
        2582
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1208": {
      "fn": "Resolver.resolve",
      "offset": [
        2468,
        2582
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1209": {
      "fn": "Resolver.resolve",
      "offset": [
        2468,
        2582
      ],
      "op": "ADD",
      "path": "14"
    },
    "1210": {
      "op": "MSTORE"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1215": {
      "op": "DUP3"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "MSTORE"
    },
    "1218": {
      "op": "PUSH32",
      "value": "0x4E6F206D657373656E67657220617661696C61626C6520666F7220736F757263"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1253": {
      "op": "DUP3"
    },
    "1254": {
      "op": "ADD"
    },
    "1255": {
      "op": "MSTORE"
    },
    "1256": {
      "op": "PUSH7",
      "value": "0x329031B430B4B7"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "1266": {
      "op": "SHL"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1269": {
      "op": "DUP3"
    },
    "1270": {
      "op": "ADD"
    },
    "1271": {
      "op": "MSTORE"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1274": {
      "op": "ADD"
    },
    "1275": {
      "fn": "Resolver.resolve",
      "offset": [
        2468,
        2582
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B5"
    },
    "1278": {
      "op": "JUMP"
    },
    "1279": {
      "fn": "Resolver.resolve",
      "offset": [
        2468,
        2582
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1280": {
      "fn": "Resolver.resolve",
      "offset": [
        2593,
        2613
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1288": {
      "op": "SHL"
    },
    "1289": {
      "op": "SUB"
    },
    "1290": {
      "fn": "Resolver.resolve",
      "offset": [
        2628,
        2648
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1291": {
      "branch": 16,
      "fn": "Resolver.resolve",
      "offset": [
        2628,
        2648
      ],
      "op": "AND",
      "path": "14"
    },
    "1292": {
      "fn": "Resolver.resolve",
      "offset": [
        2624,
        3000
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x55A"
    },
    "1295": {
      "branch": 16,
      "fn": "Resolver.resolve",
      "offset": [
        2624,
        3000
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1296": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 7,
      "value": "0x40"
    },
    "1298": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1299": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1301": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1302": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "ADD",
      "path": "14"
    },
    "1303": {
      "op": "DUP12"
    },
    "1304": {
      "op": "SWAP1"
    },
    "1305": {
      "op": "MSTORE"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1308": {
      "op": "DUP2"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "op": "DUP11"
    },
    "1311": {
      "op": "SWAP1"
    },
    "1312": {
      "op": "MSTORE"
    },
    "1313": {
      "fn": "Resolver.resolve",
      "offset": [
        2779,
        2792
      ],
      "op": "CHAINID",
      "path": "14"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1316": {
      "op": "DUP3"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "MSTORE"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1321": {
      "op": "ADD"
    },
    "1322": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1324": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1325": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1328": {
      "op": "NOT"
    },
    "1329": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1330": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1331": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "SUB",
      "path": "14"
    },
    "1332": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "ADD",
      "path": "14"
    },
    "1333": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1334": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1335": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1336": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1337": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1338": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1340": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1341": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "ADD",
      "path": "14"
    },
    "1342": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1343": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1350": {
      "op": "SHL"
    },
    "1351": {
      "op": "SUB"
    },
    "1352": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "AND",
      "path": "14"
    },
    "1353": {
      "op": "PUSH4",
      "value": "0x3FC4C37"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1360": {
      "op": "SHL"
    },
    "1361": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "OR",
      "path": "14"
    },
    "1362": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1363": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1364": {
      "fn": "Resolver.resolve",
      "offset": [
        2674,
        2807
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1365": {
      "op": "POP"
    },
    "1366": {
      "fn": "Resolver.resolve",
      "offset": [
        2624,
        3000
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5B0"
    },
    "1369": {
      "fn": "Resolver.resolve",
      "offset": [
        2624,
        3000
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1370": {
      "fn": "Resolver.resolve",
      "offset": [
        2624,
        3000
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1371": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 8,
      "value": "0x40"
    },
    "1373": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1374": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1376": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1377": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "ADD",
      "path": "14"
    },
    "1378": {
      "op": "DUP12"
    },
    "1379": {
      "op": "SWAP1"
    },
    "1380": {
      "op": "MSTORE"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1383": {
      "op": "DUP2"
    },
    "1384": {
      "op": "ADD"
    },
    "1385": {
      "op": "DUP11"
    },
    "1386": {
      "op": "SWAP1"
    },
    "1387": {
      "op": "MSTORE"
    },
    "1388": {
      "fn": "Resolver.resolve",
      "offset": [
        2953,
        2966
      ],
      "op": "CHAINID",
      "path": "14"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1391": {
      "op": "DUP3"
    },
    "1392": {
      "op": "ADD"
    },
    "1393": {
      "op": "MSTORE"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1400": {
      "op": "SHL"
    },
    "1401": {
      "op": "SUB"
    },
    "1402": {
      "op": "DUP8"
    },
    "1403": {
      "op": "AND"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1406": {
      "op": "DUP3"
    },
    "1407": {
      "op": "ADD"
    },
    "1408": {
      "op": "MSTORE"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1411": {
      "op": "ADD"
    },
    "1412": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1414": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1415": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1418": {
      "op": "NOT"
    },
    "1419": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1420": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1421": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "SUB",
      "path": "14"
    },
    "1422": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "ADD",
      "path": "14"
    },
    "1423": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1424": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1425": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1426": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1427": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1428": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1430": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1431": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "ADD",
      "path": "14"
    },
    "1432": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1433": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1440": {
      "op": "SHL"
    },
    "1441": {
      "op": "SUB"
    },
    "1442": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "AND",
      "path": "14"
    },
    "1443": {
      "op": "PUSH4",
      "value": "0x2D9D3779"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "OR",
      "path": "14"
    },
    "1452": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1453": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1454": {
      "fn": "Resolver.resolve",
      "offset": [
        2848,
        2989
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1455": {
      "op": "POP"
    },
    "1456": {
      "fn": "Resolver.resolve",
      "offset": [
        2624,
        3000
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1457": {
      "fn": "Resolver.resolve",
      "offset": [
        3044,
        3058
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1459": {
      "fn": "Resolver.resolve",
      "offset": [
        3044,
        3058
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1460": {
      "fn": "Resolver.resolve",
      "offset": [
        3044,
        3058
      ],
      "op": "ADD",
      "path": "14"
    },
    "1461": {
      "fn": "Resolver.resolve",
      "offset": [
        3044,
        3058
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1462": {
      "fn": "Resolver.resolve",
      "offset": [
        3091,
        3114
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 9
    },
    "1463": {
      "fn": "Resolver.resolve",
      "offset": [
        3091,
        3114
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1464": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1466": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1467": {
      "op": "PUSH4",
      "value": "0x3DBB202B"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1474": {
      "op": "SHL"
    },
    "1475": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1476": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1483": {
      "op": "SHL"
    },
    "1484": {
      "op": "SUB"
    },
    "1485": {
      "fn": "Resolver.resolve",
      "offset": [
        3044,
        3058
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1486": {
      "fn": "Resolver.resolve",
      "offset": [
        3044,
        3058
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1487": {
      "fn": "Resolver.resolve",
      "offset": [
        3044,
        3058
      ],
      "op": "AND",
      "path": "14"
    },
    "1488": {
      "fn": "Resolver.resolve",
      "offset": [
        3044,
        3058
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1489": {
      "fn": "Resolver.resolve",
      "offset": [
        3044,
        3058
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1490": {
      "fn": "Resolver.resolve",
      "offset": [
        3044,
        3058
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1491": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3090
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x3DBB202B"
    },
    "1496": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3090
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1497": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5EF"
    },
    "1500": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1501": {
      "fn": "Resolver.resolve",
      "offset": [
        3091,
        3114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1502": {
      "fn": "Resolver.resolve",
      "offset": [
        3091,
        3114
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1503": {
      "fn": "Resolver.resolve",
      "offset": [
        3091,
        3114
      ],
      "op": "AND",
      "path": "14"
    },
    "1504": {
      "fn": "Resolver.resolve",
      "offset": [
        3091,
        3114
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1505": {
      "fn": "Resolver.resolve",
      "offset": [
        3116,
        3123
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1506": {
      "fn": "Resolver.resolve",
      "offset": [
        3116,
        3123
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1507": {
      "fn": "Resolver.resolve",
      "offset": [
        3125,
        3134
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xF4240"
    },
    "1511": {
      "fn": "Resolver.resolve",
      "offset": [
        3125,
        3134
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1512": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1514": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "ADD",
      "path": "14"
    },
    "1515": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x95B"
    },
    "1518": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        3069,
        3135
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1519": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1520": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1522": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1524": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1525": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1526": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1527": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "SUB",
      "path": "14"
    },
    "1528": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1529": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1531": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1532": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1533": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1534": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1535": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1536": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1537": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x609"
    },
    "1540": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1541": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1543": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1544": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1545": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1546": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "POP",
      "path": "14"
    },
    "1547": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "GAS",
      "path": "14"
    },
    "1548": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "CALL",
      "path": "14"
    },
    "1549": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1550": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1551": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1552": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x61D"
    },
    "1555": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1556": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1557": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1559": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1560": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "1561": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1562": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1564": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1565": {
      "fn": "Resolver.resolve",
      "offset": [
        3069,
        3135
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1566": {
      "op": "POP"
    },
    "1567": {
      "op": "POP"
    },
    "1568": {
      "fn": "Resolver.resolve",
      "offset": [
        3151,
        3288
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 10,
      "value": "0x40"
    },
    "1570": {
      "fn": "Resolver.resolve",
      "offset": [
        3151,
        3288
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1571": {
      "fn": "Resolver.resolve",
      "offset": [
        3151,
        3288
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1572": {
      "op": "DUP12"
    },
    "1573": {
      "op": "DUP2"
    },
    "1574": {
      "op": "MSTORE"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1577": {
      "op": "DUP2"
    },
    "1578": {
      "op": "ADD"
    },
    "1579": {
      "op": "DUP14"
    },
    "1580": {
      "op": "SWAP1"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "op": "SWAP1"
    },
    "1583": {
      "op": "DUP2"
    },
    "1584": {
      "op": "ADD"
    },
    "1585": {
      "op": "DUP15"
    },
    "1586": {
      "op": "SWAP1"
    },
    "1587": {
      "op": "MSTORE"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1594": {
      "op": "SHL"
    },
    "1595": {
      "op": "SUB"
    },
    "1596": {
      "op": "DUP11"
    },
    "1597": {
      "op": "AND"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1600": {
      "op": "DUP3"
    },
    "1601": {
      "op": "ADD"
    },
    "1602": {
      "op": "MSTORE"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1605": {
      "op": "DUP2"
    },
    "1606": {
      "op": "ADD"
    },
    "1607": {
      "op": "DUP14"
    },
    "1608": {
      "op": "SWAP1"
    },
    "1609": {
      "op": "MSTORE"
    },
    "1610": {
      "fn": "Resolver.resolve",
      "offset": [
        3151,
        3288
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x44702E0D5959CC77A7F68B33530B86546D1B157D0D74B27010D5F519ADAE07CB"
    },
    "1643": {
      "fn": "Resolver.resolve",
      "offset": [
        3151,
        3288
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1644": {
      "op": "POP"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1647": {
      "op": "ADD"
    },
    "1648": {
      "op": "SWAP1"
    },
    "1649": {
      "op": "POP"
    },
    "1650": {
      "fn": "Resolver.resolve",
      "offset": [
        3151,
        3288
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1652": {
      "fn": "Resolver.resolve",
      "offset": [
        3151,
        3288
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1653": {
      "fn": "Resolver.resolve",
      "offset": [
        3151,
        3288
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1654": {
      "fn": "Resolver.resolve",
      "offset": [
        3151,
        3288
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1655": {
      "fn": "Resolver.resolve",
      "offset": [
        3151,
        3288
      ],
      "op": "SUB",
      "path": "14"
    },
    "1656": {
      "fn": "Resolver.resolve",
      "offset": [
        3151,
        3288
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1657": {
      "fn": "Resolver.resolve",
      "offset": [
        3151,
        3288
      ],
      "op": "LOG1",
      "path": "14"
    },
    "1658": {
      "fn": "Resolver.resolve",
      "offset": [
        2254,
        3295
      ],
      "op": "POP",
      "path": "14"
    },
    "1659": {
      "fn": "Resolver.resolve",
      "offset": [
        2254,
        3295
      ],
      "op": "POP",
      "path": "14"
    },
    "1660": {
      "fn": "Resolver.resolve",
      "offset": [
        2254,
        3295
      ],
      "op": "POP",
      "path": "14"
    },
    "1661": {
      "offset": [
        1876,
        2331
      ],
      "op": "POP",
      "path": "9"
    },
    "1662": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "POP",
      "path": "14"
    },
    "1663": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "POP",
      "path": "14"
    },
    "1664": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "POP",
      "path": "14"
    },
    "1665": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "POP",
      "path": "14"
    },
    "1666": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "POP",
      "path": "14"
    },
    "1667": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "POP",
      "path": "14"
    },
    "1668": {
      "fn": "Resolver.resolve",
      "offset": [
        2049,
        3295
      ],
      "op": "POP",
      "path": "14"
    },
    "1669": {
      "fn": "Resolver.resolve",
      "jump": "o",
      "offset": [
        2049,
        3295
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1670": {
      "fn": "Resolver.addRegistry",
      "offset": [
        3993,
        4252
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1671": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1673": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1680": {
      "op": "SHL"
    },
    "1681": {
      "op": "SUB"
    },
    "1682": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1683": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1684": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1685": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B0"
    },
    "1688": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1689": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1691": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1692": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1698": {
      "op": "SHL"
    },
    "1699": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1700": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1701": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1703": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1704": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B5"
    },
    "1707": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1708": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D4"
    },
    "1711": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1712": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1713": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 11,
      "value": "0x40"
    },
    "1715": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1716": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1717": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1718": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1719": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "ADD",
      "path": "14"
    },
    "1720": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1721": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1728": {
      "op": "SHL"
    },
    "1729": {
      "op": "SUB"
    },
    "1730": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1731": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1732": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "AND",
      "path": "14"
    },
    "1733": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1734": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1735": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1736": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1737": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "AND",
      "path": "14"
    },
    "1738": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1740": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1741": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1742": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "ADD",
      "path": "14"
    },
    "1743": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1744": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1745": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4165,
        4245
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1748": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4162
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "1749": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4162
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1750": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4162
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1751": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4153
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1753": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4162
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1754": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4162
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1755": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4162
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1756": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4162
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1757": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1758": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1759": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1760": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1767": {
      "op": "SHL"
    },
    "1768": {
      "op": "SUB"
    },
    "1769": {
      "op": "NOT"
    },
    "1770": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1771": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1772": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "AND",
      "path": "14"
    },
    "1773": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1774": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1775": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "AND",
      "path": "14"
    },
    "1776": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1777": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1778": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1779": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "OR",
      "path": "14"
    },
    "1780": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1781": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1782": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1783": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1786": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1787": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1788": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "ADD",
      "path": "14"
    },
    "1789": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1790": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1791": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1792": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1793": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "AND",
      "path": "14"
    },
    "1794": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1795": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "AND",
      "path": "14"
    },
    "1796": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "OR",
      "path": "14"
    },
    "1797": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1798": {
      "fn": "Resolver.addRegistry",
      "offset": [
        4137,
        4245
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1799": {
      "fn": "Resolver.addRegistry",
      "jump": "o",
      "offset": [
        3993,
        4252
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1801": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1803": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1810": {
      "op": "SHL"
    },
    "1811": {
      "op": "SUB"
    },
    "1812": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1813": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1814": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1815": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x732"
    },
    "1818": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1819": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1821": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1822": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1830": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1831": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1833": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1834": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B5"
    },
    "1837": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1838": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D4"
    },
    "1841": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1842": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "op": "SUB"
    },
    "1851": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "1852": {
      "branch": 20,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1853": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x797"
    },
    "1856": {
      "branch": 20,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1857": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1860": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1866": {
      "op": "SHL"
    },
    "1867": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1868": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1871": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1873": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1874": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1875": {
      "op": "MSTORE"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1880": {
      "op": "DUP3"
    },
    "1881": {
      "op": "ADD"
    },
    "1882": {
      "op": "MSTORE"
    },
    "1883": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1918": {
      "op": "DUP3"
    },
    "1919": {
      "op": "ADD"
    },
    "1920": {
      "op": "MSTORE"
    },
    "1921": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1933": {
      "op": "DUP3"
    },
    "1934": {
      "op": "ADD"
    },
    "1935": {
      "op": "MSTORE"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1938": {
      "op": "ADD"
    },
    "1939": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B5"
    },
    "1942": {
      "op": "JUMP"
    },
    "1943": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1944": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x7A0"
    },
    "1947": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1948": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A3"
    },
    "1951": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1952": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1953": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1954": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1955": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1956": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1958": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1959": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "op": "SUB"
    },
    "1968": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 14
    },
    "1969": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1970": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1977": {
      "op": "SHL"
    },
    "1978": {
      "op": "SUB"
    },
    "1979": {
      "op": "NOT"
    },
    "1980": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1981": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1982": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1983": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "1984": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1985": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1986": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x40"
    },
    "1988": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1989": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1990": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1991": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1992": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "1993": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1994": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1995": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1996": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2029": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2030": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2031": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2032": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2033": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2034": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2035": {
      "op": "JUMPDEST"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2040": {
      "op": "DUP3"
    },
    "2041": {
      "op": "DUP5"
    },
    "2042": {
      "op": "SUB"
    },
    "2043": {
      "op": "SLT"
    },
    "2044": {
      "op": "ISZERO"
    },
    "2045": {
      "op": "PUSH2",
      "value": "0x805"
    },
    "2048": {
      "op": "JUMPI"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2051": {
      "op": "DUP1"
    },
    "2052": {
      "op": "REVERT"
    },
    "2053": {
      "op": "JUMPDEST"
    },
    "2054": {
      "op": "POP"
    },
    "2055": {
      "op": "CALLDATALOAD"
    },
    "2056": {
      "op": "SWAP2"
    },
    "2057": {
      "op": "SWAP1"
    },
    "2058": {
      "op": "POP"
    },
    "2059": {
      "jump": "o",
      "op": "JUMP"
    },
    "2060": {
      "op": "JUMPDEST"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2067": {
      "op": "SHL"
    },
    "2068": {
      "op": "SUB"
    },
    "2069": {
      "op": "DUP2"
    },
    "2070": {
      "op": "AND"
    },
    "2071": {
      "op": "DUP2"
    },
    "2072": {
      "op": "EQ"
    },
    "2073": {
      "op": "PUSH2",
      "value": "0x7A0"
    },
    "2076": {
      "op": "JUMPI"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2079": {
      "op": "DUP1"
    },
    "2080": {
      "op": "REVERT"
    },
    "2081": {
      "op": "JUMPDEST"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2084": {
      "op": "DUP1"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2089": {
      "op": "DUP5"
    },
    "2090": {
      "op": "DUP7"
    },
    "2091": {
      "op": "SUB"
    },
    "2092": {
      "op": "SLT"
    },
    "2093": {
      "op": "ISZERO"
    },
    "2094": {
      "op": "PUSH2",
      "value": "0x836"
    },
    "2097": {
      "op": "JUMPI"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2100": {
      "op": "DUP1"
    },
    "2101": {
      "op": "REVERT"
    },
    "2102": {
      "op": "JUMPDEST"
    },
    "2103": {
      "op": "DUP4"
    },
    "2104": {
      "op": "CALLDATALOAD"
    },
    "2105": {
      "op": "SWAP3"
    },
    "2106": {
      "op": "POP"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2109": {
      "op": "DUP5"
    },
    "2110": {
      "op": "ADD"
    },
    "2111": {
      "op": "CALLDATALOAD"
    },
    "2112": {
      "op": "PUSH2",
      "value": "0x848"
    },
    "2115": {
      "op": "DUP2"
    },
    "2116": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2119": {
      "jump": "i",
      "op": "JUMP"
    },
    "2120": {
      "op": "JUMPDEST"
    },
    "2121": {
      "op": "SWAP2"
    },
    "2122": {
      "op": "POP"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2125": {
      "op": "DUP5"
    },
    "2126": {
      "op": "ADD"
    },
    "2127": {
      "op": "CALLDATALOAD"
    },
    "2128": {
      "op": "PUSH2",
      "value": "0x858"
    },
    "2131": {
      "op": "DUP2"
    },
    "2132": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2135": {
      "jump": "i",
      "op": "JUMP"
    },
    "2136": {
      "op": "JUMPDEST"
    },
    "2137": {
      "op": "DUP1"
    },
    "2138": {
      "op": "SWAP2"
    },
    "2139": {
      "op": "POP"
    },
    "2140": {
      "op": "POP"
    },
    "2141": {
      "op": "SWAP3"
    },
    "2142": {
      "op": "POP"
    },
    "2143": {
      "op": "SWAP3"
    },
    "2144": {
      "op": "POP"
    },
    "2145": {
      "op": "SWAP3"
    },
    "2146": {
      "jump": "o",
      "op": "JUMP"
    },
    "2147": {
      "op": "JUMPDEST"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2150": {
      "op": "DUP1"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2153": {
      "op": "DUP1"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2158": {
      "op": "DUP7"
    },
    "2159": {
      "op": "DUP9"
    },
    "2160": {
      "op": "SUB"
    },
    "2161": {
      "op": "SLT"
    },
    "2162": {
      "op": "ISZERO"
    },
    "2163": {
      "op": "PUSH2",
      "value": "0x87B"
    },
    "2166": {
      "op": "JUMPI"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2169": {
      "op": "DUP1"
    },
    "2170": {
      "op": "REVERT"
    },
    "2171": {
      "op": "JUMPDEST"
    },
    "2172": {
      "op": "DUP6"
    },
    "2173": {
      "op": "CALLDATALOAD"
    },
    "2174": {
      "op": "SWAP5"
    },
    "2175": {
      "op": "POP"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2178": {
      "op": "DUP7"
    },
    "2179": {
      "op": "ADD"
    },
    "2180": {
      "op": "CALLDATALOAD"
    },
    "2181": {
      "op": "SWAP4"
    },
    "2182": {
      "op": "POP"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2185": {
      "op": "DUP7"
    },
    "2186": {
      "op": "ADD"
    },
    "2187": {
      "op": "CALLDATALOAD"
    },
    "2188": {
      "op": "SWAP3"
    },
    "2189": {
      "op": "POP"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2192": {
      "op": "DUP7"
    },
    "2193": {
      "op": "ADD"
    },
    "2194": {
      "op": "CALLDATALOAD"
    },
    "2195": {
      "op": "SWAP2"
    },
    "2196": {
      "op": "POP"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2199": {
      "op": "DUP7"
    },
    "2200": {
      "op": "ADD"
    },
    "2201": {
      "op": "CALLDATALOAD"
    },
    "2202": {
      "op": "PUSH2",
      "value": "0x8A2"
    },
    "2205": {
      "op": "DUP2"
    },
    "2206": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2209": {
      "jump": "i",
      "op": "JUMP"
    },
    "2210": {
      "op": "JUMPDEST"
    },
    "2211": {
      "op": "DUP1"
    },
    "2212": {
      "op": "SWAP2"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "op": "POP"
    },
    "2215": {
      "op": "SWAP3"
    },
    "2216": {
      "op": "SWAP6"
    },
    "2217": {
      "op": "POP"
    },
    "2218": {
      "op": "SWAP3"
    },
    "2219": {
      "op": "SWAP6"
    },
    "2220": {
      "op": "SWAP1"
    },
    "2221": {
      "op": "SWAP4"
    },
    "2222": {
      "op": "POP"
    },
    "2223": {
      "jump": "o",
      "op": "JUMP"
    },
    "2224": {
      "op": "JUMPDEST"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2229": {
      "op": "DUP3"
    },
    "2230": {
      "op": "DUP5"
    },
    "2231": {
      "op": "SUB"
    },
    "2232": {
      "op": "SLT"
    },
    "2233": {
      "op": "ISZERO"
    },
    "2234": {
      "op": "PUSH2",
      "value": "0x8C2"
    },
    "2237": {
      "op": "JUMPI"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2240": {
      "op": "DUP1"
    },
    "2241": {
      "op": "REVERT"
    },
    "2242": {
      "op": "JUMPDEST"
    },
    "2243": {
      "op": "DUP2"
    },
    "2244": {
      "op": "CALLDATALOAD"
    },
    "2245": {
      "op": "PUSH2",
      "value": "0x8CD"
    },
    "2248": {
      "op": "DUP2"
    },
    "2249": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2252": {
      "jump": "i",
      "op": "JUMP"
    },
    "2253": {
      "op": "JUMPDEST"
    },
    "2254": {
      "op": "SWAP4"
    },
    "2255": {
      "op": "SWAP3"
    },
    "2256": {
      "op": "POP"
    },
    "2257": {
      "op": "POP"
    },
    "2258": {
      "op": "POP"
    },
    "2259": {
      "jump": "o",
      "op": "JUMP"
    },
    "2260": {
      "op": "JUMPDEST"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2263": {
      "op": "DUP1"
    },
    "2264": {
      "op": "DUP3"
    },
    "2265": {
      "op": "MSTORE"
    },
    "2266": {
      "op": "DUP2"
    },
    "2267": {
      "op": "DUP2"
    },
    "2268": {
      "op": "ADD"
    },
    "2269": {
      "op": "MSTORE"
    },
    "2270": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2305": {
      "op": "DUP3"
    },
    "2306": {
      "op": "ADD"
    },
    "2307": {
      "op": "MSTORE"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2310": {
      "op": "ADD"
    },
    "2311": {
      "op": "SWAP1"
    },
    "2312": {
      "jump": "o",
      "op": "JUMP"
    },
    "2313": {
      "op": "JUMPDEST"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2316": {
      "op": "DUP1"
    },
    "2317": {
      "op": "DUP3"
    },
    "2318": {
      "op": "MSTORE"
    },
    "2319": {
      "op": "DUP2"
    },
    "2320": {
      "op": "DUP2"
    },
    "2321": {
      "op": "ADD"
    },
    "2322": {
      "op": "MSTORE"
    },
    "2323": {
      "op": "PUSH32",
      "value": "0x585265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C6572"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2358": {
      "op": "DUP3"
    },
    "2359": {
      "op": "ADD"
    },
    "2360": {
      "op": "MSTORE"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2363": {
      "op": "ADD"
    },
    "2364": {
      "op": "SWAP1"
    },
    "2365": {
      "jump": "o",
      "op": "JUMP"
    },
    "2366": {
      "op": "JUMPDEST"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2371": {
      "op": "DUP3"
    },
    "2372": {
      "op": "DUP5"
    },
    "2373": {
      "op": "SUB"
    },
    "2374": {
      "op": "SLT"
    },
    "2375": {
      "op": "ISZERO"
    },
    "2376": {
      "op": "PUSH2",
      "value": "0x950"
    },
    "2379": {
      "op": "JUMPI"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2382": {
      "op": "DUP1"
    },
    "2383": {
      "op": "REVERT"
    },
    "2384": {
      "op": "JUMPDEST"
    },
    "2385": {
      "op": "DUP2"
    },
    "2386": {
      "op": "MLOAD"
    },
    "2387": {
      "op": "PUSH2",
      "value": "0x8CD"
    },
    "2390": {
      "op": "DUP2"
    },
    "2391": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2394": {
      "jump": "i",
      "op": "JUMP"
    },
    "2395": {
      "op": "JUMPDEST"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "DUP1"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2401": {
      "op": "SHL"
    },
    "2402": {
      "op": "SUB"
    },
    "2403": {
      "op": "DUP5"
    },
    "2404": {
      "op": "AND"
    },
    "2405": {
      "op": "DUP2"
    },
    "2406": {
      "op": "MSTORE"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2413": {
      "op": "DUP2"
    },
    "2414": {
      "op": "DUP5"
    },
    "2415": {
      "op": "ADD"
    },
    "2416": {
      "op": "MSTORE"
    },
    "2417": {
      "op": "DUP5"
    },
    "2418": {
      "op": "MLOAD"
    },
    "2419": {
      "op": "DUP1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2422": {
      "op": "DUP6"
    },
    "2423": {
      "op": "ADD"
    },
    "2424": {
      "op": "MSTORE"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2427": {
      "op": "JUMPDEST"
    },
    "2428": {
      "op": "DUP2"
    },
    "2429": {
      "op": "DUP2"
    },
    "2430": {
      "op": "LT"
    },
    "2431": {
      "op": "ISZERO"
    },
    "2432": {
      "op": "PUSH2",
      "value": "0x997"
    },
    "2435": {
      "op": "JUMPI"
    },
    "2436": {
      "op": "DUP7"
    },
    "2437": {
      "op": "DUP2"
    },
    "2438": {
      "op": "ADD"
    },
    "2439": {
      "op": "DUP4"
    },
    "2440": {
      "op": "ADD"
    },
    "2441": {
      "op": "MLOAD"
    },
    "2442": {
      "op": "DUP6"
    },
    "2443": {
      "op": "DUP3"
    },
    "2444": {
      "op": "ADD"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2447": {
      "op": "ADD"
    },
    "2448": {
      "op": "MSTORE"
    },
    "2449": {
      "op": "DUP3"
    },
    "2450": {
      "op": "ADD"
    },
    "2451": {
      "op": "PUSH2",
      "value": "0x97B"
    },
    "2454": {
      "op": "JUMP"
    },
    "2455": {
      "op": "JUMPDEST"
    },
    "2456": {
      "op": "DUP2"
    },
    "2457": {
      "op": "DUP2"
    },
    "2458": {
      "op": "GT"
    },
    "2459": {
      "op": "ISZERO"
    },
    "2460": {
      "op": "PUSH2",
      "value": "0x9A9"
    },
    "2463": {
      "op": "JUMPI"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2468": {
      "op": "DUP4"
    },
    "2469": {
      "op": "DUP8"
    },
    "2470": {
      "op": "ADD"
    },
    "2471": {
      "op": "ADD"
    },
    "2472": {
      "op": "MSTORE"
    },
    "2473": {
      "op": "JUMPDEST"
    },
    "2474": {
      "op": "POP"
    },
    "2475": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2480": {
      "op": "SWAP5"
    },
    "2481": {
      "op": "SWAP1"
    },
    "2482": {
      "op": "SWAP5"
    },
    "2483": {
      "op": "AND"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2486": {
      "op": "DUP5"
    },
    "2487": {
      "op": "ADD"
    },
    "2488": {
      "op": "MSTORE"
    },
    "2489": {
      "op": "POP"
    },
    "2490": {
      "op": "POP"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2493": {
      "op": "SWAP2"
    },
    "2494": {
      "op": "SWAP1"
    },
    "2495": {
      "op": "SWAP2"
    },
    "2496": {
      "op": "ADD"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2499": {
      "op": "NOT"
    },
    "2500": {
      "op": "AND"
    },
    "2501": {
      "op": "ADD"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2504": {
      "op": "ADD"
    },
    "2505": {
      "op": "SWAP3"
    },
    "2506": {
      "op": "SWAP2"
    },
    "2507": {
      "op": "POP"
    },
    "2508": {
      "op": "POP"
    },
    "2509": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "4ea97daf5ae054241e59f42e2503a2045bb456c8",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol\";\nimport \"../interfaces/IMessenger.sol\";\nimport \"./ResolutionRegistry.sol\";\nimport \"./CrossDomainRestrictedCalls.sol\";\n\n/// The resolver.\n///\n/// This contract resides on the L1 chain and is tasked with receiving the\n/// fill or non-fill proofs from the target L2 chain and forwarding them to\n/// the :sol:contract:`ResolutionRegistry` on the source L2 chain.\ncontract Resolver is Ownable, CrossDomainRestrictedCalls {\n    struct SourceChainInfo {\n        address resolutionRegistry;\n        address messenger;\n    }\n\n    /// Emitted when a fill or a non-fill proof is received and sent to the resolution registry.\n    ///\n    /// .. note:: In case of a non-fill proof, the ``filler`` will be zero.\n    event Resolution(\n        uint256 sourceChainId,\n        uint256 fillChainId,\n        bytes32 requestHash,\n        address filler,\n        bytes32 fillId\n    );\n\n    /// Maps source chain IDs to source chain infos.\n    mapping(uint256 => SourceChainInfo) public sourceChainInfos;\n\n    /// Resolve the specified request.\n    ///\n    /// This marks the request identified by ``requestHash`` as filled by ``filler``.\n    /// If the ``filler`` is zero, the fill be marked invalid.\n    ///\n    /// Information about the fill will be sent to the source chain's :sol:contract:`ResolutionRegistry`,\n    /// using the messenger responsible for the source chain.\n    ///\n    /// .. note::\n    ///\n    ///     This function is callable only by the native L1 messenger contract,\n    ///     which simply delivers the message sent from the target chain by the\n    ///     Beamer's L2 :sol:interface:`messenger <IMessenger>` contract.\n    ///\n    /// @param requestHash The request hash.\n    /// @param fillId The fill ID.\n    /// @param fillChainId The fill (target) chain ID.\n    /// @param sourceChainId The source chain ID.\n    /// @param filler The address that filled the request, or zero to invalidate the fill.\n    function resolve(\n        bytes32 requestHash,\n        bytes32 fillId,\n        uint256 fillChainId,\n        uint256 sourceChainId,\n        address filler\n    ) external restricted(fillChainId, msg.sender) {\n        SourceChainInfo storage info = sourceChainInfos[sourceChainId];\n        require(\n            info.resolutionRegistry != address(0),\n            \"No registry available for source chain\"\n        );\n        require(\n            info.messenger != address(0),\n            \"No messenger available for source chain\"\n        );\n\n        bytes memory message;\n\n        if (filler == address(0)) {\n            message = abi.encodeCall(\n                ResolutionRegistry.invalidateFill,\n                (requestHash, fillId, block.chainid)\n            );\n        } else {\n            message = abi.encodeCall(\n                ResolutionRegistry.resolveRequest,\n                (requestHash, fillId, block.chainid, filler)\n            );\n        }\n\n        IMessenger messenger = IMessenger(info.messenger);\n        messenger.sendMessage(info.resolutionRegistry, message, 1_000_000);\n\n        emit Resolution(\n            sourceChainId,\n            fillChainId,\n            requestHash,\n            filler,\n            fillId\n        );\n    }\n\n    /// Add a resolution registry.\n    ///\n    /// In order to be able to send messages to the :sol:contract:`ResolutionRegistry`,\n    /// the resolver contract needs to know the address of the registry on the source\n    /// chain, as well as the address of the messenger contract responsible for\n    /// transferring messages to the L2 chain.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param chainId The source L2 chain ID.\n    /// @param resolutionRegistry The resolution registry.\n    /// @param messenger The messenger contract responsible for chain ``chainId``.\n    ///                  Must implement :sol:interface:`IMessenger`.\n    function addRegistry(\n        uint256 chainId,\n        address resolutionRegistry,\n        address messenger\n    ) external onlyOwner {\n        sourceChainInfos[chainId] = SourceChainInfo(\n            resolutionRegistry,\n            messenger\n        );\n    }\n}\n",
  "sourceMap": "497:3757:14:-:0;;;;;;;;;;;;-1:-1:-1;921:32:0;719:10:6;921:18:0;:32::i;:::-;497:3757:14;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;497:3757:14:-;;;;;;;",
  "sourcePath": "contracts/contracts/Resolver.sol",
  "type": "contract"
}