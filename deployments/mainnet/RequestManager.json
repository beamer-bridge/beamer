{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_claimStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_claimPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_challengePeriodExtension",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_resolutionRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimerStake",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lastChallenger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "challengerStakeTotal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "termination",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "ClaimMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimReceiver",
          "type": "address"
        }
      ],
      "name": "ClaimStakeWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "DepositWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "finalityPeriod",
          "type": "uint256"
        }
      ],
      "name": "FinalityPeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "validUntil",
          "type": "uint256"
        }
      ],
      "name": "RequestCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_VALIDITY_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VALIDITY_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "challengeClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengePeriodExtension",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "claimRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claimerStake",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lastChallenger",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "challengerStakeTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawnAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "termination",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collectedProtocolFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validityPeriod",
          "type": "uint256"
        }
      ],
      "name": "createRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deprecateContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deprecated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "finalityPeriods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpFeePPM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minLpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeePPM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requests",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "filler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "fillId",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BeamerUtils.FillInfo",
          "name": "withdrawInfo",
          "type": "tuple"
        },
        {
          "internalType": "uint192",
          "name": "activeClaims",
          "type": "uint192"
        },
        {
          "internalType": "uint256",
          "name": "validUntil",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lpFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resolutionRegistry",
      "outputs": [
        {
          "internalType": "contract ResolutionRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "finalityPeriod",
          "type": "uint256"
        }
      ],
      "name": "setFinalityPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "totalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProtocolFeePPM",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newLpFeePPM",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newMinLpFee",
          "type": "uint256"
        }
      ],
      "name": "updateFeeData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newTransferLimit",
          "type": "uint256"
        }
      ],
      "name": "updateTransferLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "withdrawExpiredRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawProtocolFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "2": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "4": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "5": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
    "6": "contracts/contracts/BeamerUtils.sol",
    "8": "contracts/contracts/RequestManager.sol",
    "9": "contracts/contracts/ResolutionRegistry.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/RequestManager.sol",
    "exportedSymbols": {
      "Address": [
        2566
      ],
      "BeamerUtils": [
        2099
      ],
      "Context": [
        2271
      ],
      "CrossDomainRestrictedCalls": [
        2671
      ],
      "IERC20": [
        1699
      ],
      "IMessenger": [
        2697
      ],
      "Math": [
        2011
      ],
      "Ownable": [
        1621
      ],
      "RequestManager": [
        1516
      ],
      "ResolutionRegistry": [
        2249
      ],
      "SafeERC20": [
        1923
      ]
    },
    "id": 1517,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:8"
      },
      {
        "absolutePath": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1517,
        "sourceUnit": 1700,
        "src": "58:84:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1517,
        "sourceUnit": 1924,
        "src": "143:93:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1517,
        "sourceUnit": 2012,
        "src": "237:81:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1517,
        "sourceUnit": 1622,
        "src": "319:80:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/BeamerUtils.sol",
        "file": "./BeamerUtils.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1517,
        "sourceUnit": 2100,
        "src": "401:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/ResolutionRegistry.sol",
        "file": "./ResolutionRegistry.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1517,
        "sourceUnit": 2250,
        "src": "429:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1621,
              "src": "789:7:8"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "789:7:8"
          }
        ],
        "canonicalName": "RequestManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8,
          "nodeType": "StructuredDocumentation",
          "src": "465:297:8",
          "text": "The request manager.\n This contract is responsible for keeping track of transfer requests,\n implementing the rules of the challenge game and holding deposited\n tokens until they are withdrawn.\n It is the only contract that agents need to interact with on the source chain."
        },
        "fullyImplemented": true,
        "id": 1516,
        "linearizedBaseContracts": [
          1516,
          1621,
          2271
        ],
        "name": "RequestManager",
        "nameLocation": "771:14:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 13,
            "libraryName": {
              "id": 11,
              "name": "Math",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2011,
              "src": "809:4:8"
            },
            "nodeType": "UsingForDirective",
            "src": "803:23:8",
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "818:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "global": false,
            "id": 17,
            "libraryName": {
              "id": 14,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1923,
              "src": "837:9:8"
            },
            "nodeType": "UsingForDirective",
            "src": "831:27:8",
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1699,
                "src": "851:6:8"
              },
              "referencedDeclaration": 1699,
              "src": "851:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1699",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "RequestManager.Request",
            "id": 41,
            "members": [
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "1043:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "1035:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 18,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1035:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "sourceTokenAddress",
                "nameLocation": "1067:18:8",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "1059:26:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 20,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1059:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "targetChainId",
                "nameLocation": "1103:13:8",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "1095:21:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1095:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "targetTokenAddress",
                "nameLocation": "1134:18:8",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "1126:26:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 24,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1126:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "targetAddress",
                "nameLocation": "1170:13:8",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "1162:21:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1162:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1201:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "1193:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1193:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "withdrawInfo",
                "nameLocation": "1238:12:8",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "1217:33:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FillInfo_$2018_storage_ptr",
                  "typeString": "struct BeamerUtils.FillInfo"
                },
                "typeName": {
                  "id": 31,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 30,
                    "name": "BeamerUtils.FillInfo",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2018,
                    "src": "1217:20:8"
                  },
                  "referencedDeclaration": 2018,
                  "src": "1217:20:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FillInfo_$2018_storage_ptr",
                    "typeString": "struct BeamerUtils.FillInfo"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "activeClaims",
                "nameLocation": "1268:12:8",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "1260:20:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint192",
                  "typeString": "uint192"
                },
                "typeName": {
                  "id": 33,
                  "name": "uint192",
                  "nodeType": "ElementaryTypeName",
                  "src": "1260:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint192",
                    "typeString": "uint192"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "validUntil",
                "nameLocation": "1298:10:8",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "1290:18:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1290:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "lpFee",
                "nameLocation": "1326:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "1318:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1318:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "protocolFee",
                "nameLocation": "1349:11:8",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "1341:19:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1341:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Request",
            "nameLocation": "1017:7:8",
            "nodeType": "StructDefinition",
            "scope": 1516,
            "src": "1010:357:8",
            "visibility": "public"
          },
          {
            "canonicalName": "RequestManager.Claim",
            "id": 62,
            "members": [
              {
                "constant": false,
                "id": 43,
                "mutability": "mutable",
                "name": "requestId",
                "nameLocation": "1404:9:8",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "1396:17:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1396:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45,
                "mutability": "mutable",
                "name": "claimer",
                "nameLocation": "1431:7:8",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "1423:15:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 44,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1423:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47,
                "mutability": "mutable",
                "name": "claimerStake",
                "nameLocation": "1456:12:8",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "1448:20:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1448:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "challengersStakes",
                "nameLocation": "1506:17:8",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "1478:45:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 50,
                  "keyType": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1478:27:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "lastChallenger",
                "nameLocation": "1541:14:8",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "1533:22:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 52,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1533:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "challengerStakeTotal",
                "nameLocation": "1573:20:8",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "1565:28:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1565:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "withdrawnAmount",
                "nameLocation": "1611:15:8",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "1603:23:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 56,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1603:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "termination",
                "nameLocation": "1644:11:8",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "1636:19:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 58,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1636:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "fillId",
                "nameLocation": "1673:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "1665:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 60,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1665:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nameLocation": "1380:5:8",
            "nodeType": "StructDefinition",
            "scope": 1516,
            "src": "1373:313:8",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 63,
              "nodeType": "StructuredDocumentation",
              "src": "1707:103:8",
              "text": "Emitted when a new request has been created.\n .. seealso:: :sol:func:`createRequest`"
            },
            "eventSelector": "18a412d0656b9a5c9263a134f66a34da33cad7c3690971601f9963ade588e701",
            "id": 79,
            "name": "RequestCreated",
            "nameLocation": "1821:14:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1853:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1845:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1845:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "1880:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1872:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceTokenAddress",
                  "nameLocation": "1911:18:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1903:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1903:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "1947:18:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1939:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "1983:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1975:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2014:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "2006:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "2038:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "2030:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1835:219:8"
            },
            "src": "1815:240:8"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 80,
              "nodeType": "StructuredDocumentation",
              "src": "2061:445:8",
              "text": "Emitted when the token deposit for request ``requestId`` has been\n transferred to the ``receiver``.\n This can happen in two cases:\n  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`\n  * a claim related to the request has been resolved successfully in favor of the claimer\n .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`"
            },
            "eventSelector": "a7b86597910aae75f7d99feb2f37420cc80d457465ffba0f8136d722a9f7095a",
            "id": 86,
            "name": "DepositWithdrawn",
            "nameLocation": "2517:16:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2542:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "2534:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2534:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2561:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "2553:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2553:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2533:37:8"
            },
            "src": "2511:60:8"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 87,
              "nodeType": "StructuredDocumentation",
              "src": "2577:151:8",
              "text": "Emitted when a claim or a counter-claim (challenge) has been made.\n .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`"
            },
            "eventSelector": "29fd2df293ba511e44ca47212c915137020231ed3ac0ee7bd02a7a655275ad37",
            "id": 105,
            "name": "ClaimMade",
            "nameLocation": "2739:9:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2774:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2758:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "2801:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2793:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2793:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "2826:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2818:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2818:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimerStake",
                  "nameLocation": "2851:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2843:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2843:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastChallenger",
                  "nameLocation": "2881:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2873:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "challengerStakeTotal",
                  "nameLocation": "2913:20:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2905:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "termination",
                  "nameLocation": "2951:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2943:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2943:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "2980:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2972:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2972:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2748:244:8"
            },
            "src": "2733:260:8"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 106,
              "nodeType": "StructuredDocumentation",
              "src": "2999:277:8",
              "text": "Emitted when staked native tokens tied to a claim have been withdrawn.\n This can only happen when the claim has been resolved and the caller\n of :sol:func:`withdraw` is allowed to withdraw their stake.\n .. seealso:: :sol:func:`withdraw`"
            },
            "eventSelector": "5b0aec51a74bf236e8fa08bcb2e303068c7ac1aed3ca410d25b8dad27538d73c",
            "id": 114,
            "name": "ClaimStakeWithdrawn",
            "nameLocation": "3287:19:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "3324:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "3316:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3316:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3357:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "3341:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3341:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimReceiver",
                  "nameLocation": "3384:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "3376:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3306:97:8"
            },
            "src": "3281:123:8"
          },
          {
            "anonymous": false,
            "eventSelector": "aba57b48b9f1dfd5747a52ed348a6ab6aa7bafb0575363a5cb7b62659f727b65",
            "id": 120,
            "name": "FinalityPeriodUpdated",
            "nameLocation": "3416:21:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "3446:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "3438:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3438:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "finalityPeriod",
                  "nameLocation": "3469:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "3461:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3461:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3437:47:8"
            },
            "src": "3410:75:8"
          },
          {
            "constant": false,
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "3509:161:8",
              "text": "The minimum amount of source chain's native token that the claimer needs to\n provide when making a claim, as well in each round of the challenge game."
            },
            "functionSelector": "eb321173",
            "id": 123,
            "mutability": "mutable",
            "name": "claimStake",
            "nameLocation": "3690:10:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "3675:25:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 122,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3675:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 124,
              "nodeType": "StructuredDocumentation",
              "src": "3707:44:8",
              "text": "The period for which the claim is valid."
            },
            "functionSelector": "7dc2cd98",
            "id": 126,
            "mutability": "mutable",
            "name": "claimPeriod",
            "nameLocation": "3771:11:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "3756:26:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 125,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3756:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 127,
              "nodeType": "StructuredDocumentation",
              "src": "3789:598:8",
              "text": "The period by which the termination time of a claim is extended after each\n round of the challenge game. This period should allow enough time for the\n other parties to counter-challenge.\n .. note::\n    The claim's termination time is extended only if it is less than the\n    extension time.\n Note that in the first challenge round, i.e. the round initiated by the first\n challenger, the termination time is extended additionally by the finality\n period of the target chain. This is done to allow for L1 resolution."
            },
            "functionSelector": "1d18adc5",
            "id": 129,
            "mutability": "mutable",
            "name": "challengePeriodExtension",
            "nameLocation": "4407:24:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "4392:39:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 128,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4392:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 130,
              "nodeType": "StructuredDocumentation",
              "src": "4438:45:8",
              "text": "The minimum validity period of a request."
            },
            "functionSelector": "1489f8d2",
            "id": 133,
            "mutability": "constant",
            "name": "MIN_VALIDITY_PERIOD",
            "nameLocation": "4512:19:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "4488:55:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 131,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4488:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 132,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4534:9:8",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_300_by_1",
                "typeString": "int_const 300"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 134,
              "nodeType": "StructuredDocumentation",
              "src": "4550:45:8",
              "text": "The maximum validity period of a request."
            },
            "functionSelector": "96171d05",
            "id": 137,
            "mutability": "constant",
            "name": "MAX_VALIDITY_PERIOD",
            "nameLocation": "4624:19:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "4600:56:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 135,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4600:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 136,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4646:10:8",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1800_by_1",
                "typeString": "int_const 1800"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 138,
              "nodeType": "StructuredDocumentation",
              "src": "4681:118:8",
              "text": "Indicates whether the contract is deprecated. A deprecated contract\n cannot be used to create new requests."
            },
            "functionSelector": "0e136b19",
            "id": 140,
            "mutability": "mutable",
            "name": "deprecated",
            "nameLocation": "4816:10:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "4804:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 139,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "4804:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 141,
              "nodeType": "StructuredDocumentation",
              "src": "4833:54:8",
              "text": "The request counter, used to generate request IDs."
            },
            "functionSelector": "973a814e",
            "id": 143,
            "mutability": "mutable",
            "name": "requestCounter",
            "nameLocation": "4907:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "4892:29:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 142,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4892:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 144,
              "nodeType": "StructuredDocumentation",
              "src": "4928:50:8",
              "text": "The claim counter, used to generate claim IDs."
            },
            "functionSelector": "4efa8f17",
            "id": 146,
            "mutability": "mutable",
            "name": "claimCounter",
            "nameLocation": "4998:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "4983:27:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 145,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4983:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 147,
              "nodeType": "StructuredDocumentation",
              "src": "5017:79:8",
              "text": "The resolution registry that is used to query for results of L1 resolution."
            },
            "functionSelector": "ab9634ee",
            "id": 150,
            "mutability": "mutable",
            "name": "resolutionRegistry",
            "nameLocation": "5127:18:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "5101:44:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ResolutionRegistry_$2249",
              "typeString": "contract ResolutionRegistry"
            },
            "typeName": {
              "id": 149,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 148,
                "name": "ResolutionRegistry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2249,
                "src": "5101:18:8"
              },
              "referencedDeclaration": 2249,
              "src": "5101:18:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ResolutionRegistry_$2249",
                "typeString": "contract ResolutionRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 151,
              "nodeType": "StructuredDocumentation",
              "src": "5152:94:8",
              "text": "Maps target rollup chain IDs to finality periods.\n Finality periods are in seconds."
            },
            "functionSelector": "2f92f009",
            "id": 155,
            "mutability": "mutable",
            "name": "finalityPeriods",
            "nameLocation": "5286:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "5251:50:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 154,
              "keyType": {
                "id": 152,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5259:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "5251:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 153,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5270:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 156,
              "nodeType": "StructuredDocumentation",
              "src": "5308:33:8",
              "text": "Maps request IDs to requests."
            },
            "functionSelector": "81d12c58",
            "id": 161,
            "mutability": "mutable",
            "name": "requests",
            "nameLocation": "5381:8:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "5346:43:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$41_storage_$",
              "typeString": "mapping(uint256 => struct RequestManager.Request)"
            },
            "typeName": {
              "id": 160,
              "keyType": {
                "id": 157,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5354:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "5346:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$41_storage_$",
                "typeString": "mapping(uint256 => struct RequestManager.Request)"
              },
              "valueType": {
                "id": 159,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 158,
                  "name": "Request",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41,
                  "src": "5365:7:8"
                },
                "referencedDeclaration": 41,
                "src": "5365:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                  "typeString": "struct RequestManager.Request"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 162,
              "nodeType": "StructuredDocumentation",
              "src": "5396:29:8",
              "text": "Maps claim IDs to claims."
            },
            "functionSelector": "a888c2cd",
            "id": 167,
            "mutability": "mutable",
            "name": "claims",
            "nameLocation": "5463:6:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "5430:39:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$62_storage_$",
              "typeString": "mapping(uint256 => struct RequestManager.Claim)"
            },
            "typeName": {
              "id": 166,
              "keyType": {
                "id": 163,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5438:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "5430:25:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$62_storage_$",
                "typeString": "mapping(uint256 => struct RequestManager.Claim)"
              },
              "valueType": {
                "id": 165,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 164,
                  "name": "Claim",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62,
                  "src": "5449:5:8"
                },
                "referencedDeclaration": 62,
                "src": "5449:5:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                  "typeString": "struct RequestManager.Claim"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 168,
              "nodeType": "StructuredDocumentation",
              "src": "5476:83:8",
              "text": "The minimum fee, denominated in transfer token, paid to the liquidity provider."
            },
            "functionSelector": "5d5aa11b",
            "id": 171,
            "mutability": "mutable",
            "name": "minLpFee",
            "nameLocation": "5579:8:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "5564:33:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 169,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5564:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 170,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5590:7:8",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000000000000000000_by_1",
                "typeString": "int_const 5000000000000000000"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 172,
              "nodeType": "StructuredDocumentation",
              "src": "5612:76:8",
              "text": "Liquidity provider fee percentage, expressed in ppm (parts per million)."
            },
            "functionSelector": "e2653eeb",
            "id": 175,
            "mutability": "mutable",
            "name": "lpFeePPM",
            "nameLocation": "5708:8:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "5693:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 173,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5693:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "315f303030",
              "id": 174,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5719:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1_000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 176,
              "nodeType": "StructuredDocumentation",
              "src": "5777:66:8",
              "text": "Protocol fee percentage, expressed in ppm (parts per million)."
            },
            "functionSelector": "e7aad5c4",
            "id": 179,
            "mutability": "mutable",
            "name": "protocolFeePPM",
            "nameLocation": "5863:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "5848:33:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 177,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5848:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 178,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5880:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 180,
              "nodeType": "StructuredDocumentation",
              "src": "5932:77:8",
              "text": "The maximum amount of tokens that can be transferred in a single request."
            },
            "functionSelector": "f9432517",
            "id": 183,
            "mutability": "mutable",
            "name": "transferLimit",
            "nameLocation": "6029:13:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "6014:42:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 181,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6014:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 182,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6045:11:8",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 184,
              "nodeType": "StructuredDocumentation",
              "src": "6075:84:8",
              "text": "Maps ERC20 token addresses to related token amounts that belong to the protocol."
            },
            "functionSelector": "6bc6c8d1",
            "id": 188,
            "mutability": "mutable",
            "name": "collectedProtocolFees",
            "nameLocation": "6199:21:8",
            "nodeType": "VariableDeclaration",
            "scope": 1516,
            "src": "6164:56:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 187,
              "keyType": {
                "id": 185,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "6172:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "6164:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 186,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6183:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "6380:75:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 198,
                        "name": "minLpFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "6406:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 199,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 191,
                                "src": "6417:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 200,
                                "name": "lpFeePPM",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 175,
                                "src": "6426:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6417:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 202,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6416:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "315f3030305f303030",
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6438:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1_000_000"
                        },
                        "src": "6416:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 196,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2011,
                        "src": "6397:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$2011_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1944,
                      "src": "6397:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6397:51:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 195,
                  "id": 206,
                  "nodeType": "Return",
                  "src": "6390:58:8"
                }
              ]
            },
            "documentation": {
              "id": 189,
              "nodeType": "StructuredDocumentation",
              "src": "6227:87:8",
              "text": "Compute the liquidy provider fee that needs to be paid for a given transfer amount."
            },
            "functionSelector": "f7d64cec",
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lpFee",
            "nameLocation": "6328:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6342:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "6334:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6334:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6333:16:8"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "6371:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6371:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6370:9:8"
            },
            "scope": 1516,
            "src": "6319:136:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "6612:61:8",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 216,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "6630:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 217,
                            "name": "protocolFeePPM",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "6639:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6630:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 219,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6629:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "315f3030305f303030",
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6657:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1_000_000"
                    },
                    "src": "6629:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 215,
                  "id": 222,
                  "nodeType": "Return",
                  "src": "6622:44:8"
                }
              ]
            },
            "documentation": {
              "id": 209,
              "nodeType": "StructuredDocumentation",
              "src": "6461:79:8",
              "text": "Compute the protocol fee that needs to be paid for a given transfer amount."
            },
            "functionSelector": "a032b5f4",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "protocolFee",
            "nameLocation": "6554:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6574:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "6566:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6566:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6565:16:8"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "6603:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6603:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6602:9:8"
            },
            "scope": 1516,
            "src": "6545:128:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "6909:59:8",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 233,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "6932:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 232,
                        "name": "lpFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "6926:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6926:13:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 236,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "6954:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 235,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "6942:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6942:19:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6926:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 231,
                  "id": 239,
                  "nodeType": "Return",
                  "src": "6919:42:8"
                }
              ]
            },
            "documentation": {
              "id": 225,
              "nodeType": "StructuredDocumentation",
              "src": "6679:161:8",
              "text": "Compute the total fee that needs to be paid for a given transfer amount.\n The total fee is the sum of the liquidity provider fee and the protocol fee."
            },
            "functionSelector": "cea74edf",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalFee",
            "nameLocation": "6854:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6871:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "6863:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6863:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6862:16:8"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "6900:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6900:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6899:9:8"
            },
            "scope": 1516,
            "src": "6845:123:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "7086:138:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 247,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 244,
                            "src": "7117:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 248,
                            "name": "requestCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "7130:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7117:27:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 250,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 244,
                            "src": "7148:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7160:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7148:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7117:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726571756573744964206e6f742076616c6964",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7175:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bb782a5a1857b463ef883d3e4b99e9751b0d5423347851634a49140c150f705",
                          "typeString": "literal_string \"requestId not valid\""
                        },
                        "value": "requestId not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bb782a5a1857b463ef883d3e4b99e9751b0d5423347851634a49140c150f705",
                          "typeString": "literal_string \"requestId not valid\""
                        }
                      ],
                      "id": 246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7096:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7096:110:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "7096:110:8"
                },
                {
                  "id": 257,
                  "nodeType": "PlaceholderStatement",
                  "src": "7216:1:8"
                }
              ]
            },
            "documentation": {
              "id": 242,
              "nodeType": "StructuredDocumentation",
              "src": "6992:46:8",
              "text": "Check whether a given request ID is valid."
            },
            "id": 259,
            "name": "validRequestId",
            "nameLocation": "7052:14:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "7075:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "7067:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7067:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7066:19:8"
            },
            "src": "7043:181:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "7318:96:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 265,
                            "name": "claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "7336:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 266,
                            "name": "claimCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "7347:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7336:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 268,
                            "name": "claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "7363:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7373:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7363:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7336:38:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636c61696d4964206e6f742076616c6964",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7376:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76ef4b9559047f48ccd368349bc1d95713392442f579fe3d262d71404d1dcff",
                          "typeString": "literal_string \"claimId not valid\""
                        },
                        "value": "claimId not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f76ef4b9559047f48ccd368349bc1d95713392442f579fe3d262d71404d1dcff",
                          "typeString": "literal_string \"claimId not valid\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7328:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7328:68:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "7328:68:8"
                },
                {
                  "id": 275,
                  "nodeType": "PlaceholderStatement",
                  "src": "7406:1:8"
                }
              ]
            },
            "documentation": {
              "id": 260,
              "nodeType": "StructuredDocumentation",
              "src": "7230:44:8",
              "text": "Check whether a given claim ID is valid."
            },
            "id": 277,
            "name": "validClaimId",
            "nameLocation": "7288:12:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "7309:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "7301:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7301:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7300:17:8"
            },
            "src": "7279:135:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "7859:209:8",
              "statements": [
                {
                  "expression": {
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 289,
                      "name": "claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "7869:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 290,
                      "name": "_claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "7882:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7869:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "7869:24:8"
                },
                {
                  "expression": {
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 293,
                      "name": "claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "7903:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 294,
                      "name": "_claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "7917:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7903:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "7903:26:8"
                },
                {
                  "expression": {
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 297,
                      "name": "challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "7939:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 298,
                      "name": "_challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "7966:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7939:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "7939:52:8"
                },
                {
                  "expression": {
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 301,
                      "name": "resolutionRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "8001:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ResolutionRegistry_$2249",
                        "typeString": "contract ResolutionRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 303,
                          "name": "_resolutionRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 286,
                          "src": "8041:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 302,
                        "name": "ResolutionRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2249,
                        "src": "8022:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ResolutionRegistry_$2249_$",
                          "typeString": "type(contract ResolutionRegistry)"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8022:39:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ResolutionRegistry_$2249",
                        "typeString": "contract ResolutionRegistry"
                      }
                    },
                    "src": "8001:60:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ResolutionRegistry_$2249",
                      "typeString": "contract ResolutionRegistry"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "8001:60:8"
                }
              ]
            },
            "documentation": {
              "id": 278,
              "nodeType": "StructuredDocumentation",
              "src": "7420:277:8",
              "text": "Constructor.\n @param _claimStake Claim stake amount.\n @param _claimPeriod Claim period, in seconds.\n @param _challengePeriodExtension Challenge period extension, in seconds.\n @param _resolutionRegistry Address of the resolution registry."
            },
            "id": 308,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "_claimStake",
                  "nameLocation": "7731:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "7723:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7723:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "_claimPeriod",
                  "nameLocation": "7760:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "7752:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7752:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "_challengePeriodExtension",
                  "nameLocation": "7790:25:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "7782:33:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7782:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "_resolutionRegistry",
                  "nameLocation": "7833:19:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "7825:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7825:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7713:145:8"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7859:0:8"
            },
            "scope": 1516,
            "src": "7702:366:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 515,
              "nodeType": "Block",
              "src": "9162:1818:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 327,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "9180:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9194:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "9180:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742069732064657072656361746564",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9201:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_529c15b06099d61815914f4912757faaa0741e9262b36f0004cb178f36fdd9f1",
                          "typeString": "literal_string \"Contract is deprecated\""
                        },
                        "value": "Contract is deprecated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_529c15b06099d61815914f4912757faaa0741e9262b36f0004cb178f36fdd9f1",
                          "typeString": "literal_string \"Contract is deprecated\""
                        }
                      ],
                      "id": 326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9172:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9172:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "9172:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 334,
                            "name": "finalityPeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 155,
                            "src": "9257:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 336,
                          "indexExpression": {
                            "id": 335,
                            "name": "targetChainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 311,
                            "src": "9273:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9257:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9291:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9257:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54617267657420726f6c6c7570206e6f7420737570706f72746564",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9306:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce613defff4868c9fbec08ddde530282de33cee8241a08645b008dbc00137e2b",
                          "typeString": "literal_string \"Target rollup not supported\""
                        },
                        "value": "Target rollup not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce613defff4868c9fbec08ddde530282de33cee8241a08645b008dbc00137e2b",
                          "typeString": "literal_string \"Target rollup not supported\""
                        }
                      ],
                      "id": 333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9236:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9236:109:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "9236:109:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 343,
                          "name": "validityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "9376:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 344,
                          "name": "MIN_VALIDITY_PERIOD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "9394:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9376:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696469747920706572696f6420746f6f2073686f7274",
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9427:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c45904cb6a178378bb37a9a1c03f015a39361ce913918834ec5a52c283667008",
                          "typeString": "literal_string \"Validity period too short\""
                        },
                        "value": "Validity period too short"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c45904cb6a178378bb37a9a1c03f015a39361ce913918834ec5a52c283667008",
                          "typeString": "literal_string \"Validity period too short\""
                        }
                      ],
                      "id": 342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9355:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9355:109:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "9355:109:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 350,
                          "name": "validityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "9495:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 351,
                          "name": "MAX_VALIDITY_PERIOD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 137,
                          "src": "9513:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9495:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696469747920706572696f6420746f6f206c6f6e67",
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9546:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac933946aa9f1b3cff59a7d1daa9668099cd3b65a18787e4f598bc11cc28194",
                          "typeString": "literal_string \"Validity period too long\""
                        },
                        "value": "Validity period too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac933946aa9f1b3cff59a7d1daa9668099cd3b65a18787e4f598bc11cc28194",
                          "typeString": "literal_string \"Validity period too long\""
                        }
                      ],
                      "id": 349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9474:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9474:108:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "9474:108:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 357,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "9600:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 358,
                          "name": "transferLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "9610:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9600:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473207472616e73666572206c696d6974",
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9625:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62ea95ea2c2e47e95fdd347a7b56999ecf4d6210b6715ec00b4f5e3d0c9f95d8",
                          "typeString": "literal_string \"Amount exceeds transfer limit\""
                        },
                        "value": "Amount exceeds transfer limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62ea95ea2c2e47e95fdd347a7b56999ecf4d6210b6715ec00b4f5e3d0c9f95d8",
                          "typeString": "literal_string \"Amount exceeds transfer limit\""
                        }
                      ],
                      "id": 356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9592:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9592:65:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "9592:65:8"
                },
                {
                  "assignments": [
                    365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 365,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "9675:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 515,
                      "src": "9668:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1699",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 364,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 363,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1699,
                          "src": "9668:6:8"
                        },
                        "referencedDeclaration": 1699,
                        "src": "9668:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1699",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 369,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 367,
                        "name": "sourceTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "9690:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 366,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1699,
                      "src": "9683:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1699_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9683:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1699",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9668:41:8"
                },
                {
                  "assignments": [
                    371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 371,
                      "mutability": "mutable",
                      "name": "lpFee",
                      "nameLocation": "9728:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 515,
                      "src": "9720:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 370,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9720:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 375,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 373,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "9742:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 372,
                      "name": "lpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "9736:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9736:13:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9720:29:8"
                },
                {
                  "assignments": [
                    377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 377,
                      "mutability": "mutable",
                      "name": "protocolFee",
                      "nameLocation": "9767:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 515,
                      "src": "9759:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 376,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9759:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 381,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 379,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "9793:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 378,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "9781:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9781:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9759:41:8"
                },
                {
                  "assignments": [
                    383
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 383,
                      "mutability": "mutable",
                      "name": "totalTokenAmount",
                      "nameLocation": "9818:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 515,
                      "src": "9810:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 382,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9810:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 389,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 384,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "9837:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 385,
                        "name": "lpFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "9846:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9837:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 387,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "9854:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9837:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9810:55:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 393,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9913:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9913:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 397,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9933:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RequestManager_$1516",
                                    "typeString": "contract RequestManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RequestManager_$1516",
                                    "typeString": "contract RequestManager"
                                  }
                                ],
                                "id": 396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9925:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 395,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9925:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9925:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 391,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 365,
                              "src": "9897:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1699",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1658,
                            "src": "9897:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9897:42:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 400,
                          "name": "totalTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 383,
                          "src": "9943:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9897:62:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9973:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        },
                        "value": "Insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        }
                      ],
                      "id": 390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9876:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9876:131:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "9876:131:8"
                },
                {
                  "expression": {
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 405,
                      "name": "requestCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "10018:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10036:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10018:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "10018:19:8"
                },
                {
                  "assignments": [
                    411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 411,
                      "mutability": "mutable",
                      "name": "newRequest",
                      "nameLocation": "10063:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 515,
                      "src": "10047:26:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 410,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 409,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41,
                          "src": "10047:7:8"
                        },
                        "referencedDeclaration": 41,
                        "src": "10047:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 415,
                  "initialValue": {
                    "baseExpression": {
                      "id": 412,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "10076:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$41_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 414,
                    "indexExpression": {
                      "id": 413,
                      "name": "requestCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "10085:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10076:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$41_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10047:53:8"
                },
                {
                  "expression": {
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 416,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "10110:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "10110:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 419,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10130:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10130:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10110:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "10110:30:8"
                },
                {
                  "expression": {
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 423,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "10150:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sourceTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "10150:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 426,
                      "name": "sourceTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 313,
                      "src": "10182:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10150:50:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "10150:50:8"
                },
                {
                  "expression": {
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 429,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "10210:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetChainId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "10210:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 432,
                      "name": "targetChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "10237:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10210:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "10210:40:8"
                },
                {
                  "expression": {
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 435,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "10260:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 437,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "10260:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 438,
                      "name": "targetTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "10292:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10260:50:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "10260:50:8"
                },
                {
                  "expression": {
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 441,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "10320:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 443,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "10320:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 444,
                      "name": "targetAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 317,
                      "src": "10347:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10320:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "10320:40:8"
                },
                {
                  "expression": {
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 447,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "10370:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "10370:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 450,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 319,
                      "src": "10390:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10370:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "10370:26:8"
                },
                {
                  "expression": {
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 453,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "10406:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 455,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "10406:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillInfo_$2018_storage",
                        "typeString": "struct BeamerUtils.FillInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10461:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10453:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 458,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10453:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10453:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10473:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10465:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 462,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10465:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10465:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 456,
                          "name": "BeamerUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2099,
                          "src": "10432:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$2099_$",
                            "typeString": "type(library BeamerUtils)"
                          }
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FillInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2018,
                        "src": "10432:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FillInfo_$2018_storage_ptr_$",
                          "typeString": "type(struct BeamerUtils.FillInfo storage pointer)"
                        }
                      },
                      "id": 466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10432:44:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillInfo_$2018_memory_ptr",
                        "typeString": "struct BeamerUtils.FillInfo memory"
                      }
                    },
                    "src": "10406:70:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillInfo_$2018_storage",
                      "typeString": "struct BeamerUtils.FillInfo storage ref"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "10406:70:8"
                },
                {
                  "expression": {
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 469,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "10486:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "validUntil",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "10486:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 472,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "10510:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "10510:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 474,
                        "name": "validityPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "10528:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10510:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10486:56:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "10486:56:8"
                },
                {
                  "expression": {
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 478,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "10552:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lpFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "10552:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 481,
                      "name": "lpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "10571:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10552:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "10552:24:8"
                },
                {
                  "expression": {
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 484,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "10586:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protocolFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "10586:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 487,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "10611:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10586:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "10586:36:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 491,
                        "name": "requestCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "10666:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 492,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "10694:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 493,
                        "name": "sourceTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "10721:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 494,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "10753:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 495,
                        "name": "targetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "10785:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 496,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "10812:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 497,
                          "name": "newRequest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "10832:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "validUntil",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36,
                        "src": "10832:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 490,
                      "name": "RequestCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "10638:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10638:225:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 500,
                  "nodeType": "EmitStatement",
                  "src": "10633:230:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 504,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10897:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10897:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 508,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10917:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RequestManager_$1516",
                              "typeString": "contract RequestManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RequestManager_$1516",
                              "typeString": "contract RequestManager"
                            }
                          ],
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10909:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 506,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10909:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10909:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 510,
                        "name": "totalTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "10924:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 501,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "10874:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1699",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1756,
                      "src": "10874:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1699_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1699_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10874:67:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "10874:67:8"
                },
                {
                  "expression": {
                    "id": 513,
                    "name": "requestCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 143,
                    "src": "10959:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 325,
                  "id": 514,
                  "nodeType": "Return",
                  "src": "10952:21:8"
                }
              ]
            },
            "documentation": {
              "id": 309,
              "nodeType": "StructuredDocumentation",
              "src": "8074:837:8",
              "text": "Create a new transfer request.\n @param targetChainId ID of the target chain.\n @param sourceTokenAddress Address of the token contract on the source chain.\n @param targetTokenAddress Address of the token contract on the target chain.\n @param targetAddress Recipient address on the target chain.\n @param amount Amount of tokens to transfer. Does not include fees.\n @param validityPeriod The number of seconds the request is to be considered valid.\n                       Once its validity period has elapsed, the request cannot be claimed\n                       anymore and will eventually expire, allowing the request submitter\n                       to withdraw the deposited tokens if there are no active claims.\n @return ID of the newly created request."
            },
            "functionSelector": "2f4212b8",
            "id": 516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "8925:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "8956:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "8948:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8948:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "sourceTokenAddress",
                  "nameLocation": "8987:18:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "8979:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8979:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "9023:18:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "9015:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9015:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "9059:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "9051:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9051:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9090:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "9082:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9082:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "validityPeriod",
                  "nameLocation": "9114:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "9106:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9106:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8938:196:8"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "9153:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9153:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9152:9:8"
            },
            "scope": 1516,
            "src": "8916:2064:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 599,
              "nodeType": "Block",
              "src": "11268:678:8",
              "statements": [
                {
                  "assignments": [
                    527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 527,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "11294:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 599,
                      "src": "11278:23:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 526,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 525,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41,
                          "src": "11278:7:8"
                        },
                        "referencedDeclaration": 41,
                        "src": "11278:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 531,
                  "initialValue": {
                    "baseExpression": {
                      "id": 528,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "11304:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$41_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 530,
                    "indexExpression": {
                      "id": 529,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "11313:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11304:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$41_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11278:45:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 533,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "11355:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 534,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32,
                            "src": "11355:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FillInfo_$2018_storage",
                              "typeString": "struct BeamerUtils.FillInfo storage ref"
                            }
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "filler",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2015,
                          "src": "11355:27:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11394:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11386:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 536,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11386:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11386:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11355:41:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f73697420616c72656164792077697468647261776e",
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11410:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        },
                        "value": "Deposit already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        }
                      ],
                      "id": 532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11334:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11334:113:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "11334:113:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 545,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11478:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11478:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 547,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "11497:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "11497:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11478:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657175657374206e6f74206578706972656420796574",
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11529:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39bdfa9a2d26c13da0c9b6ca3d4e83611affcc397929e29cfb9e09c9d5c42830",
                          "typeString": "literal_string \"Request not expired yet\""
                        },
                        "value": "Request not expired yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39bdfa9a2d26c13da0c9b6ca3d4e83611affcc397929e29cfb9e09c9d5c42830",
                          "typeString": "literal_string \"Request not expired yet\""
                        }
                      ],
                      "id": 544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11457:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11457:107:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "11457:107:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 554,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "11582:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "activeClaims",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34,
                          "src": "11582:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11606:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11582:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41637469766520636c61696d732072756e6e696e67",
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11609:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f03ffa7bffee1c6dfb6edeb3466aa724b633b692eb668560f915ebb9d3a9a8b",
                          "typeString": "literal_string \"Active claims running\""
                        },
                        "value": "Active claims running"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f03ffa7bffee1c6dfb6edeb3466aa724b633b692eb668560f915ebb9d3a9a8b",
                          "typeString": "literal_string \"Active claims running\""
                        }
                      ],
                      "id": 553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11574:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11574:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "11574:59:8"
                },
                {
                  "expression": {
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 561,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 527,
                          "src": "11644:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 564,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "11644:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillInfo_$2018_storage",
                          "typeString": "struct BeamerUtils.FillInfo storage ref"
                        }
                      },
                      "id": 565,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "filler",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2015,
                      "src": "11644:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 566,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "11674:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 567,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "11674:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11644:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "11644:44:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 571,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "11721:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 572,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 527,
                          "src": "11732:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 573,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19,
                        "src": "11732:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 570,
                      "name": "DepositWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "11704:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11704:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "EmitStatement",
                  "src": "11699:48:8"
                },
                {
                  "assignments": [
                    578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 578,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "11765:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 599,
                      "src": "11758:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1699",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 577,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 576,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1699,
                          "src": "11758:6:8"
                        },
                        "referencedDeclaration": 1699,
                        "src": "11758:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1699",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 583,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 580,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 527,
                          "src": "11780:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "11780:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 579,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1699,
                      "src": "11773:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1699_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11773:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1699",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11758:49:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 587,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 527,
                          "src": "11849:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 588,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19,
                        "src": "11849:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 589,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "11877:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 590,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29,
                            "src": "11877:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 591,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "11894:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 592,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38,
                            "src": "11894:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11877:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 594,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "11910:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 595,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "protocolFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "11910:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11877:52:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 584,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "11817:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1699",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1730,
                      "src": "11817:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1699_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1699_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11817:122:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "11817:122:8"
                }
              ]
            },
            "documentation": {
              "id": 517,
              "nodeType": "StructuredDocumentation",
              "src": "10986:171:8",
              "text": "Withdraw funds deposited with an expired request.\n No claims must be active for the request.\n @param requestId ID of the expired request."
            },
            "functionSelector": "d3868348",
            "id": 600,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 522,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 519,
                    "src": "11253:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 523,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 521,
                  "name": "validRequestId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "11238:14:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "11238:25:8"
              }
            ],
            "name": "withdrawExpiredRequest",
            "nameLocation": "11171:22:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "11202:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "11194:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11194:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11193:19:8"
            },
            "returnParameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11268:0:8"
            },
            "scope": 1516,
            "src": "11162:784:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "12439:1127:8",
              "statements": [
                {
                  "assignments": [
                    615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 615,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "12465:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 749,
                      "src": "12449:23:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 614,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 613,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41,
                          "src": "12449:7:8"
                        },
                        "referencedDeclaration": 41,
                        "src": "12449:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 619,
                  "initialValue": {
                    "baseExpression": {
                      "id": 616,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "12475:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$41_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 618,
                    "indexExpression": {
                      "id": 617,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "12484:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12475:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$41_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12449:45:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 621,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12513:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12513:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 623,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 615,
                            "src": "12531:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 624,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "12531:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12513:36:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526571756573742065787069726564",
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12551:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9025c283ecf0e47ba79d56362348df0807a1b8d91051901470410464f6fd80f1",
                          "typeString": "literal_string \"Request expired\""
                        },
                        "value": "Request expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9025c283ecf0e47ba79d56362348df0807a1b8d91051901470410464f6fd80f1",
                          "typeString": "literal_string \"Request expired\""
                        }
                      ],
                      "id": 620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12505:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12505:64:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "12505:64:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 630,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 615,
                              "src": "12600:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 631,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32,
                            "src": "12600:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FillInfo_$2018_storage",
                              "typeString": "struct BeamerUtils.FillInfo storage ref"
                            }
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "filler",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2015,
                          "src": "12600:27:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12639:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12631:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 633,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12631:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12631:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12600:41:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f73697420616c72656164792077697468647261776e",
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12655:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        },
                        "value": "Deposit already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        }
                      ],
                      "id": 629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12579:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12579:113:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "12579:113:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 642,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12710:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "12710:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 644,
                          "name": "claimStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "12723:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12710:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374616b6520616d6f756e74",
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12735:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ad3e5bc3e0d5a08a9885d6e44516a7467939c5df8fabf19beccfc02562b99dc",
                          "typeString": "literal_string \"Invalid stake amount\""
                        },
                        "value": "Invalid stake amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ad3e5bc3e0d5a08a9885d6e44516a7467939c5df8fabf19beccfc02562b99dc",
                          "typeString": "literal_string \"Invalid stake amount\""
                        }
                      ],
                      "id": 641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12702:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12702:56:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "12702:56:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 650,
                          "name": "fillId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 605,
                          "src": "12776:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12794:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12786:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 651,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "12786:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12786:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "12776:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c6c4964206d757374206e6f7420626520307830",
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12798:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_576d47f738afedfa6cd889e052ba048e590239bf0398ab4e36e95ec97dbb5828",
                          "typeString": "literal_string \"FillId must not be 0x0\""
                        },
                        "value": "FillId must not be 0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_576d47f738afedfa6cd889e052ba048e590239bf0398ab4e36e95ec97dbb5828",
                          "typeString": "literal_string \"FillId must not be 0x0\""
                        }
                      ],
                      "id": 649,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12768:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12768:55:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "12768:55:8"
                },
                {
                  "expression": {
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 659,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "12834:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activeClaims",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "12834:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint192",
                        "typeString": "uint192"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12858:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12834:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint192",
                      "typeString": "uint192"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "12834:25:8"
                },
                {
                  "expression": {
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 665,
                      "name": "claimCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "12869:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12885:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12869:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "12869:17:8"
                },
                {
                  "assignments": [
                    671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 671,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "12911:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 749,
                      "src": "12897:19:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 670,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 669,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62,
                          "src": "12897:5:8"
                        },
                        "referencedDeclaration": 62,
                        "src": "12897:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 675,
                  "initialValue": {
                    "baseExpression": {
                      "id": 672,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "12919:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$62_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 674,
                    "indexExpression": {
                      "id": 673,
                      "name": "claimCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "12926:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12919:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$62_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12897:42:8"
                },
                {
                  "expression": {
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 676,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "12949:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 678,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "12949:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 679,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "12967:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12949:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "12949:27:8"
                },
                {
                  "expression": {
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 682,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "12986:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 684,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "12986:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 685,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "13002:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "13002:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12986:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 688,
                  "nodeType": "ExpressionStatement",
                  "src": "12986:26:8"
                },
                {
                  "expression": {
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 689,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "13022:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 691,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimerStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47,
                      "src": "13022:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 692,
                      "name": "claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "13043:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13022:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "13022:31:8"
                },
                {
                  "expression": {
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 695,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "13063:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastChallenger",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "13063:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13094:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13086:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13086:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13086:10:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13063:33:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 703,
                  "nodeType": "ExpressionStatement",
                  "src": "13063:33:8"
                },
                {
                  "expression": {
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 704,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "13106:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "challengerStakeTotal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "13106:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13135:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13106:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "13106:30:8"
                },
                {
                  "expression": {
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 710,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "13146:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawnAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57,
                      "src": "13146:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13170:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13146:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 715,
                  "nodeType": "ExpressionStatement",
                  "src": "13146:25:8"
                },
                {
                  "expression": {
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 716,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "13181:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 718,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "termination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59,
                      "src": "13181:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 719,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "13201:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "13201:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 721,
                        "name": "claimPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "13219:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13201:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13181:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 724,
                  "nodeType": "ExpressionStatement",
                  "src": "13181:49:8"
                },
                {
                  "expression": {
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 725,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "13240:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fillId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61,
                      "src": "13240:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 728,
                      "name": "fillId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "13255:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "13240:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "13240:21:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 732,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "13300:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 733,
                        "name": "claimCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "13323:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 734,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 671,
                          "src": "13349:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45,
                        "src": "13349:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 736,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 671,
                          "src": "13376:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimerStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47,
                        "src": "13376:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 738,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 671,
                          "src": "13408:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastChallenger",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53,
                        "src": "13408:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 740,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 671,
                          "src": "13442:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 741,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengerStakeTotal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55,
                        "src": "13442:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 742,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 671,
                          "src": "13482:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 743,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "termination",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59,
                        "src": "13482:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 744,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "13513:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 731,
                      "name": "ClaimMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "13277:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13277:252:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 746,
                  "nodeType": "EmitStatement",
                  "src": "13272:257:8"
                },
                {
                  "expression": {
                    "id": 747,
                    "name": "claimCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 146,
                    "src": "13547:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 612,
                  "id": 748,
                  "nodeType": "Return",
                  "src": "13540:19:8"
                }
              ]
            },
            "documentation": {
              "id": 601,
              "nodeType": "StructuredDocumentation",
              "src": "11952:328:8",
              "text": "Claim that a request was filled by the caller.\n The request must still be valid at call time.\n The caller must provide the ``claimStake`` amount of source rollup's native\n token.\n @param requestId ID of the request.\n @param fillId The fill ID.\n @return The claim ID."
            },
            "functionSelector": "b1743c5b",
            "id": 750,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 608,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 603,
                    "src": "12398:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 609,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 607,
                  "name": "validRequestId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "12383:14:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "12383:25:8"
              }
            ],
            "name": "claimRequest",
            "nameLocation": "12294:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "12315:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "12307:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12307:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "12334:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "12326:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12326:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12306:35:8"
            },
            "returnParameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "12426:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12426:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12425:9:8"
            },
            "scope": 1516,
            "src": "12285:1281:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 957,
              "nodeType": "Block",
              "src": "14872:1958:8",
              "statements": [
                {
                  "assignments": [
                    761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 761,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "14896:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "14882:19:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 760,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 759,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62,
                          "src": "14882:5:8"
                        },
                        "referencedDeclaration": 62,
                        "src": "14882:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 765,
                  "initialValue": {
                    "baseExpression": {
                      "id": 762,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "14904:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$62_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 764,
                    "indexExpression": {
                      "id": 763,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "14911:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14904:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$62_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14882:37:8"
                },
                {
                  "assignments": [
                    768
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 768,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "14945:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "14929:23:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 767,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 766,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41,
                          "src": "14929:7:8"
                        },
                        "referencedDeclaration": 41,
                        "src": "14929:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 773,
                  "initialValue": {
                    "baseExpression": {
                      "id": 769,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "14955:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$41_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 772,
                    "indexExpression": {
                      "expression": {
                        "id": 770,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "14964:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "14964:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14955:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$41_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14929:51:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 775,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14998:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14998:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 777,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "15016:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 778,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "termination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59,
                          "src": "15016:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14998:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d2065787069726564",
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15035:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_798014e7325cea2d102adb3bd5e2a99ef885fb00dba060d9a4f562f3b9926d61",
                          "typeString": "literal_string \"Claim expired\""
                        },
                        "value": "Claim expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_798014e7325cea2d102adb3bd5e2a99ef885fb00dba060d9a4f562f3b9926d61",
                          "typeString": "literal_string \"Claim expired\""
                        }
                      ],
                      "id": 774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14990:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14990:61:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "14990:61:8"
                },
                {
                  "assignments": [
                    784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 784,
                      "mutability": "mutable",
                      "name": "nextActor",
                      "nameLocation": "15070:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "15062:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 783,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15062:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 785,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15062:17:8"
                },
                {
                  "assignments": [
                    787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 787,
                      "mutability": "mutable",
                      "name": "minValue",
                      "nameLocation": "15097:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "15089:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 786,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15089:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 788,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15089:16:8"
                },
                {
                  "assignments": [
                    790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "periodExtension",
                      "nameLocation": "15123:15:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "15115:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 789,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15115:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 792,
                  "initialValue": {
                    "id": 791,
                    "name": "challengePeriodExtension",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 129,
                    "src": "15141:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15115:50:8"
                },
                {
                  "assignments": [
                    794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 794,
                      "mutability": "mutable",
                      "name": "claimerStake",
                      "nameLocation": "15183:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "15175:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 793,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15175:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 797,
                  "initialValue": {
                    "expression": {
                      "id": 795,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "15198:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimerStake",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 47,
                    "src": "15198:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15175:41:8"
                },
                {
                  "assignments": [
                    799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 799,
                      "mutability": "mutable",
                      "name": "challengerStakeTotal",
                      "nameLocation": "15234:20:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "15226:28:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 798,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15226:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 802,
                  "initialValue": {
                    "expression": {
                      "id": 800,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "15257:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "challengerStakeTotal",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 55,
                    "src": "15257:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15226:57:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 803,
                      "name": "claimerStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 794,
                      "src": "15298:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 804,
                      "name": "challengerStakeTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 799,
                      "src": "15313:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15298:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 854,
                    "nodeType": "Block",
                    "src": "15666:123:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 841,
                            "name": "nextActor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 784,
                            "src": "15680:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 842,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 761,
                              "src": "15692:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 843,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45,
                            "src": "15692:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15680:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 845,
                        "nodeType": "ExpressionStatement",
                        "src": "15680:25:8"
                      },
                      {
                        "expression": {
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 846,
                            "name": "minValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "15719:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 847,
                                "name": "challengerStakeTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 799,
                                "src": "15730:20:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 848,
                                "name": "claimerStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 794,
                                "src": "15753:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15730:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 850,
                              "name": "claimStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "15768:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15730:48:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15719:59:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 853,
                        "nodeType": "ExpressionStatement",
                        "src": "15719:59:8"
                      }
                    ]
                  },
                  "id": 855,
                  "nodeType": "IfStatement",
                  "src": "15294:495:8",
                  "trueBody": {
                    "id": 840,
                    "nodeType": "Block",
                    "src": "15335:325:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 806,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 799,
                            "src": "15353:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15377:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15353:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 817,
                        "nodeType": "IfStatement",
                        "src": "15349:121:8",
                        "trueBody": {
                          "id": 816,
                          "nodeType": "Block",
                          "src": "15380:90:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 809,
                                  "name": "periodExtension",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 790,
                                  "src": "15398:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 810,
                                    "name": "finalityPeriods",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 155,
                                    "src": "15417:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 813,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 811,
                                      "name": "request",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 768,
                                      "src": "15433:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                                        "typeString": "struct RequestManager.Request storage pointer"
                                      }
                                    },
                                    "id": 812,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "targetChainId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "15433:21:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15417:38:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15398:57:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 815,
                              "nodeType": "ExpressionStatement",
                              "src": "15398:57:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 819,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 761,
                                  "src": "15491:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                    "typeString": "struct RequestManager.Claim storage pointer"
                                  }
                                },
                                "id": 820,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "claimer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45,
                                "src": "15491:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 821,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "15508:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "15508:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15491:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206368616c6c656e6765206f776e20636c61696d",
                              "id": 824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15520:28:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_64fb5de882b2bc56d2cbaf6fec54a1e8989ac954bff861bb575a51a0c2e2517c",
                                "typeString": "literal_string \"Cannot challenge own claim\""
                              },
                              "value": "Cannot challenge own claim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_64fb5de882b2bc56d2cbaf6fec54a1e8989ac954bff861bb575a51a0c2e2517c",
                                "typeString": "literal_string \"Cannot challenge own claim\""
                              }
                            ],
                            "id": 818,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15483:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15483:66:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 826,
                        "nodeType": "ExpressionStatement",
                        "src": "15483:66:8"
                      },
                      {
                        "expression": {
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 827,
                            "name": "nextActor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 784,
                            "src": "15563:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 828,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "15575:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "15575:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15563:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 831,
                        "nodeType": "ExpressionStatement",
                        "src": "15563:22:8"
                      },
                      {
                        "expression": {
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 832,
                            "name": "minValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "15599:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 833,
                                "name": "claimerStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 794,
                                "src": "15610:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 834,
                                "name": "challengerStakeTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 799,
                                "src": "15625:20:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15610:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15648:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "15610:39:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15599:50:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 839,
                        "nodeType": "ExpressionStatement",
                        "src": "15599:50:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 857,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15807:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15807:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 859,
                          "name": "nextActor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "15821:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15807:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656c696769626c6520746f206f7574626964",
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15832:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53e2604a0114b11c1d789e6b14267b95918e9ede3be05afe9cd186cfa90bc222",
                          "typeString": "literal_string \"Not eligible to outbid\""
                        },
                        "value": "Not eligible to outbid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53e2604a0114b11c1d789e6b14267b95918e9ede3be05afe9cd186cfa90bc222",
                          "typeString": "literal_string \"Not eligible to outbid\""
                        }
                      ],
                      "id": 856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15799:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15799:58:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "15799:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 865,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15875:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "15875:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 867,
                          "name": "minValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 787,
                          "src": "15888:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15875:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207374616b652070726f7669646564",
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15898:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                          "typeString": "literal_string \"Not enough stake provided\""
                        },
                        "value": "Not enough stake provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                          "typeString": "literal_string \"Not enough stake provided\""
                        }
                      ],
                      "id": 864,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15867:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15867:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "15867:59:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 872,
                      "name": "nextActor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "15941:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 873,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "15954:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 874,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "15954:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15941:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 908,
                    "nodeType": "Block",
                    "src": "16031:173:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 884,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 761,
                              "src": "16045:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 886,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastChallenger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53,
                            "src": "16045:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 887,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16068:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16068:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16045:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 890,
                        "nodeType": "ExpressionStatement",
                        "src": "16045:33:8"
                      },
                      {
                        "expression": {
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 891,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 761,
                                "src": "16092:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                  "typeString": "struct RequestManager.Claim storage pointer"
                                }
                              },
                              "id": 895,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challengersStakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51,
                              "src": "16092:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 896,
                            "indexExpression": {
                              "expression": {
                                "id": 893,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16116:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16116:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16092:35:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 897,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16131:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "16131:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16092:48:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 900,
                        "nodeType": "ExpressionStatement",
                        "src": "16092:48:8"
                      },
                      {
                        "expression": {
                          "id": 906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 901,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 761,
                              "src": "16154:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 903,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "challengerStakeTotal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "16154:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 904,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16184:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "16184:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16154:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 907,
                        "nodeType": "ExpressionStatement",
                        "src": "16154:39:8"
                      }
                    ]
                  },
                  "id": 909,
                  "nodeType": "IfStatement",
                  "src": "15937:267:8",
                  "trueBody": {
                    "id": 883,
                    "nodeType": "Block",
                    "src": "15969:56:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 876,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 761,
                              "src": "15983:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 878,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "claimerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "15983:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 879,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16005:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "16005:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15983:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 882,
                        "nodeType": "ExpressionStatement",
                        "src": "15983:31:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 910,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "16214:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 912,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "termination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59,
                      "src": "16214:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 915,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "16256:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 916,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "termination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59,
                          "src": "16256:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 917,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "16287:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "16287:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 919,
                            "name": "periodExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "16305:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16287:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 913,
                          "name": "Math",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2011,
                          "src": "16234:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Math_$2011_$",
                            "typeString": "type(library Math)"
                          }
                        },
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1944,
                        "src": "16234:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16234:96:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16214:116:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 923,
                  "nodeType": "ExpressionStatement",
                  "src": "16214:116:8"
                },
                {
                  "assignments": [
                    925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 925,
                      "mutability": "mutable",
                      "name": "minimumTermination",
                      "nameLocation": "16348:18:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "16340:26:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 924,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16340:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 930,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 926,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "16369:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "16369:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 928,
                      "name": "challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "16387:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16369:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16340:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 932,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "16442:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 933,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "termination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59,
                          "src": "16442:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 934,
                          "name": "minimumTermination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "16463:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16442:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d207465726d696e6174696f6e20646964206e6f7420696e63726561736520656e6f756768",
                        "id": 936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16495:43:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_52f68f05681233e159840b61cff71be03c3572a6f365b1b868b9f20d0b66ef2d",
                          "typeString": "literal_string \"Claim termination did not increase enough\""
                        },
                        "value": "Claim termination did not increase enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_52f68f05681233e159840b61cff71be03c3572a6f365b1b868b9f20d0b66ef2d",
                          "typeString": "literal_string \"Claim termination did not increase enough\""
                        }
                      ],
                      "id": 931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16421:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16421:127:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "16421:127:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 940,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "16587:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "16587:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 942,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "16616:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 943,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "16637:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 944,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45,
                        "src": "16637:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 945,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "16664:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 946,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimerStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47,
                        "src": "16664:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 947,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "16696:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 948,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastChallenger",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53,
                        "src": "16696:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 949,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "16730:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 950,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengerStakeTotal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55,
                        "src": "16730:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 951,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "16770:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 952,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "termination",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59,
                        "src": "16770:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 953,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "16801:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 954,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fillId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61,
                        "src": "16801:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 939,
                      "name": "ClaimMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "16564:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16564:259:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 956,
                  "nodeType": "EmitStatement",
                  "src": "16559:264:8"
                }
              ]
            },
            "documentation": {
              "id": 751,
              "nodeType": "StructuredDocumentation",
              "src": "13572:1187:8",
              "text": "Challenge an existing claim.\n The claim must still be valid at call time.\n This function implements one round of the challenge game.\n The original claimer is allowed to call this function only\n after someone else made a challenge, i.e. every second round.\n However, once the original claimer counter-challenges, anyone\n can join the game and make another challenge.\n The caller must provide enough native tokens as their stake.\n For the original claimer, the minimum stake is\n ``challengerStakeTotal - claimerStake + claimStake``.\n For challengers, the minimum stake is\n ``claimerStake - challengerStakeTotal + 1``.\n An example (time flows downwards, claimStake = 10)::\n   claimRequest() by Max [stakes 10]\n   challengeClaim() by Alice [stakes 11]\n   challengeClaim() by Max [stakes 11]\n   challengeClaim() by Bob [stakes 16]\n In this example, if Max didn't want to lose the challenge game to\n Alice and Bob, he would have to challenge with a stake of at least 16.\n @param claimId The claim ID."
            },
            "functionSelector": "92c824d8",
            "id": 958,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 756,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 753,
                    "src": "14859:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 757,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 755,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 277,
                  "src": "14846:12:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "14846:21:8"
              }
            ],
            "name": "challengeClaim",
            "nameLocation": "14773:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "14796:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "14788:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14788:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14787:17:8"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14872:0:8"
            },
            "scope": 1516,
            "src": "14764:2066:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1081,
              "nodeType": "Block",
              "src": "17499:1148:8",
              "statements": [
                {
                  "assignments": [
                    971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 971,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "17523:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1081,
                      "src": "17509:19:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 970,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 969,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62,
                          "src": "17509:5:8"
                        },
                        "referencedDeclaration": 62,
                        "src": "17509:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 975,
                  "initialValue": {
                    "baseExpression": {
                      "id": 972,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "17531:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$62_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 974,
                    "indexExpression": {
                      "id": 973,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "17538:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17531:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$62_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17509:37:8"
                },
                {
                  "assignments": [
                    978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 978,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "17572:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1081,
                      "src": "17556:23:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 977,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 976,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41,
                          "src": "17556:7:8"
                        },
                        "referencedDeclaration": 41,
                        "src": "17556:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 983,
                  "initialValue": {
                    "baseExpression": {
                      "id": 979,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "17582:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$41_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 982,
                    "indexExpression": {
                      "expression": {
                        "id": 980,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "17591:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 981,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "17591:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17582:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$41_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17556:51:8"
                },
                {
                  "assignments": [
                    985,
                    987
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 985,
                      "mutability": "mutable",
                      "name": "claimReceiver",
                      "nameLocation": "17627:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1081,
                      "src": "17619:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 984,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17619:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 987,
                      "mutability": "mutable",
                      "name": "ethToTransfer",
                      "nameLocation": "17650:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1081,
                      "src": "17642:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 986,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17642:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 991,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 989,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "17680:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 988,
                      "name": "resolveClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1327,
                      "src": "17667:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (address,uint256)"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17667:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17618:70:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 992,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "17703:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 993,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengersStakes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "17703:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 995,
                      "indexExpression": {
                        "id": 994,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "17727:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17703:38:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17744:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17703:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1007,
                  "nodeType": "IfStatement",
                  "src": "17699:152:8",
                  "trueBody": {
                    "id": 1006,
                    "nodeType": "Block",
                    "src": "17747:104:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 998,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 971,
                                "src": "17798:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                  "typeString": "struct RequestManager.Claim storage pointer"
                                }
                              },
                              "id": 1001,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challengersStakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51,
                              "src": "17798:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1002,
                            "indexExpression": {
                              "id": 1000,
                              "name": "claimReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 985,
                              "src": "17822:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17798:38:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17839:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17798:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1005,
                        "nodeType": "ExpressionStatement",
                        "src": "17798:42:8"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1008,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "17936:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawnAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57,
                      "src": "17936:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17961:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17936:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1019,
                  "nodeType": "IfStatement",
                  "src": "17932:82:8",
                  "trueBody": {
                    "id": 1018,
                    "nodeType": "Block",
                    "src": "17964:50:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1012,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "17978:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "activeClaims",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34,
                            "src": "17978:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint192",
                              "typeString": "uint192"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18002:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "17978:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          }
                        },
                        "id": 1017,
                        "nodeType": "ExpressionStatement",
                        "src": "17978:25:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1020,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "18023:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawnAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57,
                      "src": "18023:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1023,
                      "name": "ethToTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 987,
                      "src": "18048:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18023:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1025,
                  "nodeType": "ExpressionStatement",
                  "src": "18023:38:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1027,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "18092:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawnAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57,
                          "src": "18092:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1029,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "18133:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1030,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "18133:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 1031,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "18154:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1032,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "challengerStakeTotal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "18154:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18133:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18092:88:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420746f20776974686472617720746f6f206c61726765",
                        "id": 1035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18194:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fbc1cd561c6fdb8c44ffb8537b819c0b098bbbbb6ac5255fbe98d734e5cf1dc0",
                          "typeString": "literal_string \"Amount to withdraw too large\""
                        },
                        "value": "Amount to withdraw too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fbc1cd561c6fdb8c44ffb8537b819c0b098bbbbb6ac5255fbe98d734e5cf1dc0",
                          "typeString": "literal_string \"Amount to withdraw too large\""
                        }
                      ],
                      "id": 1026,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18071:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18071:163:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "18071:163:8"
                },
                {
                  "assignments": [
                    1039,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1039,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "18251:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1081,
                      "src": "18246:9:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1038,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "18246:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1046,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18302:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1040,
                          "name": "claimReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "18261:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "18261:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1042,
                          "name": "ethToTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "18287:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "18261:40:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18261:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18245:60:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1048,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "18323:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18329:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1047,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18315:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18315:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "18315:37:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1053,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "18388:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1054,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "18397:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "18397:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1056,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "18414:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1052,
                      "name": "ClaimStakeWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "18368:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18368:60:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1058,
                  "nodeType": "EmitStatement",
                  "src": "18363:65:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 1059,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "18456:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32,
                          "src": "18456:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FillInfo_$2018_storage",
                            "typeString": "struct BeamerUtils.FillInfo storage ref"
                          }
                        },
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "filler",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2015,
                        "src": "18456:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18495:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18487:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1062,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18487:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18487:10:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "18456:41:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1067,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "18513:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 1068,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "18530:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45,
                        "src": "18530:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "18513:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "18456:87:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1078,
                  "nodeType": "IfStatement",
                  "src": "18439:171:8",
                  "trueBody": {
                    "id": 1077,
                    "nodeType": "Block",
                    "src": "18554:56:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1073,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "18584:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            {
                              "id": 1074,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "18593:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            ],
                            "id": 1072,
                            "name": "withdrawDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1386,
                            "src": "18568:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Request_$41_storage_ptr_$_t_struct$_Claim_$62_storage_ptr_$returns$__$",
                              "typeString": "function (struct RequestManager.Request storage pointer,struct RequestManager.Claim storage pointer)"
                            }
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18568:31:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1076,
                        "nodeType": "ExpressionStatement",
                        "src": "18568:31:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1079,
                    "name": "claimReceiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 985,
                    "src": "18627:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 968,
                  "id": 1080,
                  "nodeType": "Return",
                  "src": "18620:20:8"
                }
              ]
            },
            "documentation": {
              "id": 959,
              "nodeType": "StructuredDocumentation",
              "src": "16836:546:8",
              "text": "Withdraw the deposit that the request submitter left with the contract,\n as well as the staked native tokens associated with the claim.\n In case the caller of this function is a challenger that won the game,\n they will only get their staked native tokens plus the reward in the form\n of full (sole challenger) or partial (multiple challengers) amount\n of native tokens staked by the dishonest claimer.\n @param claimId The claim ID.\n @return The address of the deposit receiver."
            },
            "functionSelector": "2e1a7d4d",
            "id": 1082,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 964,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 961,
                    "src": "17460:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 965,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 963,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 277,
                  "src": "17447:12:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "17447:21:8"
              }
            ],
            "name": "withdraw",
            "nameLocation": "17396:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "17413:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "17405:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17405:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17404:17:8"
            },
            "returnParameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 967,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "17486:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17486:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17485:9:8"
            },
            "scope": 1516,
            "src": "17387:1260:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1326,
              "nodeType": "Block",
              "src": "18760:3594:8",
              "statements": [
                {
                  "assignments": [
                    1093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1093,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "18784:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1326,
                      "src": "18770:19:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1092,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1091,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62,
                          "src": "18770:5:8"
                        },
                        "referencedDeclaration": 62,
                        "src": "18770:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1097,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1094,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "18792:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$62_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1096,
                    "indexExpression": {
                      "id": 1095,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1084,
                      "src": "18799:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18792:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$62_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18770:37:8"
                },
                {
                  "assignments": [
                    1100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1100,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "18833:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1326,
                      "src": "18817:23:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1099,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1098,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41,
                          "src": "18817:7:8"
                        },
                        "referencedDeclaration": 41,
                        "src": "18817:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1105,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1101,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "18843:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$41_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1104,
                    "indexExpression": {
                      "expression": {
                        "id": 1102,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "18852:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1103,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "18852:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18843:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$41_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18817:51:8"
                },
                {
                  "assignments": [
                    1107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1107,
                      "mutability": "mutable",
                      "name": "claimerStake",
                      "nameLocation": "18886:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1326,
                      "src": "18878:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1106,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18878:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1110,
                  "initialValue": {
                    "expression": {
                      "id": 1108,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "18901:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimerStake",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 47,
                    "src": "18901:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18878:41:8"
                },
                {
                  "assignments": [
                    1112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1112,
                      "mutability": "mutable",
                      "name": "challengerStakeTotal",
                      "nameLocation": "18937:20:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1326,
                      "src": "18929:28:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1111,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18929:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1115,
                  "initialValue": {
                    "expression": {
                      "id": 1113,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "18960:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "challengerStakeTotal",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 55,
                    "src": "18960:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18929:57:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1117,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1093,
                            "src": "19017:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1118,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawnAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57,
                          "src": "19017:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1119,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1107,
                            "src": "19041:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1120,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "19056:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19041:35:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19017:59:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d20616c72656164792077697468647261776e",
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19090:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fed46cfba65dedd80d8275fc8dce90ac19cc49eb8cac5fe8e04a827801d5c7ac",
                          "typeString": "literal_string \"Claim already withdrawn\""
                        },
                        "value": "Claim already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fed46cfba65dedd80d8275fc8dce90ac19cc49eb8cac5fe8e04a827801d5c7ac",
                          "typeString": "literal_string \"Claim already withdrawn\""
                        }
                      ],
                      "id": 1116,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18996:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18996:129:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1125,
                  "nodeType": "ExpressionStatement",
                  "src": "18996:129:8"
                },
                {
                  "assignments": [
                    1127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1127,
                      "mutability": "mutable",
                      "name": "requestHash",
                      "nameLocation": "19144:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1326,
                      "src": "19136:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1126,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19136:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1143,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1130,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1093,
                          "src": "19201:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1131,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "19201:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1132,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "19230:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainid",
                        "nodeType": "MemberAccess",
                        "src": "19230:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1134,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1100,
                          "src": "19257:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "targetChainId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23,
                        "src": "19257:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1136,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1100,
                          "src": "19292:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "targetTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25,
                        "src": "19292:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1138,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1100,
                          "src": "19332:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "targetAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27,
                        "src": "19332:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1140,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1100,
                          "src": "19367:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29,
                        "src": "19367:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1128,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2099,
                        "src": "19158:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$2099_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 1129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createRequestHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2048,
                      "src": "19158:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256,address,address,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19158:233:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19136:255:8"
                },
                {
                  "assignments": [
                    1145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1145,
                      "mutability": "mutable",
                      "name": "fillHash",
                      "nameLocation": "19410:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1326,
                      "src": "19402:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1144,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19402:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1152,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1148,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1127,
                        "src": "19461:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1149,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1093,
                          "src": "19486:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fillId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61,
                        "src": "19486:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1146,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2099,
                        "src": "19421:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$2099_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 1147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createFillHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2066,
                      "src": "19421:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19421:87:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19402:106:8"
                },
                {
                  "assignments": [
                    1154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1154,
                      "mutability": "mutable",
                      "name": "claimValid",
                      "nameLocation": "19524:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1326,
                      "src": "19519:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1153,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19519:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1156,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19537:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19519:23:8"
                },
                {
                  "assignments": [
                    1161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1161,
                      "mutability": "mutable",
                      "name": "withdrawInfo",
                      "nameLocation": "19580:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1326,
                      "src": "19552:40:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillInfo_$2018_memory_ptr",
                        "typeString": "struct BeamerUtils.FillInfo"
                      },
                      "typeName": {
                        "id": 1160,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1159,
                          "name": "BeamerUtils.FillInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2018,
                          "src": "19552:20:8"
                        },
                        "referencedDeclaration": 2018,
                        "src": "19552:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillInfo_$2018_storage_ptr",
                          "typeString": "struct BeamerUtils.FillInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1164,
                  "initialValue": {
                    "expression": {
                      "id": 1162,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "19595:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                        "typeString": "struct RequestManager.Request storage pointer"
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "withdrawInfo",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 32,
                    "src": "19595:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillInfo_$2018_storage",
                      "typeString": "struct BeamerUtils.FillInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19552:63:8"
                },
                {
                  "assignments": [
                    1166,
                    1168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1166,
                      "mutability": "mutable",
                      "name": "filler",
                      "nameLocation": "20054:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1326,
                      "src": "20046:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1165,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "20046:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1168,
                      "mutability": "mutable",
                      "name": "fillId",
                      "nameLocation": "20070:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1326,
                      "src": "20062:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1167,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "20062:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1173,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1171,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1127,
                        "src": "20120:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1169,
                        "name": "resolutionRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "20080:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ResolutionRegistry_$2249",
                          "typeString": "contract ResolutionRegistry"
                        }
                      },
                      "id": 1170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fillers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2126,
                      "src": "20080:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$_t_bytes32_$",
                        "typeString": "function (bytes32) view external returns (address,bytes32)"
                      }
                    },
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20080:61:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_bytes32_$",
                      "typeString": "tuple(address,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20045:96:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1174,
                      "name": "filler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1166,
                      "src": "20156:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20174:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20166:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20166:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20166:10:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20156:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1191,
                  "nodeType": "IfStatement",
                  "src": "20152:112:8",
                  "trueBody": {
                    "id": 1190,
                    "nodeType": "Block",
                    "src": "20178:86:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1180,
                                "name": "filler",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1166,
                                "src": "20193:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1181,
                                "name": "fillId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1168,
                                "src": "20201:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "id": 1182,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "20192:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_bytes32_$",
                              "typeString": "tuple(address,bytes32)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 1183,
                                  "name": "withdrawInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1161,
                                  "src": "20212:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_FillInfo_$2018_memory_ptr",
                                    "typeString": "struct BeamerUtils.FillInfo memory"
                                  }
                                },
                                "id": 1184,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "filler",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2015,
                                "src": "20212:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1185,
                                  "name": "withdrawInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1161,
                                  "src": "20233:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_FillInfo_$2018_memory_ptr",
                                    "typeString": "struct BeamerUtils.FillInfo memory"
                                  }
                                },
                                "id": 1186,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fillId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2017,
                                "src": "20233:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "id": 1187,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "20211:42:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_bytes32_$",
                              "typeString": "tuple(address,bytes32)"
                            }
                          },
                          "src": "20192:61:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1189,
                        "nodeType": "ExpressionStatement",
                        "src": "20192:61:8"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 1194,
                        "name": "fillHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "20315:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1192,
                        "name": "resolutionRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "20278:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ResolutionRegistry_$2249",
                          "typeString": "contract ResolutionRegistry"
                        }
                      },
                      "id": 1193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "invalidFillHashes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2131,
                      "src": "20278:36:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32) view external returns (bool)"
                      }
                    },
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20278:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1201,
                        "name": "filler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1166,
                        "src": "20418:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20436:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20428:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1202,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20428:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20428:10:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "20418:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1235,
                      "nodeType": "Block",
                      "src": "20578:246:8",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1221,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "20656:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1222,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "20656:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1223,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1093,
                                    "src": "20675:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                      "typeString": "struct RequestManager.Claim storage pointer"
                                    }
                                  },
                                  "id": 1224,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "termination",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 59,
                                  "src": "20675:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20656:36:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "436c61696d20706572696f64206e6f742066696e6973686564",
                                "id": 1226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20710:27:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b8448f60bea41c2365f4846fbc9740459fd6b3e474680edd33ee842ead499b03",
                                  "typeString": "literal_string \"Claim period not finished\""
                                },
                                "value": "Claim period not finished"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b8448f60bea41c2365f4846fbc9740459fd6b3e474680edd33ee842ead499b03",
                                  "typeString": "literal_string \"Claim period not finished\""
                                }
                              ],
                              "id": 1220,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "20631:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20631:120:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1228,
                          "nodeType": "ExpressionStatement",
                          "src": "20631:120:8"
                        },
                        {
                          "expression": {
                            "id": 1233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1229,
                              "name": "claimValid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1154,
                              "src": "20765:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1230,
                                "name": "claimerStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1107,
                                "src": "20778:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 1231,
                                "name": "challengerStakeTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1112,
                                "src": "20793:20:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "20778:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "20765:48:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1234,
                          "nodeType": "ExpressionStatement",
                          "src": "20765:48:8"
                        }
                      ]
                    },
                    "id": 1236,
                    "nodeType": "IfStatement",
                    "src": "20414:410:8",
                    "trueBody": {
                      "id": 1219,
                      "nodeType": "Block",
                      "src": "20440:132:8",
                      "statements": [
                        {
                          "expression": {
                            "id": 1217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1207,
                              "name": "claimValid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1154,
                              "src": "20499:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1208,
                                  "name": "filler",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1166,
                                  "src": "20512:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1209,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1093,
                                    "src": "20522:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                      "typeString": "struct RequestManager.Claim storage pointer"
                                    }
                                  },
                                  "id": 1210,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "claimer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 45,
                                  "src": "20522:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "20512:23:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 1215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1212,
                                  "name": "fillId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1168,
                                  "src": "20539:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1213,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1093,
                                    "src": "20549:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                      "typeString": "struct RequestManager.Claim storage pointer"
                                    }
                                  },
                                  "id": 1214,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "fillId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 61,
                                  "src": "20549:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "20539:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "20512:49:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "20499:62:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1218,
                          "nodeType": "ExpressionStatement",
                          "src": "20499:62:8"
                        }
                      ]
                    }
                  },
                  "id": 1237,
                  "nodeType": "IfStatement",
                  "src": "20274:550:8",
                  "trueBody": {
                    "id": 1200,
                    "nodeType": "Block",
                    "src": "20326:82:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1196,
                            "name": "claimValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "20379:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20392:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "20379:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1199,
                        "nodeType": "ExpressionStatement",
                        "src": "20379:18:8"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1239,
                      "mutability": "mutable",
                      "name": "ethToTransfer",
                      "nameLocation": "20896:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1326,
                      "src": "20888:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1238,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20888:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1240,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20888:21:8"
                },
                {
                  "assignments": [
                    1242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1242,
                      "mutability": "mutable",
                      "name": "claimReceiver",
                      "nameLocation": "20927:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1326,
                      "src": "20919:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1241,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "20919:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1243,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20919:21:8"
                },
                {
                  "condition": {
                    "id": 1244,
                    "name": "claimValid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1154,
                    "src": "20955:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1257,
                        "name": "challengerStakeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "21159:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21182:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "21159:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1292,
                      "nodeType": "Block",
                      "src": "21459:269:8",
                      "statements": [
                        {
                          "expression": {
                            "id": 1285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1283,
                              "name": "ethToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1239,
                              "src": "21652:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1284,
                              "name": "claimerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "21668:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21652:28:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1286,
                          "nodeType": "ExpressionStatement",
                          "src": "21652:28:8"
                        },
                        {
                          "expression": {
                            "id": 1290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1287,
                              "name": "claimReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1242,
                              "src": "21694:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1288,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1549,
                                "src": "21710:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21710:7:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "21694:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1291,
                          "nodeType": "ExpressionStatement",
                          "src": "21694:23:8"
                        }
                      ]
                    },
                    "id": 1293,
                    "nodeType": "IfStatement",
                    "src": "21155:573:8",
                    "trueBody": {
                      "id": 1282,
                      "nodeType": "Block",
                      "src": "21185:268:8",
                      "statements": [
                        {
                          "expression": {
                            "id": 1268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1260,
                              "name": "ethToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1239,
                              "src": "21268:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 1261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21284:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 1262,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1093,
                                    "src": "21288:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                      "typeString": "struct RequestManager.Claim storage pointer"
                                    }
                                  },
                                  "id": 1263,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "challengersStakes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51,
                                  "src": "21288:23:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1266,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1264,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "21312:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "21312:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21288:35:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21284:39:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21268:55:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1269,
                          "nodeType": "ExpressionStatement",
                          "src": "21268:55:8"
                        },
                        {
                          "expression": {
                            "id": 1273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1270,
                              "name": "claimReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1242,
                              "src": "21337:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 1271,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "21353:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "21353:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "21337:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1274,
                          "nodeType": "ExpressionStatement",
                          "src": "21337:26:8"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1276,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1239,
                                  "src": "21386:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1277,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21402:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "21386:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4368616c6c656e67657220686173206e6f7468696e6720746f207769746864726177",
                                "id": 1279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21405:36:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_53dcae0c26834ddf9df4522d4ebdb30b7c2bd99b5ce87dd1bca47f3b3a7ab017",
                                  "typeString": "literal_string \"Challenger has nothing to withdraw\""
                                },
                                "value": "Challenger has nothing to withdraw"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_53dcae0c26834ddf9df4522d4ebdb30b7c2bd99b5ce87dd1bca47f3b3a7ab017",
                                  "typeString": "literal_string \"Challenger has nothing to withdraw\""
                                }
                              ],
                              "id": 1275,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "21378:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21378:64:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1281,
                          "nodeType": "ExpressionStatement",
                          "src": "21378:64:8"
                        }
                      ]
                    }
                  },
                  "id": 1294,
                  "nodeType": "IfStatement",
                  "src": "20951:777:8",
                  "trueBody": {
                    "id": 1256,
                    "nodeType": "Block",
                    "src": "20967:182:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1245,
                            "name": "ethToTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1239,
                            "src": "21044:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1246,
                              "name": "claimerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "21060:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1247,
                              "name": "challengerStakeTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "21075:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21060:35:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21044:51:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1250,
                        "nodeType": "ExpressionStatement",
                        "src": "21044:51:8"
                      },
                      {
                        "expression": {
                          "id": 1254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1251,
                            "name": "claimReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1242,
                            "src": "21109:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1252,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1093,
                              "src": "21125:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1253,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45,
                            "src": "21125:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "21109:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1255,
                        "nodeType": "ExpressionStatement",
                        "src": "21109:29:8"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1295,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "22019:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "22019:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1297,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "22033:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastChallenger",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "22033:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "22019:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1321,
                  "nodeType": "IfStatement",
                  "src": "22015:285:8",
                  "trueBody": {
                    "id": 1320,
                    "nodeType": "Block",
                    "src": "22055:245:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1300,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1107,
                            "src": "22073:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1301,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "22088:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22073:35:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1318,
                          "nodeType": "Block",
                          "src": "22203:87:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 1316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1311,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1239,
                                  "src": "22221:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1314,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1312,
                                        "name": "challengerStakeTotal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1112,
                                        "src": "22239:20:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1313,
                                        "name": "claimerStake",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1107,
                                        "src": "22262:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "22239:35:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1315,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "22238:37:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22221:54:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1317,
                              "nodeType": "ExpressionStatement",
                              "src": "22221:54:8"
                            }
                          ]
                        },
                        "id": 1319,
                        "nodeType": "IfStatement",
                        "src": "22069:221:8",
                        "trueBody": {
                          "id": 1310,
                          "nodeType": "Block",
                          "src": "22110:87:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 1308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1303,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1239,
                                  "src": "22128:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1306,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1304,
                                        "name": "claimerStake",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1107,
                                        "src": "22146:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1305,
                                        "name": "challengerStakeTotal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1112,
                                        "src": "22161:20:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "22146:35:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1307,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "22145:37:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22128:54:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1309,
                              "nodeType": "ExpressionStatement",
                              "src": "22128:54:8"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1322,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "22318:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1323,
                        "name": "ethToTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "22333:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1324,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "22317:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "functionReturnParameters": 1090,
                  "id": 1325,
                  "nodeType": "Return",
                  "src": "22310:37:8"
                }
              ]
            },
            "id": 1327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resolveClaim",
            "nameLocation": "18662:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "18683:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1327,
                  "src": "18675:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18675:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18674:17:8"
            },
            "returnParameters": {
              "id": 1090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1327,
                  "src": "18738:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18738:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1089,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1327,
                  "src": "18747:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18747:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18737:18:8"
            },
            "scope": 1516,
            "src": "18653:3701:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1385,
              "nodeType": "Block",
              "src": "22451:407:8",
              "statements": [
                {
                  "assignments": [
                    1337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1337,
                      "mutability": "mutable",
                      "name": "claimer",
                      "nameLocation": "22469:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1385,
                      "src": "22461:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1336,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "22461:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1340,
                  "initialValue": {
                    "expression": {
                      "id": 1338,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1333,
                      "src": "22479:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 45,
                    "src": "22479:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22461:31:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1342,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1333,
                          "src": "22524:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1343,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "22524:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1344,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1337,
                        "src": "22541:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1341,
                      "name": "DepositWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "22507:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22507:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1346,
                  "nodeType": "EmitStatement",
                  "src": "22502:47:8"
                },
                {
                  "expression": {
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1347,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1330,
                        "src": "22560:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1349,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "22560:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillInfo_$2018_storage",
                        "typeString": "struct BeamerUtils.FillInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1352,
                          "name": "claimer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1337,
                          "src": "22604:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1353,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1333,
                            "src": "22613:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1354,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fillId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61,
                          "src": "22613:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 1350,
                          "name": "BeamerUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2099,
                          "src": "22583:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$2099_$",
                            "typeString": "type(library BeamerUtils)"
                          }
                        },
                        "id": 1351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FillInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2018,
                        "src": "22583:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FillInfo_$2018_storage_ptr_$",
                          "typeString": "type(struct BeamerUtils.FillInfo storage pointer)"
                        }
                      },
                      "id": 1355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22583:43:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillInfo_$2018_memory_ptr",
                        "typeString": "struct BeamerUtils.FillInfo memory"
                      }
                    },
                    "src": "22560:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillInfo_$2018_storage",
                      "typeString": "struct BeamerUtils.FillInfo storage ref"
                    }
                  },
                  "id": 1357,
                  "nodeType": "ExpressionStatement",
                  "src": "22560:66:8"
                },
                {
                  "expression": {
                    "id": 1364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1358,
                        "name": "collectedProtocolFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "22637:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1361,
                      "indexExpression": {
                        "expression": {
                          "id": 1359,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1330,
                          "src": "22659:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1360,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "22659:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22637:49:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1362,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1330,
                        "src": "22690:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1363,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "protocolFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "22690:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22637:85:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1365,
                  "nodeType": "ExpressionStatement",
                  "src": "22637:85:8"
                },
                {
                  "assignments": [
                    1368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1368,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "22740:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1385,
                      "src": "22733:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1699",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1367,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1366,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1699,
                          "src": "22733:6:8"
                        },
                        "referencedDeclaration": 1699,
                        "src": "22733:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1699",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1373,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1370,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1330,
                          "src": "22755:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1371,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "22755:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1369,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1699,
                      "src": "22748:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1699_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22748:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1699",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22733:49:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1377,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1337,
                        "src": "22811:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1378,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1330,
                            "src": "22820:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1379,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "22820:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 1380,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1330,
                            "src": "22837:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1381,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lpFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38,
                          "src": "22837:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "22820:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1374,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1368,
                        "src": "22792:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1699",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1730,
                      "src": "22792:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1699_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1699_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22792:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1384,
                  "nodeType": "ExpressionStatement",
                  "src": "22792:59:8"
                }
              ]
            },
            "id": 1386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawDeposit",
            "nameLocation": "22369:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1330,
                  "mutability": "mutable",
                  "name": "request",
                  "nameLocation": "22401:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1386,
                  "src": "22385:23:8",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                    "typeString": "struct RequestManager.Request"
                  },
                  "typeName": {
                    "id": 1329,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1328,
                      "name": "Request",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41,
                      "src": "22385:7:8"
                    },
                    "referencedDeclaration": 41,
                    "src": "22385:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$41_storage_ptr",
                      "typeString": "struct RequestManager.Request"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1333,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "22424:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1386,
                  "src": "22410:19:8",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                    "typeString": "struct RequestManager.Claim"
                  },
                  "typeName": {
                    "id": 1332,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1331,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62,
                      "src": "22410:5:8"
                    },
                    "referencedDeclaration": 62,
                    "src": "22410:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$62_storage_ptr",
                      "typeString": "struct RequestManager.Claim"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22384:46:8"
            },
            "returnParameters": {
              "id": 1335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22451:0:8"
            },
            "scope": 1516,
            "src": "22360:498:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1429,
              "nodeType": "Block",
              "src": "23311:264:8",
              "statements": [
                {
                  "assignments": [
                    1397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1397,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "23329:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1429,
                      "src": "23321:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1396,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23321:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1401,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1398,
                      "name": "collectedProtocolFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "23338:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1400,
                    "indexExpression": {
                      "id": 1399,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1389,
                      "src": "23360:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23338:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23321:52:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1403,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1397,
                          "src": "23391:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23400:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "23391:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f746f636f6c20666565206973207a65726f",
                        "id": 1406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23403:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce8ad1c74ab92ff10c0820b04fa1725b871af2e2542ec5c6a08e76dbfc13ba06",
                          "typeString": "literal_string \"Protocol fee is zero\""
                        },
                        "value": "Protocol fee is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce8ad1c74ab92ff10c0820b04fa1725b871af2e2542ec5c6a08e76dbfc13ba06",
                          "typeString": "literal_string \"Protocol fee is zero\""
                        }
                      ],
                      "id": 1402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23383:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23383:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1408,
                  "nodeType": "ExpressionStatement",
                  "src": "23383:43:8"
                },
                {
                  "expression": {
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1409,
                        "name": "collectedProtocolFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "23436:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1411,
                      "indexExpression": {
                        "id": 1410,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1389,
                        "src": "23458:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23436:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23474:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23436:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1414,
                  "nodeType": "ExpressionStatement",
                  "src": "23436:39:8"
                },
                {
                  "assignments": [
                    1417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1417,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "23493:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1429,
                      "src": "23486:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1699",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1416,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1415,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1699,
                          "src": "23486:6:8"
                        },
                        "referencedDeclaration": 1699,
                        "src": "23486:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1699",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1421,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1419,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1389,
                        "src": "23508:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1418,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1699,
                      "src": "23501:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1699_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23501:20:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1699",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23486:35:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1425,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1391,
                        "src": "23550:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1426,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1397,
                        "src": "23561:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1422,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1417,
                        "src": "23531:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1699",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1730,
                      "src": "23531:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1699_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1699_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23531:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1428,
                  "nodeType": "ExpressionStatement",
                  "src": "23531:37:8"
                }
              ]
            },
            "documentation": {
              "id": 1387,
              "nodeType": "StructuredDocumentation",
              "src": "22864:332:8",
              "text": "Withdraw protocol fees collected by the contract.\n Protocol fees are paid in token transferred.\n .. note:: This function can only be called by the contract owner.\n @param tokenAddress The address of the token contract.\n @param recipient The address the fees should be sent to."
            },
            "functionSelector": "cf7b287f",
            "id": 1430,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1394,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1393,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1563,
                  "src": "23297:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "23297:9:8"
              }
            ],
            "name": "withdrawProtocolFees",
            "nameLocation": "23210:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1389,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "23239:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1430,
                  "src": "23231:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23231:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1391,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "23261:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1430,
                  "src": "23253:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23253:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23230:41:8"
            },
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23311:0:8"
            },
            "scope": 1516,
            "src": "23201:374:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1454,
              "nodeType": "Block",
              "src": "24032:115:8",
              "statements": [
                {
                  "expression": {
                    "id": 1444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1442,
                      "name": "protocolFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "24042:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1443,
                      "name": "newProtocolFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1433,
                      "src": "24059:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24042:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1445,
                  "nodeType": "ExpressionStatement",
                  "src": "24042:34:8"
                },
                {
                  "expression": {
                    "id": 1448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1446,
                      "name": "lpFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 175,
                      "src": "24086:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1447,
                      "name": "newLpFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1435,
                      "src": "24097:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24086:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1449,
                  "nodeType": "ExpressionStatement",
                  "src": "24086:22:8"
                },
                {
                  "expression": {
                    "id": 1452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1450,
                      "name": "minLpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "24118:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1451,
                      "name": "newMinLpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1437,
                      "src": "24129:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24118:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1453,
                  "nodeType": "ExpressionStatement",
                  "src": "24118:22:8"
                }
              ]
            },
            "documentation": {
              "id": 1431,
              "nodeType": "StructuredDocumentation",
              "src": "23581:305:8",
              "text": "Update fee parameters.\n .. note:: This function can only be called by the contract owner.\n @param newProtocolFeePPM The new value for ``protocolFeePPM``.\n @param newLpFeePPM The new value for ``lpFeePPM``.\n @param newMinLpFee The new value for ``minLpFee``."
            },
            "functionSelector": "78da194b",
            "id": 1455,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1440,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1439,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1563,
                  "src": "24022:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "24022:9:8"
              }
            ],
            "name": "updateFeeData",
            "nameLocation": "23900:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1433,
                  "mutability": "mutable",
                  "name": "newProtocolFeePPM",
                  "nameLocation": "23931:17:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1455,
                  "src": "23923:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23923:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1435,
                  "mutability": "mutable",
                  "name": "newLpFeePPM",
                  "nameLocation": "23966:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1455,
                  "src": "23958:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23958:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1437,
                  "mutability": "mutable",
                  "name": "newMinLpFee",
                  "nameLocation": "23995:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1455,
                  "src": "23987:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23987:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23913:99:8"
            },
            "returnParameters": {
              "id": 1441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24032:0:8"
            },
            "scope": 1516,
            "src": "23891:256:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1467,
              "nodeType": "Block",
              "src": "24428:49:8",
              "statements": [
                {
                  "expression": {
                    "id": 1465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1463,
                      "name": "transferLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "24438:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1464,
                      "name": "newTransferLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1458,
                      "src": "24454:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24438:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1466,
                  "nodeType": "ExpressionStatement",
                  "src": "24438:32:8"
                }
              ]
            },
            "documentation": {
              "id": 1456,
              "nodeType": "StructuredDocumentation",
              "src": "24153:196:8",
              "text": "Update the transfer amount limit.\n .. note:: This function can only be called by the contract owner.\n @param newTransferLimit The new value for ``transferLimit``."
            },
            "functionSelector": "d762a37b",
            "id": 1468,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1461,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1460,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1563,
                  "src": "24418:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "24418:9:8"
              }
            ],
            "name": "updateTransferLimit",
            "nameLocation": "24363:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1458,
                  "mutability": "mutable",
                  "name": "newTransferLimit",
                  "nameLocation": "24391:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1468,
                  "src": "24383:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24383:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24382:26:8"
            },
            "returnParameters": {
              "id": 1462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24428:0:8"
            },
            "scope": 1516,
            "src": "24354:123:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1496,
              "nodeType": "Block",
              "src": "24854:211:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1479,
                          "name": "finalityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1473,
                          "src": "24872:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24889:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24872:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696e616c69747920706572696f64206d7573742062652067726561746572207468616e2030",
                        "id": 1482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24892:40:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25ea573be6ea1512aa3df00891acf9b351bb62ca968c15c699c1ce305b8feae2",
                          "typeString": "literal_string \"Finality period must be greater than 0\""
                        },
                        "value": "Finality period must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25ea573be6ea1512aa3df00891acf9b351bb62ca968c15c699c1ce305b8feae2",
                          "typeString": "literal_string \"Finality period must be greater than 0\""
                        }
                      ],
                      "id": 1478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24864:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24864:69:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1484,
                  "nodeType": "ExpressionStatement",
                  "src": "24864:69:8"
                },
                {
                  "expression": {
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1485,
                        "name": "finalityPeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "24943:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1487,
                      "indexExpression": {
                        "id": 1486,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "24959:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24943:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1488,
                      "name": "finalityPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1473,
                      "src": "24976:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24943:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1490,
                  "nodeType": "ExpressionStatement",
                  "src": "24943:47:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1492,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "25028:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1493,
                        "name": "finalityPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "25043:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1491,
                      "name": "FinalityPeriodUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "25006:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25006:52:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1495,
                  "nodeType": "EmitStatement",
                  "src": "25001:57:8"
                }
              ]
            },
            "documentation": {
              "id": 1469,
              "nodeType": "StructuredDocumentation",
              "src": "24483:253:8",
              "text": "Set the finality period for the given target chain.\n .. note:: This function can only be called by the contract owner.\n @param targetChainId The target chain ID.\n @param finalityPeriod Finality period in seconds."
            },
            "functionSelector": "d137920b",
            "id": 1497,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1476,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1475,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1563,
                  "src": "24840:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "24840:9:8"
              }
            ],
            "name": "setFinalityPeriod",
            "nameLocation": "24750:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1471,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "24776:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "24768:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24768:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1473,
                  "mutability": "mutable",
                  "name": "finalityPeriod",
                  "nameLocation": "24799:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "24791:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24791:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24767:47:8"
            },
            "returnParameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24854:0:8"
            },
            "scope": 1516,
            "src": "24741:324:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1514,
              "nodeType": "Block",
              "src": "25423:103:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1504,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "25441:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25455:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "25441:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420616c72656164792064657072656361746564",
                        "id": 1507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25462:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad2c6c42423d3e98c875f9dce2f80040aa442e807c64f7403f0d4b02b859f419",
                          "typeString": "literal_string \"Contract already deprecated\""
                        },
                        "value": "Contract already deprecated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad2c6c42423d3e98c875f9dce2f80040aa442e807c64f7403f0d4b02b859f419",
                          "typeString": "literal_string \"Contract already deprecated\""
                        }
                      ],
                      "id": 1503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25433:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25433:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1509,
                  "nodeType": "ExpressionStatement",
                  "src": "25433:59:8"
                },
                {
                  "expression": {
                    "id": 1512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1510,
                      "name": "deprecated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "25502:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25515:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "25502:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1513,
                  "nodeType": "ExpressionStatement",
                  "src": "25502:17:8"
                }
              ]
            },
            "documentation": {
              "id": 1498,
              "nodeType": "StructuredDocumentation",
              "src": "25071:299:8",
              "text": "Mark the contract as deprecated.\n Once the contract is deprecated, it cannot be used to create new\n requests anymore. Withdrawing deposited funds and claim stakes\n still works, though.\n .. note:: This function can only be called by the contract owner."
            },
            "functionSelector": "ea656f7d",
            "id": 1515,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1501,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1500,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1563,
                  "src": "25413:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "25413:9:8"
              }
            ],
            "name": "deprecateContract",
            "nameLocation": "25384:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25401:2:8"
            },
            "returnParameters": {
              "id": 1502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25423:0:8"
            },
            "scope": 1516,
            "src": "25375:151:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1517,
        "src": "762:24766:8",
        "usedErrors": []
      }
    ],
    "src": "32:25497:8"
  },
  "bytecode": "6080604052674563918244f40000600b556103e8600c556000600d5569021e19e0c9bab2400000600e553480156200003657600080fd5b5060405162002860380380620028608339810160408190526200005991620000e8565b620000643362000098565b600193909355600291909155600355600780546001600160a01b0319166001600160a01b0390921691909117905562000139565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060008060808587031215620000ff57600080fd5b845160208601516040870151606088015192965090945092506001600160a01b03811681146200012e57600080fd5b939692955090935050565b61271780620001496000396000f3fe6080604052600436106101ee5760003560e01c8063973a814e1161010d578063d3868348116100a0578063ea656f7d1161006f578063ea656f7d146106dd578063eb321173146106f2578063f2fde38b14610708578063f7d64cec14610728578063f94325171461074857600080fd5b8063d386834814610671578063d762a37b14610691578063e2653eeb146106b1578063e7aad5c4146106c757600080fd5b8063b1743c5b116100dc578063b1743c5b146105fe578063cea74edf14610611578063cf7b287f14610631578063d137920b1461065157600080fd5b8063973a814e146104f8578063a032b5f41461050e578063a888c2cd1461052e578063ab9634ee146105de57600080fd5b80636bc6c8d11161018557806381d12c581161015457806381d12c58146103875780638da5cb5b146104b157806392c824d8146104cf57806396171d05146104e257600080fd5b80636bc6c8d11461030d578063715018a61461033a57806378da194b146103515780637dc2cd981461037157600080fd5b80632f4212b8116101c15780632f4212b8146102945780632f92f009146102b45780634efa8f17146102e15780635d5aa11b146102f757600080fd5b80630e136b19146101f35780631489f8d2146102225780631d18adc5146102465780632e1a7d4d1461025c575b600080fd5b3480156101ff57600080fd5b5060045461020d9060ff1681565b60405190151581526020015b60405180910390f35b34801561022e57600080fd5b5061023861012c81565b604051908152602001610219565b34801561025257600080fd5b5061023860035481565b34801561026857600080fd5b5061027c610277366004612379565b61075e565b6040516001600160a01b039091168152602001610219565b3480156102a057600080fd5b506102386102af3660046123a7565b610a15565b3480156102c057600080fd5b506102386102cf366004612379565b60086020526000908152604090205481565b3480156102ed57600080fd5b5061023860065481565b34801561030357600080fd5b50610238600b5481565b34801561031957600080fd5b5061023861032836600461240c565b600f6020526000908152604090205481565b34801561034657600080fd5b5061034f610e9f565b005b34801561035d57600080fd5b5061034f61036c366004612429565b610ed5565b34801561037d57600080fd5b5061023860025481565b34801561039357600080fd5b5061042d6103a2366004612379565b6009602081815260009283526040928390208054600182015460028301546003840154600485015460058601548951808b01909a5260068701546001600160a01b039081168b526007880154988b0198909852600887015498870154600a880154600b909801549689169a9589169994989384169793909216959094936001600160c01b031692908b565b604080516001600160a01b039c8d1681529a8c166020808d0191909152908b0199909952968a1660608a0152948916608089015260a0880193909352815190971660c08701529093015160e08501526001600160c01b0390941661010084015261012083019190915261014082019290925261016081019190915261018001610219565b3480156104bd57600080fd5b506000546001600160a01b031661027c565b61034f6104dd366004612379565b610f0d565b3480156104ee57600080fd5b5061023861070881565b34801561050457600080fd5b5061023860055481565b34801561051a57600080fd5b50610238610529366004612379565b611305565b34801561053a57600080fd5b50610598610549366004612379565b600a602052600090815260409020805460018201546002830154600484015460058501546006860154600787015460089097015495966001600160a01b03958616969495909316939192909188565b604080519889526001600160a01b0397881660208a0152880195909552949092166060860152608085015260a084015260c083019190915260e082015261010001610219565b3480156105ea57600080fd5b5060075461027c906001600160a01b031681565b61023861060c366004612455565b611329565b34801561061d57600080fd5b5061023861062c366004612379565b6115f7565b34801561063d57600080fd5b5061034f61064c366004612477565b611615565b34801561065d57600080fd5b5061034f61066c366004612455565b6116c8565b34801561067d57600080fd5b5061034f61068c366004612379565b6117a0565b34801561069d57600080fd5b5061034f6106ac366004612379565b6119aa565b3480156106bd57600080fd5b50610238600c5481565b3480156106d357600080fd5b50610238600d5481565b3480156106e957600080fd5b5061034f6119d9565b3480156106fe57600080fd5b5061023860015481565b34801561071457600080fd5b5061034f61072336600461240c565b611a65565b34801561073457600080fd5b50610238610743366004612379565b611b00565b34801561075457600080fd5b50610238600e5481565b60008160065481111580156107735750600081115b6107b85760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b60448201526064015b60405180910390fd5b6000838152600a6020908152604080832080548452600990925282209091806107e087611b24565b6001600160a01b0382166000908152600387016020526040902054919350915015610821576001600160a01b03821660009081526003850160205260408120555b8360060154600003610873576008830180546001919060009061084e9084906001600160c01b03166124c6565b92506101000a8154816001600160c01b0302191690836001600160c01b031602179055505b8084600601600082825461088791906124ee565b9091555050600584015460028501546108a091906124ee565b846006015411156108f35760405162461bcd60e51b815260206004820152601c60248201527f416d6f756e7420746f20776974686472617720746f6f206c617267650000000060448201526064016107af565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610940576040519150601f19603f3d011682016040523d82523d6000602084013e610945565b606091505b505090508061098d5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016107af565b8454604080518a81526001600160a01b03861660208201527f5b0aec51a74bf236e8fa08bcb2e303068c7ac1aed3ca410d25b8dad27538d73c910160405180910390a260068401546001600160a01b03161580156109fa575060018501546001600160a01b038481169116145b15610a0957610a098486611f38565b50909695505050505050565b60045460009060ff1615610a645760405162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd081a5cc819195c1c9958d85d195960521b60448201526064016107af565b6000878152600860205260408120549003610ac15760405162461bcd60e51b815260206004820152601b60248201527f54617267657420726f6c6c7570206e6f7420737570706f72746564000000000060448201526064016107af565b61012c821015610b135760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920706572696f6420746f6f2073686f72740000000000000060448201526064016107af565b610708821115610b655760405162461bcd60e51b815260206004820152601860248201527f56616c696469747920706572696f6420746f6f206c6f6e67000000000000000060448201526064016107af565b600e54831115610bb75760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e742065786365656473207472616e73666572206c696d697400000060448201526064016107af565b856000610bc385611b00565b90506000610bd086611305565b9050600081610bdf84896124ee565b610be991906124ee565b604051636eb1769f60e11b815233600482015230602482015290915081906001600160a01b0386169063dd62ed3e90604401602060405180830381865afa158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c9190612506565b1015610ca35760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064016107af565b600160056000828254610cb691906124ee565b9250508190555060006009600060055481526020019081526020016000209050338160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508a8160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508b8160020181905550898160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550888160040160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550878160050181905550604051806040016040528060006001600160a01b031681526020016000801b8152508160060160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101559050508642610df891906124ee565b60098201819055600a8201859055600b820184905560055460408051918252602082018f90526001600160a01b038e8116838301528d811660608401528c16608083015260a082018b905260c082019290925290517f18a412d0656b9a5c9263a134f66a34da33cad7c3690971601f9963ade588e7019181900360e00190a1610e8c6001600160a01b03861633308561201d565b50506005549a9950505050505050505050565b6000546001600160a01b03163314610ec95760405162461bcd60e51b81526004016107af9061251f565b610ed36000612088565b565b6000546001600160a01b03163314610eff5760405162461bcd60e51b81526004016107af9061251f565b600d92909255600c55600b55565b806006548111158015610f205750600081115b610f605760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b60448201526064016107af565b6000828152600a6020908152604080832080548452600990925290912060078201544210610fc05760405162461bcd60e51b815260206004820152600d60248201526c10db185a5b48195e1c1a5c9959609a1b60448201526064016107af565b600354600283015460058401546000928392909180821115611082578060000361100557600286015460009081526008602052604090205461100290846124ee565b92505b6001870154336001600160a01b03909116036110635760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74206368616c6c656e6765206f776e20636c61696d00000000000060448201526064016107af565b3394506110708183612554565b61107b9060016124ee565b93506110ae565b60018088015490546001600160a01b0390911695506110a18383612554565b6110ab91906124ee565b93505b336001600160a01b038616146110ff5760405162461bcd60e51b8152602060048201526016602482015275139bdd08195b1a59da589b19481d1bc81bdd5d189a5960521b60448201526064016107af565b8334101561114f5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f756768207374616b652070726f76696465640000000000000060448201526064016107af565b60018701546001600160a01b0390811690861603611186573487600201600082825461117b91906124ee565b909155506111de9050565b6004870180546001600160a01b031916339081179091556000908152600388016020526040812080543492906111bd9084906124ee565b92505081905550348760050160008282546111d891906124ee565b90915550505b60078701546111f6906111f185426124ee565b6120d8565b600788015560035460009061120b90426124ee565b905080886007015410156112735760405162461bcd60e51b815260206004820152602960248201527f436c61696d207465726d696e6174696f6e20646964206e6f7420696e637265616044820152680e6ca40cadcdeeaced60bb1b60648201526084016107af565b87600001547f29fd2df293ba511e44ca47212c915137020231ed3ac0ee7bd02a7a655275ad378b8a60010160009054906101000a90046001600160a01b03168b600201548c60040160009054906101000a90046001600160a01b03168d600501548e600701548f600801546040516112f1979695949392919061256b565b60405180910390a250505050505050505050565b6000620f4240600d548361131991906125aa565b61132391906125c9565b92915050565b600082600554811115801561133e5750600081115b6113805760405162461bcd60e51b81526020600482015260136024820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b60448201526064016107af565b60008481526009602081905260409091209081015442106113d55760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b60448201526064016107af565b60068101546001600160a01b03161561142c5760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b60448201526064016107af565b60015434146114745760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081cdd185ad948185b5bdd5b9d60621b60448201526064016107af565b836114ba5760405162461bcd60e51b8152602060048201526016602482015275046696c6c4964206d757374206e6f74206265203078360541b60448201526064016107af565b600881018054600191906000906114db9084906001600160c01b03166125eb565b92506101000a8154816001600160c01b0302191690836001600160c01b0316021790555060016006600082825461151291906124ee565b9091555050600680546000908152600a60205260408120878155600180820180546001600160a01b0319908116331790915590546002808401919091556004830180549092169091556005820183905592810191909155905461157590426124ee565b600782018190556008820186905560065460018301546002840154600485015460058601546040518c967f29fd2df293ba511e44ca47212c915137020231ed3ac0ee7bd02a7a655275ad37966115e29690956001600160a01b039182169590949116929091908e9061256b565b60405180910390a25050600654949350505050565b600061160282611305565b61160b83611b00565b61132391906124ee565b6000546001600160a01b0316331461163f5760405162461bcd60e51b81526004016107af9061251f565b6001600160a01b0382166000908152600f60205260409020548061169c5760405162461bcd60e51b815260206004820152601460248201527350726f746f636f6c20666565206973207a65726f60601b60448201526064016107af565b6001600160a01b0383166000818152600f602052604081205583906116c29084846120f1565b50505050565b6000546001600160a01b031633146116f25760405162461bcd60e51b81526004016107af9061251f565b600081116117515760405162461bcd60e51b815260206004820152602660248201527f46696e616c69747920706572696f64206d75737420626520677265617465722060448201526507468616e20360d41b60648201526084016107af565b60008281526008602090815260409182902083905581518481529081018390527faba57b48b9f1dfd5747a52ed348a6ab6aa7bafb0575363a5cb7b62659f727b65910160405180910390a15050565b8060055481111580156117b35750600081115b6117f55760405162461bcd60e51b81526020600482015260136024820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b60448201526064016107af565b600082815260096020526040902060068101546001600160a01b03161561185a5760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b60448201526064016107af565b80600901544210156118ae5760405162461bcd60e51b815260206004820152601760248201527f52657175657374206e6f7420657870697265642079657400000000000000000060448201526064016107af565b60088101546001600160c01b0316156119015760405162461bcd60e51b815260206004820152601560248201527441637469766520636c61696d732072756e6e696e6760581b60448201526064016107af565b80546006820180546001600160a01b0319166001600160a01b0390921691821790556040805185815260208101929092527fa7b86597910aae75f7d99feb2f37420cc80d457465ffba0f8136d722a9f7095a910160405180910390a160018101548154600b830154600a84015460058501546001600160a01b03948516946116c29416929161198f916124ee565b61199991906124ee565b6001600160a01b03841691906120f1565b6000546001600160a01b031633146119d45760405162461bcd60e51b81526004016107af9061251f565b600e55565b6000546001600160a01b03163314611a035760405162461bcd60e51b81526004016107af9061251f565b60045460ff1615611a565760405162461bcd60e51b815260206004820152601b60248201527f436f6e747261637420616c72656164792064657072656361746564000000000060448201526064016107af565b6004805460ff19166001179055565b6000546001600160a01b03163314611a8f5760405162461bcd60e51b81526004016107af9061251f565b6001600160a01b038116611af45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107af565b611afd81612088565b50565b6000611323600b54620f4240600c5485611b1a91906125aa565b6111f191906125c9565b6000818152600a602090815260408083208054845260099092528220600282015460058301548493929190611b5981836124ee565b846006015410611bab5760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792077697468647261776e00000000000000000060448201526064016107af565b835460028401546003850154600486015460058701546040805160208082019790975246818301526060808201969096526bffffffffffffffffffffffff1994861b851660808201529290941b909216609482015260a8808201929092528251808203909201825260c80190915280519101206000611c55828760080154604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b60408051808201825260068801546001600160a01b0390811682526007808a0154602084015254925163a64a227160e01b815260048101879052939450600093919284928392919091169063a64a2271906024016040805180830381865afa158015611cc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce99190612616565b90925090506001600160a01b038216611d06575050805160208201515b60075460405163a751732f60e01b8152600481018790526001600160a01b039091169063a751732f90602401602060405180830381865afa158015611d4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d739190612644565b15611d815760009350611e13565b6001600160a01b03821615611db95760018a01546001600160a01b038381169116148015611db25750896008015481145b9350611e13565b8960070154421015611e0d5760405162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f742066696e69736865640000000000000060448201526064016107af565b86881193505b6000808515611e3e57611e26898b6124ee565b60018d01549092506001600160a01b03169050611ed7565b8815611ec65733600090815260038d016020526040902054611e619060026125aa565b915033905060008211611ec15760405162461bcd60e51b815260206004820152602260248201527f4368616c6c656e67657220686173206e6f7468696e6720746f20776974686472604482015261617760f01b60648201526084016107af565b611ed7565b505060005488906001600160a01b03165b60048c01546001600160a01b03163303611f2557888a1115611f0e57611efd898b612554565b611f0790836124ee565b9150611f25565b611f188a8a612554565b611f229083612554565b91505b9e909d509b505050505050505050505050565b60018101548154604080519182526001600160a01b0390921660208201819052917fa7b86597910aae75f7d99feb2f37420cc80d457465ffba0f8136d722a9f7095a910160405180910390a16040805180820182526001600160a01b03808416808352600886015460209384018190526006880180546001600160a01b0319169092179091556007870155600b86015460018701549091166000908152600f9092529181208054909190611fed9084906124ee565b90915550506001830154600a84015460058501546001600160a01b03909216916116c291849161199991906124ee565b6040516001600160a01b03808516602483015283166044820152606481018290526116c29085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612126565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818310156120e857816120ea565b825b9392505050565b6040516001600160a01b03831660248201526044810182905261212190849063a9059cbb60e01b90606401612051565b505050565b600061217b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121f89092919063ffffffff16565b80519091501561212157808060200190518101906121999190612644565b6121215760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107af565b6060612207848460008561220f565b949350505050565b6060824710156122705760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107af565b6001600160a01b0385163b6122c75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107af565b600080866001600160a01b031685876040516122e39190612692565b60006040518083038185875af1925050503d8060008114612320576040519150601f19603f3d011682016040523d82523d6000602084013e612325565b606091505b5091509150612335828286612340565b979650505050505050565b6060831561234f5750816120ea565b82511561235f5782518084602001fd5b8160405162461bcd60e51b81526004016107af91906126ae565b60006020828403121561238b57600080fd5b5035919050565b6001600160a01b0381168114611afd57600080fd5b60008060008060008060c087890312156123c057600080fd5b8635955060208701356123d281612392565b945060408701356123e281612392565b935060608701356123f281612392565b9598949750929560808101359460a0909101359350915050565b60006020828403121561241e57600080fd5b81356120ea81612392565b60008060006060848603121561243e57600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561246857600080fd5b50508035926020909101359150565b6000806040838503121561248a57600080fd5b823561249581612392565b915060208301356124a581612392565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b60006001600160c01b03838116908316818110156124e6576124e66124b0565b039392505050565b60008219821115612501576125016124b0565b500190565b60006020828403121561251857600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015612566576125666124b0565b500390565b9687526001600160a01b0395861660208801526040870194909452919093166060850152608084019290925260a083019190915260c082015260e00190565b60008160001904831182151516156125c4576125c46124b0565b500290565b6000826125e657634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160c01b0382811684821680830382111561260d5761260d6124b0565b01949350505050565b6000806040838503121561262957600080fd5b825161263481612392565b6020939093015192949293505050565b60006020828403121561265657600080fd5b815180151581146120ea57600080fd5b60005b83811015612681578181015183820152602001612669565b838111156116c25750506000910152565b600082516126a4818460208701612666565b9190910192915050565b60208152600082518060208401526126cd816040850160208701612666565b601f01601f1916919091016040019291505056fea2646970667358221220583867364ff57fbedd3d4b40f06e5ac8195d6767a675456ea3dba9c2e71873b564736f6c634300080d0033",
  "bytecodeSha1": "dfc730428a0b3633eea3d4d3286c2294abfe2c74",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "RequestManager",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "165": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "166": [
            3735,
            3756,
            false
          ],
          "167": [
            3819,
            3849,
            true
          ]
        }
      },
      "3": {
        "Address.functionCallWithValue": {
          "161": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "162": [
            7735,
            7742,
            false
          ],
          "163": [
            7876,
            7897,
            false
          ]
        }
      },
      "4": {},
      "5": {
        "Math.max": {
          "164": [
            369,
            375,
            true
          ]
        }
      },
      "6": {},
      "8": {
        "RequestManager.challengeClaim": {
          "132": [
            7336,
            7359,
            false
          ],
          "133": [
            14998,
            15033,
            true
          ],
          "134": [
            15298,
            15333,
            false
          ],
          "135": [
            15353,
            15378,
            false
          ],
          "136": [
            15491,
            15518,
            true
          ],
          "137": [
            15807,
            15830,
            true
          ],
          "138": [
            15875,
            15896,
            true
          ],
          "139": [
            15941,
            15967,
            false
          ],
          "140": [
            16442,
            16481,
            true
          ]
        },
        "RequestManager.claimRequest": {
          "141": [
            12513,
            12549,
            true
          ],
          "142": [
            12600,
            12641,
            true
          ],
          "143": [
            12710,
            12733,
            true
          ]
        },
        "RequestManager.createRequest": {
          "126": [
            9180,
            9199,
            true
          ],
          "127": [
            9257,
            9292,
            true
          ],
          "128": [
            9376,
            9413,
            true
          ],
          "129": [
            9495,
            9532,
            true
          ],
          "130": [
            9600,
            9623,
            true
          ],
          "131": [
            9897,
            9959,
            true
          ]
        },
        "RequestManager.deprecateContract": {
          "150": [
            25441,
            25460,
            true
          ]
        },
        "RequestManager.resolveClaim": {
          "151": [
            19017,
            19076,
            true
          ],
          "152": [
            20156,
            20176,
            false
          ],
          "153": [
            20278,
            20324,
            false
          ],
          "154": [
            20418,
            20438,
            false
          ],
          "155": [
            20656,
            20692,
            true
          ],
          "156": [
            20955,
            20965,
            false
          ],
          "157": [
            21159,
            21183,
            false
          ],
          "158": [
            21386,
            21403,
            true
          ],
          "159": [
            22019,
            22053,
            false
          ],
          "160": [
            22073,
            22108,
            false
          ]
        },
        "RequestManager.setFinalityPeriod": {
          "145": [
            24872,
            24890,
            true
          ]
        },
        "RequestManager.withdraw": {
          "120": [
            17703,
            17745,
            false
          ],
          "121": [
            17936,
            17962,
            false
          ],
          "122": [
            18092,
            18180,
            true
          ],
          "123": [
            18323,
            18327,
            true
          ],
          "124": [
            18456,
            18497,
            false
          ],
          "125": [
            18513,
            18543,
            false
          ]
        },
        "RequestManager.withdrawExpiredRequest": {
          "146": [
            7117,
            7144,
            false
          ],
          "147": [
            11355,
            11396,
            true
          ],
          "148": [
            11478,
            11515,
            true
          ],
          "149": [
            11582,
            11607,
            true
          ]
        },
        "RequestManager.withdrawProtocolFees": {
          "144": [
            23391,
            23401,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "108": [
            2378,
            2395
          ],
          "109": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "30": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "83": [
            1998,
            2071
          ],
          "84": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "112": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "111": [
            813,
            899
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "107": [
            1050,
            1146
          ]
        }
      },
      "3": {
        "Address.functionCall": {
          "113": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "114": [
            5137,
            5218
          ],
          "116": [
            5228,
            5288
          ],
          "117": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "115": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "118": [
            7758,
            7775
          ],
          "119": [
            8202,
            8222
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "29": [
            712,
            729
          ]
        }
      },
      "5": {
        "Math.max": {
          "110": [
            362,
            383
          ]
        }
      },
      "6": {
        "BeamerUtils.createFillHash": {
          "88": [
            874,
            929
          ]
        },
        "BeamerUtils.createRequestHash": {
          "87": [
            424,
            730
          ]
        }
      },
      "8": {
        "RequestManager.challengeClaim": {
          "34": [
            14990,
            15051
          ],
          "35": [
            15398,
            15455
          ],
          "36": [
            15483,
            15549
          ],
          "37": [
            15563,
            15585
          ],
          "38": [
            15599,
            15649
          ],
          "39": [
            15680,
            15705
          ],
          "40": [
            15719,
            15778
          ],
          "41": [
            15799,
            15857
          ],
          "42": [
            15867,
            15926
          ],
          "43": [
            15983,
            16014
          ],
          "44": [
            16045,
            16078
          ],
          "45": [
            16092,
            16140
          ],
          "46": [
            16154,
            16193
          ],
          "47": [
            16214,
            16330
          ],
          "48": [
            16421,
            16548
          ],
          "49": [
            16559,
            16823
          ]
        },
        "RequestManager.claimRequest": {
          "51": [
            12505,
            12569
          ],
          "52": [
            12579,
            12692
          ],
          "53": [
            12702,
            12758
          ],
          "54": [
            12768,
            12823
          ],
          "55": [
            12834,
            12859
          ],
          "56": [
            12869,
            12886
          ],
          "57": [
            12949,
            12976
          ],
          "58": [
            12986,
            13012
          ],
          "59": [
            13022,
            13053
          ],
          "60": [
            13063,
            13096
          ],
          "61": [
            13106,
            13136
          ],
          "62": [
            13146,
            13171
          ],
          "63": [
            13181,
            13230
          ],
          "64": [
            13240,
            13261
          ],
          "65": [
            13272,
            13529
          ],
          "66": [
            13540,
            13559
          ]
        },
        "RequestManager.createRequest": {
          "9": [
            9172,
            9226
          ],
          "10": [
            9236,
            9345
          ],
          "11": [
            9355,
            9464
          ],
          "12": [
            9474,
            9582
          ],
          "13": [
            9592,
            9657
          ],
          "14": [
            9876,
            10007
          ],
          "15": [
            10018,
            10037
          ],
          "16": [
            10110,
            10140
          ],
          "17": [
            10150,
            10200
          ],
          "18": [
            10210,
            10250
          ],
          "19": [
            10260,
            10310
          ],
          "20": [
            10320,
            10360
          ],
          "21": [
            10370,
            10396
          ],
          "22": [
            10406,
            10476
          ],
          "23": [
            10486,
            10542
          ],
          "24": [
            10552,
            10576
          ],
          "25": [
            10586,
            10622
          ],
          "26": [
            10633,
            10863
          ],
          "27": [
            10874,
            10941
          ],
          "28": [
            10952,
            10973
          ]
        },
        "RequestManager.deprecateContract": {
          "81": [
            25433,
            25492
          ],
          "82": [
            25502,
            25519
          ]
        },
        "RequestManager.lpFee": {
          "85": [
            6390,
            6448
          ]
        },
        "RequestManager.protocolFee": {
          "50": [
            6622,
            6666
          ]
        },
        "RequestManager.resolveClaim": {
          "86": [
            18996,
            19125
          ],
          "89": [
            20192,
            20253
          ],
          "90": [
            20379,
            20397
          ],
          "91": [
            20499,
            20561
          ],
          "92": [
            20631,
            20751
          ],
          "93": [
            20765,
            20813
          ],
          "94": [
            21044,
            21095
          ],
          "95": [
            21109,
            21138
          ],
          "96": [
            21268,
            21323
          ],
          "97": [
            21337,
            21363
          ],
          "98": [
            21378,
            21442
          ],
          "99": [
            21652,
            21680
          ],
          "100": [
            22128,
            22182
          ],
          "101": [
            22221,
            22275
          ],
          "102": [
            22310,
            22347
          ]
        },
        "RequestManager.setFinalityPeriod": {
          "71": [
            24864,
            24933
          ],
          "72": [
            24943,
            24990
          ],
          "73": [
            25001,
            25058
          ]
        },
        "RequestManager.totalFee": {
          "67": [
            6919,
            6961
          ]
        },
        "RequestManager.updateFeeData": {
          "31": [
            24042,
            24076
          ],
          "32": [
            24086,
            24108
          ],
          "33": [
            24118,
            24140
          ]
        },
        "RequestManager.updateTransferLimit": {
          "80": [
            24438,
            24470
          ]
        },
        "RequestManager.withdraw": {
          "1": [
            17798,
            17840
          ],
          "2": [
            17978,
            18003
          ],
          "3": [
            18023,
            18061
          ],
          "4": [
            18071,
            18234
          ],
          "5": [
            18315,
            18352
          ],
          "6": [
            18363,
            18428
          ],
          "7": [
            18568,
            18599
          ],
          "8": [
            18620,
            18640
          ]
        },
        "RequestManager.withdrawDeposit": {
          "103": [
            22502,
            22549
          ],
          "104": [
            22560,
            22626
          ],
          "105": [
            22637,
            22722
          ],
          "106": [
            22792,
            22851
          ]
        },
        "RequestManager.withdrawExpiredRequest": {
          "74": [
            11334,
            11447
          ],
          "75": [
            11457,
            11564
          ],
          "76": [
            11574,
            11633
          ],
          "77": [
            11644,
            11688
          ],
          "78": [
            11699,
            11747
          ],
          "79": [
            11817,
            11939
          ]
        },
        "RequestManager.withdrawProtocolFees": {
          "68": [
            23383,
            23426
          ],
          "69": [
            23436,
            23475
          ],
          "70": [
            23531,
            23568
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "BeamerUtils",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Math",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "ResolutionRegistry",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "6080604052600436106101ee5760003560e01c8063973a814e1161010d578063d3868348116100a0578063ea656f7d1161006f578063ea656f7d146106dd578063eb321173146106f2578063f2fde38b14610708578063f7d64cec14610728578063f94325171461074857600080fd5b8063d386834814610671578063d762a37b14610691578063e2653eeb146106b1578063e7aad5c4146106c757600080fd5b8063b1743c5b116100dc578063b1743c5b146105fe578063cea74edf14610611578063cf7b287f14610631578063d137920b1461065157600080fd5b8063973a814e146104f8578063a032b5f41461050e578063a888c2cd1461052e578063ab9634ee146105de57600080fd5b80636bc6c8d11161018557806381d12c581161015457806381d12c58146103875780638da5cb5b146104b157806392c824d8146104cf57806396171d05146104e257600080fd5b80636bc6c8d11461030d578063715018a61461033a57806378da194b146103515780637dc2cd981461037157600080fd5b80632f4212b8116101c15780632f4212b8146102945780632f92f009146102b45780634efa8f17146102e15780635d5aa11b146102f757600080fd5b80630e136b19146101f35780631489f8d2146102225780631d18adc5146102465780632e1a7d4d1461025c575b600080fd5b3480156101ff57600080fd5b5060045461020d9060ff1681565b60405190151581526020015b60405180910390f35b34801561022e57600080fd5b5061023861012c81565b604051908152602001610219565b34801561025257600080fd5b5061023860035481565b34801561026857600080fd5b5061027c610277366004612379565b61075e565b6040516001600160a01b039091168152602001610219565b3480156102a057600080fd5b506102386102af3660046123a7565b610a15565b3480156102c057600080fd5b506102386102cf366004612379565b60086020526000908152604090205481565b3480156102ed57600080fd5b5061023860065481565b34801561030357600080fd5b50610238600b5481565b34801561031957600080fd5b5061023861032836600461240c565b600f6020526000908152604090205481565b34801561034657600080fd5b5061034f610e9f565b005b34801561035d57600080fd5b5061034f61036c366004612429565b610ed5565b34801561037d57600080fd5b5061023860025481565b34801561039357600080fd5b5061042d6103a2366004612379565b6009602081815260009283526040928390208054600182015460028301546003840154600485015460058601548951808b01909a5260068701546001600160a01b039081168b526007880154988b0198909852600887015498870154600a880154600b909801549689169a9589169994989384169793909216959094936001600160c01b031692908b565b604080516001600160a01b039c8d1681529a8c166020808d0191909152908b0199909952968a1660608a0152948916608089015260a0880193909352815190971660c08701529093015160e08501526001600160c01b0390941661010084015261012083019190915261014082019290925261016081019190915261018001610219565b3480156104bd57600080fd5b506000546001600160a01b031661027c565b61034f6104dd366004612379565b610f0d565b3480156104ee57600080fd5b5061023861070881565b34801561050457600080fd5b5061023860055481565b34801561051a57600080fd5b50610238610529366004612379565b611305565b34801561053a57600080fd5b50610598610549366004612379565b600a602052600090815260409020805460018201546002830154600484015460058501546006860154600787015460089097015495966001600160a01b03958616969495909316939192909188565b604080519889526001600160a01b0397881660208a0152880195909552949092166060860152608085015260a084015260c083019190915260e082015261010001610219565b3480156105ea57600080fd5b5060075461027c906001600160a01b031681565b61023861060c366004612455565b611329565b34801561061d57600080fd5b5061023861062c366004612379565b6115f7565b34801561063d57600080fd5b5061034f61064c366004612477565b611615565b34801561065d57600080fd5b5061034f61066c366004612455565b6116c8565b34801561067d57600080fd5b5061034f61068c366004612379565b6117a0565b34801561069d57600080fd5b5061034f6106ac366004612379565b6119aa565b3480156106bd57600080fd5b50610238600c5481565b3480156106d357600080fd5b50610238600d5481565b3480156106e957600080fd5b5061034f6119d9565b3480156106fe57600080fd5b5061023860015481565b34801561071457600080fd5b5061034f61072336600461240c565b611a65565b34801561073457600080fd5b50610238610743366004612379565b611b00565b34801561075457600080fd5b50610238600e5481565b60008160065481111580156107735750600081115b6107b85760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b60448201526064015b60405180910390fd5b6000838152600a6020908152604080832080548452600990925282209091806107e087611b24565b6001600160a01b0382166000908152600387016020526040902054919350915015610821576001600160a01b03821660009081526003850160205260408120555b8360060154600003610873576008830180546001919060009061084e9084906001600160c01b03166124c6565b92506101000a8154816001600160c01b0302191690836001600160c01b031602179055505b8084600601600082825461088791906124ee565b9091555050600584015460028501546108a091906124ee565b846006015411156108f35760405162461bcd60e51b815260206004820152601c60248201527f416d6f756e7420746f20776974686472617720746f6f206c617267650000000060448201526064016107af565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610940576040519150601f19603f3d011682016040523d82523d6000602084013e610945565b606091505b505090508061098d5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016107af565b8454604080518a81526001600160a01b03861660208201527f5b0aec51a74bf236e8fa08bcb2e303068c7ac1aed3ca410d25b8dad27538d73c910160405180910390a260068401546001600160a01b03161580156109fa575060018501546001600160a01b038481169116145b15610a0957610a098486611f38565b50909695505050505050565b60045460009060ff1615610a645760405162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd081a5cc819195c1c9958d85d195960521b60448201526064016107af565b6000878152600860205260408120549003610ac15760405162461bcd60e51b815260206004820152601b60248201527f54617267657420726f6c6c7570206e6f7420737570706f72746564000000000060448201526064016107af565b61012c821015610b135760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920706572696f6420746f6f2073686f72740000000000000060448201526064016107af565b610708821115610b655760405162461bcd60e51b815260206004820152601860248201527f56616c696469747920706572696f6420746f6f206c6f6e67000000000000000060448201526064016107af565b600e54831115610bb75760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e742065786365656473207472616e73666572206c696d697400000060448201526064016107af565b856000610bc385611b00565b90506000610bd086611305565b9050600081610bdf84896124ee565b610be991906124ee565b604051636eb1769f60e11b815233600482015230602482015290915081906001600160a01b0386169063dd62ed3e90604401602060405180830381865afa158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c9190612506565b1015610ca35760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064016107af565b600160056000828254610cb691906124ee565b9250508190555060006009600060055481526020019081526020016000209050338160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508a8160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508b8160020181905550898160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550888160040160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550878160050181905550604051806040016040528060006001600160a01b031681526020016000801b8152508160060160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101559050508642610df891906124ee565b60098201819055600a8201859055600b820184905560055460408051918252602082018f90526001600160a01b038e8116838301528d811660608401528c16608083015260a082018b905260c082019290925290517f18a412d0656b9a5c9263a134f66a34da33cad7c3690971601f9963ade588e7019181900360e00190a1610e8c6001600160a01b03861633308561201d565b50506005549a9950505050505050505050565b6000546001600160a01b03163314610ec95760405162461bcd60e51b81526004016107af9061251f565b610ed36000612088565b565b6000546001600160a01b03163314610eff5760405162461bcd60e51b81526004016107af9061251f565b600d92909255600c55600b55565b806006548111158015610f205750600081115b610f605760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b60448201526064016107af565b6000828152600a6020908152604080832080548452600990925290912060078201544210610fc05760405162461bcd60e51b815260206004820152600d60248201526c10db185a5b48195e1c1a5c9959609a1b60448201526064016107af565b600354600283015460058401546000928392909180821115611082578060000361100557600286015460009081526008602052604090205461100290846124ee565b92505b6001870154336001600160a01b03909116036110635760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74206368616c6c656e6765206f776e20636c61696d00000000000060448201526064016107af565b3394506110708183612554565b61107b9060016124ee565b93506110ae565b60018088015490546001600160a01b0390911695506110a18383612554565b6110ab91906124ee565b93505b336001600160a01b038616146110ff5760405162461bcd60e51b8152602060048201526016602482015275139bdd08195b1a59da589b19481d1bc81bdd5d189a5960521b60448201526064016107af565b8334101561114f5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f756768207374616b652070726f76696465640000000000000060448201526064016107af565b60018701546001600160a01b0390811690861603611186573487600201600082825461117b91906124ee565b909155506111de9050565b6004870180546001600160a01b031916339081179091556000908152600388016020526040812080543492906111bd9084906124ee565b92505081905550348760050160008282546111d891906124ee565b90915550505b60078701546111f6906111f185426124ee565b6120d8565b600788015560035460009061120b90426124ee565b905080886007015410156112735760405162461bcd60e51b815260206004820152602960248201527f436c61696d207465726d696e6174696f6e20646964206e6f7420696e637265616044820152680e6ca40cadcdeeaced60bb1b60648201526084016107af565b87600001547f29fd2df293ba511e44ca47212c915137020231ed3ac0ee7bd02a7a655275ad378b8a60010160009054906101000a90046001600160a01b03168b600201548c60040160009054906101000a90046001600160a01b03168d600501548e600701548f600801546040516112f1979695949392919061256b565b60405180910390a250505050505050505050565b6000620f4240600d548361131991906125aa565b61132391906125c9565b92915050565b600082600554811115801561133e5750600081115b6113805760405162461bcd60e51b81526020600482015260136024820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b60448201526064016107af565b60008481526009602081905260409091209081015442106113d55760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b60448201526064016107af565b60068101546001600160a01b03161561142c5760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b60448201526064016107af565b60015434146114745760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081cdd185ad948185b5bdd5b9d60621b60448201526064016107af565b836114ba5760405162461bcd60e51b8152602060048201526016602482015275046696c6c4964206d757374206e6f74206265203078360541b60448201526064016107af565b600881018054600191906000906114db9084906001600160c01b03166125eb565b92506101000a8154816001600160c01b0302191690836001600160c01b0316021790555060016006600082825461151291906124ee565b9091555050600680546000908152600a60205260408120878155600180820180546001600160a01b0319908116331790915590546002808401919091556004830180549092169091556005820183905592810191909155905461157590426124ee565b600782018190556008820186905560065460018301546002840154600485015460058601546040518c967f29fd2df293ba511e44ca47212c915137020231ed3ac0ee7bd02a7a655275ad37966115e29690956001600160a01b039182169590949116929091908e9061256b565b60405180910390a25050600654949350505050565b600061160282611305565b61160b83611b00565b61132391906124ee565b6000546001600160a01b0316331461163f5760405162461bcd60e51b81526004016107af9061251f565b6001600160a01b0382166000908152600f60205260409020548061169c5760405162461bcd60e51b815260206004820152601460248201527350726f746f636f6c20666565206973207a65726f60601b60448201526064016107af565b6001600160a01b0383166000818152600f602052604081205583906116c29084846120f1565b50505050565b6000546001600160a01b031633146116f25760405162461bcd60e51b81526004016107af9061251f565b600081116117515760405162461bcd60e51b815260206004820152602660248201527f46696e616c69747920706572696f64206d75737420626520677265617465722060448201526507468616e20360d41b60648201526084016107af565b60008281526008602090815260409182902083905581518481529081018390527faba57b48b9f1dfd5747a52ed348a6ab6aa7bafb0575363a5cb7b62659f727b65910160405180910390a15050565b8060055481111580156117b35750600081115b6117f55760405162461bcd60e51b81526020600482015260136024820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b60448201526064016107af565b600082815260096020526040902060068101546001600160a01b03161561185a5760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b60448201526064016107af565b80600901544210156118ae5760405162461bcd60e51b815260206004820152601760248201527f52657175657374206e6f7420657870697265642079657400000000000000000060448201526064016107af565b60088101546001600160c01b0316156119015760405162461bcd60e51b815260206004820152601560248201527441637469766520636c61696d732072756e6e696e6760581b60448201526064016107af565b80546006820180546001600160a01b0319166001600160a01b0390921691821790556040805185815260208101929092527fa7b86597910aae75f7d99feb2f37420cc80d457465ffba0f8136d722a9f7095a910160405180910390a160018101548154600b830154600a84015460058501546001600160a01b03948516946116c29416929161198f916124ee565b61199991906124ee565b6001600160a01b03841691906120f1565b6000546001600160a01b031633146119d45760405162461bcd60e51b81526004016107af9061251f565b600e55565b6000546001600160a01b03163314611a035760405162461bcd60e51b81526004016107af9061251f565b60045460ff1615611a565760405162461bcd60e51b815260206004820152601b60248201527f436f6e747261637420616c72656164792064657072656361746564000000000060448201526064016107af565b6004805460ff19166001179055565b6000546001600160a01b03163314611a8f5760405162461bcd60e51b81526004016107af9061251f565b6001600160a01b038116611af45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107af565b611afd81612088565b50565b6000611323600b54620f4240600c5485611b1a91906125aa565b6111f191906125c9565b6000818152600a602090815260408083208054845260099092528220600282015460058301548493929190611b5981836124ee565b846006015410611bab5760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792077697468647261776e00000000000000000060448201526064016107af565b835460028401546003850154600486015460058701546040805160208082019790975246818301526060808201969096526bffffffffffffffffffffffff1994861b851660808201529290941b909216609482015260a8808201929092528251808203909201825260c80190915280519101206000611c55828760080154604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b60408051808201825260068801546001600160a01b0390811682526007808a0154602084015254925163a64a227160e01b815260048101879052939450600093919284928392919091169063a64a2271906024016040805180830381865afa158015611cc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce99190612616565b90925090506001600160a01b038216611d06575050805160208201515b60075460405163a751732f60e01b8152600481018790526001600160a01b039091169063a751732f90602401602060405180830381865afa158015611d4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d739190612644565b15611d815760009350611e13565b6001600160a01b03821615611db95760018a01546001600160a01b038381169116148015611db25750896008015481145b9350611e13565b8960070154421015611e0d5760405162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f742066696e69736865640000000000000060448201526064016107af565b86881193505b6000808515611e3e57611e26898b6124ee565b60018d01549092506001600160a01b03169050611ed7565b8815611ec65733600090815260038d016020526040902054611e619060026125aa565b915033905060008211611ec15760405162461bcd60e51b815260206004820152602260248201527f4368616c6c656e67657220686173206e6f7468696e6720746f20776974686472604482015261617760f01b60648201526084016107af565b611ed7565b505060005488906001600160a01b03165b60048c01546001600160a01b03163303611f2557888a1115611f0e57611efd898b612554565b611f0790836124ee565b9150611f25565b611f188a8a612554565b611f229083612554565b91505b9e909d509b505050505050505050505050565b60018101548154604080519182526001600160a01b0390921660208201819052917fa7b86597910aae75f7d99feb2f37420cc80d457465ffba0f8136d722a9f7095a910160405180910390a16040805180820182526001600160a01b03808416808352600886015460209384018190526006880180546001600160a01b0319169092179091556007870155600b86015460018701549091166000908152600f9092529181208054909190611fed9084906124ee565b90915550506001830154600a84015460058501546001600160a01b03909216916116c291849161199991906124ee565b6040516001600160a01b03808516602483015283166044820152606481018290526116c29085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612126565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818310156120e857816120ea565b825b9392505050565b6040516001600160a01b03831660248201526044810182905261212190849063a9059cbb60e01b90606401612051565b505050565b600061217b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121f89092919063ffffffff16565b80519091501561212157808060200190518101906121999190612644565b6121215760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107af565b6060612207848460008561220f565b949350505050565b6060824710156122705760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107af565b6001600160a01b0385163b6122c75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107af565b600080866001600160a01b031685876040516122e39190612692565b60006040518083038185875af1925050503d8060008114612320576040519150601f19603f3d011682016040523d82523d6000602084013e612325565b606091505b5091509150612335828286612340565b979650505050505050565b6060831561234f5750816120ea565b82511561235f5782518084602001fd5b8160405162461bcd60e51b81526004016107af91906126ae565b60006020828403121561238b57600080fd5b5035919050565b6001600160a01b0381168114611afd57600080fd5b60008060008060008060c087890312156123c057600080fd5b8635955060208701356123d281612392565b945060408701356123e281612392565b935060608701356123f281612392565b9598949750929560808101359460a0909101359350915050565b60006020828403121561241e57600080fd5b81356120ea81612392565b60008060006060848603121561243e57600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561246857600080fd5b50508035926020909101359150565b6000806040838503121561248a57600080fd5b823561249581612392565b915060208301356124a581612392565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b60006001600160c01b03838116908316818110156124e6576124e66124b0565b039392505050565b60008219821115612501576125016124b0565b500190565b60006020828403121561251857600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015612566576125666124b0565b500390565b9687526001600160a01b0395861660208801526040870194909452919093166060850152608084019290925260a083019190915260c082015260e00190565b60008160001904831182151516156125c4576125c46124b0565b500290565b6000826125e657634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160c01b0382811684821680830382111561260d5761260d6124b0565b01949350505050565b6000806040838503121561262957600080fd5b825161263481612392565b6020939093015192949293505050565b60006020828403121561265657600080fd5b815180151581146120ea57600080fd5b60005b83811015612681578181015183820152602001612669565b838111156116c25750506000910152565b600082516126a4818460208701612666565b9190910192915050565b60208152600082518060208401526126cd816040850160208701612666565b601f01601f1916919091016040019291505056fea2646970667358221220583867364ff57fbedd3d4b40f06e5ac8195d6767a675456ea3dba9c2e71873b564736f6c634300080d0033",
  "deployedSourceMap": "762:24766:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4804:22;;;;;;;;;;-1:-1:-1;4804:22:8;;;;;;;;;;;179:14:11;;172:22;154:41;;142:2;127:18;4804:22:8;;;;;;;;4488:55;;;;;;;;;;;;4534:9;4488:55;;;;;352:25:11;;;340:2;325:18;4488:55:8;206:177:11;4392:39:8;;;;;;;;;;;;;;;;17387:1260;;;;;;;;;;-1:-1:-1;17387:1260:8;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;737:32:11;;;719:51;;707:2;692:18;17387:1260:8;573:203:11;8916:2064:8;;;;;;;;;;-1:-1:-1;8916:2064:8;;;;;:::i;:::-;;:::i;5251:50::-;;;;;;;;;;-1:-1:-1;5251:50:8;;;;;:::i;:::-;;;;;;;;;;;;;;4983:27;;;;;;;;;;;;;;;;5564:33;;;;;;;;;;;;;;;;6164:56;;;;;;;;;;-1:-1:-1;6164:56:8;;;;;:::i;:::-;;;;;;;;;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;23891:256:8;;;;;;;;;;-1:-1:-1;23891:256:8;;;;;:::i;:::-;;:::i;3756:26::-;;;;;;;;;;;;;;;;5346:43;;;;;;;;;;-1:-1:-1;5346:43:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5346:43:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5346:43:8;;;;;;;;;-1:-1:-1;;;;;2767:15:11;;;2749:34;;2819:15;;;2814:2;2799:18;;;2792:43;;;;2851:18;;;2844:34;;;;2914:15;;;2909:2;2894:18;;2887:43;2967:15;;;2961:3;2946:19;;2939:44;2729:3;2999:19;;2992:35;;;;3068:13;;3064:22;;;3058:3;3043:19;;3036:51;3130:15;;;3124:22;3118:3;3103:19;;3096:51;-1:-1:-1;;;;;3184:32:11;;;3178:3;3163:19;;3156:61;3248:3;3233:19;;3226:35;;;;3292:3;3277:19;;3270:35;;;;3336:3;3321:19;;3314:36;;;;2698:3;2683:19;5346:43:8;2231:1125:11;1036:85:0;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;14764:2066:8;;;;;;:::i;:::-;;:::i;4600:56::-;;;;;;;;;;;;4646:10;4600:56;;4892:29;;;;;;;;;;;;;;;;6545:128;;;;;;;;;;-1:-1:-1;6545:128:8;;;;;:::i;:::-;;:::i;5430:39::-;;;;;;;;;;-1:-1:-1;5430:39:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5430:39:8;;;;;;;;;;;;;;;;;;;;3704:25:11;;;-1:-1:-1;;;;;3803:15:11;;;3798:2;3783:18;;3776:43;3835:18;;3828:34;;;;3898:15;;;;3893:2;3878:18;;3871:43;3945:3;3930:19;;3923:35;3756:3;3974:19;;3967:35;4033:3;4018:19;;4011:35;;;;4077:3;4062:19;;4055:35;3691:3;3676:19;5430:39:8;3361:735:11;5101:44:8;;;;;;;;;;-1:-1:-1;5101:44:8;;;;-1:-1:-1;;;;;5101:44:8;;;12285:1281;;;;;;:::i;:::-;;:::i;6845:123::-;;;;;;;;;;-1:-1:-1;6845:123:8;;;;;:::i;:::-;;:::i;23201:374::-;;;;;;;;;;-1:-1:-1;23201:374:8;;;;;:::i;:::-;;:::i;24741:324::-;;;;;;;;;;-1:-1:-1;24741:324:8;;;;;:::i;:::-;;:::i;11162:784::-;;;;;;;;;;-1:-1:-1;11162:784:8;;;;;:::i;:::-;;:::i;24354:123::-;;;;;;;;;;-1:-1:-1;24354:123:8;;;;;:::i;:::-;;:::i;5693:31::-;;;;;;;;;;;;;;;;5848:33;;;;;;;;;;;;;;;;25375:151;;;;;;;;;;;;;:::i;3675:25::-;;;;;;;;;;;;;;;;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;6319:136:8:-;;;;;;;;;;-1:-1:-1;6319:136:8;;;;;:::i;:::-;;:::i;6014:42::-;;;;;;;;;;;;;;;;17387:1260;17486:7;17460;7347:12;;7336:7;:23;;:38;;;;;7373:1;7363:7;:11;7336:38;7328:68;;;;-1:-1:-1;;;7328:68:8;;5437:2:11;7328:68:8;;;5419:21:11;5476:2;5456:18;;;5449:30;-1:-1:-1;;;5495:18:11;;;5488:47;5552:18;;7328:68:8;;;;;;;;;17509:19:::1;17531:15:::0;;;:6:::1;:15;::::0;;;;;;;17591;;17582:25;;:8:::1;:25:::0;;;;;17531:15;;17509:19;17667:21:::1;17538:7:::0;17667:12:::1;:21::i;:::-;-1:-1:-1::0;;;;;17703:38:8;::::1;17744:1;17703:38:::0;;;:23:::1;::::0;::::1;:38;::::0;;;;;17618:70;;-1:-1:-1;17618:70:8;-1:-1:-1;17703:42:8;17699:152:::1;;-1:-1:-1::0;;;;;17798:38:8;::::1;17839:1;17798:38:::0;;;:23:::1;::::0;::::1;:38;::::0;;;;:42;17699:152:::1;17936:5;:21;;;17961:1;17936:26:::0;17932:82:::1;;17978:20;::::0;::::1;:25:::0;;18002:1:::1;::::0;17978:20;::::1;::::0;:25:::1;::::0;18002:1;;-1:-1:-1;;;;;17978:25:8::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;17978:25:8::1;;;;;-1:-1:-1::0;;;;;17978:25:8::1;;;;;;17932:82;18048:13;18023:5;:21;;;:38;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;18154:26:8::1;::::0;::::1;::::0;18133:18:::1;::::0;::::1;::::0;:47:::1;::::0;18154:26;18133:47:::1;:::i;:::-;18092:5;:21;;;:88;;18071:163;;;::::0;-1:-1:-1;;;18071:163:8;;6284:2:11;18071:163:8::1;::::0;::::1;6266:21:11::0;6323:2;6303:18;;;6296:30;6362;6342:18;;;6335:58;6410:18;;18071:163:8::1;6082:352:11::0;18071:163:8::1;18246:9;18261:13;-1:-1:-1::0;;;;;18261:18:8::1;18287:13;18261:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18245:60;;;18323:4;18315:37;;;::::0;-1:-1:-1;;;18315:37:8;;6851:2:11;18315:37:8::1;::::0;::::1;6833:21:11::0;6890:2;6870:18;;;6863:30;-1:-1:-1;;;6909:18:11;;;6902:50;6969:18;;18315:37:8::1;6649:344:11::0;18315:37:8::1;18397:15:::0;;18368:60:::1;::::0;;7172:25:11;;;-1:-1:-1;;;;;7233:32:11;;7228:2;7213:18;;7206:60;18368::8::1;::::0;7145:18:11;18368:60:8::1;;;;;;;18456:20;::::0;::::1;:27:::0;-1:-1:-1;;;;;18456:27:8::1;:41:::0;:87;::::1;;;-1:-1:-1::0;18530:13:8::1;::::0;::::1;::::0;-1:-1:-1;;;;;18513:30:8;;::::1;18530:13:::0;::::1;18513:30;18456:87;18439:171;;;18568:31;18584:7;18593:5;18568:15;:31::i;:::-;-1:-1:-1::0;18627:13:8;;17387:1260;-1:-1:-1;;;;;;17387:1260:8:o;8916:2064::-;9180:10;;9153:7;;9180:10;;:19;9172:54;;;;-1:-1:-1;;;9172:54:8;;7479:2:11;9172:54:8;;;7461:21:11;7518:2;7498:18;;;7491:30;-1:-1:-1;;;7537:18:11;;;7530:52;7599:18;;9172:54:8;7277:346:11;9172:54:8;9257:30;;;;:15;:30;;;;;;:35;;9236:109;;;;-1:-1:-1;;;9236:109:8;;7830:2:11;9236:109:8;;;7812:21:11;7869:2;7849:18;;;7842:30;7908:29;7888:18;;;7881:57;7955:18;;9236:109:8;7628:351:11;9236:109:8;4534:9;9376:14;:37;;9355:109;;;;-1:-1:-1;;;9355:109:8;;8186:2:11;9355:109:8;;;8168:21:11;8225:2;8205:18;;;8198:30;8264:27;8244:18;;;8237:55;8309:18;;9355:109:8;7984:349:11;9355:109:8;4646:10;9495:14;:37;;9474:108;;;;-1:-1:-1;;;9474:108:8;;8540:2:11;9474:108:8;;;8522:21:11;8579:2;8559:18;;;8552:30;8618:26;8598:18;;;8591:54;8662:18;;9474:108:8;8338:348:11;9474:108:8;9610:13;;9600:6;:23;;9592:65;;;;-1:-1:-1;;;9592:65:8;;8893:2:11;9592:65:8;;;8875:21:11;8932:2;8912:18;;;8905:30;8971:31;8951:18;;;8944:59;9020:18;;9592:65:8;8691:353:11;9592:65:8;9690:18;9668:12;9736:13;9742:6;9736:5;:13::i;:::-;9720:29;;9759:19;9781;9793:6;9781:11;:19::i;:::-;9759:41;-1:-1:-1;9810:24:8;9759:41;9837:14;9846:5;9837:6;:14;:::i;:::-;:28;;;;:::i;:::-;9897:42;;-1:-1:-1;;;9897:42:8;;9913:10;9897:42;;;9261:34:11;9933:4:8;9311:18:11;;;9304:43;9810:55:8;;-1:-1:-1;9810:55:8;;-1:-1:-1;;;;;9897:15:8;;;;;9196:18:11;;9897:42:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;9876:131;;;;-1:-1:-1;;;9876:131:8;;9749:2:11;9876:131:8;;;9731:21:11;9788:2;9768:18;;;9761:30;-1:-1:-1;;;9807:18:11;;;9800:52;9869:18;;9876:131:8;9547:346:11;9876:131:8;10036:1;10018:14;;:19;;;;;;;:::i;:::-;;;;;;;;10047:26;10076:8;:24;10085:14;;10076:24;;;;;;;;;;;10047:53;;10130:10;10110;:17;;;:30;;;;;-1:-1:-1;;;;;10110:30:8;;;;;-1:-1:-1;;;;;10110:30:8;;;;;;10182:18;10150:10;:29;;;:50;;;;;-1:-1:-1;;;;;10150:50:8;;;;;-1:-1:-1;;;;;10150:50:8;;;;;;10237:13;10210:10;:24;;:40;;;;10292:18;10260:10;:29;;;:50;;;;;-1:-1:-1;;;;;10260:50:8;;;;;-1:-1:-1;;;;;10260:50:8;;;;;;10347:13;10320:10;:24;;;:40;;;;;-1:-1:-1;;;;;10320:40:8;;;;;-1:-1:-1;;;;;10320:40:8;;;;;;10390:6;10370:10;:17;;:26;;;;10432:44;;;;;;;;10461:1;-1:-1:-1;;;;;10432:44:8;;;;;10473:1;10465:10;;10432:44;;;10406:10;:23;;:70;;;;;;;;;;;;;-1:-1:-1;;;;;10406:70:8;;;;;-1:-1:-1;;;;;10406:70:8;;;;;;;;;;;;;;;;;10528:14;10510:15;:32;;;;:::i;:::-;10486:21;;;:56;;;10552:16;;;:24;;;10586:22;;;:36;;;10666:14;;10638:225;;;10213:25:11;;;10269:2;10254:18;;10247:34;;;-1:-1:-1;;;;;10355:15:11;;;10335:18;;;10328:43;10407:15;;;10402:2;10387:18;;10380:43;10460:15;;10454:3;10439:19;;10432:44;10308:3;10492:19;;10485:35;;;10551:3;10536:19;;10529:35;;;;10638:225:8;;;;;;;10200:3:11;10638:225:8;;;10874:67;-1:-1:-1;;;;;10874:22:8;;10897:10;10917:4;10924:16;10874:22;:67::i;:::-;-1:-1:-1;;10959:14:8;;;8916:2064;-1:-1:-1;;;;;;;;;;8916:2064:8:o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;23891:256:8:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;24042:14:8::1;:34:::0;;;;24086:8:::1;:22:::0;24118:8:::1;:22:::0;23891:256::o;14764:2066::-;14859:7;7347:12;;7336:7;:23;;:38;;;;;7373:1;7363:7;:11;7336:38;7328:68;;;;-1:-1:-1;;;7328:68:8;;5437:2:11;7328:68:8;;;5419:21:11;5476:2;5456:18;;;5449:30;-1:-1:-1;;;5495:18:11;;;5488:47;5552:18;;7328:68:8;5235:341:11;7328:68:8;14882:19:::1;14904:15:::0;;;:6:::1;:15;::::0;;;;;;;14964;;14955:25;;:8:::1;:25:::0;;;;;;15016:17:::1;::::0;::::1;::::0;14998:15:::1;:35;14990:61;;;::::0;-1:-1:-1;;;14990:61:8;;11138:2:11;14990:61:8::1;::::0;::::1;11120:21:11::0;11177:2;11157:18;;;11150:30;-1:-1:-1;;;11196:18:11;;;11189:43;11249:18;;14990:61:8::1;10936:337:11::0;14990:61:8::1;15141:24;::::0;15198:18:::1;::::0;::::1;::::0;15257:26:::1;::::0;::::1;::::0;15062:17:::1;::::0;;;15141:24;;15298:35;;::::1;15294:495;;;15353:20;15377:1;15353:25:::0;15349:121:::1;;15433:21;::::0;::::1;::::0;15417:38:::1;::::0;;;:15:::1;:38;::::0;;;;;15398:57:::1;::::0;;::::1;:::i;:::-;;;15349:121;15491:13;::::0;::::1;::::0;15508:10:::1;-1:-1:-1::0;;;;;15491:13:8;;::::1;:27:::0;15483:66:::1;;;::::0;-1:-1:-1;;;15483:66:8;;11480:2:11;15483:66:8::1;::::0;::::1;11462:21:11::0;11519:2;11499:18;;;11492:30;11558:28;11538:18;;;11531:56;11604:18;;15483:66:8::1;11278:350:11::0;15483:66:8::1;15575:10;::::0;-1:-1:-1;15610:35:8::1;15625:20:::0;15610:12;:35:::1;:::i;:::-;:39;::::0;15648:1:::1;15610:39;:::i;:::-;15599:50;;15294:495;;;15692:13;::::0;;::::1;::::0;15768:10;;-1:-1:-1;;;;;15692:13:8;;::::1;::::0;-1:-1:-1;15730:35:8::1;15753:12:::0;15730:20;:35:::1;:::i;:::-;:48;;;;:::i;:::-;15719:59;;15294:495;15807:10;-1:-1:-1::0;;;;;15807:23:8;::::1;;15799:58;;;::::0;-1:-1:-1;;;15799:58:8;;11965:2:11;15799:58:8::1;::::0;::::1;11947:21:11::0;12004:2;11984:18;;;11977:30;-1:-1:-1;;;12023:18:11;;;12016:52;12085:18;;15799:58:8::1;11763:346:11::0;15799:58:8::1;15888:8;15875:9;:21;;15867:59;;;::::0;-1:-1:-1;;;15867:59:8;;12316:2:11;15867:59:8::1;::::0;::::1;12298:21:11::0;12355:2;12335:18;;;12328:30;12394:27;12374:18;;;12367:55;12439:18;;15867:59:8::1;12114:349:11::0;15867:59:8::1;15954:13;::::0;::::1;::::0;-1:-1:-1;;;;;15954:13:8;;::::1;15941:26:::0;;::::1;::::0;15937:267:::1;;16005:9;15983:5;:18;;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;15937:267:8::1;::::0;-1:-1:-1;15937:267:8::1;;16045:20;::::0;::::1;:33:::0;;-1:-1:-1;;;;;;16045:33:8::1;16068:10;16045:33:::0;;::::1;::::0;;;:20:::1;16092:35:::0;;;:23:::1;::::0;::::1;:35;::::0;;;;:48;;16131:9:::1;::::0;16045:20;16092:48:::1;::::0;16131:9;;16092:48:::1;:::i;:::-;;;;;;;;16184:9;16154:5;:26;;;:39;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;15937:267:8::1;16256:17;::::0;::::1;::::0;16234:96:::1;::::0;16287:33:::1;16305:15:::0;16287::::1;:33;:::i;:::-;16234:8;:96::i;:::-;16214:17;::::0;::::1;:116:::0;16387:24:::1;::::0;16340:26:::1;::::0;16369:42:::1;::::0;:15:::1;:42;:::i;:::-;16340:71;;16463:18;16442:5;:17;;;:39;;16421:127;;;::::0;-1:-1:-1;;;16421:127:8;;12670:2:11;16421:127:8::1;::::0;::::1;12652:21:11::0;12709:2;12689:18;;;12682:30;12748:34;12728:18;;;12721:62;-1:-1:-1;;;12799:18:11;;;12792:39;12848:19;;16421:127:8::1;12468:405:11::0;16421:127:8::1;16587:5;:15;;;16564:259;16616:7;16637:5;:13;;;;;;;;;;-1:-1:-1::0;;;;;16637:13:8::1;16664:5;:18;;;16696:5;:20;;;;;;;;;;-1:-1:-1::0;;;;;16696:20:8::1;16730:5;:26;;;16770:5;:17;;;16801:5;:12;;;16564:259;;;;;;;;;;;;:::i;:::-;;;;;;;;14872:1958;;;;;;;;14764:2066:::0;;:::o;6545:128::-;6603:7;6657:9;6639:14;;6630:6;:23;;;;:::i;:::-;6629:37;;;;:::i;:::-;6622:44;6545:128;-1:-1:-1;;6545:128:8:o;12285:1281::-;12426:7;12398:9;7130:14;;7117:9;:27;;:44;;;;;7160:1;7148:9;:13;7117:44;7096:110;;;;-1:-1:-1;;;7096:110:8;;14143:2:11;7096:110:8;;;14125:21:11;14182:2;14162:18;;;14155:30;-1:-1:-1;;;14201:18:11;;;14194:49;14260:18;;7096:110:8;13941:343:11;7096:110:8;12449:23:::1;12475:19:::0;;;:8:::1;:19;::::0;;;;;;;12531:18;;::::1;::::0;12513:15:::1;:36;12505:64;;;::::0;-1:-1:-1;;;12505:64:8;;14491:2:11;12505:64:8::1;::::0;::::1;14473:21:11::0;14530:2;14510:18;;;14503:30;-1:-1:-1;;;14549:18:11;;;14542:45;14604:18;;12505:64:8::1;14289:339:11::0;12505:64:8::1;12600:20;::::0;::::1;:27:::0;-1:-1:-1;;;;;12600:27:8::1;:41:::0;12579:113:::1;;;::::0;-1:-1:-1;;;12579:113:8;;14835:2:11;12579:113:8::1;::::0;::::1;14817:21:11::0;14874:2;14854:18;;;14847:30;-1:-1:-1;;;14893:18:11;;;14886:55;14958:18;;12579:113:8::1;14633:349:11::0;12579:113:8::1;12723:10;;12710:9;:23;12702:56;;;::::0;-1:-1:-1;;;12702:56:8;;15189:2:11;12702:56:8::1;::::0;::::1;15171:21:11::0;15228:2;15208:18;;;15201:30;-1:-1:-1;;;15247:18:11;;;15240:50;15307:18;;12702:56:8::1;14987:344:11::0;12702:56:8::1;12776:6:::0;12768:55:::1;;;::::0;-1:-1:-1;;;12768:55:8;;15538:2:11;12768:55:8::1;::::0;::::1;15520:21:11::0;15577:2;15557:18;;;15550:30;-1:-1:-1;;;15596:18:11;;;15589:52;15658:18;;12768:55:8::1;15336:346:11::0;12768:55:8::1;12834:20;::::0;::::1;:25:::0;;12858:1:::1;::::0;12834:20;::::1;::::0;:25:::1;::::0;12858:1;;-1:-1:-1;;;;;12834:25:8::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;12834:25:8::1;;;;;-1:-1:-1::0;;;;;12834:25:8::1;;;;;;12885:1;12869:12;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;12926:12:8::1;::::0;;12897:19:::1;12919:20:::0;;;:6:::1;:20;::::0;;;;12949:27;;;12986:13:::1;::::0;;::::1;:26:::0;;-1:-1:-1;;;;;;12986:26:8;;::::1;13002:10;12986:26;::::0;;;13043:10;;13022:18:::1;::::0;;::::1;:31:::0;;;;13063:20:::1;::::0;::::1;:33:::0;;;;::::1;::::0;;;13106:26:::1;::::0;::::1;:30:::0;;;13146:21;;::::1;:25:::0;;;;13219:11;;13201:29:::1;::::0;:15:::1;:29;:::i;:::-;13181:17;::::0;::::1;:49:::0;;;13240:12:::1;::::0;::::1;:21:::0;;;13323:12:::1;::::0;13349:13:::1;::::0;::::1;::::0;13376:18:::1;::::0;::::1;::::0;13408:20:::1;::::0;::::1;::::0;13442:26:::1;::::0;::::1;::::0;13277:252:::1;::::0;13300:9;;13277:252:::1;::::0;::::1;::::0;13323:12;;-1:-1:-1;;;;;13349:13:8;;::::1;::::0;13376:18;;13408:20;::::1;::::0;13442:26;;13181:49;13255:6;;13277:252:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;13547:12:8::1;::::0;;12285:1281;-1:-1:-1;;;;12285:1281:8:o;6845:123::-;6900:7;6942:19;6954:6;6942:11;:19::i;:::-;6926:13;6932:6;6926:5;:13::i;:::-;:35;;;;:::i;23201:374::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;23338:35:8;::::1;23321:14;23338:35:::0;;;:21:::1;:35;::::0;;;;;23391:10;23383:43:::1;;;::::0;-1:-1:-1;;;23383:43:8;;16132:2:11;23383:43:8::1;::::0;::::1;16114:21:11::0;16171:2;16151:18;;;16144:30;-1:-1:-1;;;16190:18:11;;;16183:50;16250:18;;23383:43:8::1;15930:344:11::0;23383:43:8::1;-1:-1:-1::0;;;;;23436:35:8;::::1;23474:1;23436:35:::0;;;:21:::1;:35;::::0;;;;:39;23458:12;;23531:37:::1;::::0;23550:9;23561:6;23531:18:::1;:37::i;:::-;23311:264;;23201:374:::0;;:::o;24741:324::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;24889:1:8::1;24872:14;:18;24864:69;;;::::0;-1:-1:-1;;;24864:69:8;;16481:2:11;24864:69:8::1;::::0;::::1;16463:21:11::0;16520:2;16500:18;;;16493:30;16559:34;16539:18;;;16532:62;-1:-1:-1;;;16610:18:11;;;16603:36;16656:19;;24864:69:8::1;16279:402:11::0;24864:69:8::1;24943:30;::::0;;;:15:::1;:30;::::0;;;;;;;;:47;;;25006:52;;16860:25:11;;;16901:18;;;16894:34;;;25006:52:8::1;::::0;16833:18:11;25006:52:8::1;;;;;;;24741:324:::0;;:::o;11162:784::-;11253:9;7130:14;;7117:9;:27;;:44;;;;;7160:1;7148:9;:13;7117:44;7096:110;;;;-1:-1:-1;;;7096:110:8;;14143:2:11;7096:110:8;;;14125:21:11;14182:2;14162:18;;;14155:30;-1:-1:-1;;;14201:18:11;;;14194:49;14260:18;;7096:110:8;13941:343:11;7096:110:8;11278:23:::1;11304:19:::0;;;:8:::1;:19;::::0;;;;11355:20:::1;::::0;::::1;:27:::0;-1:-1:-1;;;;;11355:27:8::1;:41:::0;11334:113:::1;;;::::0;-1:-1:-1;;;11334:113:8;;14835:2:11;11334:113:8::1;::::0;::::1;14817:21:11::0;14874:2;14854:18;;;14847:30;-1:-1:-1;;;14893:18:11;;;14886:55;14958:18;;11334:113:8::1;14633:349:11::0;11334:113:8::1;11497:7;:18;;;11478:15;:37;;11457:107;;;::::0;-1:-1:-1;;;11457:107:8;;17141:2:11;11457:107:8::1;::::0;::::1;17123:21:11::0;17180:2;17160:18;;;17153:30;17219:25;17199:18;;;17192:53;17262:18;;11457:107:8::1;16939:347:11::0;11457:107:8::1;11582:20;::::0;::::1;::::0;-1:-1:-1;;;;;11582:20:8::1;:25:::0;11574:59:::1;;;::::0;-1:-1:-1;;;11574:59:8;;17493:2:11;11574:59:8::1;::::0;::::1;17475:21:11::0;17532:2;17512:18;;;17505:30;-1:-1:-1;;;17551:18:11;;;17544:51;17612:18;;11574:59:8::1;17291:345:11::0;11574:59:8::1;11674:14:::0;;11644:20:::1;::::0;::::1;:44:::0;;-1:-1:-1;;;;;;11644:44:8::1;-1:-1:-1::0;;;;;11674:14:8;;::::1;11644:44:::0;;::::1;::::0;;11704:43:::1;::::0;;7172:25:11;;;7228:2;7213:18;;7206:60;;;;11704:43:8::1;::::0;7145:18:11;11704:43:8::1;;;;;;;11780:26;::::0;::::1;::::0;11849:14;;11910:19:::1;::::0;::::1;::::0;11894:13:::1;::::0;::::1;::::0;11877:14:::1;::::0;::::1;::::0;-1:-1:-1;;;;;11780:26:8;;::::1;::::0;11817:122:::1;::::0;11849:14:::1;::::0;11910:19;11877:30:::1;::::0;::::1;:::i;:::-;:52;;;;:::i;:::-;-1:-1:-1::0;;;;;11817:18:8;::::1;::::0;:122;:18:::1;:122::i;24354:123::-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;24438:13:8::1;:32:::0;24354:123::o;25375:151::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;25441:10:8::1;::::0;::::1;;:19;25433:59;;;::::0;-1:-1:-1;;;25433:59:8;;17843:2:11;25433:59:8::1;::::0;::::1;17825:21:11::0;17882:2;17862:18;;;17855:30;17921:29;17901:18;;;17894:57;17968:18;;25433:59:8::1;17641:351:11::0;25433:59:8::1;25502:10;:17:::0;;-1:-1:-1;;25502:17:8::1;25515:4;25502:17;::::0;;25375:151::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;18199:2:11;1998:73:0::1;::::0;::::1;18181:21:11::0;18238:2;18218:18;;;18211:30;18277:34;18257:18;;;18250:62;-1:-1:-1;;;18328:18:11;;;18321:36;18374:19;;1998:73:0::1;17997:402:11::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6319:136:8:-;6371:7;6397:51;6406:8;;6438:9;6426:8;;6417:6;:17;;;;:::i;:::-;6416:31;;;;:::i;18653:3701::-;18738:7;18792:15;;;:6;:15;;;;;;;;18852;;18843:25;;:8;:25;;;;;18901:18;;;;18960:26;;;;18738:7;;18792:15;18843:25;18901:18;19041:35;18960:26;18901:18;19041:35;:::i;:::-;19017:5;:21;;;:59;18996:129;;;;-1:-1:-1;;;18996:129:8;;18606:2:11;18996:129:8;;;18588:21:11;18645:2;18625:18;;;18618:30;18684:25;18664:18;;;18657:53;18727:18;;18996:129:8;18404:347:11;18996:129:8;19201:15;;19257:21;;;;19292:26;;;;19332:21;;;;19367:14;;;;470:246:6;;;;;;;21222:19:11;;;;19230:13:8;21257:12:11;;;21250:28;21294:12;;;;21287:28;;;;-1:-1:-1;;21399:15:11;;;;;21381:12;;;21374:46;21455:15;;;;;;;21436:13;;;21429:47;21492:13;;;;21485:29;;;;470:246:6;;;;;;;;;;21530:13:11;;470:246:6;;;443:287;;;;;19402:16:8;19421:87;19461:11;19486:5;:12;;;891:37:6;;;;;;;21711:19:11;;;;21746:12;;;21739:28;;;;891:37:6;;;;;;;;;21783:12:11;;;;891:37:6;;881:48;;;;;;743:193;19421:87:8;19552:63;;;;;;;;19595:20;;;19552:63;-1:-1:-1;;;;;19552:63:8;;;;;;;;;;;;;;20080:18;:61;;-1:-1:-1;;;20080:61:8;;;;;352:25:11;;;19402:106:8;;-1:-1:-1;;;19552:63:8;;-1:-1:-1;;;;20080:18:8;;;;;:26;;325:18:11;;20080:61:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20045:96;;-1:-1:-1;20045:96:8;-1:-1:-1;;;;;;20156:20:8;;20152:112;;-1:-1:-1;;20212:19:8;;20233;;;;20152:112;20278:18;;:46;;-1:-1:-1;;;20278:46:8;;;;;352:25:11;;;-1:-1:-1;;;;;20278:18:8;;;;:36;;325:18:11;;20278:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20274:550;;;20392:5;20379:18;;20274:550;;;-1:-1:-1;;;;;20418:20:8;;;20414:410;;20522:13;;;;-1:-1:-1;;;;;20512:23:8;;;20522:13;;20512:23;:49;;;;;20549:5;:12;;;20539:6;:22;20512:49;20499:62;;20414:410;;;20675:5;:17;;;20656:15;:36;;20631:120;;;;-1:-1:-1;;;20631:120:8;;19739:2:11;20631:120:8;;;19721:21:11;19778:2;19758:18;;;19751:30;19817:27;19797:18;;;19790:55;19862:18;;20631:120:8;19537:349:11;20631:120:8;20793:20;20778:12;:35;20765:48;;20414:410;20888:21;20919;20955:10;20951:777;;;21060:35;21075:20;21060:12;:35;:::i;:::-;21125:13;;;;21044:51;;-1:-1:-1;;;;;;21125:13:8;;-1:-1:-1;20951:777:8;;;21159:24;;21155:573;;21312:10;21288:35;;;;:23;;;:35;;;;;;21284:39;;:1;:39;:::i;:::-;21268:55;;21353:10;21337:26;;21402:1;21386:13;:17;21378:64;;;;-1:-1:-1;;;21378:64:8;;20093:2:11;21378:64:8;;;20075:21:11;20132:2;20112:18;;;20105:30;20171:34;20151:18;;;20144:62;-1:-1:-1;;;20222:18:11;;;20215:32;20264:19;;21378:64:8;19891:398:11;21378:64:8;21155:573;;;-1:-1:-1;;1082:7:0;1108:6;21668:12:8;;-1:-1:-1;;;;;1108:6:0;21155:573:8;22033:20;;;;-1:-1:-1;;;;;22033:20:8;22019:10;:34;22015:285;;22088:20;22073:12;:35;22069:221;;;22146:35;22161:20;22146:12;:35;:::i;:::-;22128:54;;;;:::i;:::-;;;22069:221;;;22239:35;22262:12;22239:20;:35;:::i;:::-;22221:54;;;;:::i;:::-;;;22069:221;22318:13;22333;;-1:-1:-1;18653:3701:8;-1:-1:-1;;;;;;;;;;;;18653:3701:8:o;22360:498::-;22479:13;;;;22524:15;;22507:42;;;7172:25:11;;;-1:-1:-1;;;;;22479:13:8;;;7228:2:11;7213:18;;7206:60;;;22479:13:8;22507:42;;7145:18:11;22507:42:8;;;;;;;22583:43;;;;;;;;-1:-1:-1;;;;;22583:43:8;;;;;;22613:12;;;;22583:43;;;;;;;22560:20;;;:66;;-1:-1:-1;;;;;;22560:66:8;;;;;;;;;;;22690:32;;;;22560:66;22659:26;;;;;;-1:-1:-1;22637:49:8;;;:21;:49;;;;;;:85;;:49;;-1:-1:-1;22637:85:8;;22690:32;;22637:85;:::i;:::-;;;;-1:-1:-1;;22755:26:8;;;;22837:13;;;;22820:14;;;;-1:-1:-1;;;;;22755:26:8;;;;22792:59;;22811:7;;22820:30;;22837:13;22820:30;:::i;912:241:2:-;1077:68;;-1:-1:-1;;;;;20552:15:11;;;1077:68:2;;;20534:34:11;20604:15;;20584:18;;;20577:43;20636:18;;;20629:34;;;1050:96:2;;1070:5;;-1:-1:-1;;;1100:27:2;20469:18:11;;1077:68:2;;;;-1:-1:-1;;1077:68:2;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:2;-1:-1:-1;;;;;;1077:68:2;;;;;;;;;;1050:19;:96::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;285:105:5:-;343:7;374:1;369;:6;;:14;;382:1;369:14;;;378:1;369:14;362:21;285:105;-1:-1:-1;;;285:105:5:o;701:205:2:-;840:58;;-1:-1:-1;;;;;20866:32:11;;840:58:2;;;20848:51:11;20915:18;;;20908:34;;;813:86:2;;833:5;;-1:-1:-1;;;863:23:2;20821:18:11;;840:58:2;20674:274:11;813:86:2;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:2;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:2;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:2;;22008:2:11;3811:85:2;;;21990:21:11;22047:2;22027:18;;;22020:30;22086:34;22066:18;;;22059:62;-1:-1:-1;;;22137:18:11;;;22130:40;22187:19;;3811:85:2;21806:406:11;3861:223:3;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:3:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;22419:2:11;5137:81:3;;;22401:21:11;22458:2;22438:18;;;22431:30;22497:34;22477:18;;;22470:62;-1:-1:-1;;;22548:18:11;;;22541:36;22594:19;;5137:81:3;22217:402:11;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;22826:2:11;5228:60:3;;;22808:21:11;22865:2;22845:18;;;22838:30;22904:31;22884:18;;;22877:59;22953:18;;5228:60:3;22624:353:11;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:3:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:3;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:3;;;;;;;;:::i;388:180:11:-;447:6;500:2;488:9;479:7;475:23;471:32;468:52;;;516:1;513;506:12;468:52;-1:-1:-1;539:23:11;;388:180;-1:-1:-1;388:180:11:o;781:131::-;-1:-1:-1;;;;;856:31:11;;846:42;;836:70;;902:1;899;892:12;917:736;1021:6;1029;1037;1045;1053;1061;1114:3;1102:9;1093:7;1089:23;1085:33;1082:53;;;1131:1;1128;1121:12;1082:53;1167:9;1154:23;1144:33;;1227:2;1216:9;1212:18;1199:32;1240:31;1265:5;1240:31;:::i;:::-;1290:5;-1:-1:-1;1347:2:11;1332:18;;1319:32;1360:33;1319:32;1360:33;:::i;:::-;1412:7;-1:-1:-1;1471:2:11;1456:18;;1443:32;1484:33;1443:32;1484:33;:::i;:::-;917:736;;;;-1:-1:-1;917:736:11;;1590:3;1575:19;;1562:33;;1642:3;1627:19;;;1614:33;;-1:-1:-1;917:736:11;-1:-1:-1;;917:736:11:o;1658:247::-;1717:6;1770:2;1758:9;1749:7;1745:23;1741:32;1738:52;;;1786:1;1783;1776:12;1738:52;1825:9;1812:23;1844:31;1869:5;1844:31;:::i;1910:316::-;1987:6;1995;2003;2056:2;2044:9;2035:7;2031:23;2027:32;2024:52;;;2072:1;2069;2062:12;2024:52;-1:-1:-1;;2095:23:11;;;2165:2;2150:18;;2137:32;;-1:-1:-1;2216:2:11;2201:18;;;2188:32;;1910:316;-1:-1:-1;1910:316:11:o;4336:248::-;4404:6;4412;4465:2;4453:9;4444:7;4440:23;4436:32;4433:52;;;4481:1;4478;4471:12;4433:52;-1:-1:-1;;4504:23:11;;;4574:2;4559:18;;;4546:32;;-1:-1:-1;4336:248:11:o;4589:388::-;4657:6;4665;4718:2;4706:9;4697:7;4693:23;4689:32;4686:52;;;4734:1;4731;4724:12;4686:52;4773:9;4760:23;4792:31;4817:5;4792:31;:::i;:::-;4842:5;-1:-1:-1;4899:2:11;4884:18;;4871:32;4912:33;4871:32;4912:33;:::i;:::-;4964:7;4954:17;;;4589:388;;;;;:::o;5581:127::-;5642:10;5637:3;5633:20;5630:1;5623:31;5673:4;5670:1;5663:15;5697:4;5694:1;5687:15;5713:231;5753:4;-1:-1:-1;;;;;5851:10:11;;;;5821;;5873:12;;;5870:38;;;5888:18;;:::i;:::-;5925:13;;5713:231;-1:-1:-1;;;5713:231:11:o;5949:128::-;5989:3;6020:1;6016:6;6013:1;6010:13;6007:39;;;6026:18;;:::i;:::-;-1:-1:-1;6062:9:11;;5949:128::o;9358:184::-;9428:6;9481:2;9469:9;9460:7;9456:23;9452:32;9449:52;;;9497:1;9494;9487:12;9449:52;-1:-1:-1;9520:16:11;;9358:184;-1:-1:-1;9358:184:11:o;10575:356::-;10777:2;10759:21;;;10796:18;;;10789:30;10855:34;10850:2;10835:18;;10828:62;10922:2;10907:18;;10575:356::o;11633:125::-;11673:4;11701:1;11698;11695:8;11692:34;;;11706:18;;:::i;:::-;-1:-1:-1;11743:9:11;;11633:125::o;12878:663::-;13193:25;;;-1:-1:-1;;;;;13292:15:11;;;13287:2;13272:18;;13265:43;13339:2;13324:18;;13317:34;;;;13387:15;;;;13382:2;13367:18;;13360:43;13434:3;13419:19;;13412:35;;;;13245:3;13463:19;;13456:35;;;;13522:3;13507:19;;13500:35;13180:3;13165:19;;12878:663::o;13546:168::-;13586:7;13652:1;13648;13644:6;13640:14;13637:1;13634:21;13629:1;13622:9;13615:17;13611:45;13608:71;;;13659:18;;:::i;:::-;-1:-1:-1;13699:9:11;;13546:168::o;13719:217::-;13759:1;13785;13775:132;;13829:10;13824:3;13820:20;13817:1;13810:31;13864:4;13861:1;13854:15;13892:4;13889:1;13882:15;13775:132;-1:-1:-1;13921:9:11;;13719:217::o;15687:238::-;15727:3;-1:-1:-1;;;;;15794:10:11;;;15824;;;15854:12;;;15846:21;;15843:47;;;15870:18;;:::i;:::-;15906:13;;15687:238;-1:-1:-1;;;;15687:238:11:o;18938:312::-;19017:6;19025;19078:2;19066:9;19057:7;19053:23;19049:32;19046:52;;;19094:1;19091;19084:12;19046:52;19126:9;19120:16;19145:31;19170:5;19145:31;:::i;:::-;19240:2;19225:18;;;;19219:25;19195:5;;19219:25;;-1:-1:-1;;;18938:312:11:o;19255:277::-;19322:6;19375:2;19363:9;19354:7;19350:23;19346:32;19343:52;;;19391:1;19388;19381:12;19343:52;19423:9;19417:16;19476:5;19469:13;19462:21;19455:5;19452:32;19442:60;;19498:1;19495;19488:12;22982:258;23054:1;23064:113;23078:6;23075:1;23072:13;23064:113;;;23154:11;;;23148:18;23135:11;;;23128:39;23100:2;23093:10;23064:113;;;23195:6;23192:1;23189:13;23186:48;;;-1:-1:-1;;23230:1:11;23212:16;;23205:27;22982:258::o;23245:274::-;23374:3;23412:6;23406:13;23428:53;23474:6;23469:3;23462:4;23454:6;23450:17;23428:53;:::i;:::-;23497:16;;;;;23245:274;-1:-1:-1;;23245:274:11:o;23524:383::-;23673:2;23662:9;23655:21;23636:4;23705:6;23699:13;23748:6;23743:2;23732:9;23728:18;23721:34;23764:66;23823:6;23818:2;23807:9;23803:18;23798:2;23790:6;23786:15;23764:66;:::i;:::-;23891:2;23870:15;-1:-1:-1;;23866:29:11;23851:45;;;;23898:2;23847:54;;23524:383;-1:-1:-1;;23524:383:11:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "ClaimMade(uint256,uint256,address,uint256,address,uint256,uint256,bytes32)": {
        "notice": "Emitted when a claim or a counter-claim (challenge) has been made. .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`"
      },
      "ClaimStakeWithdrawn(uint256,uint256,address)": {
        "notice": "Emitted when staked native tokens tied to a claim have been withdrawn. This can only happen when the claim has been resolved and the caller of :sol:func:`withdraw` is allowed to withdraw their stake. .. seealso:: :sol:func:`withdraw`"
      },
      "DepositWithdrawn(uint256,address)": {
        "notice": "Emitted when the token deposit for request ``requestId`` has been transferred to the ``receiver``. This can happen in two cases:  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`  * a claim related to the request has been resolved successfully in favor of the claimer .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`"
      },
      "RequestCreated(uint256,uint256,address,address,address,uint256,uint256)": {
        "notice": "Emitted when a new request has been created. .. seealso:: :sol:func:`createRequest`"
      }
    },
    "kind": "dev",
    "methods": {
      "MAX_VALIDITY_PERIOD()": {
        "notice": "The maximum validity period of a request."
      },
      "MIN_VALIDITY_PERIOD()": {
        "notice": "The minimum validity period of a request."
      },
      "challengeClaim(uint256)": {
        "notice": "Challenge an existing claim. The claim must still be valid at call time. This function implements one round of the challenge game. The original claimer is allowed to call this function only after someone else made a challenge, i.e. every second round. However, once the original claimer counter-challenges, anyone can join the game and make another challenge. The caller must provide enough native tokens as their stake. For the original claimer, the minimum stake is ``challengerStakeTotal - claimerStake + claimStake``. For challengers, the minimum stake is ``claimerStake - challengerStakeTotal + 1``. An example (time flows downwards, claimStake = 10)::   claimRequest() by Max [stakes 10]   challengeClaim() by Alice [stakes 11]   challengeClaim() by Max [stakes 11]   challengeClaim() by Bob [stakes 16] In this example, if Max didn't want to lose the challenge game to Alice and Bob, he would have to challenge with a stake of at least 16.",
        "params": {
          "claimId": "The claim ID."
        }
      },
      "challengePeriodExtension()": {
        "notice": "The period by which the termination time of a claim is extended after each round of the challenge game. This period should allow enough time for the other parties to counter-challenge. .. note::    The claim's termination time is extended only if it is less than the    extension time. Note that in the first challenge round, i.e. the round initiated by the first challenger, the termination time is extended additionally by the finality period of the target chain. This is done to allow for L1 resolution."
      },
      "claimCounter()": {
        "notice": "The claim counter, used to generate claim IDs."
      },
      "claimPeriod()": {
        "notice": "The period for which the claim is valid."
      },
      "claimRequest(uint256,bytes32)": {
        "notice": "Claim that a request was filled by the caller. The request must still be valid at call time. The caller must provide the ``claimStake`` amount of source rollup's native token.",
        "params": {
          "fillId": "The fill ID.",
          "requestId": "ID of the request."
        },
        "returns": {
          "_0": "The claim ID."
        }
      },
      "claimStake()": {
        "notice": "The minimum amount of source chain's native token that the claimer needs to provide when making a claim, as well in each round of the challenge game."
      },
      "claims(uint256)": {
        "notice": "Maps claim IDs to claims."
      },
      "collectedProtocolFees(address)": {
        "notice": "Maps ERC20 token addresses to related token amounts that belong to the protocol."
      },
      "constructor": {
        "notice": "Constructor.",
        "params": {
          "_challengePeriodExtension": "Challenge period extension, in seconds.",
          "_claimPeriod": "Claim period, in seconds.",
          "_claimStake": "Claim stake amount.",
          "_resolutionRegistry": "Address of the resolution registry."
        }
      },
      "createRequest(uint256,address,address,address,uint256,uint256)": {
        "notice": "Create a new transfer request.",
        "params": {
          "amount": "Amount of tokens to transfer. Does not include fees.",
          "sourceTokenAddress": "Address of the token contract on the source chain.",
          "targetAddress": "Recipient address on the target chain.",
          "targetChainId": "ID of the target chain.",
          "targetTokenAddress": "Address of the token contract on the target chain.",
          "validityPeriod": "The number of seconds the request is to be considered valid.                       Once its validity period has elapsed, the request cannot be claimed                       anymore and will eventually expire, allowing the request submitter                       to withdraw the deposited tokens if there are no active claims."
        },
        "returns": {
          "_0": "ID of the newly created request."
        }
      },
      "deprecateContract()": {
        "notice": "Mark the contract as deprecated. Once the contract is deprecated, it cannot be used to create new requests anymore. Withdrawing deposited funds and claim stakes still works, though. .. note:: This function can only be called by the contract owner."
      },
      "deprecated()": {
        "notice": "Indicates whether the contract is deprecated. A deprecated contract cannot be used to create new requests."
      },
      "finalityPeriods(uint256)": {
        "notice": "Maps target rollup chain IDs to finality periods. Finality periods are in seconds."
      },
      "lpFee(uint256)": {
        "notice": "Compute the liquidy provider fee that needs to be paid for a given transfer amount."
      },
      "lpFeePPM()": {
        "notice": "Liquidity provider fee percentage, expressed in ppm (parts per million)."
      },
      "minLpFee()": {
        "notice": "The minimum fee, denominated in transfer token, paid to the liquidity provider."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "protocolFee(uint256)": {
        "notice": "Compute the protocol fee that needs to be paid for a given transfer amount."
      },
      "protocolFeePPM()": {
        "notice": "Protocol fee percentage, expressed in ppm (parts per million)."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "requestCounter()": {
        "notice": "The request counter, used to generate request IDs."
      },
      "requests(uint256)": {
        "notice": "Maps request IDs to requests."
      },
      "resolutionRegistry()": {
        "notice": "The resolution registry that is used to query for results of L1 resolution."
      },
      "setFinalityPeriod(uint256,uint256)": {
        "notice": "Set the finality period for the given target chain. .. note:: This function can only be called by the contract owner.",
        "params": {
          "finalityPeriod": "Finality period in seconds.",
          "targetChainId": "The target chain ID."
        }
      },
      "totalFee(uint256)": {
        "notice": "Compute the total fee that needs to be paid for a given transfer amount. The total fee is the sum of the liquidity provider fee and the protocol fee."
      },
      "transferLimit()": {
        "notice": "The maximum amount of tokens that can be transferred in a single request."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateFeeData(uint256,uint256,uint256)": {
        "notice": "Update fee parameters. .. note:: This function can only be called by the contract owner.",
        "params": {
          "newLpFeePPM": "The new value for ``lpFeePPM``.",
          "newMinLpFee": "The new value for ``minLpFee``.",
          "newProtocolFeePPM": "The new value for ``protocolFeePPM``."
        }
      },
      "updateTransferLimit(uint256)": {
        "notice": "Update the transfer amount limit. .. note:: This function can only be called by the contract owner.",
        "params": {
          "newTransferLimit": "The new value for ``transferLimit``."
        }
      },
      "withdraw(uint256)": {
        "notice": "Withdraw the deposit that the request submitter left with the contract, as well as the staked native tokens associated with the claim. In case the caller of this function is a challenger that won the game, they will only get their staked native tokens plus the reward in the form of full (sole challenger) or partial (multiple challengers) amount of native tokens staked by the dishonest claimer.",
        "params": {
          "claimId": "The claim ID."
        },
        "returns": {
          "_0": "The address of the deposit receiver."
        }
      },
      "withdrawExpiredRequest(uint256)": {
        "notice": "Withdraw funds deposited with an expired request. No claims must be active for the request.",
        "params": {
          "requestId": "ID of the expired request."
        }
      },
      "withdrawProtocolFees(address,address)": {
        "notice": "Withdraw protocol fees collected by the contract. Protocol fees are paid in token transferred. .. note:: This function can only be called by the contract owner.",
        "params": {
          "recipient": "The address the fees should be sent to.",
          "tokenAddress": "The address of the token contract."
        }
      }
    },
    "notice": "The request manager. This contract is responsible for keeping track of transfer requests, implementing the rules of the challenge game and holding deposited tokens until they are withdrawn. It is the only contract that agents need to interact with on the source chain.",
    "version": 1
  },
  "offset": [
    762,
    25528
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x973A814E GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xD3868348 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xEA656F7D GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEA656F7D EQ PUSH2 0x6DD JUMPI DUP1 PUSH4 0xEB321173 EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xF7D64CEC EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0xF9432517 EQ PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD3868348 EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0xD762A37B EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xE2653EEB EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0xE7AAD5C4 EQ PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB1743C5B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xB1743C5B EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0xCEA74EDF EQ PUSH2 0x611 JUMPI DUP1 PUSH4 0xCF7B287F EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xD137920B EQ PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x973A814E EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xA032B5F4 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0xAB9634EE EQ PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6BC6C8D1 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x81D12C58 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x81D12C58 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x92C824D8 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x96171D05 EQ PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6BC6C8D1 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x78DA194B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x7DC2CD98 EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F4212B8 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x2F4212B8 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x2F92F009 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x4EFA8F17 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x5D5AA11B EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE136B19 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x1489F8D2 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x1D18ADC5 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x25C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x20D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x12C DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x219 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x219 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x23A7 JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x240C JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0xE9F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0xED5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42D PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD DUP10 MLOAD DUP1 DUP12 ADD SWAP1 SWAP11 MSTORE PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP12 MSTORE PUSH1 0x7 DUP9 ADD SLOAD SWAP9 DUP12 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x8 DUP8 ADD SLOAD SWAP9 DUP8 ADD SLOAD PUSH1 0xA DUP9 ADD SLOAD PUSH1 0xB SWAP1 SWAP9 ADD SLOAD SWAP7 DUP10 AND SWAP11 SWAP6 DUP10 AND SWAP10 SWAP5 SWAP9 SWAP4 DUP5 AND SWAP8 SWAP4 SWAP1 SWAP3 AND SWAP6 SWAP1 SWAP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND SWAP3 SWAP1 DUP12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP13 DUP14 AND DUP2 MSTORE SWAP11 DUP13 AND PUSH1 0x20 DUP1 DUP14 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP12 ADD SWAP10 SWAP1 SWAP10 MSTORE SWAP7 DUP11 AND PUSH1 0x60 DUP11 ADD MSTORE SWAP5 DUP10 AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD SWAP1 SWAP8 AND PUSH1 0xC0 DUP8 ADD MSTORE SWAP1 SWAP4 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB SWAP1 SWAP5 AND PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x140 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x160 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 ADD PUSH2 0x219 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x27C JUMP JUMPDEST PUSH2 0x34F PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0xF0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x708 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1305 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x598 PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP7 SWAP5 SWAP6 SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x20 DUP11 ADD MSTORE DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 SWAP1 SWAP3 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x219 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x27C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x60C CALLDATASIZE PUSH1 0x4 PUSH2 0x2455 JUMP JUMPDEST PUSH2 0x1329 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x62C CALLDATASIZE PUSH1 0x4 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x15F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x64C CALLDATASIZE PUSH1 0x4 PUSH2 0x2477 JUMP JUMPDEST PUSH2 0x1615 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x66C CALLDATASIZE PUSH1 0x4 PUSH2 0x2455 JUMP JUMPDEST PUSH2 0x16C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x68C CALLDATASIZE PUSH1 0x4 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x17A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x6AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x19AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x19D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x723 CALLDATASIZE PUSH1 0x4 PUSH2 0x240C JUMP JUMPDEST PUSH2 0x1A65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x743 CALLDATASIZE PUSH1 0x4 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x1B00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x773 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x18DB185A5B5259081B9BDD081D985B1A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SWAP1 SWAP2 DUP1 PUSH2 0x7E0 DUP8 PUSH2 0x1B24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP4 POP SWAP2 POP ISZERO PUSH2 0x821 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST DUP4 PUSH1 0x6 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x873 JUMPI PUSH1 0x8 DUP4 ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x84E SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH2 0x24C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP5 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x8A0 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST DUP5 PUSH1 0x6 ADD SLOAD GT ISZERO PUSH2 0x8F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F20776974686472617720746F6F206C6172676500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x940 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x945 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x98D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST DUP5 SLOAD PUSH1 0x40 DUP1 MLOAD DUP11 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x5B0AEC51A74BF236E8FA08BCB2E303068C7AC1AED3CA410D25B8DAD27538D73C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x9FA JUMPI POP PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0xA09 JUMPI PUSH2 0xA09 DUP5 DUP7 PUSH2 0x1F38 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xA64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x10DBDB9D1C9858DD081A5CC819195C1C9958D85D1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617267657420726F6C6C7570206E6F7420737570706F727465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x12C DUP3 LT ISZERO PUSH2 0xB13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696469747920706572696F6420746F6F2073686F727400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x708 DUP3 GT ISZERO PUSH2 0xB65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696469747920706572696F6420746F6F206C6F6E670000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0xE SLOAD DUP4 GT ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473207472616E73666572206C696D6974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST DUP6 PUSH1 0x0 PUSH2 0xBC3 DUP6 PUSH2 0x1B00 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBD0 DUP7 PUSH2 0x1305 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0xBDF DUP5 DUP10 PUSH2 0x24EE JUMP JUMPDEST PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5C SWAP2 SWAP1 PUSH2 0x2506 JUMP JUMPDEST LT ISZERO PUSH2 0xCA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCB6 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP11 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP12 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP10 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP9 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE POP DUP2 PUSH1 0x6 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP7 TIMESTAMP PUSH2 0xDF8 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x9 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0xA DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0xB DUP3 ADD DUP5 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP16 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP4 DUP4 ADD MSTORE DUP14 DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE DUP13 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH32 0x18A412D0656B9A5C9263A134F66A34DA33CAD7C3690971601F9963ADE588E701 SWAP2 DUP2 SWAP1 SUB PUSH1 0xE0 ADD SWAP1 LOG1 PUSH2 0xE8C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND CALLER ADDRESS DUP6 PUSH2 0x201D JUMP JUMPDEST POP POP PUSH1 0x5 SLOAD SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH2 0xED3 PUSH1 0x0 PUSH2 0x2088 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH1 0xD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xC SSTORE PUSH1 0xB SSTORE JUMP JUMPDEST DUP1 PUSH1 0x6 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0xF20 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0xF60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x18DB185A5B5259081B9BDD081D985B1A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x7 DUP3 ADD SLOAD TIMESTAMP LT PUSH2 0xFC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x10DB185A5B48195E1C1A5C9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 DUP1 DUP3 GT ISZERO PUSH2 0x1082 JUMPI DUP1 PUSH1 0x0 SUB PUSH2 0x1005 JUMPI PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1002 SWAP1 DUP5 PUSH2 0x24EE JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 DUP8 ADD SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x1063 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206368616C6C656E6765206F776E20636C61696D000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST CALLER SWAP5 POP PUSH2 0x1070 DUP2 DUP4 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x107B SWAP1 PUSH1 0x1 PUSH2 0x24EE JUMP JUMPDEST SWAP4 POP PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x1 DUP1 DUP9 ADD SLOAD SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP6 POP PUSH2 0x10A1 DUP4 DUP4 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x10AB SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST SWAP4 POP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ PUSH2 0x10FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08195B1A59DA589B19481D1BC81BDD5D189A59 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST DUP4 CALLVALUE LT ISZERO PUSH2 0x114F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207374616B652070726F766964656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x1 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP7 AND SUB PUSH2 0x1186 JUMPI CALLVALUE DUP8 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x117B SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x11DE SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x11BD SWAP1 DUP5 SWAP1 PUSH2 0x24EE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE DUP8 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11D8 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x7 DUP8 ADD SLOAD PUSH2 0x11F6 SWAP1 PUSH2 0x11F1 DUP6 TIMESTAMP PUSH2 0x24EE JUMP JUMPDEST PUSH2 0x20D8 JUMP JUMPDEST PUSH1 0x7 DUP9 ADD SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x120B SWAP1 TIMESTAMP PUSH2 0x24EE JUMP JUMPDEST SWAP1 POP DUP1 DUP9 PUSH1 0x7 ADD SLOAD LT ISZERO PUSH2 0x1273 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D207465726D696E6174696F6E20646964206E6F7420696E63726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0xE6CA40CADCDEEACED PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST DUP8 PUSH1 0x0 ADD SLOAD PUSH32 0x29FD2DF293BA511E44CA47212C915137020231ED3AC0EE7BD02A7A655275AD37 DUP12 DUP11 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x2 ADD SLOAD DUP13 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP14 PUSH1 0x5 ADD SLOAD DUP15 PUSH1 0x7 ADD SLOAD DUP16 PUSH1 0x8 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x12F1 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x256B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF4240 PUSH1 0xD SLOAD DUP4 PUSH2 0x1319 SWAP2 SWAP1 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x1323 SWAP2 SWAP1 PUSH2 0x25C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x5 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x133E JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1380 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1C995C5D595CDD1259081B9BDD081D985B1A59 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD TIMESTAMP LT PUSH2 0x13D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14995C5D595CDD08195E1C1A5C9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x142C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0x1474 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081CDD185AD948185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST DUP4 PUSH2 0x14BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x46696C6C4964206D757374206E6F742062652030783 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x14DB SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH2 0x25EB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1512 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP8 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE SWAP1 SLOAD PUSH1 0x2 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP3 ADD DUP4 SWAP1 SSTORE SWAP3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SLOAD PUSH2 0x1575 SWAP1 TIMESTAMP PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x7 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x40 MLOAD DUP13 SWAP7 PUSH32 0x29FD2DF293BA511E44CA47212C915137020231ED3AC0EE7BD02A7A655275AD37 SWAP7 PUSH2 0x15E2 SWAP7 SWAP1 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP6 SWAP1 SWAP5 SWAP2 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP15 SWAP1 PUSH2 0x256B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x6 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1602 DUP3 PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x160B DUP4 PUSH2 0x1B00 JUMP JUMPDEST PUSH2 0x1323 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x163F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x169C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x50726F746F636F6C20666565206973207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP4 SWAP1 PUSH2 0x16C2 SWAP1 DUP5 DUP5 PUSH2 0x20F1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696E616C69747920706572696F64206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD DUP5 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xABA57B48B9F1DFD5747A52ED348A6AB6AA7BAFB0575363A5CB7B62659F727B65 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x17B3 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x17F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1C995C5D595CDD1259081B9BDD081D985B1A59 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x185A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST DUP1 PUSH1 0x9 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x18AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175657374206E6F74206578706972656420796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND ISZERO PUSH2 0x1901 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x41637469766520636C61696D732072756E6E696E67 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST DUP1 SLOAD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xA7B86597910AAE75F7D99FEB2F37420CC80D457465FFBA0F8136D722A9F7095A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0xB DUP4 ADD SLOAD PUSH1 0xA DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH2 0x16C2 SWAP5 AND SWAP3 SWAP2 PUSH2 0x198F SWAP2 PUSH2 0x24EE JUMP JUMPDEST PUSH2 0x1999 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH1 0xE SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420616C726561647920646570726563617465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1AF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x1AFD DUP2 PUSH2 0x2088 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1323 PUSH1 0xB SLOAD PUSH3 0xF4240 PUSH1 0xC SLOAD DUP6 PUSH2 0x1B1A SWAP2 SWAP1 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x11F1 SWAP2 SWAP1 PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD DUP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B59 DUP2 DUP4 PUSH2 0x24EE JUMP JUMPDEST DUP5 PUSH1 0x6 ADD SLOAD LT PUSH2 0x1BAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20616C72656164792077697468647261776E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST DUP4 SLOAD PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP8 SWAP1 SWAP8 MSTORE CHAINID DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP5 DUP7 SHL DUP6 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP5 SHL SWAP1 SWAP3 AND PUSH1 0x94 DUP3 ADD MSTORE PUSH1 0xA8 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 MLOAD DUP1 DUP3 SUB SWAP1 SWAP3 ADD DUP3 MSTORE PUSH1 0xC8 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 PUSH2 0x1C55 DUP3 DUP8 PUSH1 0x8 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP9 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x7 DUP1 DUP11 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE SLOAD SWAP3 MLOAD PUSH4 0xA64A2271 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP4 SWAP5 POP PUSH1 0x0 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA64A2271 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CE9 SWAP2 SWAP1 PUSH2 0x2616 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D06 JUMPI POP POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA751732F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA751732F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D73 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST ISZERO PUSH2 0x1D81 JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1DB9 JUMPI PUSH1 0x1 DUP11 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1DB2 JUMPI POP DUP10 PUSH1 0x8 ADD SLOAD DUP2 EQ JUMPDEST SWAP4 POP PUSH2 0x1E13 JUMP JUMPDEST DUP10 PUSH1 0x7 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1E0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20706572696F64206E6F742066696E697368656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST DUP7 DUP9 GT SWAP4 POP JUMPDEST PUSH1 0x0 DUP1 DUP6 ISZERO PUSH2 0x1E3E JUMPI PUSH2 0x1E26 DUP10 DUP12 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x1 DUP14 ADD SLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x1ED7 JUMP JUMPDEST DUP9 ISZERO PUSH2 0x1EC6 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP14 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1E61 SWAP1 PUSH1 0x2 PUSH2 0x25AA JUMP JUMPDEST SWAP2 POP CALLER SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x1EC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4368616C6C656E67657220686173206E6F7468696E6720746F20776974686472 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6177 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x1ED7 JUMP JUMPDEST POP POP PUSH1 0x0 SLOAD DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x4 DUP13 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1F25 JUMPI DUP9 DUP11 GT ISZERO PUSH2 0x1F0E JUMPI PUSH2 0x1EFD DUP10 DUP12 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x1F07 SWAP1 DUP4 PUSH2 0x24EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F25 JUMP JUMPDEST PUSH2 0x1F18 DUP11 DUP11 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x1F22 SWAP1 DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP JUMPDEST SWAP15 SWAP1 SWAP14 POP SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH32 0xA7B86597910AAE75F7D99FEB2F37420CC80D457465FFBA0F8136D722A9F7095A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND DUP1 DUP4 MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH1 0x20 SWAP4 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x6 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP8 ADD SSTORE PUSH1 0xB DUP7 ADD SLOAD PUSH1 0x1 DUP8 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF SWAP1 SWAP3 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1FED SWAP1 DUP5 SWAP1 PUSH2 0x24EE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0xA DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH2 0x16C2 SWAP2 DUP5 SWAP2 PUSH2 0x1999 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x16C2 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2126 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x20E8 JUMPI DUP2 PUSH2 0x20EA JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2121 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x2051 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21F8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2121 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2199 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x2121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2207 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x220F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2270 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x22C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x22E3 SWAP2 SWAP1 PUSH2 0x2692 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2320 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2325 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2335 DUP3 DUP3 DUP7 PUSH2 0x2340 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x234F JUMPI POP DUP2 PUSH2 0x20EA JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x235F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP2 SWAP1 PUSH2 0x26AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x238B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1AFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x23C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x23D2 DUP2 PUSH2 0x2392 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x23E2 DUP2 PUSH2 0x2392 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x23F2 DUP2 PUSH2 0x2392 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x241E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20EA DUP2 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x243E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x248A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2495 DUP2 PUSH2 0x2392 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x24A5 DUP2 PUSH2 0x2392 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x24E6 JUMPI PUSH2 0x24E6 PUSH2 0x24B0 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2501 JUMPI PUSH2 0x2501 PUSH2 0x24B0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2566 JUMPI PUSH2 0x2566 PUSH2 0x24B0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST SWAP7 DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP4 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x25C4 JUMPI PUSH2 0x25C4 PUSH2 0x24B0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x25E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP3 DUP2 AND DUP5 DUP3 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x260D JUMPI PUSH2 0x260D PUSH2 0x24B0 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x2634 DUP2 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x20EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2681 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2669 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16C2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x26A4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2666 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x26CD DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2666 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC CODESIZE PUSH8 0x364FF57FBEDD3D4B BLOCKHASH CREATE PUSH15 0x5AC8195D6767A675456EA3DBA9C2E7 XOR PUSH20 0xB564736F6C634300080D00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        762,
        25528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "LT",
      "path": "8"
    },
    "9": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1EE"
    },
    "12": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "13": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "SHR",
      "path": "8"
    },
    "19": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "20": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x973A814E"
    },
    "25": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "GT",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10D"
    },
    "29": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "30": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "31": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xD3868348"
    },
    "36": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "GT",
      "path": "8"
    },
    "37": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA0"
    },
    "40": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "41": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "42": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xEA656F7D"
    },
    "47": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "GT",
      "path": "8"
    },
    "48": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6F"
    },
    "51": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "52": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "53": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xEA656F7D"
    },
    "58": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "59": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6DD"
    },
    "62": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "63": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "64": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xEB321173"
    },
    "69": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "70": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6F2"
    },
    "73": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "74": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "75": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "81": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x708"
    },
    "84": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "85": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "86": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF7D64CEC"
    },
    "91": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "92": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x728"
    },
    "95": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "96": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "97": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF9432517"
    },
    "102": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "103": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x748"
    },
    "106": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "107": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "110": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "REVERT",
      "path": "8"
    },
    "111": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "112": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "113": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xD3868348"
    },
    "118": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "119": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x671"
    },
    "122": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "123": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "124": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xD762A37B"
    },
    "129": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "130": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x691"
    },
    "133": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "134": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "135": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xE2653EEB"
    },
    "140": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "141": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6B1"
    },
    "144": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "145": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "146": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xE7AAD5C4"
    },
    "151": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "152": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6C7"
    },
    "155": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "156": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "159": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "REVERT",
      "path": "8"
    },
    "160": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "161": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "162": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB1743C5B"
    },
    "167": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "GT",
      "path": "8"
    },
    "168": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "172": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "173": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB1743C5B"
    },
    "178": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "179": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5FE"
    },
    "182": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "183": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "184": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xCEA74EDF"
    },
    "189": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "190": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x611"
    },
    "193": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "194": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "195": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xCF7B287F"
    },
    "200": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "201": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x631"
    },
    "204": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "205": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "206": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xD137920B"
    },
    "211": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "212": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x651"
    },
    "215": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "216": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "219": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "REVERT",
      "path": "8"
    },
    "220": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "221": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "222": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x973A814E"
    },
    "227": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "228": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4F8"
    },
    "231": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "232": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "233": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA032B5F4"
    },
    "238": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "239": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x50E"
    },
    "242": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "243": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "244": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA888C2CD"
    },
    "249": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "250": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x52E"
    },
    "253": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "254": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "255": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xAB9634EE"
    },
    "260": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "261": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5DE"
    },
    "264": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "265": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "267": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "268": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "REVERT",
      "path": "8"
    },
    "269": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "270": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "271": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x6BC6C8D1"
    },
    "276": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "GT",
      "path": "8"
    },
    "277": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x185"
    },
    "280": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "281": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "282": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x81D12C58"
    },
    "287": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "GT",
      "path": "8"
    },
    "288": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x154"
    },
    "291": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "292": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "293": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x81D12C58"
    },
    "298": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "299": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x387"
    },
    "302": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "303": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "304": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "309": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "310": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4B1"
    },
    "313": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "314": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "315": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x92C824D8"
    },
    "320": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "321": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4CF"
    },
    "324": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "325": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "326": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x96171D05"
    },
    "331": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "332": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4E2"
    },
    "335": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "336": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "338": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "339": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "REVERT",
      "path": "8"
    },
    "340": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "341": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "342": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x6BC6C8D1"
    },
    "347": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "348": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30D"
    },
    "351": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "352": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "353": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "358": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "359": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x33A"
    },
    "362": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "363": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "364": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x78DA194B"
    },
    "369": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "370": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x351"
    },
    "373": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "374": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "375": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x7DC2CD98"
    },
    "380": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "381": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x371"
    },
    "384": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "385": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "387": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "388": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "REVERT",
      "path": "8"
    },
    "389": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "390": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "391": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x2F4212B8"
    },
    "396": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "GT",
      "path": "8"
    },
    "397": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C1"
    },
    "400": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "401": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "402": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x2F4212B8"
    },
    "407": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "408": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x294"
    },
    "411": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "412": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "413": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x2F92F009"
    },
    "418": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "419": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B4"
    },
    "422": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "423": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "424": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x4EFA8F17"
    },
    "429": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "430": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2E1"
    },
    "433": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "434": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "435": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x5D5AA11B"
    },
    "440": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "441": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F7"
    },
    "444": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "445": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "447": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "448": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "REVERT",
      "path": "8"
    },
    "449": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "450": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "451": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xE136B19"
    },
    "456": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "457": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F3"
    },
    "460": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "461": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "462": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x1489F8D2"
    },
    "467": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "468": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x222"
    },
    "471": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "472": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "473": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x1D18ADC5"
    },
    "478": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "479": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x246"
    },
    "482": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "483": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "484": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x2E1A7D4D"
    },
    "489": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "EQ",
      "path": "8"
    },
    "490": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25C"
    },
    "493": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "494": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "495": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "497": {
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "498": {
      "first_revert": true,
      "fn": null,
      "offset": [
        762,
        25528
      ],
      "op": "REVERT",
      "path": "8"
    },
    "499": {
      "offset": [
        4804,
        4826
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "500": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "501": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "DUP1",
      "path": "8"
    },
    "502": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "503": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1FF"
    },
    "506": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "507": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "509": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "DUP1",
      "path": "8"
    },
    "510": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "REVERT",
      "path": "8"
    },
    "511": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "512": {
      "op": "POP"
    },
    "513": {
      "offset": [
        4804,
        4826
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "515": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "516": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x20D"
    },
    "519": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "520": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "522": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "AND",
      "path": "8"
    },
    "523": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "DUP2",
      "path": "8"
    },
    "524": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "JUMP",
      "path": "8"
    },
    "525": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "526": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "528": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "529": {
      "op": "SWAP1"
    },
    "530": {
      "op": "ISZERO"
    },
    "531": {
      "op": "ISZERO"
    },
    "532": {
      "op": "DUP2"
    },
    "533": {
      "op": "MSTORE"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "536": {
      "op": "ADD"
    },
    "537": {
      "offset": [
        4804,
        4826
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "538": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "540": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "541": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "DUP1",
      "path": "8"
    },
    "542": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "543": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "SUB",
      "path": "8"
    },
    "544": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "545": {
      "fn": null,
      "offset": [
        4804,
        4826
      ],
      "op": "RETURN",
      "path": "8"
    },
    "546": {
      "offset": [
        4488,
        4543
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "547": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "548": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "DUP1",
      "path": "8"
    },
    "549": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "550": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22E"
    },
    "553": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "554": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "556": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "DUP1",
      "path": "8"
    },
    "557": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "REVERT",
      "path": "8"
    },
    "558": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "559": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "POP",
      "path": "8"
    },
    "560": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "563": {
      "offset": [
        4534,
        4543
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12C"
    },
    "566": {
      "offset": [
        4488,
        4543
      ],
      "op": "DUP2",
      "path": "8"
    },
    "567": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "JUMP",
      "path": "8"
    },
    "568": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "569": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "571": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "572": {
      "op": "SWAP1"
    },
    "573": {
      "op": "DUP2"
    },
    "574": {
      "op": "MSTORE"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "577": {
      "op": "ADD"
    },
    "578": {
      "offset": [
        4488,
        4543
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x219"
    },
    "581": {
      "op": "JUMP"
    },
    "582": {
      "offset": [
        4392,
        4431
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "583": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "584": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "DUP1",
      "path": "8"
    },
    "585": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "586": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x252"
    },
    "589": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "590": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "592": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "DUP1",
      "path": "8"
    },
    "593": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "REVERT",
      "path": "8"
    },
    "594": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "595": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "POP",
      "path": "8"
    },
    "596": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "599": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "601": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "602": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "DUP2",
      "path": "8"
    },
    "603": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "JUMP",
      "path": "8"
    },
    "604": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "605": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "606": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "DUP1",
      "path": "8"
    },
    "607": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "608": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x268"
    },
    "611": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "612": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "614": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "DUP1",
      "path": "8"
    },
    "615": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "REVERT",
      "path": "8"
    },
    "616": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "617": {
      "op": "POP"
    },
    "618": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x27C"
    },
    "621": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x277"
    },
    "624": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "625": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "627": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2379"
    },
    "630": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        17387,
        18647
      ],
      "op": "JUMP",
      "path": "8"
    },
    "631": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "632": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x75E"
    },
    "635": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        17387,
        18647
      ],
      "op": "JUMP",
      "path": "8"
    },
    "636": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "637": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "639": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "646": {
      "op": "SHL"
    },
    "647": {
      "op": "SUB"
    },
    "648": {
      "op": "SWAP1"
    },
    "649": {
      "op": "SWAP2"
    },
    "650": {
      "op": "AND"
    },
    "651": {
      "op": "DUP2"
    },
    "652": {
      "op": "MSTORE"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "655": {
      "op": "ADD"
    },
    "656": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x219"
    },
    "659": {
      "op": "JUMP"
    },
    "660": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "661": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "662": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "DUP1",
      "path": "8"
    },
    "663": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "664": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A0"
    },
    "667": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "668": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "670": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "DUP1",
      "path": "8"
    },
    "671": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "REVERT",
      "path": "8"
    },
    "672": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "673": {
      "op": "POP"
    },
    "674": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "677": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2AF"
    },
    "680": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "681": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "683": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x23A7"
    },
    "686": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        8916,
        10980
      ],
      "op": "JUMP",
      "path": "8"
    },
    "687": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "688": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA15"
    },
    "691": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        8916,
        10980
      ],
      "op": "JUMP",
      "path": "8"
    },
    "692": {
      "offset": [
        5251,
        5301
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "693": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "694": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "DUP1",
      "path": "8"
    },
    "695": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "696": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C0"
    },
    "699": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "700": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "702": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "DUP1",
      "path": "8"
    },
    "703": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "REVERT",
      "path": "8"
    },
    "704": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "705": {
      "op": "POP"
    },
    "706": {
      "offset": [
        5251,
        5301
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "709": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2CF"
    },
    "712": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "713": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "715": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2379"
    },
    "718": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        5251,
        5301
      ],
      "op": "JUMP",
      "path": "8"
    },
    "719": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "720": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "722": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "724": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "725": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "727": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "728": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "DUP2",
      "path": "8"
    },
    "729": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "730": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "732": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "733": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "734": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "735": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "DUP2",
      "path": "8"
    },
    "736": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5251,
        5301
      ],
      "op": "JUMP",
      "path": "8"
    },
    "737": {
      "offset": [
        4983,
        5010
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "738": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "739": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "DUP1",
      "path": "8"
    },
    "740": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "741": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2ED"
    },
    "744": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "745": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "747": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "DUP1",
      "path": "8"
    },
    "748": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "REVERT",
      "path": "8"
    },
    "749": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "750": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "POP",
      "path": "8"
    },
    "751": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "754": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "756": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "757": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "DUP2",
      "path": "8"
    },
    "758": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4983,
        5010
      ],
      "op": "JUMP",
      "path": "8"
    },
    "759": {
      "offset": [
        5564,
        5597
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "760": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "761": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "DUP1",
      "path": "8"
    },
    "762": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "763": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x303"
    },
    "766": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "767": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "769": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "DUP1",
      "path": "8"
    },
    "770": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "REVERT",
      "path": "8"
    },
    "771": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "772": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "POP",
      "path": "8"
    },
    "773": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "776": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xB"
    },
    "778": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "779": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "DUP2",
      "path": "8"
    },
    "780": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5564,
        5597
      ],
      "op": "JUMP",
      "path": "8"
    },
    "781": {
      "offset": [
        6164,
        6220
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "782": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "783": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "DUP1",
      "path": "8"
    },
    "784": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "785": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x319"
    },
    "788": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "789": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "791": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "DUP1",
      "path": "8"
    },
    "792": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "REVERT",
      "path": "8"
    },
    "793": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "794": {
      "op": "POP"
    },
    "795": {
      "offset": [
        6164,
        6220
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "798": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x328"
    },
    "801": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "802": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "804": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x240C"
    },
    "807": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        6164,
        6220
      ],
      "op": "JUMP",
      "path": "8"
    },
    "808": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "809": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "811": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "813": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "814": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "816": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "817": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "DUP2",
      "path": "8"
    },
    "818": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "819": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "821": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "822": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "823": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "824": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "DUP2",
      "path": "8"
    },
    "825": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6164,
        6220
      ],
      "op": "JUMP",
      "path": "8"
    },
    "826": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "827": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "828": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "829": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "830": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x346"
    },
    "833": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "834": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "836": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "837": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "838": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "839": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "840": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34F"
    },
    "843": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9F"
    },
    "846": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "847": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "848": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "849": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "850": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "851": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "DUP1",
      "path": "8"
    },
    "852": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "853": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x35D"
    },
    "856": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "857": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "859": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "DUP1",
      "path": "8"
    },
    "860": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "REVERT",
      "path": "8"
    },
    "861": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "862": {
      "op": "POP"
    },
    "863": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x34F"
    },
    "866": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x36C"
    },
    "869": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "870": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "872": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2429"
    },
    "875": {
      "fn": "RequestManager.updateFeeData",
      "jump": "i",
      "offset": [
        23891,
        24147
      ],
      "op": "JUMP",
      "path": "8"
    },
    "876": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "877": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xED5"
    },
    "880": {
      "fn": "RequestManager.updateFeeData",
      "jump": "i",
      "offset": [
        23891,
        24147
      ],
      "op": "JUMP",
      "path": "8"
    },
    "881": {
      "offset": [
        3756,
        3782
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "882": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "883": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "DUP1",
      "path": "8"
    },
    "884": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "885": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x37D"
    },
    "888": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "889": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "891": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "DUP1",
      "path": "8"
    },
    "892": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "REVERT",
      "path": "8"
    },
    "893": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "894": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "POP",
      "path": "8"
    },
    "895": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "898": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "900": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "901": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "DUP2",
      "path": "8"
    },
    "902": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "JUMP",
      "path": "8"
    },
    "903": {
      "offset": [
        5346,
        5389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "904": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "905": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP1",
      "path": "8"
    },
    "906": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "907": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x393"
    },
    "910": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "911": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "913": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP1",
      "path": "8"
    },
    "914": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "REVERT",
      "path": "8"
    },
    "915": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "916": {
      "op": "POP"
    },
    "917": {
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x42D"
    },
    "920": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3A2"
    },
    "923": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "924": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "926": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2379"
    },
    "929": {
      "fn": "RequestManager.updateFeeData",
      "jump": "i",
      "offset": [
        5346,
        5389
      ],
      "op": "JUMP",
      "path": "8"
    },
    "930": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "931": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "933": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "935": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP2",
      "path": "8"
    },
    "936": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP2",
      "path": "8"
    },
    "937": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "938": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "940": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "941": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP4",
      "path": "8"
    },
    "942": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "943": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "945": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "946": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP4",
      "path": "8"
    },
    "947": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "948": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "949": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP1",
      "path": "8"
    },
    "950": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "951": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "953": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP3",
      "path": "8"
    },
    "954": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ADD",
      "path": "8"
    },
    "955": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "956": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "958": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP4",
      "path": "8"
    },
    "959": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ADD",
      "path": "8"
    },
    "960": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "961": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "963": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP5",
      "path": "8"
    },
    "964": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ADD",
      "path": "8"
    },
    "965": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "966": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "968": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP6",
      "path": "8"
    },
    "969": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ADD",
      "path": "8"
    },
    "970": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "971": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "973": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP7",
      "path": "8"
    },
    "974": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ADD",
      "path": "8"
    },
    "975": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "976": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP10",
      "path": "8"
    },
    "977": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "978": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP1",
      "path": "8"
    },
    "979": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP12",
      "path": "8"
    },
    "980": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ADD",
      "path": "8"
    },
    "981": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "982": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP11",
      "path": "8"
    },
    "983": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "984": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "986": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP8",
      "path": "8"
    },
    "987": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ADD",
      "path": "8"
    },
    "988": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "SUB"
    },
    "997": {
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "998": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP2",
      "path": "8"
    },
    "999": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "AND",
      "path": "8"
    },
    "1000": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP12",
      "path": "8"
    },
    "1001": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1002": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "1004": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP9",
      "path": "8"
    },
    "1005": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ADD",
      "path": "8"
    },
    "1006": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1007": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP9",
      "path": "8"
    },
    "1008": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP12",
      "path": "8"
    },
    "1009": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ADD",
      "path": "8"
    },
    "1010": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP9",
      "path": "8"
    },
    "1011": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1012": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP9",
      "path": "8"
    },
    "1013": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1014": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "1016": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1017": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ADD",
      "path": "8"
    },
    "1018": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1019": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP9",
      "path": "8"
    },
    "1020": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1021": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ADD",
      "path": "8"
    },
    "1022": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1023": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "1025": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP9",
      "path": "8"
    },
    "1026": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ADD",
      "path": "8"
    },
    "1027": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1028": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xB"
    },
    "1030": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1031": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP9",
      "path": "8"
    },
    "1032": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "ADD",
      "path": "8"
    },
    "1033": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1034": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "1035": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP10",
      "path": "8"
    },
    "1036": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "AND",
      "path": "8"
    },
    "1037": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP11",
      "path": "8"
    },
    "1038": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "1039": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP10",
      "path": "8"
    },
    "1040": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "AND",
      "path": "8"
    },
    "1041": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP10",
      "path": "8"
    },
    "1042": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1043": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP9",
      "path": "8"
    },
    "1044": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1045": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1046": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "AND",
      "path": "8"
    },
    "1047": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP8",
      "path": "8"
    },
    "1048": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1049": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1050": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1051": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "AND",
      "path": "8"
    },
    "1052": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "1053": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1054": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1055": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "op": "SUB"
    },
    "1064": {
      "offset": [
        5346,
        5389
      ],
      "op": "AND",
      "path": "8"
    },
    "1065": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1066": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1067": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP12",
      "path": "8"
    },
    "1068": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1069": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1070": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1072": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1073": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5346,
        5389
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1080": {
      "op": "SHL"
    },
    "1081": {
      "op": "SUB"
    },
    "1082": {
      "op": "SWAP13"
    },
    "1083": {
      "op": "DUP14"
    },
    "1084": {
      "op": "AND"
    },
    "1085": {
      "op": "DUP2"
    },
    "1086": {
      "op": "MSTORE"
    },
    "1087": {
      "op": "SWAP11"
    },
    "1088": {
      "op": "DUP13"
    },
    "1089": {
      "op": "AND"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1092": {
      "op": "DUP1"
    },
    "1093": {
      "op": "DUP14"
    },
    "1094": {
      "op": "ADD"
    },
    "1095": {
      "op": "SWAP2"
    },
    "1096": {
      "op": "SWAP1"
    },
    "1097": {
      "op": "SWAP2"
    },
    "1098": {
      "op": "MSTORE"
    },
    "1099": {
      "op": "SWAP1"
    },
    "1100": {
      "op": "DUP12"
    },
    "1101": {
      "op": "ADD"
    },
    "1102": {
      "op": "SWAP10"
    },
    "1103": {
      "op": "SWAP1"
    },
    "1104": {
      "op": "SWAP10"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "SWAP7"
    },
    "1107": {
      "op": "DUP11"
    },
    "1108": {
      "op": "AND"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1111": {
      "op": "DUP11"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "op": "MSTORE"
    },
    "1114": {
      "op": "SWAP5"
    },
    "1115": {
      "op": "DUP10"
    },
    "1116": {
      "op": "AND"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1119": {
      "op": "DUP10"
    },
    "1120": {
      "op": "ADD"
    },
    "1121": {
      "op": "MSTORE"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1124": {
      "op": "DUP9"
    },
    "1125": {
      "op": "ADD"
    },
    "1126": {
      "op": "SWAP4"
    },
    "1127": {
      "op": "SWAP1"
    },
    "1128": {
      "op": "SWAP4"
    },
    "1129": {
      "op": "MSTORE"
    },
    "1130": {
      "op": "DUP2"
    },
    "1131": {
      "op": "MLOAD"
    },
    "1132": {
      "op": "SWAP1"
    },
    "1133": {
      "op": "SWAP8"
    },
    "1134": {
      "op": "AND"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1137": {
      "op": "DUP8"
    },
    "1138": {
      "op": "ADD"
    },
    "1139": {
      "op": "MSTORE"
    },
    "1140": {
      "op": "SWAP1"
    },
    "1141": {
      "op": "SWAP4"
    },
    "1142": {
      "op": "ADD"
    },
    "1143": {
      "op": "MLOAD"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1146": {
      "op": "DUP6"
    },
    "1147": {
      "op": "ADD"
    },
    "1148": {
      "op": "MSTORE"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1155": {
      "op": "SHL"
    },
    "1156": {
      "op": "SUB"
    },
    "1157": {
      "op": "SWAP1"
    },
    "1158": {
      "op": "SWAP5"
    },
    "1159": {
      "op": "AND"
    },
    "1160": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1163": {
      "op": "DUP5"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "op": "MSTORE"
    },
    "1166": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "1169": {
      "op": "DUP4"
    },
    "1170": {
      "op": "ADD"
    },
    "1171": {
      "op": "SWAP2"
    },
    "1172": {
      "op": "SWAP1"
    },
    "1173": {
      "op": "SWAP2"
    },
    "1174": {
      "op": "MSTORE"
    },
    "1175": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "1178": {
      "op": "DUP3"
    },
    "1179": {
      "op": "ADD"
    },
    "1180": {
      "op": "SWAP3"
    },
    "1181": {
      "op": "SWAP1"
    },
    "1182": {
      "op": "SWAP3"
    },
    "1183": {
      "op": "MSTORE"
    },
    "1184": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "1187": {
      "op": "DUP2"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "SWAP2"
    },
    "1190": {
      "op": "SWAP1"
    },
    "1191": {
      "op": "SWAP2"
    },
    "1192": {
      "op": "MSTORE"
    },
    "1193": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "1196": {
      "op": "ADD"
    },
    "1197": {
      "offset": [
        5346,
        5389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x219"
    },
    "1200": {
      "op": "JUMP"
    },
    "1201": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1202": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1203": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1204": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1205": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "1208": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1209": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1211": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1212": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1213": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1214": {
      "op": "POP"
    },
    "1215": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1217": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1224": {
      "op": "SHL"
    },
    "1225": {
      "op": "SUB"
    },
    "1226": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1227": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27C"
    },
    "1230": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1231": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14764,
        16830
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1232": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14764,
        16830
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x34F"
    },
    "1235": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14764,
        16830
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4DD"
    },
    "1238": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14764,
        16830
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1239": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14764,
        16830
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1241": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14764,
        16830
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2379"
    },
    "1244": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        14764,
        16830
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1245": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14764,
        16830
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1246": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14764,
        16830
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF0D"
    },
    "1249": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        14764,
        16830
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1250": {
      "offset": [
        4600,
        4656
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1251": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4656
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1252": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4656
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1253": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4656
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1254": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4656
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4EE"
    },
    "1257": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4656
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1258": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4656
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1260": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4656
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1261": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4656
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1262": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4656
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1263": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4656
      ],
      "op": "POP",
      "path": "8"
    },
    "1264": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4656
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "1267": {
      "offset": [
        4646,
        4656
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x708"
    },
    "1270": {
      "offset": [
        4600,
        4656
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1271": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4656
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1272": {
      "offset": [
        4892,
        4921
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1273": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1274": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1275": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1276": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x504"
    },
    "1279": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1280": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1282": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1283": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1284": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1285": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "POP",
      "path": "8"
    },
    "1286": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "1289": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "1291": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1292": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1293": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4892,
        4921
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1294": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1295": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1296": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1297": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1298": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x51A"
    },
    "1301": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1302": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1304": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1305": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1306": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1307": {
      "op": "POP"
    },
    "1308": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "1311": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x529"
    },
    "1314": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1315": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1317": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2379"
    },
    "1320": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        6545,
        6673
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1321": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1322": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1305"
    },
    "1325": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        6545,
        6673
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1326": {
      "offset": [
        5430,
        5469
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1327": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1328": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1329": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1330": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x53A"
    },
    "1333": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1334": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1336": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1337": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1338": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1339": {
      "op": "POP"
    },
    "1340": {
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x598"
    },
    "1343": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x549"
    },
    "1346": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1347": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1349": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2379"
    },
    "1352": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        5430,
        5469
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1353": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1354": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "1356": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1358": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1359": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1361": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1362": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1363": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1364": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1366": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1367": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1368": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1369": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1370": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1372": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1373": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "ADD",
      "path": "8"
    },
    "1374": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1375": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1377": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1378": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "ADD",
      "path": "8"
    },
    "1379": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1380": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1382": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1383": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "ADD",
      "path": "8"
    },
    "1384": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1385": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "1387": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1388": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "ADD",
      "path": "8"
    },
    "1389": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1390": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "1392": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "DUP7",
      "path": "8"
    },
    "1393": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "ADD",
      "path": "8"
    },
    "1394": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1395": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "1397": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1398": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "ADD",
      "path": "8"
    },
    "1399": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1400": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "1402": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1403": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP8",
      "path": "8"
    },
    "1404": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "ADD",
      "path": "8"
    },
    "1405": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1406": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "1407": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1414": {
      "op": "SHL"
    },
    "1415": {
      "op": "SUB"
    },
    "1416": {
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "1417": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "DUP7",
      "path": "8"
    },
    "1418": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "AND",
      "path": "8"
    },
    "1419": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "1420": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1421": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "1422": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1423": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1424": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "AND",
      "path": "8"
    },
    "1425": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1426": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1427": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1428": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1429": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1430": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "DUP9",
      "path": "8"
    },
    "1431": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1432": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1433": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1435": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1436": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5430,
        5469
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1437": {
      "op": "SWAP9"
    },
    "1438": {
      "op": "DUP10"
    },
    "1439": {
      "op": "MSTORE"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "op": "SUB"
    },
    "1448": {
      "op": "SWAP8"
    },
    "1449": {
      "op": "DUP9"
    },
    "1450": {
      "op": "AND"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1453": {
      "op": "DUP11"
    },
    "1454": {
      "op": "ADD"
    },
    "1455": {
      "op": "MSTORE"
    },
    "1456": {
      "op": "DUP9"
    },
    "1457": {
      "op": "ADD"
    },
    "1458": {
      "op": "SWAP6"
    },
    "1459": {
      "op": "SWAP1"
    },
    "1460": {
      "op": "SWAP6"
    },
    "1461": {
      "op": "MSTORE"
    },
    "1462": {
      "op": "SWAP5"
    },
    "1463": {
      "op": "SWAP1"
    },
    "1464": {
      "op": "SWAP3"
    },
    "1465": {
      "op": "AND"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1468": {
      "op": "DUP7"
    },
    "1469": {
      "op": "ADD"
    },
    "1470": {
      "op": "MSTORE"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1473": {
      "op": "DUP6"
    },
    "1474": {
      "op": "ADD"
    },
    "1475": {
      "op": "MSTORE"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1478": {
      "op": "DUP5"
    },
    "1479": {
      "op": "ADD"
    },
    "1480": {
      "op": "MSTORE"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1483": {
      "op": "DUP4"
    },
    "1484": {
      "op": "ADD"
    },
    "1485": {
      "op": "SWAP2"
    },
    "1486": {
      "op": "SWAP1"
    },
    "1487": {
      "op": "SWAP2"
    },
    "1488": {
      "op": "MSTORE"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1491": {
      "op": "DUP3"
    },
    "1492": {
      "op": "ADD"
    },
    "1493": {
      "op": "MSTORE"
    },
    "1494": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1497": {
      "op": "ADD"
    },
    "1498": {
      "offset": [
        5430,
        5469
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x219"
    },
    "1501": {
      "op": "JUMP"
    },
    "1502": {
      "offset": [
        5101,
        5145
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1503": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1504": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1505": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1506": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5EA"
    },
    "1509": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1510": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1512": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1513": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1514": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1515": {
      "op": "POP"
    },
    "1516": {
      "offset": [
        5101,
        5145
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "1518": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1519": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x27C"
    },
    "1522": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1529": {
      "op": "SHL"
    },
    "1530": {
      "op": "SUB"
    },
    "1531": {
      "offset": [
        5101,
        5145
      ],
      "op": "AND",
      "path": "8"
    },
    "1532": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1533": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5101,
        5145
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1534": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12285,
        13566
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1535": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12285,
        13566
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "1538": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12285,
        13566
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x60C"
    },
    "1541": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12285,
        13566
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1542": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12285,
        13566
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1544": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12285,
        13566
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2455"
    },
    "1547": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        12285,
        13566
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1548": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12285,
        13566
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1549": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12285,
        13566
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1329"
    },
    "1552": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        12285,
        13566
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1553": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1554": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1555": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1556": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1557": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x61D"
    },
    "1560": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1561": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1563": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1564": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1565": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1566": {
      "op": "POP"
    },
    "1567": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "1570": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x62C"
    },
    "1573": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1574": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1576": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2379"
    },
    "1579": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        6845,
        6968
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1580": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1581": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15F7"
    },
    "1584": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        6845,
        6968
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1585": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1586": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1587": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1588": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1589": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x63D"
    },
    "1592": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1593": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1595": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1596": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1597": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1598": {
      "op": "POP"
    },
    "1599": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x34F"
    },
    "1602": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x64C"
    },
    "1605": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1606": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1608": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2477"
    },
    "1611": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        23201,
        23575
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1612": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1613": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1615"
    },
    "1616": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        23201,
        23575
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1617": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1618": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1619": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1620": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1621": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x65D"
    },
    "1624": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1625": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1627": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1628": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1629": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1630": {
      "op": "POP"
    },
    "1631": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x34F"
    },
    "1634": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x66C"
    },
    "1637": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1638": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1640": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2455"
    },
    "1643": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "i",
      "offset": [
        24741,
        25065
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1644": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1645": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16C8"
    },
    "1648": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "i",
      "offset": [
        24741,
        25065
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1649": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1650": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1651": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1652": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1653": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x67D"
    },
    "1656": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1657": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1659": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1660": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1661": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1662": {
      "op": "POP"
    },
    "1663": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x34F"
    },
    "1666": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x68C"
    },
    "1669": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1670": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1672": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2379"
    },
    "1675": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        11162,
        11946
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1676": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1677": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17A0"
    },
    "1680": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        11162,
        11946
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1681": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1682": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1683": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1684": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1685": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x69D"
    },
    "1688": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1689": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1691": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1692": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1693": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1694": {
      "op": "POP"
    },
    "1695": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x34F"
    },
    "1698": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6AC"
    },
    "1701": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1702": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1704": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2379"
    },
    "1707": {
      "fn": "RequestManager.updateTransferLimit",
      "jump": "i",
      "offset": [
        24354,
        24477
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1708": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1709": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19AA"
    },
    "1712": {
      "fn": "RequestManager.updateTransferLimit",
      "jump": "i",
      "offset": [
        24354,
        24477
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1713": {
      "offset": [
        5693,
        5724
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1714": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1715": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1716": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1717": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6BD"
    },
    "1720": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1721": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1723": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1724": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1725": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1726": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "POP",
      "path": "8"
    },
    "1727": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "1730": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xC"
    },
    "1732": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1733": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1734": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5693,
        5724
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1735": {
      "offset": [
        5848,
        5881
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1736": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1737": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1738": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1739": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6D3"
    },
    "1742": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1743": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1745": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1746": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1747": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1748": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "POP",
      "path": "8"
    },
    "1749": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "1752": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xD"
    },
    "1754": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1755": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1756": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5848,
        5881
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1757": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1758": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1759": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1760": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1761": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6E9"
    },
    "1764": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1765": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1767": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1768": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1769": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1770": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "POP",
      "path": "8"
    },
    "1771": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x34F"
    },
    "1774": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19D9"
    },
    "1777": {
      "fn": "RequestManager.deprecateContract",
      "jump": "i",
      "offset": [
        25375,
        25526
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1778": {
      "offset": [
        3675,
        3700
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1779": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1780": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1781": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1782": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6FE"
    },
    "1785": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1786": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1788": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1789": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1790": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1791": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "POP",
      "path": "8"
    },
    "1792": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "1795": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1797": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1798": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1799": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1801": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1802": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1803": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1804": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x714"
    },
    "1807": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1808": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1810": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1811": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1812": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1813": {
      "op": "POP"
    },
    "1814": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34F"
    },
    "1817": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x723"
    },
    "1820": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1821": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1823": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240C"
    },
    "1826": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A65"
    },
    "1831": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1832": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1833": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1834": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1835": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1836": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x734"
    },
    "1839": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1840": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1842": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1843": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1844": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1845": {
      "op": "POP"
    },
    "1846": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "1849": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x743"
    },
    "1852": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1853": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1855": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2379"
    },
    "1858": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        6319,
        6455
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1859": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1860": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B00"
    },
    "1863": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        6319,
        6455
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1864": {
      "offset": [
        6014,
        6056
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1865": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1866": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1867": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1868": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x754"
    },
    "1871": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1872": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1874": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1875": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1876": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1877": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "POP",
      "path": "8"
    },
    "1878": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x238"
    },
    "1881": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE"
    },
    "1883": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1884": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1885": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6014,
        6056
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1886": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1887": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17486,
        17493
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1889": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17460,
        17467
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1890": {
      "offset": [
        7347,
        7359
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "1892": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7347,
        7359
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1893": {
      "offset": [
        7336,
        7343
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1894": {
      "offset": [
        7336,
        7359
      ],
      "op": "GT",
      "path": "8"
    },
    "1895": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7336,
        7359
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1896": {
      "offset": [
        7336,
        7374
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1897": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7336,
        7374
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1898": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7336,
        7374
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x773"
    },
    "1901": {
      "offset": [
        7336,
        7374
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1902": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7336,
        7374
      ],
      "op": "POP",
      "path": "8"
    },
    "1903": {
      "offset": [
        7373,
        7374
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1905": {
      "offset": [
        7363,
        7370
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1906": {
      "offset": [
        7363,
        7374
      ],
      "op": "GT",
      "path": "8"
    },
    "1907": {
      "offset": [
        7336,
        7374
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1908": {
      "offset": [
        7328,
        7396
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7B8"
    },
    "1911": {
      "offset": [
        7328,
        7396
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1912": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7328,
        7396
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1914": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7328,
        7396
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1915": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1921": {
      "op": "SHL"
    },
    "1922": {
      "offset": [
        7328,
        7396
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1923": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7328,
        7396
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1926": {
      "offset": [
        7328,
        7396
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1928": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7328,
        7396
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1929": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7328,
        7396
      ],
      "op": "ADD",
      "path": "8"
    },
    "1930": {
      "op": "MSTORE"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1935": {
      "op": "DUP3"
    },
    "1936": {
      "op": "ADD"
    },
    "1937": {
      "op": "MSTORE"
    },
    "1938": {
      "op": "PUSH17",
      "value": "0x18DB185A5B5259081B9BDD081D985B1A59"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "1958": {
      "op": "SHL"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1961": {
      "op": "DUP3"
    },
    "1962": {
      "op": "ADD"
    },
    "1963": {
      "op": "MSTORE"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1966": {
      "op": "ADD"
    },
    "1967": {
      "offset": [
        7328,
        7396
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1968": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7328,
        7396
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1970": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7328,
        7396
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1971": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7328,
        7396
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1972": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7328,
        7396
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1973": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7328,
        7396
      ],
      "op": "SUB",
      "path": "8"
    },
    "1974": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7328,
        7396
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1975": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7328,
        7396
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "8"
    },
    "1976": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7328,
        7396
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1977": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17509,
        17528
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1979": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17546
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1980": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17546
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1981": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17546
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1982": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "1984": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17546
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1986": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17546
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1987": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17546
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1988": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17546
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1989": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17546
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1991": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17546
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1992": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17546
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1993": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17546
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1994": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17591,
        17606
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1995": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17591,
        17606
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1996": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17582,
        17607
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1997": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17582,
        17607
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1998": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17582,
        17590
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "2000": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17582,
        17607
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2001": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17582,
        17607
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2002": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17582,
        17607
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2003": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17582,
        17607
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2004": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17582,
        17607
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2005": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17546
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2006": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17531,
        17546
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2007": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17509,
        17528
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2008": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17667,
        17688
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7E0"
    },
    "2011": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17538,
        17545
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2012": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17667,
        17679
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B24"
    },
    "2015": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        17667,
        17688
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2016": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17667,
        17688
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2023": {
      "op": "SHL"
    },
    "2024": {
      "op": "SUB"
    },
    "2025": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17741
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2026": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17741
      ],
      "op": "AND",
      "path": "8"
    },
    "2027": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17744,
        17745
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2029": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17741
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2030": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17741
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2031": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17741
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2032": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17726
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2034": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17726
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2035": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17726
      ],
      "op": "ADD",
      "path": "8"
    },
    "2036": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17741
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2038": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17741
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2039": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17741
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2041": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17741
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2042": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17741
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2043": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17741
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2044": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17618,
        17688
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2045": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17618,
        17688
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2046": {
      "op": "POP"
    },
    "2047": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17618,
        17688
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2048": {
      "op": "POP"
    },
    "2049": {
      "branch": 120,
      "fn": "RequestManager.withdraw",
      "offset": [
        17703,
        17745
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2050": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17699,
        17851
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x821"
    },
    "2053": {
      "branch": 120,
      "fn": "RequestManager.withdraw",
      "offset": [
        17699,
        17851
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2060": {
      "op": "SHL"
    },
    "2061": {
      "op": "SUB"
    },
    "2062": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17836
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 1
    },
    "2063": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17836
      ],
      "op": "AND",
      "path": "8"
    },
    "2064": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17839,
        17840
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2066": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17836
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2067": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17836
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2068": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17836
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2069": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17821
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2071": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17821
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2072": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17821
      ],
      "op": "ADD",
      "path": "8"
    },
    "2073": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2075": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17836
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2076": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2078": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17836
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2079": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17836
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2080": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17798,
        17840
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2081": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17699,
        17851
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2082": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17936,
        17941
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2083": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17936,
        17957
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "2085": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17936,
        17957
      ],
      "op": "ADD",
      "path": "8"
    },
    "2086": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17936,
        17957
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2087": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17961,
        17962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2089": {
      "branch": 121,
      "fn": "RequestManager.withdraw",
      "offset": [
        17936,
        17962
      ],
      "op": "SUB",
      "path": "8"
    },
    "2090": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17932,
        18014
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x873"
    },
    "2093": {
      "branch": 121,
      "fn": "RequestManager.withdraw",
      "offset": [
        17932,
        18014
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2094": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        17998
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x8"
    },
    "2096": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        17998
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2097": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        17998
      ],
      "op": "ADD",
      "path": "8"
    },
    "2098": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2099": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2100": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18002,
        18003
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2102": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18002,
        18003
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2103": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        17998
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2104": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        17998
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2106": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        17998
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2107": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x84E"
    },
    "2110": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2111": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18002,
        18003
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2112": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18002,
        18003
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2119": {
      "op": "SHL"
    },
    "2120": {
      "op": "SUB"
    },
    "2121": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "AND",
      "path": "8"
    },
    "2122": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24C6"
    },
    "2125": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        17978,
        18003
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2126": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2127": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2128": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "POP",
      "path": "8"
    },
    "2129": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "2132": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "EXP",
      "path": "8"
    },
    "2133": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2134": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2135": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2142": {
      "op": "SHL"
    },
    "2143": {
      "op": "SUB"
    },
    "2144": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "MUL",
      "path": "8"
    },
    "2145": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "NOT",
      "path": "8"
    },
    "2146": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "AND",
      "path": "8"
    },
    "2147": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2148": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2155": {
      "op": "SHL"
    },
    "2156": {
      "op": "SUB"
    },
    "2157": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "AND",
      "path": "8"
    },
    "2158": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "MUL",
      "path": "8"
    },
    "2159": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "OR",
      "path": "8"
    },
    "2160": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2161": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2162": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17978,
        18003
      ],
      "op": "POP",
      "path": "8"
    },
    "2163": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17932,
        18014
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2164": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18048,
        18061
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 3
    },
    "2165": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18028
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2166": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18044
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "2168": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18044
      ],
      "op": "ADD",
      "path": "8"
    },
    "2169": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18044
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2171": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18061
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2172": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18061
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2173": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18061
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2174": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18061
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x887"
    },
    "2177": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18061
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2178": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18061
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2179": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18061
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "2182": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18023,
        18061
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2183": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18061
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2184": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18061
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2185": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18061
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2186": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18023,
        18061
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2187": {
      "op": "POP"
    },
    "2188": {
      "op": "POP"
    },
    "2189": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18154,
        18180
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 4,
      "value": "0x5"
    },
    "2191": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18154,
        18180
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2192": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18154,
        18180
      ],
      "op": "ADD",
      "path": "8"
    },
    "2193": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18154,
        18180
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2194": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18133,
        18151
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2196": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18133,
        18151
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2197": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18133,
        18151
      ],
      "op": "ADD",
      "path": "8"
    },
    "2198": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18133,
        18151
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2199": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18133,
        18180
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8A0"
    },
    "2202": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18133,
        18180
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2203": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18154,
        18180
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2204": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18133,
        18180
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "2207": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18133,
        18180
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2208": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18133,
        18180
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2209": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18092,
        18097
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2210": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18092,
        18113
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "2212": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18092,
        18113
      ],
      "op": "ADD",
      "path": "8"
    },
    "2213": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18092,
        18113
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2214": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18092,
        18180
      ],
      "op": "GT",
      "path": "8"
    },
    "2215": {
      "branch": 122,
      "fn": "RequestManager.withdraw",
      "offset": [
        18092,
        18180
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2216": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18071,
        18234
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8F3"
    },
    "2219": {
      "branch": 122,
      "fn": "RequestManager.withdraw",
      "offset": [
        18071,
        18234
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2220": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18071,
        18234
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2222": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18071,
        18234
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18071,
        18234
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2231": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18071,
        18234
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2234": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18071,
        18234
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2236": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18071,
        18234
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2237": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18071,
        18234
      ],
      "op": "ADD",
      "path": "8"
    },
    "2238": {
      "op": "MSTORE"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2243": {
      "op": "DUP3"
    },
    "2244": {
      "op": "ADD"
    },
    "2245": {
      "op": "MSTORE"
    },
    "2246": {
      "op": "PUSH32",
      "value": "0x416D6F756E7420746F20776974686472617720746F6F206C6172676500000000"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2281": {
      "op": "DUP3"
    },
    "2282": {
      "op": "ADD"
    },
    "2283": {
      "op": "MSTORE"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2286": {
      "op": "ADD"
    },
    "2287": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18071,
        18234
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "2290": {
      "op": "JUMP"
    },
    "2291": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18071,
        18234
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2292": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18246,
        18255
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2294": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18274
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2301": {
      "op": "SHL"
    },
    "2302": {
      "op": "SUB"
    },
    "2303": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18279
      ],
      "op": "AND",
      "path": "8"
    },
    "2304": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18287,
        18300
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2305": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2307": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2308": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2310": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2312": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2313": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2314": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2315": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "SUB",
      "path": "8"
    },
    "2316": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2317": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2318": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2319": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "GAS",
      "path": "8"
    },
    "2320": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "CALL",
      "path": "8"
    },
    "2321": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2322": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "POP",
      "path": "8"
    },
    "2323": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "POP",
      "path": "8"
    },
    "2324": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "POP",
      "path": "8"
    },
    "2325": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2326": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2327": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2329": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2330": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "EQ",
      "path": "8"
    },
    "2331": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x940"
    },
    "2334": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2335": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2337": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2338": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2339": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "POP",
      "path": "8"
    },
    "2340": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2342": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "NOT",
      "path": "8"
    },
    "2343": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3F"
    },
    "2345": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2346": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "ADD",
      "path": "8"
    },
    "2347": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "AND",
      "path": "8"
    },
    "2348": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2349": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "ADD",
      "path": "8"
    },
    "2350": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2352": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2353": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2354": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2355": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2356": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2357": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2359": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2361": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2362": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "ADD",
      "path": "8"
    },
    "2363": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2364": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x945"
    },
    "2367": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2368": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2369": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "2371": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2372": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "POP",
      "path": "8"
    },
    "2373": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2374": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18261,
        18305
      ],
      "op": "POP",
      "path": "8"
    },
    "2375": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18245,
        18305
      ],
      "op": "POP",
      "path": "8"
    },
    "2376": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18245,
        18305
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2377": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18245,
        18305
      ],
      "op": "POP",
      "path": "8"
    },
    "2378": {
      "branch": 123,
      "fn": "RequestManager.withdraw",
      "offset": [
        18323,
        18327
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 5
    },
    "2379": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18315,
        18352
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x98D"
    },
    "2382": {
      "branch": 123,
      "fn": "RequestManager.withdraw",
      "offset": [
        18315,
        18352
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2383": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18315,
        18352
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2385": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18315,
        18352
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2386": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2392": {
      "op": "SHL"
    },
    "2393": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18315,
        18352
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2394": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18315,
        18352
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2397": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18315,
        18352
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2399": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18315,
        18352
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2400": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18315,
        18352
      ],
      "op": "ADD",
      "path": "8"
    },
    "2401": {
      "op": "MSTORE"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2406": {
      "op": "DUP3"
    },
    "2407": {
      "op": "ADD"
    },
    "2408": {
      "op": "MSTORE"
    },
    "2409": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2432": {
      "op": "SHL"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2435": {
      "op": "DUP3"
    },
    "2436": {
      "op": "ADD"
    },
    "2437": {
      "op": "MSTORE"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2440": {
      "op": "ADD"
    },
    "2441": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18315,
        18352
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "2444": {
      "op": "JUMP"
    },
    "2445": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18315,
        18352
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2446": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18397,
        18412
      ],
      "op": "DUP5",
      "path": "8",
      "statement": 6
    },
    "2447": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18397,
        18412
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2448": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18368,
        18428
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2450": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18368,
        18428
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2451": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18368,
        18428
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2452": {
      "op": "DUP11"
    },
    "2453": {
      "op": "DUP2"
    },
    "2454": {
      "op": "MSTORE"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2461": {
      "op": "SHL"
    },
    "2462": {
      "op": "SUB"
    },
    "2463": {
      "op": "DUP7"
    },
    "2464": {
      "op": "AND"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2467": {
      "op": "DUP3"
    },
    "2468": {
      "op": "ADD"
    },
    "2469": {
      "op": "MSTORE"
    },
    "2470": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18368,
        18428
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x5B0AEC51A74BF236E8FA08BCB2E303068C7AC1AED3CA410D25B8DAD27538D73C"
    },
    "2503": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18368,
        18428
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2504": {
      "op": "ADD"
    },
    "2505": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18368,
        18428
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2507": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18368,
        18428
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2508": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18368,
        18428
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2509": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18368,
        18428
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2510": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18368,
        18428
      ],
      "op": "SUB",
      "path": "8"
    },
    "2511": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18368,
        18428
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2512": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18368,
        18428
      ],
      "op": "LOG2",
      "path": "8"
    },
    "2513": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18456,
        18476
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "2515": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18456,
        18476
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2516": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18456,
        18476
      ],
      "op": "ADD",
      "path": "8"
    },
    "2517": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18456,
        18483
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2524": {
      "op": "SHL"
    },
    "2525": {
      "op": "SUB"
    },
    "2526": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18456,
        18483
      ],
      "op": "AND",
      "path": "8"
    },
    "2527": {
      "branch": 124,
      "fn": "RequestManager.withdraw",
      "offset": [
        18456,
        18497
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2528": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18456,
        18543
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2529": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18456,
        18543
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2530": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18456,
        18543
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9FA"
    },
    "2533": {
      "branch": 124,
      "fn": "RequestManager.withdraw",
      "offset": [
        18456,
        18543
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2534": {
      "op": "POP"
    },
    "2535": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18530,
        18543
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2537": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18530,
        18543
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2538": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18530,
        18543
      ],
      "op": "ADD",
      "path": "8"
    },
    "2539": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18530,
        18543
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2546": {
      "op": "SHL"
    },
    "2547": {
      "op": "SUB"
    },
    "2548": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18513,
        18543
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2549": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18513,
        18543
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2550": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18513,
        18543
      ],
      "op": "AND",
      "path": "8"
    },
    "2551": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18530,
        18543
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2552": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18530,
        18543
      ],
      "op": "AND",
      "path": "8"
    },
    "2553": {
      "branch": 125,
      "fn": "RequestManager.withdraw",
      "offset": [
        18513,
        18543
      ],
      "op": "EQ",
      "path": "8"
    },
    "2554": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18456,
        18543
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2555": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18439,
        18610
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2556": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18439,
        18610
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA09"
    },
    "2559": {
      "branch": 125,
      "fn": "RequestManager.withdraw",
      "offset": [
        18439,
        18610
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2560": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18568,
        18599
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 7,
      "value": "0xA09"
    },
    "2563": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18584,
        18591
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2564": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18593,
        18598
      ],
      "op": "DUP7",
      "path": "8"
    },
    "2565": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18568,
        18583
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F38"
    },
    "2568": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18568,
        18599
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2569": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18568,
        18599
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2570": {
      "op": "POP"
    },
    "2571": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18627,
        18640
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 8
    },
    "2572": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18627,
        18640
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "2573": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17387,
        18647
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "2574": {
      "op": "POP"
    },
    "2575": {
      "op": "POP"
    },
    "2576": {
      "op": "POP"
    },
    "2577": {
      "op": "POP"
    },
    "2578": {
      "op": "POP"
    },
    "2579": {
      "op": "POP"
    },
    "2580": {
      "fn": "RequestManager.withdraw",
      "jump": "o",
      "offset": [
        17387,
        18647
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2581": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2582": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9180,
        9190
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 9,
      "value": "0x4"
    },
    "2584": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9180,
        9190
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2585": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9153,
        9160
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2587": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9153,
        9160
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2588": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9180,
        9190
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "2590": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9180,
        9190
      ],
      "op": "AND",
      "path": "8"
    },
    "2591": {
      "branch": 126,
      "fn": "RequestManager.createRequest",
      "offset": [
        9180,
        9199
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2592": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9172,
        9226
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA64"
    },
    "2595": {
      "branch": 126,
      "fn": "RequestManager.createRequest",
      "offset": [
        9172,
        9226
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2596": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9172,
        9226
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2598": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9172,
        9226
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2599": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2605": {
      "op": "SHL"
    },
    "2606": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9172,
        9226
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2607": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9172,
        9226
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2610": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9172,
        9226
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2612": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9172,
        9226
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2613": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9172,
        9226
      ],
      "op": "ADD",
      "path": "8"
    },
    "2614": {
      "op": "MSTORE"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2619": {
      "op": "DUP3"
    },
    "2620": {
      "op": "ADD"
    },
    "2621": {
      "op": "MSTORE"
    },
    "2622": {
      "op": "PUSH22",
      "value": "0x10DBDB9D1C9858DD081A5CC819195C1C9958D85D1959"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "2647": {
      "op": "SHL"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2650": {
      "op": "DUP3"
    },
    "2651": {
      "op": "ADD"
    },
    "2652": {
      "op": "MSTORE"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2655": {
      "op": "ADD"
    },
    "2656": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9172,
        9226
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "2659": {
      "op": "JUMP"
    },
    "2660": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9172,
        9226
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2661": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9257,
        9287
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 10,
      "value": "0x0"
    },
    "2663": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9257,
        9287
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2664": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9257,
        9287
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2665": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9257,
        9287
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2666": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9257,
        9272
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "2668": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9257,
        9287
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2670": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9257,
        9287
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2671": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9257,
        9287
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2673": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9257,
        9287
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2674": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9257,
        9287
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2675": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9257,
        9287
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2676": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9257,
        9292
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2677": {
      "branch": 127,
      "fn": "RequestManager.createRequest",
      "offset": [
        9257,
        9292
      ],
      "op": "SUB",
      "path": "8"
    },
    "2678": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9236,
        9345
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAC1"
    },
    "2681": {
      "branch": 127,
      "fn": "RequestManager.createRequest",
      "offset": [
        9236,
        9345
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2682": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9236,
        9345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2684": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9236,
        9345
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2685": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2691": {
      "op": "SHL"
    },
    "2692": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9236,
        9345
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2693": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9236,
        9345
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2696": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9236,
        9345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2698": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9236,
        9345
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2699": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9236,
        9345
      ],
      "op": "ADD",
      "path": "8"
    },
    "2700": {
      "op": "MSTORE"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2705": {
      "op": "DUP3"
    },
    "2706": {
      "op": "ADD"
    },
    "2707": {
      "op": "MSTORE"
    },
    "2708": {
      "op": "PUSH32",
      "value": "0x54617267657420726F6C6C7570206E6F7420737570706F727465640000000000"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2743": {
      "op": "DUP3"
    },
    "2744": {
      "op": "ADD"
    },
    "2745": {
      "op": "MSTORE"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2748": {
      "op": "ADD"
    },
    "2749": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9236,
        9345
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "2752": {
      "op": "JUMP"
    },
    "2753": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9236,
        9345
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2754": {
      "offset": [
        4534,
        4543
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12C"
    },
    "2757": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9376,
        9390
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 11
    },
    "2758": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9376,
        9413
      ],
      "op": "LT",
      "path": "8"
    },
    "2759": {
      "branch": 128,
      "fn": "RequestManager.createRequest",
      "offset": [
        9376,
        9413
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2760": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9355,
        9464
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB13"
    },
    "2763": {
      "branch": 128,
      "fn": "RequestManager.createRequest",
      "offset": [
        9355,
        9464
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2764": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9355,
        9464
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2766": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9355,
        9464
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2767": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2773": {
      "op": "SHL"
    },
    "2774": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9355,
        9464
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2775": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9355,
        9464
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2778": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9355,
        9464
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2780": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9355,
        9464
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2781": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9355,
        9464
      ],
      "op": "ADD",
      "path": "8"
    },
    "2782": {
      "op": "MSTORE"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2787": {
      "op": "DUP3"
    },
    "2788": {
      "op": "ADD"
    },
    "2789": {
      "op": "MSTORE"
    },
    "2790": {
      "op": "PUSH32",
      "value": "0x56616C696469747920706572696F6420746F6F2073686F727400000000000000"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2825": {
      "op": "DUP3"
    },
    "2826": {
      "op": "ADD"
    },
    "2827": {
      "op": "MSTORE"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2830": {
      "op": "ADD"
    },
    "2831": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9355,
        9464
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "2834": {
      "op": "JUMP"
    },
    "2835": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9355,
        9464
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2836": {
      "offset": [
        4646,
        4656
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x708"
    },
    "2839": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9495,
        9509
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 12
    },
    "2840": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9495,
        9532
      ],
      "op": "GT",
      "path": "8"
    },
    "2841": {
      "branch": 129,
      "fn": "RequestManager.createRequest",
      "offset": [
        9495,
        9532
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2842": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9474,
        9582
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB65"
    },
    "2845": {
      "branch": 129,
      "fn": "RequestManager.createRequest",
      "offset": [
        9474,
        9582
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2846": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9474,
        9582
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2848": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9474,
        9582
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2849": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2855": {
      "op": "SHL"
    },
    "2856": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9474,
        9582
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2857": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9474,
        9582
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2860": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9474,
        9582
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2862": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9474,
        9582
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2863": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9474,
        9582
      ],
      "op": "ADD",
      "path": "8"
    },
    "2864": {
      "op": "MSTORE"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2869": {
      "op": "DUP3"
    },
    "2870": {
      "op": "ADD"
    },
    "2871": {
      "op": "MSTORE"
    },
    "2872": {
      "op": "PUSH32",
      "value": "0x56616C696469747920706572696F6420746F6F206C6F6E670000000000000000"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2907": {
      "op": "DUP3"
    },
    "2908": {
      "op": "ADD"
    },
    "2909": {
      "op": "MSTORE"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2912": {
      "op": "ADD"
    },
    "2913": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9474,
        9582
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "2916": {
      "op": "JUMP"
    },
    "2917": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9474,
        9582
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2918": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9610,
        9623
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 13,
      "value": "0xE"
    },
    "2920": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9610,
        9623
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2921": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9600,
        9606
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2922": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9600,
        9623
      ],
      "op": "GT",
      "path": "8"
    },
    "2923": {
      "branch": 130,
      "fn": "RequestManager.createRequest",
      "offset": [
        9600,
        9623
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2924": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9592,
        9657
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBB7"
    },
    "2927": {
      "branch": 130,
      "fn": "RequestManager.createRequest",
      "offset": [
        9592,
        9657
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2928": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9592,
        9657
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2930": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9592,
        9657
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2937": {
      "op": "SHL"
    },
    "2938": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9592,
        9657
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2939": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9592,
        9657
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2942": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9592,
        9657
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2944": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9592,
        9657
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2945": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9592,
        9657
      ],
      "op": "ADD",
      "path": "8"
    },
    "2946": {
      "op": "MSTORE"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2951": {
      "op": "DUP3"
    },
    "2952": {
      "op": "ADD"
    },
    "2953": {
      "op": "MSTORE"
    },
    "2954": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473207472616E73666572206C696D6974000000"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2989": {
      "op": "DUP3"
    },
    "2990": {
      "op": "ADD"
    },
    "2991": {
      "op": "MSTORE"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2994": {
      "op": "ADD"
    },
    "2995": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9592,
        9657
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "2998": {
      "op": "JUMP"
    },
    "2999": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9592,
        9657
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3000": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9690,
        9708
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3001": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9668,
        9680
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3003": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9736,
        9749
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBC3"
    },
    "3006": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9742,
        9748
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3007": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9736,
        9741
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B00"
    },
    "3010": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9736,
        9749
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3011": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9736,
        9749
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3012": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9720,
        9749
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3013": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9720,
        9749
      ],
      "op": "POP",
      "path": "8"
    },
    "3014": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9759,
        9778
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3016": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9781,
        9800
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBD0"
    },
    "3019": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9793,
        9799
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3020": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9781,
        9792
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1305"
    },
    "3023": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9781,
        9800
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3024": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9781,
        9800
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3025": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9759,
        9800
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3026": {
      "op": "POP"
    },
    "3027": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9810,
        9834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3029": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9759,
        9800
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3030": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9837,
        9851
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBDF"
    },
    "3033": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9846,
        9851
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3034": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9837,
        9843
      ],
      "op": "DUP10",
      "path": "8"
    },
    "3035": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9837,
        9851
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "3038": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9837,
        9851
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3039": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9837,
        9851
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3040": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9837,
        9865
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBE9"
    },
    "3043": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9837,
        9865
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3044": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9837,
        9865
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3045": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9837,
        9865
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "3048": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9837,
        9865
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3049": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9837,
        9865
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3050": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 14,
      "value": "0x40"
    },
    "3052": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3053": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3058": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3060": {
      "op": "SHL"
    },
    "3061": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3062": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3063": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9913,
        9923
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3064": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3066": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3067": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "3068": {
      "op": "MSTORE"
    },
    "3069": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9933,
        9937
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3072": {
      "op": "DUP3"
    },
    "3073": {
      "op": "ADD"
    },
    "3074": {
      "op": "MSTORE"
    },
    "3075": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9810,
        9865
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3076": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9810,
        9865
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3077": {
      "op": "POP"
    },
    "3078": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9810,
        9865
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3079": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9810,
        9865
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3086": {
      "op": "SHL"
    },
    "3087": {
      "op": "SUB"
    },
    "3088": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9912
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3089": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9912
      ],
      "op": "AND",
      "path": "8"
    },
    "3090": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9912
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3091": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9912
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDD62ED3E"
    },
    "3096": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9912
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3099": {
      "op": "ADD"
    },
    "3100": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3102": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3104": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3105": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3106": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3107": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "SUB",
      "path": "8"
    },
    "3108": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3109": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3110": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "GAS",
      "path": "8"
    },
    "3111": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "3112": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3113": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3114": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3115": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC38"
    },
    "3118": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3119": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3120": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3122": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3123": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "3124": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3125": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3127": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3128": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3129": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "POP",
      "path": "8"
    },
    "3130": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "POP",
      "path": "8"
    },
    "3131": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "POP",
      "path": "8"
    },
    "3132": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "POP",
      "path": "8"
    },
    "3133": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3135": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3136": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3137": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3139": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "NOT",
      "path": "8"
    },
    "3140": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3142": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3143": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "3144": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "AND",
      "path": "8"
    },
    "3145": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3146": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "3147": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3148": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3150": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3151": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "POP",
      "path": "8"
    },
    "3152": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3153": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "3154": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3155": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC5C"
    },
    "3158": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3159": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3160": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2506"
    },
    "3163": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9897,
        9939
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3164": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9939
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3165": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9959
      ],
      "op": "LT",
      "path": "8"
    },
    "3166": {
      "branch": 131,
      "fn": "RequestManager.createRequest",
      "offset": [
        9897,
        9959
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3167": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9876,
        10007
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCA3"
    },
    "3170": {
      "branch": 131,
      "fn": "RequestManager.createRequest",
      "offset": [
        9876,
        10007
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3171": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9876,
        10007
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3173": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9876,
        10007
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9876,
        10007
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3182": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9876,
        10007
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3185": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9876,
        10007
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3187": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9876,
        10007
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3188": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9876,
        10007
      ],
      "op": "ADD",
      "path": "8"
    },
    "3189": {
      "op": "MSTORE"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3194": {
      "op": "DUP3"
    },
    "3195": {
      "op": "ADD"
    },
    "3196": {
      "op": "MSTORE"
    },
    "3197": {
      "op": "PUSH22",
      "value": "0x496E73756666696369656E7420616C6C6F77616E6365"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3222": {
      "op": "SHL"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3225": {
      "op": "DUP3"
    },
    "3226": {
      "op": "ADD"
    },
    "3227": {
      "op": "MSTORE"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3230": {
      "op": "ADD"
    },
    "3231": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9876,
        10007
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "3234": {
      "op": "JUMP"
    },
    "3235": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9876,
        10007
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3236": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10036,
        10037
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 15,
      "value": "0x1"
    },
    "3238": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10032
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "3240": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10032
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3242": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3243": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3244": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3245": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCB6"
    },
    "3248": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3249": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3250": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "3253": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10018,
        10037
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3254": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3255": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3256": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "POP",
      "path": "8"
    },
    "3257": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "POP",
      "path": "8"
    },
    "3258": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3259": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3260": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3261": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10018,
        10037
      ],
      "op": "POP",
      "path": "8"
    },
    "3262": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10047,
        10073
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3264": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10076,
        10084
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "3266": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10076,
        10100
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3268": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10085,
        10099
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "3270": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10085,
        10099
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3271": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10076,
        10100
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3272": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10076,
        10100
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3273": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10076,
        10100
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3275": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10076,
        10100
      ],
      "op": "ADD",
      "path": "8"
    },
    "3276": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10076,
        10100
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3277": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10076,
        10100
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3278": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10076,
        10100
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3279": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10076,
        10100
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3281": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10076,
        10100
      ],
      "op": "ADD",
      "path": "8"
    },
    "3282": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10076,
        10100
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3284": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10076,
        10100
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3285": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10047,
        10100
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3286": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10047,
        10100
      ],
      "op": "POP",
      "path": "8"
    },
    "3287": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10130,
        10140
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 16
    },
    "3288": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10120
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3289": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10127
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3291": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10127
      ],
      "op": "ADD",
      "path": "8"
    },
    "3292": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10127
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3294": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "3297": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "EXP",
      "path": "8"
    },
    "3298": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3299": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3300": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3307": {
      "op": "SHL"
    },
    "3308": {
      "op": "SUB"
    },
    "3309": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "MUL",
      "path": "8"
    },
    "3310": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "NOT",
      "path": "8"
    },
    "3311": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "AND",
      "path": "8"
    },
    "3312": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3313": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3320": {
      "op": "SHL"
    },
    "3321": {
      "op": "SUB"
    },
    "3322": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "AND",
      "path": "8"
    },
    "3323": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "MUL",
      "path": "8"
    },
    "3324": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "OR",
      "path": "8"
    },
    "3325": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3326": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3327": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10110,
        10140
      ],
      "op": "POP",
      "path": "8"
    },
    "3328": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10182,
        10200
      ],
      "op": "DUP11",
      "path": "8",
      "statement": 17
    },
    "3329": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10160
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3330": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10179
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3332": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10179
      ],
      "op": "ADD",
      "path": "8"
    },
    "3333": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10179
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3335": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "3338": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "EXP",
      "path": "8"
    },
    "3339": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3340": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3341": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3348": {
      "op": "SHL"
    },
    "3349": {
      "op": "SUB"
    },
    "3350": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "MUL",
      "path": "8"
    },
    "3351": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "NOT",
      "path": "8"
    },
    "3352": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "AND",
      "path": "8"
    },
    "3353": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3354": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3361": {
      "op": "SHL"
    },
    "3362": {
      "op": "SUB"
    },
    "3363": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "AND",
      "path": "8"
    },
    "3364": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "MUL",
      "path": "8"
    },
    "3365": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "OR",
      "path": "8"
    },
    "3366": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3367": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3368": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10150,
        10200
      ],
      "op": "POP",
      "path": "8"
    },
    "3369": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10237,
        10250
      ],
      "op": "DUP12",
      "path": "8",
      "statement": 18
    },
    "3370": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10210,
        10220
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3371": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10210,
        10234
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3373": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10210,
        10234
      ],
      "op": "ADD",
      "path": "8"
    },
    "3374": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10210,
        10250
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3375": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10210,
        10250
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3376": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10210,
        10250
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3377": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10210,
        10250
      ],
      "op": "POP",
      "path": "8"
    },
    "3378": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10292,
        10310
      ],
      "op": "DUP10",
      "path": "8",
      "statement": 19
    },
    "3379": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10270
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3380": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10289
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "3382": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10289
      ],
      "op": "ADD",
      "path": "8"
    },
    "3383": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10289
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3385": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "3388": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "EXP",
      "path": "8"
    },
    "3389": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3390": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3391": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3398": {
      "op": "SHL"
    },
    "3399": {
      "op": "SUB"
    },
    "3400": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "MUL",
      "path": "8"
    },
    "3401": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "NOT",
      "path": "8"
    },
    "3402": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "AND",
      "path": "8"
    },
    "3403": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3404": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3411": {
      "op": "SHL"
    },
    "3412": {
      "op": "SUB"
    },
    "3413": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "AND",
      "path": "8"
    },
    "3414": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "MUL",
      "path": "8"
    },
    "3415": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "OR",
      "path": "8"
    },
    "3416": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3417": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3418": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10260,
        10310
      ],
      "op": "POP",
      "path": "8"
    },
    "3419": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10347,
        10360
      ],
      "op": "DUP9",
      "path": "8",
      "statement": 20
    },
    "3420": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10330
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3421": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10344
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3423": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10344
      ],
      "op": "ADD",
      "path": "8"
    },
    "3424": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10344
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3426": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "3429": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "EXP",
      "path": "8"
    },
    "3430": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3431": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3432": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3439": {
      "op": "SHL"
    },
    "3440": {
      "op": "SUB"
    },
    "3441": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "MUL",
      "path": "8"
    },
    "3442": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "NOT",
      "path": "8"
    },
    "3443": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "AND",
      "path": "8"
    },
    "3444": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3445": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3452": {
      "op": "SHL"
    },
    "3453": {
      "op": "SUB"
    },
    "3454": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "AND",
      "path": "8"
    },
    "3455": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "MUL",
      "path": "8"
    },
    "3456": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "OR",
      "path": "8"
    },
    "3457": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3458": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3459": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10320,
        10360
      ],
      "op": "POP",
      "path": "8"
    },
    "3460": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10390,
        10396
      ],
      "op": "DUP8",
      "path": "8",
      "statement": 21
    },
    "3461": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10370,
        10380
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3462": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10370,
        10387
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "3464": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10370,
        10387
      ],
      "op": "ADD",
      "path": "8"
    },
    "3465": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10370,
        10396
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3466": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10370,
        10396
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3467": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10370,
        10396
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3468": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10370,
        10396
      ],
      "op": "POP",
      "path": "8"
    },
    "3469": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 22,
      "value": "0x40"
    },
    "3471": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3472": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3473": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3475": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "ADD",
      "path": "8"
    },
    "3476": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3478": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3479": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3480": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10461,
        10462
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3488": {
      "op": "SHL"
    },
    "3489": {
      "op": "SUB"
    },
    "3490": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "AND",
      "path": "8"
    },
    "3491": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3492": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3493": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3495": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "ADD",
      "path": "8"
    },
    "3496": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10473,
        10474
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3498": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10465,
        10475
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3499": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10465,
        10475
      ],
      "op": "SHL",
      "path": "8"
    },
    "3500": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3501": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3502": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10432,
        10476
      ],
      "op": "POP",
      "path": "8"
    },
    "3503": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10416
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3504": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10429
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "3506": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10429
      ],
      "op": "ADD",
      "path": "8"
    },
    "3507": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3509": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3510": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "ADD",
      "path": "8"
    },
    "3511": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3512": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3513": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3515": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "ADD",
      "path": "8"
    },
    "3516": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3518": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "3521": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "EXP",
      "path": "8"
    },
    "3522": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3523": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3524": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3531": {
      "op": "SHL"
    },
    "3532": {
      "op": "SUB"
    },
    "3533": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "MUL",
      "path": "8"
    },
    "3534": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "NOT",
      "path": "8"
    },
    "3535": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "AND",
      "path": "8"
    },
    "3536": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3537": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3544": {
      "op": "SHL"
    },
    "3545": {
      "op": "SUB"
    },
    "3546": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "AND",
      "path": "8"
    },
    "3547": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "MUL",
      "path": "8"
    },
    "3548": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "OR",
      "path": "8"
    },
    "3549": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3550": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3551": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "POP",
      "path": "8"
    },
    "3552": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3554": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3555": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "ADD",
      "path": "8"
    },
    "3556": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3557": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3558": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3560": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "ADD",
      "path": "8"
    },
    "3561": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3562": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3563": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "POP",
      "path": "8"
    },
    "3564": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10476
      ],
      "op": "POP",
      "path": "8"
    },
    "3565": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10528,
        10542
      ],
      "op": "DUP7",
      "path": "8",
      "statement": 23
    },
    "3566": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10510,
        10525
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "3567": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10510,
        10542
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDF8"
    },
    "3570": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10510,
        10542
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3571": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10510,
        10542
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3572": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10510,
        10542
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "3575": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10510,
        10542
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3576": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10510,
        10542
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3577": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10486,
        10507
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "3579": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10486,
        10507
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3580": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10486,
        10507
      ],
      "op": "ADD",
      "path": "8"
    },
    "3581": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10486,
        10542
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3582": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10486,
        10542
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3583": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10486,
        10542
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3584": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10552,
        10568
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 24,
      "value": "0xA"
    },
    "3586": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10552,
        10568
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3587": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10552,
        10568
      ],
      "op": "ADD",
      "path": "8"
    },
    "3588": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10552,
        10576
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3589": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10552,
        10576
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3590": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10552,
        10576
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3591": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10586,
        10608
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 25,
      "value": "0xB"
    },
    "3593": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10586,
        10608
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3594": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10586,
        10608
      ],
      "op": "ADD",
      "path": "8"
    },
    "3595": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10586,
        10622
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3596": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10586,
        10622
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3597": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10586,
        10622
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3598": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10666,
        10680
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 26,
      "value": "0x5"
    },
    "3600": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10666,
        10680
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3601": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10638,
        10863
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3603": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10638,
        10863
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3604": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10638,
        10863
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3605": {
      "op": "SWAP2"
    },
    "3606": {
      "op": "DUP3"
    },
    "3607": {
      "op": "MSTORE"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3610": {
      "op": "DUP3"
    },
    "3611": {
      "op": "ADD"
    },
    "3612": {
      "op": "DUP16"
    },
    "3613": {
      "op": "SWAP1"
    },
    "3614": {
      "op": "MSTORE"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3621": {
      "op": "SHL"
    },
    "3622": {
      "op": "SUB"
    },
    "3623": {
      "op": "DUP15"
    },
    "3624": {
      "op": "DUP2"
    },
    "3625": {
      "op": "AND"
    },
    "3626": {
      "op": "DUP4"
    },
    "3627": {
      "op": "DUP4"
    },
    "3628": {
      "op": "ADD"
    },
    "3629": {
      "op": "MSTORE"
    },
    "3630": {
      "op": "DUP14"
    },
    "3631": {
      "op": "DUP2"
    },
    "3632": {
      "op": "AND"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3635": {
      "op": "DUP5"
    },
    "3636": {
      "op": "ADD"
    },
    "3637": {
      "op": "MSTORE"
    },
    "3638": {
      "op": "DUP13"
    },
    "3639": {
      "op": "AND"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3642": {
      "op": "DUP4"
    },
    "3643": {
      "op": "ADD"
    },
    "3644": {
      "op": "MSTORE"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3647": {
      "op": "DUP3"
    },
    "3648": {
      "op": "ADD"
    },
    "3649": {
      "op": "DUP12"
    },
    "3650": {
      "op": "SWAP1"
    },
    "3651": {
      "op": "MSTORE"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3654": {
      "op": "DUP3"
    },
    "3655": {
      "op": "ADD"
    },
    "3656": {
      "op": "SWAP3"
    },
    "3657": {
      "op": "SWAP1"
    },
    "3658": {
      "op": "SWAP3"
    },
    "3659": {
      "op": "MSTORE"
    },
    "3660": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10638,
        10863
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3661": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10638,
        10863
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3662": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10638,
        10863
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x18A412D0656B9A5C9263A134F66A34DA33CAD7C3690971601F9963ADE588E701"
    },
    "3695": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10638,
        10863
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3696": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10638,
        10863
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3697": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10638,
        10863
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3698": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10638,
        10863
      ],
      "op": "SUB",
      "path": "8"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3701": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10638,
        10863
      ],
      "op": "ADD",
      "path": "8"
    },
    "3702": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10638,
        10863
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3703": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10638,
        10863
      ],
      "op": "LOG1",
      "path": "8"
    },
    "3704": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10874,
        10941
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 27,
      "value": "0xE8C"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3713": {
      "op": "SHL"
    },
    "3714": {
      "op": "SUB"
    },
    "3715": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10874,
        10896
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3716": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10874,
        10896
      ],
      "op": "AND",
      "path": "8"
    },
    "3717": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10897,
        10907
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3718": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10917,
        10921
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "3719": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10924,
        10940
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3720": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10874,
        10896
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x201D"
    },
    "3723": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10874,
        10941
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3724": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10874,
        10941
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3725": {
      "op": "POP"
    },
    "3726": {
      "op": "POP"
    },
    "3727": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10959,
        10973
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 28,
      "value": "0x5"
    },
    "3729": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10959,
        10973
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3730": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10959,
        10973
      ],
      "op": "SWAP11",
      "path": "8"
    },
    "3731": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8916,
        10980
      ],
      "op": "SWAP10",
      "path": "8"
    },
    "3732": {
      "op": "POP"
    },
    "3733": {
      "op": "POP"
    },
    "3734": {
      "op": "POP"
    },
    "3735": {
      "op": "POP"
    },
    "3736": {
      "op": "POP"
    },
    "3737": {
      "op": "POP"
    },
    "3738": {
      "op": "POP"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "op": "POP"
    },
    "3742": {
      "fn": "RequestManager.createRequest",
      "jump": "o",
      "offset": [
        8916,
        10980
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3743": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3744": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3746": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3753": {
      "op": "SHL"
    },
    "3754": {
      "op": "SUB"
    },
    "3755": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3756": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 29
    },
    "3757": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3758": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC9"
    },
    "3761": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3762": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3764": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3765": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3771": {
      "op": "SHL"
    },
    "3772": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3773": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3774": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3776": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3777": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AF"
    },
    "3780": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3781": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x251F"
    },
    "3784": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3785": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3786": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0xED3"
    },
    "3789": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2088"
    },
    "3794": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3795": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3796": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3797": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23891,
        24147
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3798": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3800": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3807": {
      "op": "SHL"
    },
    "3808": {
      "op": "SUB"
    },
    "3809": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3810": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3811": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3812": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEFF"
    },
    "3815": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3816": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3818": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3819": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3825": {
      "op": "SHL"
    },
    "3826": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3827": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3828": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3830": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3831": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AF"
    },
    "3834": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3835": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x251F"
    },
    "3838": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3839": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3840": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24042,
        24056
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 31,
      "value": "0xD"
    },
    "3842": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24042,
        24076
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3843": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24042,
        24076
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3844": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24042,
        24076
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3845": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24042,
        24076
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3846": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24086,
        24094
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 32,
      "value": "0xC"
    },
    "3848": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24086,
        24108
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3849": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24118,
        24126
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 33,
      "value": "0xB"
    },
    "3851": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24118,
        24140
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3852": {
      "fn": "RequestManager.updateFeeData",
      "jump": "o",
      "offset": [
        23891,
        24147
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3853": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14764,
        16830
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3854": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14859,
        14866
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3855": {
      "offset": [
        7347,
        7359
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "3857": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7347,
        7359
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3858": {
      "offset": [
        7336,
        7343
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3859": {
      "offset": [
        7336,
        7359
      ],
      "op": "GT",
      "path": "8"
    },
    "3860": {
      "branch": 132,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7336,
        7359
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3861": {
      "offset": [
        7336,
        7374
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3862": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7336,
        7374
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3863": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7336,
        7374
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF20"
    },
    "3866": {
      "branch": 132,
      "offset": [
        7336,
        7374
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3867": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7336,
        7374
      ],
      "op": "POP",
      "path": "8"
    },
    "3868": {
      "offset": [
        7373,
        7374
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3870": {
      "offset": [
        7363,
        7370
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3871": {
      "offset": [
        7363,
        7374
      ],
      "op": "GT",
      "path": "8"
    },
    "3872": {
      "offset": [
        7336,
        7374
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3873": {
      "offset": [
        7328,
        7396
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF60"
    },
    "3876": {
      "offset": [
        7328,
        7396
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3877": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7328,
        7396
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3879": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7328,
        7396
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3880": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3886": {
      "op": "SHL"
    },
    "3887": {
      "offset": [
        7328,
        7396
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3888": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7328,
        7396
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3891": {
      "offset": [
        7328,
        7396
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3893": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7328,
        7396
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3894": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7328,
        7396
      ],
      "op": "ADD",
      "path": "8"
    },
    "3895": {
      "op": "MSTORE"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3900": {
      "op": "DUP3"
    },
    "3901": {
      "op": "ADD"
    },
    "3902": {
      "op": "MSTORE"
    },
    "3903": {
      "op": "PUSH17",
      "value": "0x18DB185A5B5259081B9BDD081D985B1A59"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "3923": {
      "op": "SHL"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3926": {
      "op": "DUP3"
    },
    "3927": {
      "op": "ADD"
    },
    "3928": {
      "op": "MSTORE"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3931": {
      "op": "ADD"
    },
    "3932": {
      "offset": [
        7328,
        7396
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "3935": {
      "op": "JUMP"
    },
    "3936": {
      "offset": [
        7328,
        7396
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3937": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14882,
        14901
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3939": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14904,
        14919
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3940": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14904,
        14919
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3941": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14904,
        14919
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3942": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14904,
        14910
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "3944": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14904,
        14919
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3946": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14904,
        14919
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3947": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14904,
        14919
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3948": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14904,
        14919
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3949": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14904,
        14919
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3951": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14904,
        14919
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3952": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14904,
        14919
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3953": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14904,
        14919
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3954": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14964,
        14979
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3955": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14964,
        14979
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3956": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14955,
        14980
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3957": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14955,
        14980
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3958": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14955,
        14963
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "3960": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14955,
        14980
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3961": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14955,
        14980
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3962": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14955,
        14980
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3963": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14955,
        14980
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3964": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14955,
        14980
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3965": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14955,
        14980
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3966": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15016,
        15033
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 34,
      "value": "0x7"
    },
    "3968": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15016,
        15033
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3969": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15016,
        15033
      ],
      "op": "ADD",
      "path": "8"
    },
    "3970": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15016,
        15033
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3971": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14998,
        15013
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "3972": {
      "branch": 133,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14998,
        15033
      ],
      "op": "LT",
      "path": "8"
    },
    "3973": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14990,
        15051
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFC0"
    },
    "3976": {
      "branch": 133,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14990,
        15051
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3977": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14990,
        15051
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3979": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14990,
        15051
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3986": {
      "op": "SHL"
    },
    "3987": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14990,
        15051
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3988": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14990,
        15051
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3991": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14990,
        15051
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3993": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14990,
        15051
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3994": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14990,
        15051
      ],
      "op": "ADD",
      "path": "8"
    },
    "3995": {
      "op": "MSTORE"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4000": {
      "op": "DUP3"
    },
    "4001": {
      "op": "ADD"
    },
    "4002": {
      "op": "MSTORE"
    },
    "4003": {
      "op": "PUSH13",
      "value": "0x10DB185A5B48195E1C1A5C9959"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "4019": {
      "op": "SHL"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4022": {
      "op": "DUP3"
    },
    "4023": {
      "op": "ADD"
    },
    "4024": {
      "op": "MSTORE"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4027": {
      "op": "ADD"
    },
    "4028": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14990,
        15051
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "4031": {
      "op": "JUMP"
    },
    "4032": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14990,
        15051
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4033": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15141,
        15165
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4035": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15141,
        15165
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4036": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15198,
        15216
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4038": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15198,
        15216
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4039": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15198,
        15216
      ],
      "op": "ADD",
      "path": "8"
    },
    "4040": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15198,
        15216
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4041": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15257,
        15283
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "4043": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15257,
        15283
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4044": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15257,
        15283
      ],
      "op": "ADD",
      "path": "8"
    },
    "4045": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15257,
        15283
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4046": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15062,
        15079
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4048": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15062,
        15079
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4049": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15062,
        15079
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4050": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15062,
        15079
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4051": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15141,
        15165
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4052": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15141,
        15165
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4053": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15298,
        15333
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4054": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15298,
        15333
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4055": {
      "branch": 134,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15298,
        15333
      ],
      "op": "GT",
      "path": "8"
    },
    "4056": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15294,
        15789
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4057": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15294,
        15789
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1082"
    },
    "4060": {
      "branch": 134,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15294,
        15789
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4061": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15353,
        15373
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4062": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15377,
        15378
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4064": {
      "branch": 135,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15353,
        15378
      ],
      "op": "SUB",
      "path": "8"
    },
    "4065": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15349,
        15470
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1005"
    },
    "4068": {
      "branch": 135,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15349,
        15470
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4069": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15433,
        15454
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 35,
      "value": "0x2"
    },
    "4071": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15433,
        15454
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4072": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15433,
        15454
      ],
      "op": "ADD",
      "path": "8"
    },
    "4073": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15433,
        15454
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4074": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15417,
        15455
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4076": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15417,
        15455
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4077": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15417,
        15455
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4078": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15417,
        15455
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4079": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15417,
        15432
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "4081": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15417,
        15455
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4083": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15417,
        15455
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4084": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15417,
        15455
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4086": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15417,
        15455
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4087": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15417,
        15455
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4088": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15417,
        15455
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4089": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15398,
        15455
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1002"
    },
    "4092": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15398,
        15455
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4093": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15398,
        15455
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4094": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15398,
        15455
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "4097": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15398,
        15455
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4098": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15398,
        15455
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4099": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15398,
        15455
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4100": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15398,
        15455
      ],
      "op": "POP",
      "path": "8"
    },
    "4101": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15349,
        15470
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4102": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15491,
        15504
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 36,
      "value": "0x1"
    },
    "4104": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15491,
        15504
      ],
      "op": "DUP8",
      "path": "8"
    },
    "4105": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15491,
        15504
      ],
      "op": "ADD",
      "path": "8"
    },
    "4106": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15491,
        15504
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4107": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15508,
        15518
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4114": {
      "op": "SHL"
    },
    "4115": {
      "op": "SUB"
    },
    "4116": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15491,
        15504
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4117": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15491,
        15504
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4118": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15491,
        15504
      ],
      "op": "AND",
      "path": "8"
    },
    "4119": {
      "branch": 136,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15491,
        15518
      ],
      "op": "SUB",
      "path": "8"
    },
    "4120": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15483,
        15549
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1063"
    },
    "4123": {
      "branch": 136,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15483,
        15549
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4124": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15483,
        15549
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4126": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15483,
        15549
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4133": {
      "op": "SHL"
    },
    "4134": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15483,
        15549
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4135": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15483,
        15549
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4138": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15483,
        15549
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4140": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15483,
        15549
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4141": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15483,
        15549
      ],
      "op": "ADD",
      "path": "8"
    },
    "4142": {
      "op": "MSTORE"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4147": {
      "op": "DUP3"
    },
    "4148": {
      "op": "ADD"
    },
    "4149": {
      "op": "MSTORE"
    },
    "4150": {
      "op": "PUSH32",
      "value": "0x43616E6E6F74206368616C6C656E6765206F776E20636C61696D000000000000"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4185": {
      "op": "DUP3"
    },
    "4186": {
      "op": "ADD"
    },
    "4187": {
      "op": "MSTORE"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4190": {
      "op": "ADD"
    },
    "4191": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15483,
        15549
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "4194": {
      "op": "JUMP"
    },
    "4195": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15483,
        15549
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4196": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15575,
        15585
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 37
    },
    "4197": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15575,
        15585
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "4198": {
      "op": "POP"
    },
    "4199": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15610,
        15645
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 38,
      "value": "0x1070"
    },
    "4202": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15625,
        15645
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4203": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15610,
        15622
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4204": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15610,
        15645
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2554"
    },
    "4207": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15610,
        15645
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4208": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15610,
        15645
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4209": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15610,
        15649
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x107B"
    },
    "4212": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15610,
        15649
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4213": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15648,
        15649
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "4215": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15610,
        15649
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "4218": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15610,
        15649
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4219": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15610,
        15649
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4220": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15599,
        15649
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4221": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15599,
        15649
      ],
      "op": "POP",
      "path": "8"
    },
    "4222": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15294,
        15789
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10AE"
    },
    "4225": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15294,
        15789
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4226": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15294,
        15789
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4227": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15692,
        15705
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 39,
      "value": "0x1"
    },
    "4229": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15692,
        15705
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4230": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15692,
        15705
      ],
      "op": "DUP9",
      "path": "8"
    },
    "4231": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15692,
        15705
      ],
      "op": "ADD",
      "path": "8"
    },
    "4232": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15692,
        15705
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4233": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15768,
        15778
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 40
    },
    "4234": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15768,
        15778
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4241": {
      "op": "SHL"
    },
    "4242": {
      "op": "SUB"
    },
    "4243": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15692,
        15705
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4244": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15692,
        15705
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4245": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15692,
        15705
      ],
      "op": "AND",
      "path": "8"
    },
    "4246": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15692,
        15705
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "4247": {
      "op": "POP"
    },
    "4248": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15730,
        15765
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10A1"
    },
    "4251": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15753,
        15765
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4252": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15730,
        15750
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4253": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15730,
        15765
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2554"
    },
    "4256": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15730,
        15765
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4257": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15730,
        15765
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4258": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15730,
        15778
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10AB"
    },
    "4261": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15730,
        15778
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4262": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15730,
        15778
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4263": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15730,
        15778
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "4266": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15730,
        15778
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4267": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15730,
        15778
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4268": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15719,
        15778
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4269": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15719,
        15778
      ],
      "op": "POP",
      "path": "8"
    },
    "4270": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15294,
        15789
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4271": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15807,
        15817
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 41
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4278": {
      "op": "SHL"
    },
    "4279": {
      "op": "SUB"
    },
    "4280": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15807,
        15830
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4281": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15807,
        15830
      ],
      "op": "AND",
      "path": "8"
    },
    "4282": {
      "branch": 137,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15807,
        15830
      ],
      "op": "EQ",
      "path": "8"
    },
    "4283": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15799,
        15857
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10FF"
    },
    "4286": {
      "branch": 137,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15799,
        15857
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4287": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15799,
        15857
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4289": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15799,
        15857
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4296": {
      "op": "SHL"
    },
    "4297": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15799,
        15857
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4298": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15799,
        15857
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4301": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15799,
        15857
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4303": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15799,
        15857
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4304": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15799,
        15857
      ],
      "op": "ADD",
      "path": "8"
    },
    "4305": {
      "op": "MSTORE"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4310": {
      "op": "DUP3"
    },
    "4311": {
      "op": "ADD"
    },
    "4312": {
      "op": "MSTORE"
    },
    "4313": {
      "op": "PUSH22",
      "value": "0x139BDD08195B1A59DA589B19481D1BC81BDD5D189A59"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "4338": {
      "op": "SHL"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4341": {
      "op": "DUP3"
    },
    "4342": {
      "op": "ADD"
    },
    "4343": {
      "op": "MSTORE"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4346": {
      "op": "ADD"
    },
    "4347": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15799,
        15857
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "4350": {
      "op": "JUMP"
    },
    "4351": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15799,
        15857
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4352": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15888,
        15896
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 42
    },
    "4353": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15875,
        15884
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "4354": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15875,
        15896
      ],
      "op": "LT",
      "path": "8"
    },
    "4355": {
      "branch": 138,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15875,
        15896
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4356": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15867,
        15926
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x114F"
    },
    "4359": {
      "branch": 138,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15867,
        15926
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4360": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15867,
        15926
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4362": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15867,
        15926
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4363": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4367": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4369": {
      "op": "SHL"
    },
    "4370": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15867,
        15926
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4371": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15867,
        15926
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4374": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15867,
        15926
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4376": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15867,
        15926
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4377": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15867,
        15926
      ],
      "op": "ADD",
      "path": "8"
    },
    "4378": {
      "op": "MSTORE"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4383": {
      "op": "DUP3"
    },
    "4384": {
      "op": "ADD"
    },
    "4385": {
      "op": "MSTORE"
    },
    "4386": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768207374616B652070726F766964656400000000000000"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4421": {
      "op": "DUP3"
    },
    "4422": {
      "op": "ADD"
    },
    "4423": {
      "op": "MSTORE"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4426": {
      "op": "ADD"
    },
    "4427": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15867,
        15926
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "4430": {
      "op": "JUMP"
    },
    "4431": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15867,
        15926
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4432": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15954,
        15967
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "4434": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15954,
        15967
      ],
      "op": "DUP8",
      "path": "8"
    },
    "4435": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15954,
        15967
      ],
      "op": "ADD",
      "path": "8"
    },
    "4436": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15954,
        15967
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4443": {
      "op": "SHL"
    },
    "4444": {
      "op": "SUB"
    },
    "4445": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15954,
        15967
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4446": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15954,
        15967
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4447": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15954,
        15967
      ],
      "op": "AND",
      "path": "8"
    },
    "4448": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15941,
        15967
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4449": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15941,
        15967
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4450": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15941,
        15967
      ],
      "op": "AND",
      "path": "8"
    },
    "4451": {
      "branch": 139,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15941,
        15967
      ],
      "op": "SUB",
      "path": "8"
    },
    "4452": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15937,
        16204
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1186"
    },
    "4455": {
      "branch": 139,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15937,
        16204
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4456": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16005,
        16014
      ],
      "op": "CALLVALUE",
      "path": "8",
      "statement": 43
    },
    "4457": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        15988
      ],
      "op": "DUP8",
      "path": "8"
    },
    "4458": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16001
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4460": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16001
      ],
      "op": "ADD",
      "path": "8"
    },
    "4461": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16001
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4463": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16014
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4464": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16014
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4465": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16014
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4466": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16014
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x117B"
    },
    "4469": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16014
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4470": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16014
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4471": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16014
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "4474": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15983,
        16014
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4475": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16014
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4476": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16014
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4477": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16014
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4478": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15983,
        16014
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4479": {
      "op": "POP"
    },
    "4480": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15937,
        16204
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11DE"
    },
    "4483": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15937,
        16204
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4484": {
      "op": "POP"
    },
    "4485": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15937,
        16204
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4486": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15937,
        16204
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4487": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16065
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 44,
      "value": "0x4"
    },
    "4489": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16065
      ],
      "op": "DUP8",
      "path": "8"
    },
    "4490": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16065
      ],
      "op": "ADD",
      "path": "8"
    },
    "4491": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16078
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4492": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16078
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4499": {
      "op": "SHL"
    },
    "4500": {
      "op": "SUB"
    },
    "4501": {
      "op": "NOT"
    },
    "4502": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16078
      ],
      "op": "AND",
      "path": "8"
    },
    "4503": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16068,
        16078
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4504": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16078
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4505": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16078
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4506": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16078
      ],
      "op": "OR",
      "path": "8"
    },
    "4507": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16078
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4508": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16078
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4509": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16078
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4510": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16065
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4512": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16127
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 45
    },
    "4513": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16127
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4514": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16127
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4515": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16115
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4517": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16115
      ],
      "op": "DUP9",
      "path": "8"
    },
    "4518": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16115
      ],
      "op": "ADD",
      "path": "8"
    },
    "4519": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16127
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4521": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16127
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4522": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16127
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4524": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16127
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4525": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16127
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4526": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16140
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4527": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16140
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4528": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16131,
        16140
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "4529": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16131,
        16140
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4530": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16045,
        16065
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4531": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16140
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11BD"
    },
    "4534": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16140
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4535": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16131,
        16140
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4536": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16131,
        16140
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4537": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16140
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "4540": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16092,
        16140
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4541": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16140
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4542": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16140
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4543": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16140
      ],
      "op": "POP",
      "path": "8"
    },
    "4544": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16140
      ],
      "op": "POP",
      "path": "8"
    },
    "4545": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16140
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4546": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16140
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4547": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16140
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4548": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16092,
        16140
      ],
      "op": "POP",
      "path": "8"
    },
    "4549": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16184,
        16193
      ],
      "op": "CALLVALUE",
      "path": "8",
      "statement": 46
    },
    "4550": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16159
      ],
      "op": "DUP8",
      "path": "8"
    },
    "4551": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16180
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "4553": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16180
      ],
      "op": "ADD",
      "path": "8"
    },
    "4554": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16180
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4556": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16193
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4557": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16193
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4558": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16193
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4559": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16193
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11D8"
    },
    "4562": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16193
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4563": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16193
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4564": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16193
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "4567": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16154,
        16193
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4568": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16193
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4569": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16193
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4570": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16193
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4571": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16154,
        16193
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4572": {
      "op": "POP"
    },
    "4573": {
      "op": "POP"
    },
    "4574": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15937,
        16204
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4575": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16256,
        16273
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 47,
      "value": "0x7"
    },
    "4577": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16256,
        16273
      ],
      "op": "DUP8",
      "path": "8"
    },
    "4578": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16256,
        16273
      ],
      "op": "ADD",
      "path": "8"
    },
    "4579": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16256,
        16273
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4580": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16234,
        16330
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11F6"
    },
    "4583": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16234,
        16330
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4584": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16287,
        16320
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11F1"
    },
    "4587": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16305,
        16320
      ],
      "op": "DUP6",
      "path": "8"
    },
    "4588": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16287,
        16302
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "4589": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16287,
        16320
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "4592": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16287,
        16320
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4593": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16287,
        16320
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4594": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16234,
        16242
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x20D8"
    },
    "4597": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16234,
        16330
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4598": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16234,
        16330
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4599": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16214,
        16231
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "4601": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16214,
        16231
      ],
      "op": "DUP9",
      "path": "8"
    },
    "4602": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16214,
        16231
      ],
      "op": "ADD",
      "path": "8"
    },
    "4603": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16214,
        16330
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4604": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16387,
        16411
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4606": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16387,
        16411
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4607": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16340,
        16366
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4609": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16340,
        16366
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4610": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16369,
        16411
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x120B"
    },
    "4613": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16369,
        16411
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4614": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16369,
        16384
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "4615": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16369,
        16411
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "4618": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16369,
        16411
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4619": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16369,
        16411
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4620": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16340,
        16411
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4621": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16340,
        16411
      ],
      "op": "POP",
      "path": "8"
    },
    "4622": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16463,
        16481
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 48
    },
    "4623": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16442,
        16447
      ],
      "op": "DUP9",
      "path": "8"
    },
    "4624": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16442,
        16459
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "4626": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16442,
        16459
      ],
      "op": "ADD",
      "path": "8"
    },
    "4627": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16442,
        16459
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4628": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16442,
        16481
      ],
      "op": "LT",
      "path": "8"
    },
    "4629": {
      "branch": 140,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16442,
        16481
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4630": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16421,
        16548
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1273"
    },
    "4633": {
      "branch": 140,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16421,
        16548
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4634": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16421,
        16548
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4636": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16421,
        16548
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4637": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4643": {
      "op": "SHL"
    },
    "4644": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16421,
        16548
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4645": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16421,
        16548
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4648": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16421,
        16548
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4650": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16421,
        16548
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4651": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16421,
        16548
      ],
      "op": "ADD",
      "path": "8"
    },
    "4652": {
      "op": "MSTORE"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4657": {
      "op": "DUP3"
    },
    "4658": {
      "op": "ADD"
    },
    "4659": {
      "op": "MSTORE"
    },
    "4660": {
      "op": "PUSH32",
      "value": "0x436C61696D207465726D696E6174696F6E20646964206E6F7420696E63726561"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4695": {
      "op": "DUP3"
    },
    "4696": {
      "op": "ADD"
    },
    "4697": {
      "op": "MSTORE"
    },
    "4698": {
      "op": "PUSH9",
      "value": "0xE6CA40CADCDEEACED"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "4710": {
      "op": "SHL"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4713": {
      "op": "DUP3"
    },
    "4714": {
      "op": "ADD"
    },
    "4715": {
      "op": "MSTORE"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4718": {
      "op": "ADD"
    },
    "4719": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16421,
        16548
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "4722": {
      "op": "JUMP"
    },
    "4723": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16421,
        16548
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4724": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16587,
        16592
      ],
      "op": "DUP8",
      "path": "8",
      "statement": 49
    },
    "4725": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16587,
        16602
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4727": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16587,
        16602
      ],
      "op": "ADD",
      "path": "8"
    },
    "4728": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16587,
        16602
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4729": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x29FD2DF293BA511E44CA47212C915137020231ED3AC0EE7BD02A7A655275AD37"
    },
    "4762": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16616,
        16623
      ],
      "op": "DUP12",
      "path": "8"
    },
    "4763": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16637,
        16642
      ],
      "op": "DUP11",
      "path": "8"
    },
    "4764": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16637,
        16650
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "4766": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16637,
        16650
      ],
      "op": "ADD",
      "path": "8"
    },
    "4767": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16637,
        16650
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4769": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16637,
        16650
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4770": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16637,
        16650
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4771": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16637,
        16650
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4772": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16637,
        16650
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "4775": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16637,
        16650
      ],
      "op": "EXP",
      "path": "8"
    },
    "4776": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16637,
        16650
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4777": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16637,
        16650
      ],
      "op": "DIV",
      "path": "8"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4784": {
      "op": "SHL"
    },
    "4785": {
      "op": "SUB"
    },
    "4786": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16637,
        16650
      ],
      "op": "AND",
      "path": "8"
    },
    "4787": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16664,
        16669
      ],
      "op": "DUP12",
      "path": "8"
    },
    "4788": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16664,
        16682
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4790": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16664,
        16682
      ],
      "op": "ADD",
      "path": "8"
    },
    "4791": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16664,
        16682
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4792": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16701
      ],
      "op": "DUP13",
      "path": "8"
    },
    "4793": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16716
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4795": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16716
      ],
      "op": "ADD",
      "path": "8"
    },
    "4796": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16716
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4798": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16716
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4799": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16716
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4800": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16716
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4801": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16716
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "4804": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16716
      ],
      "op": "EXP",
      "path": "8"
    },
    "4805": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16716
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4806": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16716
      ],
      "op": "DIV",
      "path": "8"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4813": {
      "op": "SHL"
    },
    "4814": {
      "op": "SUB"
    },
    "4815": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16716
      ],
      "op": "AND",
      "path": "8"
    },
    "4816": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16730,
        16735
      ],
      "op": "DUP14",
      "path": "8"
    },
    "4817": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16730,
        16756
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "4819": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16730,
        16756
      ],
      "op": "ADD",
      "path": "8"
    },
    "4820": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16730,
        16756
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4821": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16770,
        16775
      ],
      "op": "DUP15",
      "path": "8"
    },
    "4822": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16770,
        16787
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "4824": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16770,
        16787
      ],
      "op": "ADD",
      "path": "8"
    },
    "4825": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16770,
        16787
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4826": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16801,
        16806
      ],
      "op": "DUP16",
      "path": "8"
    },
    "4827": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16801,
        16813
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "4829": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16801,
        16813
      ],
      "op": "ADD",
      "path": "8"
    },
    "4830": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16801,
        16813
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4831": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4833": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4834": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12F1"
    },
    "4837": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "SWAP8",
      "path": "8"
    },
    "4838": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "4839": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "4840": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "4841": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4842": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4843": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4844": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4845": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x256B"
    },
    "4848": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16564,
        16823
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4849": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4850": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4852": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4853": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4854": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4855": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "SUB",
      "path": "8"
    },
    "4856": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4857": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16564,
        16823
      ],
      "op": "LOG2",
      "path": "8"
    },
    "4858": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14872,
        16830
      ],
      "op": "POP",
      "path": "8"
    },
    "4859": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14872,
        16830
      ],
      "op": "POP",
      "path": "8"
    },
    "4860": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14872,
        16830
      ],
      "op": "POP",
      "path": "8"
    },
    "4861": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14872,
        16830
      ],
      "op": "POP",
      "path": "8"
    },
    "4862": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14872,
        16830
      ],
      "op": "POP",
      "path": "8"
    },
    "4863": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14872,
        16830
      ],
      "op": "POP",
      "path": "8"
    },
    "4864": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14872,
        16830
      ],
      "op": "POP",
      "path": "8"
    },
    "4865": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14872,
        16830
      ],
      "op": "POP",
      "path": "8"
    },
    "4866": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14764,
        16830
      ],
      "op": "POP",
      "path": "8"
    },
    "4867": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14764,
        16830
      ],
      "op": "POP",
      "path": "8"
    },
    "4868": {
      "fn": "RequestManager.challengeClaim",
      "jump": "o",
      "offset": [
        14764,
        16830
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4869": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4870": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6603,
        6610
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4872": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6657,
        6666
      ],
      "op": "PUSH3",
      "path": "8",
      "statement": 50,
      "value": "0xF4240"
    },
    "4876": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6639,
        6653
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xD"
    },
    "4878": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6639,
        6653
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4879": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6630,
        6636
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4880": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6630,
        6653
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1319"
    },
    "4883": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6630,
        6653
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4884": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6630,
        6653
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4885": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6630,
        6653
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25AA"
    },
    "4888": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        6630,
        6653
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4889": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6630,
        6653
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4890": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6629,
        6666
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1323"
    },
    "4893": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6629,
        6666
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4894": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6629,
        6666
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4895": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6629,
        6666
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25C9"
    },
    "4898": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        6629,
        6666
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4899": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6629,
        6666
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4900": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6622,
        6666
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4901": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6545,
        6673
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4902": {
      "op": "POP"
    },
    "4903": {
      "op": "POP"
    },
    "4904": {
      "fn": "RequestManager.protocolFee",
      "jump": "o",
      "offset": [
        6545,
        6673
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4905": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12285,
        13566
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4906": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12426,
        12433
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4908": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12398,
        12407
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4909": {
      "offset": [
        7130,
        7144
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "4911": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7130,
        7144
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4912": {
      "offset": [
        7117,
        7126
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4913": {
      "offset": [
        7117,
        7144
      ],
      "op": "GT",
      "path": "8"
    },
    "4914": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7117,
        7144
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4915": {
      "offset": [
        7117,
        7161
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4916": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7117,
        7161
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4917": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7117,
        7161
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x133E"
    },
    "4920": {
      "offset": [
        7117,
        7161
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4921": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7117,
        7161
      ],
      "op": "POP",
      "path": "8"
    },
    "4922": {
      "offset": [
        7160,
        7161
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4924": {
      "offset": [
        7148,
        7157
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4925": {
      "offset": [
        7148,
        7161
      ],
      "op": "GT",
      "path": "8"
    },
    "4926": {
      "offset": [
        7117,
        7161
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4927": {
      "offset": [
        7096,
        7206
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1380"
    },
    "4930": {
      "offset": [
        7096,
        7206
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4931": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7096,
        7206
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4933": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7096,
        7206
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4940": {
      "op": "SHL"
    },
    "4941": {
      "offset": [
        7096,
        7206
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4942": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7096,
        7206
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4945": {
      "offset": [
        7096,
        7206
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4947": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7096,
        7206
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4948": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7096,
        7206
      ],
      "op": "ADD",
      "path": "8"
    },
    "4949": {
      "op": "MSTORE"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4954": {
      "op": "DUP3"
    },
    "4955": {
      "op": "ADD"
    },
    "4956": {
      "op": "MSTORE"
    },
    "4957": {
      "op": "PUSH19",
      "value": "0x1C995C5D595CDD1259081B9BDD081D985B1A59"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "4979": {
      "op": "SHL"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4982": {
      "op": "DUP3"
    },
    "4983": {
      "op": "ADD"
    },
    "4984": {
      "op": "MSTORE"
    },
    "4985": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4987": {
      "op": "ADD"
    },
    "4988": {
      "offset": [
        7096,
        7206
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "4991": {
      "op": "JUMP"
    },
    "4992": {
      "offset": [
        7096,
        7206
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4993": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12449,
        12472
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4995": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12475,
        12494
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4996": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12475,
        12494
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4997": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12475,
        12494
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4998": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12475,
        12483
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "5000": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12475,
        12494
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5002": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12475,
        12494
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5003": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12475,
        12494
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5004": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12475,
        12494
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5005": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12475,
        12494
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5007": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12475,
        12494
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5008": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12475,
        12494
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5009": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12475,
        12494
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5010": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12531,
        12549
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 51
    },
    "5011": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12531,
        12549
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5012": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12531,
        12549
      ],
      "op": "ADD",
      "path": "8"
    },
    "5013": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12531,
        12549
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5014": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12513,
        12528
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "5015": {
      "branch": 141,
      "fn": "RequestManager.claimRequest",
      "offset": [
        12513,
        12549
      ],
      "op": "LT",
      "path": "8"
    },
    "5016": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12505,
        12569
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13D5"
    },
    "5019": {
      "branch": 141,
      "fn": "RequestManager.claimRequest",
      "offset": [
        12505,
        12569
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5020": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12505,
        12569
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5022": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12505,
        12569
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5029": {
      "op": "SHL"
    },
    "5030": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12505,
        12569
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5031": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12505,
        12569
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5034": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12505,
        12569
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5036": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12505,
        12569
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5037": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12505,
        12569
      ],
      "op": "ADD",
      "path": "8"
    },
    "5038": {
      "op": "MSTORE"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5043": {
      "op": "DUP3"
    },
    "5044": {
      "op": "ADD"
    },
    "5045": {
      "op": "MSTORE"
    },
    "5046": {
      "op": "PUSH15",
      "value": "0x14995C5D595CDD08195E1C1A5C9959"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "5064": {
      "op": "SHL"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5067": {
      "op": "DUP3"
    },
    "5068": {
      "op": "ADD"
    },
    "5069": {
      "op": "MSTORE"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5072": {
      "op": "ADD"
    },
    "5073": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12505,
        12569
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "5076": {
      "op": "JUMP"
    },
    "5077": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12505,
        12569
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5078": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12600,
        12620
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 52,
      "value": "0x6"
    },
    "5080": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12600,
        12620
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5081": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12600,
        12620
      ],
      "op": "ADD",
      "path": "8"
    },
    "5082": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12600,
        12627
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5089": {
      "op": "SHL"
    },
    "5090": {
      "op": "SUB"
    },
    "5091": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12600,
        12627
      ],
      "op": "AND",
      "path": "8"
    },
    "5092": {
      "branch": 142,
      "fn": "RequestManager.claimRequest",
      "offset": [
        12600,
        12641
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5093": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12579,
        12692
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x142C"
    },
    "5096": {
      "branch": 142,
      "fn": "RequestManager.claimRequest",
      "offset": [
        12579,
        12692
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5097": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12579,
        12692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5099": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12579,
        12692
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5100": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5104": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5106": {
      "op": "SHL"
    },
    "5107": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12579,
        12692
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5108": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12579,
        12692
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5111": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12579,
        12692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5113": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12579,
        12692
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5114": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12579,
        12692
      ],
      "op": "ADD",
      "path": "8"
    },
    "5115": {
      "op": "MSTORE"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5120": {
      "op": "DUP3"
    },
    "5121": {
      "op": "ADD"
    },
    "5122": {
      "op": "MSTORE"
    },
    "5123": {
      "op": "PUSH25",
      "value": "0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "5151": {
      "op": "SHL"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5154": {
      "op": "DUP3"
    },
    "5155": {
      "op": "ADD"
    },
    "5156": {
      "op": "MSTORE"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5159": {
      "op": "ADD"
    },
    "5160": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12579,
        12692
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "5163": {
      "op": "JUMP"
    },
    "5164": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12579,
        12692
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5165": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12723,
        12733
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 53,
      "value": "0x1"
    },
    "5167": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12723,
        12733
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5168": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12710,
        12719
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "5169": {
      "branch": 143,
      "fn": "RequestManager.claimRequest",
      "offset": [
        12710,
        12733
      ],
      "op": "EQ",
      "path": "8"
    },
    "5170": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12702,
        12758
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1474"
    },
    "5173": {
      "branch": 143,
      "fn": "RequestManager.claimRequest",
      "offset": [
        12702,
        12758
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5174": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12702,
        12758
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5176": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12702,
        12758
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5183": {
      "op": "SHL"
    },
    "5184": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12702,
        12758
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5185": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12702,
        12758
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5188": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12702,
        12758
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5190": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12702,
        12758
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5191": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12702,
        12758
      ],
      "op": "ADD",
      "path": "8"
    },
    "5192": {
      "op": "MSTORE"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "5195": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5197": {
      "op": "DUP3"
    },
    "5198": {
      "op": "ADD"
    },
    "5199": {
      "op": "MSTORE"
    },
    "5200": {
      "op": "PUSH20",
      "value": "0x125B9D985B1A59081CDD185AD948185B5BDD5B9D"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "5223": {
      "op": "SHL"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5226": {
      "op": "DUP3"
    },
    "5227": {
      "op": "ADD"
    },
    "5228": {
      "op": "MSTORE"
    },
    "5229": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5231": {
      "op": "ADD"
    },
    "5232": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12702,
        12758
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "5235": {
      "op": "JUMP"
    },
    "5236": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12702,
        12758
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5237": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12776,
        12782
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 54
    },
    "5238": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12768,
        12823
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14BA"
    },
    "5241": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12768,
        12823
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5242": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12768,
        12823
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5244": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12768,
        12823
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5245": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5251": {
      "op": "SHL"
    },
    "5252": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12768,
        12823
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5253": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12768,
        12823
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5256": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12768,
        12823
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5258": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12768,
        12823
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5259": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12768,
        12823
      ],
      "op": "ADD",
      "path": "8"
    },
    "5260": {
      "op": "MSTORE"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5265": {
      "op": "DUP3"
    },
    "5266": {
      "op": "ADD"
    },
    "5267": {
      "op": "MSTORE"
    },
    "5268": {
      "op": "PUSH22",
      "value": "0x46696C6C4964206D757374206E6F742062652030783"
    },
    "5291": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "5293": {
      "op": "SHL"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5296": {
      "op": "DUP3"
    },
    "5297": {
      "op": "ADD"
    },
    "5298": {
      "op": "MSTORE"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5301": {
      "op": "ADD"
    },
    "5302": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12768,
        12823
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "5305": {
      "op": "JUMP"
    },
    "5306": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12768,
        12823
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5307": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12854
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 55,
      "value": "0x8"
    },
    "5309": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12854
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5310": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12854
      ],
      "op": "ADD",
      "path": "8"
    },
    "5311": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5312": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5313": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12858,
        12859
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5315": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12858,
        12859
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5316": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12854
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5317": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12854
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5319": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12854
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5320": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14DB"
    },
    "5323": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5324": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12858,
        12859
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5325": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12858,
        12859
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5330": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5332": {
      "op": "SHL"
    },
    "5333": {
      "op": "SUB"
    },
    "5334": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "AND",
      "path": "8"
    },
    "5335": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25EB"
    },
    "5338": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        12834,
        12859
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5339": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5340": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5341": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "POP",
      "path": "8"
    },
    "5342": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "5345": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "EXP",
      "path": "8"
    },
    "5346": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5347": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5348": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5355": {
      "op": "SHL"
    },
    "5356": {
      "op": "SUB"
    },
    "5357": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "MUL",
      "path": "8"
    },
    "5358": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "NOT",
      "path": "8"
    },
    "5359": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "AND",
      "path": "8"
    },
    "5360": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5361": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5368": {
      "op": "SHL"
    },
    "5369": {
      "op": "SUB"
    },
    "5370": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "AND",
      "path": "8"
    },
    "5371": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "MUL",
      "path": "8"
    },
    "5372": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "OR",
      "path": "8"
    },
    "5373": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5374": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5375": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12834,
        12859
      ],
      "op": "POP",
      "path": "8"
    },
    "5376": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12885,
        12886
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 56,
      "value": "0x1"
    },
    "5378": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12869,
        12881
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "5380": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12869,
        12881
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5382": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12869,
        12886
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5383": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12869,
        12886
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5384": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12869,
        12886
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5385": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12869,
        12886
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1512"
    },
    "5388": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12869,
        12886
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5389": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12869,
        12886
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5390": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12869,
        12886
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "5393": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        12869,
        12886
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5394": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12869,
        12886
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5395": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12869,
        12886
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5396": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12869,
        12886
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5397": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12869,
        12886
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5398": {
      "op": "POP"
    },
    "5399": {
      "op": "POP"
    },
    "5400": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12926,
        12938
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "5402": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12926,
        12938
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5403": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12926,
        12938
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5404": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12897,
        12916
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5406": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12919,
        12939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5407": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12919,
        12939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5408": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12919,
        12939
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5409": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12919,
        12925
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "5411": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12919,
        12939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5413": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12919,
        12939
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5414": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12919,
        12939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5416": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12919,
        12939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5417": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12919,
        12939
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5418": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12949,
        12976
      ],
      "op": "DUP8",
      "path": "8",
      "statement": 57
    },
    "5419": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12949,
        12976
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5420": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12949,
        12976
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5421": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12986,
        12999
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 58,
      "value": "0x1"
    },
    "5423": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12986,
        12999
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5424": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12986,
        12999
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5425": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12986,
        12999
      ],
      "op": "ADD",
      "path": "8"
    },
    "5426": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12986,
        13012
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5427": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12986,
        13012
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5434": {
      "op": "SHL"
    },
    "5435": {
      "op": "SUB"
    },
    "5436": {
      "op": "NOT"
    },
    "5437": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12986,
        13012
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5438": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12986,
        13012
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5439": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12986,
        13012
      ],
      "op": "AND",
      "path": "8"
    },
    "5440": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13002,
        13012
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5441": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12986,
        13012
      ],
      "op": "OR",
      "path": "8"
    },
    "5442": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12986,
        13012
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5443": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12986,
        13012
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5444": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12986,
        13012
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5445": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13043,
        13053
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 59
    },
    "5446": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13043,
        13053
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5447": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13022,
        13040
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "5449": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13022,
        13040
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5450": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13022,
        13040
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5451": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13022,
        13040
      ],
      "op": "ADD",
      "path": "8"
    },
    "5452": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13022,
        13053
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5453": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13022,
        13053
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5454": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13022,
        13053
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5455": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13022,
        13053
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5456": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13063,
        13083
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 60,
      "value": "0x4"
    },
    "5458": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13063,
        13083
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5459": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13063,
        13083
      ],
      "op": "ADD",
      "path": "8"
    },
    "5460": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13063,
        13096
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5461": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13063,
        13096
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5462": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13063,
        13096
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5463": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13063,
        13096
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5464": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13063,
        13096
      ],
      "op": "AND",
      "path": "8"
    },
    "5465": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13063,
        13096
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5466": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13063,
        13096
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5467": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13063,
        13096
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5468": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13106,
        13132
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 61,
      "value": "0x5"
    },
    "5470": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13106,
        13132
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5471": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13106,
        13132
      ],
      "op": "ADD",
      "path": "8"
    },
    "5472": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13106,
        13136
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5473": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13106,
        13136
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5474": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13106,
        13136
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5475": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13146,
        13167
      ],
      "op": "SWAP3",
      "path": "8",
      "statement": 62
    },
    "5476": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13146,
        13167
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5477": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13146,
        13167
      ],
      "op": "ADD",
      "path": "8"
    },
    "5478": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13146,
        13171
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5479": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13146,
        13171
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5480": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13146,
        13171
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5481": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13146,
        13171
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5482": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13219,
        13230
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 63
    },
    "5483": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13219,
        13230
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5484": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13201,
        13230
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1575"
    },
    "5487": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13201,
        13230
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5488": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13201,
        13216
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "5489": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13201,
        13230
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "5492": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13201,
        13230
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5493": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13201,
        13230
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5494": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13181,
        13198
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "5496": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13181,
        13198
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5497": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13181,
        13198
      ],
      "op": "ADD",
      "path": "8"
    },
    "5498": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13181,
        13230
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5499": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13181,
        13230
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5500": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13181,
        13230
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5501": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13240,
        13252
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 64,
      "value": "0x8"
    },
    "5503": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13240,
        13252
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5504": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13240,
        13252
      ],
      "op": "ADD",
      "path": "8"
    },
    "5505": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13240,
        13261
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5506": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13240,
        13261
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5507": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13240,
        13261
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5508": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13323,
        13335
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 65,
      "value": "0x6"
    },
    "5510": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13323,
        13335
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5511": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13349,
        13362
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5513": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13349,
        13362
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5514": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13349,
        13362
      ],
      "op": "ADD",
      "path": "8"
    },
    "5515": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13349,
        13362
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5516": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13376,
        13394
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "5518": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13376,
        13394
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5519": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13376,
        13394
      ],
      "op": "ADD",
      "path": "8"
    },
    "5520": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13376,
        13394
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5521": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13408,
        13428
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5523": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13408,
        13428
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5524": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13408,
        13428
      ],
      "op": "ADD",
      "path": "8"
    },
    "5525": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13408,
        13428
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5526": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13442,
        13468
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "5528": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13442,
        13468
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5529": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13442,
        13468
      ],
      "op": "ADD",
      "path": "8"
    },
    "5530": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13442,
        13468
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5531": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5533": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5534": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13300,
        13309
      ],
      "op": "DUP13",
      "path": "8"
    },
    "5535": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13300,
        13309
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "5536": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x29FD2DF293BA511E44CA47212C915137020231ED3AC0EE7BD02A7A655275AD37"
    },
    "5569": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "5570": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15E2"
    },
    "5573": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "5574": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13323,
        13335
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5575": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13323,
        13335
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "5576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5582": {
      "op": "SHL"
    },
    "5583": {
      "op": "SUB"
    },
    "5584": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13349,
        13362
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5585": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13349,
        13362
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5586": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13349,
        13362
      ],
      "op": "AND",
      "path": "8"
    },
    "5587": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13349,
        13362
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "5588": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13376,
        13394
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5589": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13376,
        13394
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "5590": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13408,
        13428
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5591": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13408,
        13428
      ],
      "op": "AND",
      "path": "8"
    },
    "5592": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13408,
        13428
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5593": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13442,
        13468
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5594": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13442,
        13468
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5595": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13181,
        13230
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5596": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13255,
        13261
      ],
      "op": "DUP15",
      "path": "8"
    },
    "5597": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13255,
        13261
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5598": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x256B"
    },
    "5601": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13277,
        13529
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5602": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5603": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5605": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5606": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5607": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5608": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "SUB",
      "path": "8"
    },
    "5609": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5610": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13277,
        13529
      ],
      "op": "LOG2",
      "path": "8"
    },
    "5611": {
      "op": "POP"
    },
    "5612": {
      "op": "POP"
    },
    "5613": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13559
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 66,
      "value": "0x6"
    },
    "5615": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13559
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5616": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13559
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "5617": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12285,
        13566
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "5618": {
      "op": "POP"
    },
    "5619": {
      "op": "POP"
    },
    "5620": {
      "op": "POP"
    },
    "5621": {
      "op": "POP"
    },
    "5622": {
      "fn": "RequestManager.claimRequest",
      "jump": "o",
      "offset": [
        12285,
        13566
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5623": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6845,
        6968
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5624": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6900,
        6907
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5626": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6942,
        6961
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 67,
      "value": "0x1602"
    },
    "5629": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6954,
        6960
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5630": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6942,
        6953
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1305"
    },
    "5633": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        6942,
        6961
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5634": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6942,
        6961
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5635": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6926,
        6939
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x160B"
    },
    "5638": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6932,
        6938
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5639": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6926,
        6931
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B00"
    },
    "5642": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        6926,
        6939
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5643": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6926,
        6939
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5644": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6926,
        6961
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1323"
    },
    "5647": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6926,
        6961
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5648": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6926,
        6961
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5649": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6926,
        6961
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "5652": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        6926,
        6961
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5653": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5654": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5656": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5663": {
      "op": "SHL"
    },
    "5664": {
      "op": "SUB"
    },
    "5665": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5666": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "5667": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5668": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163F"
    },
    "5671": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5672": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5674": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5675": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5679": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5681": {
      "op": "SHL"
    },
    "5682": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5683": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5684": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5686": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5687": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AF"
    },
    "5690": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5691": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x251F"
    },
    "5694": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5695": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5702": {
      "op": "SHL"
    },
    "5703": {
      "op": "SUB"
    },
    "5704": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23338,
        23373
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5705": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23338,
        23373
      ],
      "op": "AND",
      "path": "8"
    },
    "5706": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23321,
        23335
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5708": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23338,
        23373
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5709": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23338,
        23373
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5710": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23338,
        23373
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5711": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23338,
        23359
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "5713": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23338,
        23373
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5715": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23338,
        23373
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5716": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23338,
        23373
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5718": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23338,
        23373
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5719": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23338,
        23373
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5720": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23338,
        23373
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5721": {
      "branch": 144,
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23391,
        23401
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 68
    },
    "5722": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23383,
        23426
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x169C"
    },
    "5725": {
      "branch": 144,
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23383,
        23426
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5726": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23383,
        23426
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5728": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23383,
        23426
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5729": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5735": {
      "op": "SHL"
    },
    "5736": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23383,
        23426
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5737": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23383,
        23426
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5740": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23383,
        23426
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5742": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23383,
        23426
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5743": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23383,
        23426
      ],
      "op": "ADD",
      "path": "8"
    },
    "5744": {
      "op": "MSTORE"
    },
    "5745": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5749": {
      "op": "DUP3"
    },
    "5750": {
      "op": "ADD"
    },
    "5751": {
      "op": "MSTORE"
    },
    "5752": {
      "op": "PUSH20",
      "value": "0x50726F746F636F6C20666565206973207A65726F"
    },
    "5773": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5775": {
      "op": "SHL"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5778": {
      "op": "DUP3"
    },
    "5779": {
      "op": "ADD"
    },
    "5780": {
      "op": "MSTORE"
    },
    "5781": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5783": {
      "op": "ADD"
    },
    "5784": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23383,
        23426
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "5787": {
      "op": "JUMP"
    },
    "5788": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23383,
        23426
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5795": {
      "op": "SHL"
    },
    "5796": {
      "op": "SUB"
    },
    "5797": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23436,
        23471
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 69
    },
    "5798": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23436,
        23471
      ],
      "op": "AND",
      "path": "8"
    },
    "5799": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23474,
        23475
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5801": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23436,
        23471
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5802": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23436,
        23471
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5803": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23436,
        23471
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5804": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23436,
        23457
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "5806": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23436,
        23471
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5808": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23436,
        23471
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5809": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23436,
        23471
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5811": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23436,
        23471
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5812": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23436,
        23471
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5813": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23436,
        23475
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5814": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23458,
        23470
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5815": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23458,
        23470
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5816": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23531,
        23568
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 70,
      "value": "0x16C2"
    },
    "5819": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23531,
        23568
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5820": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23550,
        23559
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5821": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23561,
        23567
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5822": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23531,
        23549
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x20F1"
    },
    "5825": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        23531,
        23568
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5826": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23531,
        23568
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5827": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23311,
        23575
      ],
      "op": "POP",
      "path": "8"
    },
    "5828": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23311,
        23575
      ],
      "op": "POP",
      "path": "8"
    },
    "5829": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "POP",
      "path": "8"
    },
    "5830": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23201,
        23575
      ],
      "op": "POP",
      "path": "8"
    },
    "5831": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "o",
      "offset": [
        23201,
        23575
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5832": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5833": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5835": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5842": {
      "op": "SHL"
    },
    "5843": {
      "op": "SUB"
    },
    "5844": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5845": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "5846": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5847": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F2"
    },
    "5850": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5851": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5853": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5854": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5860": {
      "op": "SHL"
    },
    "5861": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5862": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5863": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5865": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5866": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AF"
    },
    "5869": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5870": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x251F"
    },
    "5873": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5874": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5875": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24889,
        24890
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 71,
      "value": "0x0"
    },
    "5877": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24872,
        24886
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5878": {
      "branch": 145,
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24872,
        24890
      ],
      "op": "GT",
      "path": "8"
    },
    "5879": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24864,
        24933
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1751"
    },
    "5882": {
      "branch": 145,
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24864,
        24933
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5883": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24864,
        24933
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5885": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24864,
        24933
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5886": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5892": {
      "op": "SHL"
    },
    "5893": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24864,
        24933
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5894": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24864,
        24933
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5897": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24864,
        24933
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5899": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24864,
        24933
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5900": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24864,
        24933
      ],
      "op": "ADD",
      "path": "8"
    },
    "5901": {
      "op": "MSTORE"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5906": {
      "op": "DUP3"
    },
    "5907": {
      "op": "ADD"
    },
    "5908": {
      "op": "MSTORE"
    },
    "5909": {
      "op": "PUSH32",
      "value": "0x46696E616C69747920706572696F64206D757374206265206772656174657220"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5944": {
      "op": "DUP3"
    },
    "5945": {
      "op": "ADD"
    },
    "5946": {
      "op": "MSTORE"
    },
    "5947": {
      "op": "PUSH6",
      "value": "0x7468616E203"
    },
    "5954": {
      "op": "PUSH1",
      "value": "0xD4"
    },
    "5956": {
      "op": "SHL"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5959": {
      "op": "DUP3"
    },
    "5960": {
      "op": "ADD"
    },
    "5961": {
      "op": "MSTORE"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5964": {
      "op": "ADD"
    },
    "5965": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24864,
        24933
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "5968": {
      "op": "JUMP"
    },
    "5969": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24864,
        24933
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5970": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24973
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 72,
      "value": "0x0"
    },
    "5972": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24973
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5973": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24973
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5974": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24973
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5975": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24958
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "5977": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24973
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5979": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24973
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5980": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24973
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5981": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24973
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5982": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24973
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5984": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24973
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5985": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24973
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5986": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24973
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5987": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24973
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5988": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24990
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5989": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24990
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5990": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24943,
        24990
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5991": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25006,
        25058
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 73
    },
    "5992": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25006,
        25058
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5993": {
      "op": "DUP5"
    },
    "5994": {
      "op": "DUP2"
    },
    "5995": {
      "op": "MSTORE"
    },
    "5996": {
      "op": "SWAP1"
    },
    "5997": {
      "op": "DUP2"
    },
    "5998": {
      "op": "ADD"
    },
    "5999": {
      "op": "DUP4"
    },
    "6000": {
      "op": "SWAP1"
    },
    "6001": {
      "op": "MSTORE"
    },
    "6002": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25006,
        25058
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xABA57B48B9F1DFD5747A52ED348A6AB6AA7BAFB0575363A5CB7B62659F727B65"
    },
    "6035": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25006,
        25058
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6036": {
      "op": "ADD"
    },
    "6037": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25006,
        25058
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6039": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25006,
        25058
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6040": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25006,
        25058
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6041": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25006,
        25058
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6042": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25006,
        25058
      ],
      "op": "SUB",
      "path": "8"
    },
    "6043": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25006,
        25058
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6044": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25006,
        25058
      ],
      "op": "LOG1",
      "path": "8"
    },
    "6045": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "POP",
      "path": "8"
    },
    "6046": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24741,
        25065
      ],
      "op": "POP",
      "path": "8"
    },
    "6047": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "o",
      "offset": [
        24741,
        25065
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6048": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11162,
        11946
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6049": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11253,
        11262
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6050": {
      "offset": [
        7130,
        7144
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "6052": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7130,
        7144
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6053": {
      "offset": [
        7117,
        7126
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6054": {
      "offset": [
        7117,
        7144
      ],
      "op": "GT",
      "path": "8"
    },
    "6055": {
      "branch": 146,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7117,
        7144
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6056": {
      "offset": [
        7117,
        7161
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6057": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7117,
        7161
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6058": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7117,
        7161
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17B3"
    },
    "6061": {
      "branch": 146,
      "offset": [
        7117,
        7161
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6062": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7117,
        7161
      ],
      "op": "POP",
      "path": "8"
    },
    "6063": {
      "offset": [
        7160,
        7161
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6065": {
      "offset": [
        7148,
        7157
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6066": {
      "offset": [
        7148,
        7161
      ],
      "op": "GT",
      "path": "8"
    },
    "6067": {
      "offset": [
        7117,
        7161
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6068": {
      "offset": [
        7096,
        7206
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17F5"
    },
    "6071": {
      "offset": [
        7096,
        7206
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6072": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7096,
        7206
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6074": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7096,
        7206
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6081": {
      "op": "SHL"
    },
    "6082": {
      "offset": [
        7096,
        7206
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6083": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7096,
        7206
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6086": {
      "offset": [
        7096,
        7206
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6088": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7096,
        7206
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6089": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7096,
        7206
      ],
      "op": "ADD",
      "path": "8"
    },
    "6090": {
      "op": "MSTORE"
    },
    "6091": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "6093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6095": {
      "op": "DUP3"
    },
    "6096": {
      "op": "ADD"
    },
    "6097": {
      "op": "MSTORE"
    },
    "6098": {
      "op": "PUSH19",
      "value": "0x1C995C5D595CDD1259081B9BDD081D985B1A59"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "6120": {
      "op": "SHL"
    },
    "6121": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6123": {
      "op": "DUP3"
    },
    "6124": {
      "op": "ADD"
    },
    "6125": {
      "op": "MSTORE"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6128": {
      "op": "ADD"
    },
    "6129": {
      "offset": [
        7096,
        7206
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "6132": {
      "op": "JUMP"
    },
    "6133": {
      "offset": [
        7096,
        7206
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6134": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11278,
        11301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6136": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11304,
        11323
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6137": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11304,
        11323
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6138": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11304,
        11323
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6139": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11304,
        11312
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "6141": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11304,
        11323
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6143": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11304,
        11323
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6144": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11304,
        11323
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6146": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11304,
        11323
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6147": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11304,
        11323
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "6148": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11355,
        11375
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 74,
      "value": "0x6"
    },
    "6150": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11355,
        11375
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6151": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11355,
        11375
      ],
      "op": "ADD",
      "path": "8"
    },
    "6152": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11355,
        11382
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6159": {
      "op": "SHL"
    },
    "6160": {
      "op": "SUB"
    },
    "6161": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11355,
        11382
      ],
      "op": "AND",
      "path": "8"
    },
    "6162": {
      "branch": 147,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11355,
        11396
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6163": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11334,
        11447
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x185A"
    },
    "6166": {
      "branch": 147,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11334,
        11447
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6167": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11334,
        11447
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6169": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11334,
        11447
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6170": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6174": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6176": {
      "op": "SHL"
    },
    "6177": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11334,
        11447
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6178": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11334,
        11447
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6181": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11334,
        11447
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6183": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11334,
        11447
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6184": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11334,
        11447
      ],
      "op": "ADD",
      "path": "8"
    },
    "6185": {
      "op": "MSTORE"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6188": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6190": {
      "op": "DUP3"
    },
    "6191": {
      "op": "ADD"
    },
    "6192": {
      "op": "MSTORE"
    },
    "6193": {
      "op": "PUSH25",
      "value": "0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7"
    },
    "6219": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "6221": {
      "op": "SHL"
    },
    "6222": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6224": {
      "op": "DUP3"
    },
    "6225": {
      "op": "ADD"
    },
    "6226": {
      "op": "MSTORE"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6229": {
      "op": "ADD"
    },
    "6230": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11334,
        11447
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "6233": {
      "op": "JUMP"
    },
    "6234": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11334,
        11447
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6235": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11497,
        11504
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 75
    },
    "6236": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11497,
        11515
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "6238": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11497,
        11515
      ],
      "op": "ADD",
      "path": "8"
    },
    "6239": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11497,
        11515
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6240": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11478,
        11493
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "6241": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11478,
        11515
      ],
      "op": "LT",
      "path": "8"
    },
    "6242": {
      "branch": 148,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11478,
        11515
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6243": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11457,
        11564
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18AE"
    },
    "6246": {
      "branch": 148,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11457,
        11564
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6247": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11457,
        11564
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6249": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11457,
        11564
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6250": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6254": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6256": {
      "op": "SHL"
    },
    "6257": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11457,
        11564
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6258": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11457,
        11564
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6261": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11457,
        11564
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6263": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11457,
        11564
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6264": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11457,
        11564
      ],
      "op": "ADD",
      "path": "8"
    },
    "6265": {
      "op": "MSTORE"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6270": {
      "op": "DUP3"
    },
    "6271": {
      "op": "ADD"
    },
    "6272": {
      "op": "MSTORE"
    },
    "6273": {
      "op": "PUSH32",
      "value": "0x52657175657374206E6F74206578706972656420796574000000000000000000"
    },
    "6306": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6308": {
      "op": "DUP3"
    },
    "6309": {
      "op": "ADD"
    },
    "6310": {
      "op": "MSTORE"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6313": {
      "op": "ADD"
    },
    "6314": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11457,
        11564
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "6317": {
      "op": "JUMP"
    },
    "6318": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11457,
        11564
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6319": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11582,
        11602
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 76,
      "value": "0x8"
    },
    "6321": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11582,
        11602
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6322": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11582,
        11602
      ],
      "op": "ADD",
      "path": "8"
    },
    "6323": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11582,
        11602
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6330": {
      "op": "SHL"
    },
    "6331": {
      "op": "SUB"
    },
    "6332": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11582,
        11602
      ],
      "op": "AND",
      "path": "8"
    },
    "6333": {
      "branch": 149,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11582,
        11607
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6334": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11574,
        11633
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1901"
    },
    "6337": {
      "branch": 149,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11574,
        11633
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6338": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11574,
        11633
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6340": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11574,
        11633
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6341": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6347": {
      "op": "SHL"
    },
    "6348": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11574,
        11633
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6349": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11574,
        11633
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6352": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11574,
        11633
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6354": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11574,
        11633
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6355": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11574,
        11633
      ],
      "op": "ADD",
      "path": "8"
    },
    "6356": {
      "op": "MSTORE"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6361": {
      "op": "DUP3"
    },
    "6362": {
      "op": "ADD"
    },
    "6363": {
      "op": "MSTORE"
    },
    "6364": {
      "op": "PUSH21",
      "value": "0x41637469766520636C61696D732072756E6E696E67"
    },
    "6386": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "6388": {
      "op": "SHL"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6391": {
      "op": "DUP3"
    },
    "6392": {
      "op": "ADD"
    },
    "6393": {
      "op": "MSTORE"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6396": {
      "op": "ADD"
    },
    "6397": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11574,
        11633
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "6400": {
      "op": "JUMP"
    },
    "6401": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11574,
        11633
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6402": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11674,
        11688
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 77
    },
    "6403": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11674,
        11688
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6404": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11644,
        11664
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "6406": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11644,
        11664
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6407": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11644,
        11664
      ],
      "op": "ADD",
      "path": "8"
    },
    "6408": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11644,
        11688
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6409": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11644,
        11688
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6416": {
      "op": "SHL"
    },
    "6417": {
      "op": "SUB"
    },
    "6418": {
      "op": "NOT"
    },
    "6419": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11644,
        11688
      ],
      "op": "AND",
      "path": "8"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6426": {
      "op": "SHL"
    },
    "6427": {
      "op": "SUB"
    },
    "6428": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11674,
        11688
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6429": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11674,
        11688
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6430": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11674,
        11688
      ],
      "op": "AND",
      "path": "8"
    },
    "6431": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11644,
        11688
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6432": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11644,
        11688
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6433": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11644,
        11688
      ],
      "op": "OR",
      "path": "8"
    },
    "6434": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11644,
        11688
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6435": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11644,
        11688
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "6436": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11704,
        11747
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 78,
      "value": "0x40"
    },
    "6438": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11704,
        11747
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6439": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11704,
        11747
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6440": {
      "op": "DUP6"
    },
    "6441": {
      "op": "DUP2"
    },
    "6442": {
      "op": "MSTORE"
    },
    "6443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6445": {
      "op": "DUP2"
    },
    "6446": {
      "op": "ADD"
    },
    "6447": {
      "op": "SWAP3"
    },
    "6448": {
      "op": "SWAP1"
    },
    "6449": {
      "op": "SWAP3"
    },
    "6450": {
      "op": "MSTORE"
    },
    "6451": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11704,
        11747
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xA7B86597910AAE75F7D99FEB2F37420CC80D457465FFBA0F8136D722A9F7095A"
    },
    "6484": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11704,
        11747
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6485": {
      "op": "ADD"
    },
    "6486": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11704,
        11747
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6488": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11704,
        11747
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6489": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11704,
        11747
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6490": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11704,
        11747
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6491": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11704,
        11747
      ],
      "op": "SUB",
      "path": "8"
    },
    "6492": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11704,
        11747
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6493": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11704,
        11747
      ],
      "op": "LOG1",
      "path": "8"
    },
    "6494": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11780,
        11806
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6496": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11780,
        11806
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6497": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11780,
        11806
      ],
      "op": "ADD",
      "path": "8"
    },
    "6498": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11780,
        11806
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6499": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11849,
        11863
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 79
    },
    "6500": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11849,
        11863
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6501": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11910,
        11929
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xB"
    },
    "6503": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11910,
        11929
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6504": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11910,
        11929
      ],
      "op": "ADD",
      "path": "8"
    },
    "6505": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11910,
        11929
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6506": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11894,
        11907
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "6508": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11894,
        11907
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6509": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11894,
        11907
      ],
      "op": "ADD",
      "path": "8"
    },
    "6510": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11894,
        11907
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6511": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11877,
        11891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "6513": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11877,
        11891
      ],
      "op": "DUP6",
      "path": "8"
    },
    "6514": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11877,
        11891
      ],
      "op": "ADD",
      "path": "8"
    },
    "6515": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11877,
        11891
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6522": {
      "op": "SHL"
    },
    "6523": {
      "op": "SUB"
    },
    "6524": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11780,
        11806
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "6525": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11780,
        11806
      ],
      "op": "DUP6",
      "path": "8"
    },
    "6526": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11780,
        11806
      ],
      "op": "AND",
      "path": "8"
    },
    "6527": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11780,
        11806
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "6528": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11817,
        11939
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16C2"
    },
    "6531": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11817,
        11939
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "6532": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11849,
        11863
      ],
      "op": "AND",
      "path": "8"
    },
    "6533": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11849,
        11863
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6534": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11910,
        11929
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6535": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11877,
        11907
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x198F"
    },
    "6538": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11877,
        11907
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6539": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11877,
        11907
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "6542": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        11877,
        11907
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6543": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11877,
        11907
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6544": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11877,
        11929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1999"
    },
    "6547": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11877,
        11929
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6548": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11877,
        11929
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6549": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11877,
        11929
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "6552": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        11877,
        11929
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6553": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11877,
        11929
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6560": {
      "op": "SHL"
    },
    "6561": {
      "op": "SUB"
    },
    "6562": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11817,
        11835
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6563": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11817,
        11835
      ],
      "op": "AND",
      "path": "8"
    },
    "6564": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11817,
        11835
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6565": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11817,
        11939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6566": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11817,
        11835
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x20F1"
    },
    "6569": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        11817,
        11939
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6570": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24354,
        24477
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6571": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6573": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6580": {
      "op": "SHL"
    },
    "6581": {
      "op": "SUB"
    },
    "6582": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6583": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "6584": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6585": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D4"
    },
    "6588": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6589": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6591": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6598": {
      "op": "SHL"
    },
    "6599": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6600": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6601": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6603": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6604": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AF"
    },
    "6607": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6608": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x251F"
    },
    "6611": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6612": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6613": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24438,
        24451
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 80,
      "value": "0xE"
    },
    "6615": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24438,
        24470
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "6616": {
      "fn": "RequestManager.updateTransferLimit",
      "jump": "o",
      "offset": [
        24354,
        24477
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6617": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25375,
        25526
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6618": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6620": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6627": {
      "op": "SHL"
    },
    "6628": {
      "op": "SUB"
    },
    "6629": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6630": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "6631": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6632": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A03"
    },
    "6635": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6636": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6638": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6639": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6645": {
      "op": "SHL"
    },
    "6646": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6647": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6648": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6650": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6651": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AF"
    },
    "6654": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6655": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x251F"
    },
    "6658": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6659": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6660": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25441,
        25451
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 81,
      "value": "0x4"
    },
    "6662": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25441,
        25451
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6663": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25441,
        25451
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "6665": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25441,
        25451
      ],
      "op": "AND",
      "path": "8"
    },
    "6666": {
      "branch": 150,
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25441,
        25460
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6667": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25433,
        25492
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A56"
    },
    "6670": {
      "branch": 150,
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25433,
        25492
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6671": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25433,
        25492
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6673": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25433,
        25492
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6674": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6678": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6680": {
      "op": "SHL"
    },
    "6681": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25433,
        25492
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6682": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25433,
        25492
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6685": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25433,
        25492
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6687": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25433,
        25492
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6688": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25433,
        25492
      ],
      "op": "ADD",
      "path": "8"
    },
    "6689": {
      "op": "MSTORE"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6692": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6694": {
      "op": "DUP3"
    },
    "6695": {
      "op": "ADD"
    },
    "6696": {
      "op": "MSTORE"
    },
    "6697": {
      "op": "PUSH32",
      "value": "0x436F6E747261637420616C726561647920646570726563617465640000000000"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6732": {
      "op": "DUP3"
    },
    "6733": {
      "op": "ADD"
    },
    "6734": {
      "op": "MSTORE"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6737": {
      "op": "ADD"
    },
    "6738": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25433,
        25492
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "6741": {
      "op": "JUMP"
    },
    "6742": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25433,
        25492
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6743": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25502,
        25512
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 82,
      "value": "0x4"
    },
    "6745": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25502,
        25519
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6746": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25502,
        25519
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6749": {
      "op": "NOT"
    },
    "6750": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25502,
        25519
      ],
      "op": "AND",
      "path": "8"
    },
    "6751": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25515,
        25519
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6753": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25502,
        25519
      ],
      "op": "OR",
      "path": "8"
    },
    "6754": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25502,
        25519
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6755": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25502,
        25519
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "6756": {
      "fn": "RequestManager.deprecateContract",
      "jump": "o",
      "offset": [
        25375,
        25526
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6757": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6758": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6760": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6767": {
      "op": "SHL"
    },
    "6768": {
      "op": "SUB"
    },
    "6769": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6770": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "6771": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6772": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A8F"
    },
    "6775": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6776": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6778": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6779": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6783": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6785": {
      "op": "SHL"
    },
    "6786": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6787": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6788": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6790": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6791": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AF"
    },
    "6794": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6795": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x251F"
    },
    "6798": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6799": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6806": {
      "op": "SHL"
    },
    "6807": {
      "op": "SUB"
    },
    "6808": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 83
    },
    "6809": {
      "branch": 165,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "6810": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF4"
    },
    "6813": {
      "branch": 165,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6814": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6816": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6817": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6823": {
      "op": "SHL"
    },
    "6824": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6825": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6831": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "6832": {
      "op": "MSTORE"
    },
    "6833": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6835": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6837": {
      "op": "DUP3"
    },
    "6838": {
      "op": "ADD"
    },
    "6839": {
      "op": "MSTORE"
    },
    "6840": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "6873": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6875": {
      "op": "DUP3"
    },
    "6876": {
      "op": "ADD"
    },
    "6877": {
      "op": "MSTORE"
    },
    "6878": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "6885": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6887": {
      "op": "SHL"
    },
    "6888": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6890": {
      "op": "DUP3"
    },
    "6891": {
      "op": "ADD"
    },
    "6892": {
      "op": "MSTORE"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6895": {
      "op": "ADD"
    },
    "6896": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AF"
    },
    "6899": {
      "op": "JUMP"
    },
    "6900": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6901": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 84,
      "value": "0x1AFD"
    },
    "6904": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2088"
    },
    "6908": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6909": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "6911": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6912": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6319,
        6455
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6913": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6371,
        6378
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6915": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6397,
        6448
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 85,
      "value": "0x1323"
    },
    "6918": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6406,
        6414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xB"
    },
    "6920": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6406,
        6414
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6921": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6438,
        6447
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0xF4240"
    },
    "6925": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6426,
        6434
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xC"
    },
    "6927": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6426,
        6434
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6928": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6417,
        6423
      ],
      "op": "DUP6",
      "path": "8"
    },
    "6929": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6417,
        6434
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B1A"
    },
    "6932": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6417,
        6434
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6933": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6417,
        6434
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6934": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6417,
        6434
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25AA"
    },
    "6937": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        6417,
        6434
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6938": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6417,
        6434
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6939": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6416,
        6447
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11F1"
    },
    "6942": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6416,
        6447
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6943": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6416,
        6447
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6944": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6416,
        6447
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25C9"
    },
    "6947": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        6416,
        6447
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6948": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18653,
        22354
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6949": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18738,
        18745
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6951": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18792,
        18807
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6952": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18792,
        18807
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6953": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18792,
        18807
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6954": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18792,
        18798
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "6956": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18792,
        18807
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6958": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18792,
        18807
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6959": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18792,
        18807
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6960": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18792,
        18807
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6961": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18792,
        18807
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6963": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18792,
        18807
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6964": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18792,
        18807
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6965": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18792,
        18807
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "6966": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18852,
        18867
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6967": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18852,
        18867
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6968": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18843,
        18868
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6969": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18843,
        18868
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6970": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18843,
        18851
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "6972": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18843,
        18868
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6973": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18843,
        18868
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6974": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18843,
        18868
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6975": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18843,
        18868
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6976": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18843,
        18868
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "6977": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18901,
        18919
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "6979": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18901,
        18919
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6980": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18901,
        18919
      ],
      "op": "ADD",
      "path": "8"
    },
    "6981": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18901,
        18919
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6982": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18960,
        18986
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "6984": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18960,
        18986
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6985": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18960,
        18986
      ],
      "op": "ADD",
      "path": "8"
    },
    "6986": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18960,
        18986
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6987": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18738,
        18745
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6988": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18738,
        18745
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "6989": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18792,
        18807
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6990": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18843,
        18868
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6991": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18901,
        18919
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6992": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19041,
        19076
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 86,
      "value": "0x1B59"
    },
    "6995": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18960,
        18986
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6996": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18901,
        18919
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6997": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19041,
        19076
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "7000": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        19041,
        19076
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7001": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19041,
        19076
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7002": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19017,
        19022
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7003": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19017,
        19038
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "7005": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19017,
        19038
      ],
      "op": "ADD",
      "path": "8"
    },
    "7006": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19017,
        19038
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7007": {
      "branch": 151,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19017,
        19076
      ],
      "op": "LT",
      "path": "8"
    },
    "7008": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18996,
        19125
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1BAB"
    },
    "7011": {
      "branch": 151,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18996,
        19125
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7012": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18996,
        19125
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7014": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18996,
        19125
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7015": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7019": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7021": {
      "op": "SHL"
    },
    "7022": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18996,
        19125
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7023": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18996,
        19125
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7026": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18996,
        19125
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7028": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18996,
        19125
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7029": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18996,
        19125
      ],
      "op": "ADD",
      "path": "8"
    },
    "7030": {
      "op": "MSTORE"
    },
    "7031": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7033": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7035": {
      "op": "DUP3"
    },
    "7036": {
      "op": "ADD"
    },
    "7037": {
      "op": "MSTORE"
    },
    "7038": {
      "op": "PUSH32",
      "value": "0x436C61696D20616C72656164792077697468647261776E000000000000000000"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7073": {
      "op": "DUP3"
    },
    "7074": {
      "op": "ADD"
    },
    "7075": {
      "op": "MSTORE"
    },
    "7076": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7078": {
      "op": "ADD"
    },
    "7079": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18996,
        19125
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "7082": {
      "op": "JUMP"
    },
    "7083": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18996,
        19125
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7084": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19201,
        19216
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7085": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19201,
        19216
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7086": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19257,
        19278
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "7088": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19257,
        19278
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7089": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19257,
        19278
      ],
      "op": "ADD",
      "path": "8"
    },
    "7090": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19257,
        19278
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7091": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19292,
        19318
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "7093": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19292,
        19318
      ],
      "op": "DUP6",
      "path": "8"
    },
    "7094": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19292,
        19318
      ],
      "op": "ADD",
      "path": "8"
    },
    "7095": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19292,
        19318
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7096": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19332,
        19353
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7098": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19332,
        19353
      ],
      "op": "DUP7",
      "path": "8"
    },
    "7099": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19332,
        19353
      ],
      "op": "ADD",
      "path": "8"
    },
    "7100": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19332,
        19353
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7101": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19367,
        19381
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "7103": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19367,
        19381
      ],
      "op": "DUP8",
      "path": "8"
    },
    "7104": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19367,
        19381
      ],
      "op": "ADD",
      "path": "8"
    },
    "7105": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19367,
        19381
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7106": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 87,
      "value": "0x40"
    },
    "7108": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7109": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7110": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7112": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7113": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7114": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "ADD",
      "path": "6"
    },
    "7115": {
      "op": "SWAP8"
    },
    "7116": {
      "op": "SWAP1"
    },
    "7117": {
      "op": "SWAP8"
    },
    "7118": {
      "op": "MSTORE"
    },
    "7119": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19230,
        19243
      ],
      "op": "CHAINID",
      "path": "8"
    },
    "7120": {
      "op": "DUP2"
    },
    "7121": {
      "op": "DUP4"
    },
    "7122": {
      "op": "ADD"
    },
    "7123": {
      "op": "MSTORE"
    },
    "7124": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7126": {
      "op": "DUP1"
    },
    "7127": {
      "op": "DUP3"
    },
    "7128": {
      "op": "ADD"
    },
    "7129": {
      "op": "SWAP7"
    },
    "7130": {
      "op": "SWAP1"
    },
    "7131": {
      "op": "SWAP7"
    },
    "7132": {
      "op": "MSTORE"
    },
    "7133": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7146": {
      "op": "NOT"
    },
    "7147": {
      "op": "SWAP5"
    },
    "7148": {
      "op": "DUP7"
    },
    "7149": {
      "op": "SHL"
    },
    "7150": {
      "op": "DUP6"
    },
    "7151": {
      "op": "AND"
    },
    "7152": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7154": {
      "op": "DUP3"
    },
    "7155": {
      "op": "ADD"
    },
    "7156": {
      "op": "MSTORE"
    },
    "7157": {
      "op": "SWAP3"
    },
    "7158": {
      "op": "SWAP1"
    },
    "7159": {
      "op": "SWAP5"
    },
    "7160": {
      "op": "SHL"
    },
    "7161": {
      "op": "SWAP1"
    },
    "7162": {
      "op": "SWAP3"
    },
    "7163": {
      "op": "AND"
    },
    "7164": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "7166": {
      "op": "DUP3"
    },
    "7167": {
      "op": "ADD"
    },
    "7168": {
      "op": "MSTORE"
    },
    "7169": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7171": {
      "op": "DUP1"
    },
    "7172": {
      "op": "DUP3"
    },
    "7173": {
      "op": "ADD"
    },
    "7174": {
      "op": "SWAP3"
    },
    "7175": {
      "op": "SWAP1"
    },
    "7176": {
      "op": "SWAP3"
    },
    "7177": {
      "op": "MSTORE"
    },
    "7178": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7179": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7180": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7181": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7182": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SUB",
      "path": "6"
    },
    "7183": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7184": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7185": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "ADD",
      "path": "6"
    },
    "7186": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7187": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7188": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "7190": {
      "op": "ADD"
    },
    "7191": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7192": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7193": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7194": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7195": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7196": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7197": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "ADD",
      "path": "6"
    },
    "7198": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7199": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19402,
        19418
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7201": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19421,
        19508
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C55"
    },
    "7204": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19461,
        19472
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7205": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19486,
        19491
      ],
      "op": "DUP8",
      "path": "8"
    },
    "7206": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19486,
        19498
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "7208": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19486,
        19498
      ],
      "op": "ADD",
      "path": "8"
    },
    "7209": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19486,
        19498
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7210": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 88,
      "value": "0x40"
    },
    "7212": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7213": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7214": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7216": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7217": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7218": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "ADD",
      "path": "6"
    },
    "7219": {
      "op": "SWAP5"
    },
    "7220": {
      "op": "SWAP1"
    },
    "7221": {
      "op": "SWAP5"
    },
    "7222": {
      "op": "MSTORE"
    },
    "7223": {
      "op": "DUP1"
    },
    "7224": {
      "op": "DUP3"
    },
    "7225": {
      "op": "ADD"
    },
    "7226": {
      "op": "SWAP3"
    },
    "7227": {
      "op": "SWAP1"
    },
    "7228": {
      "op": "SWAP3"
    },
    "7229": {
      "op": "MSTORE"
    },
    "7230": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7231": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7232": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7233": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7234": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "SUB",
      "path": "6"
    },
    "7235": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7236": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "ADD",
      "path": "6"
    },
    "7237": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7238": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7239": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7241": {
      "op": "SWAP1"
    },
    "7242": {
      "op": "SWAP3"
    },
    "7243": {
      "op": "ADD"
    },
    "7244": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7245": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7246": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7247": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7248": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7249": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "ADD",
      "path": "6"
    },
    "7250": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7251": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7252": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        743,
        936
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7253": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19421,
        19508
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7254": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7256": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7257": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7258": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7259": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7260": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "ADD",
      "path": "8"
    },
    "7261": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7262": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7263": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19595,
        19615
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "7265": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19595,
        19615
      ],
      "op": "DUP9",
      "path": "8"
    },
    "7266": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19595,
        19615
      ],
      "op": "ADD",
      "path": "8"
    },
    "7267": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7274": {
      "op": "SHL"
    },
    "7275": {
      "op": "SUB"
    },
    "7276": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7277": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7278": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "AND",
      "path": "8"
    },
    "7279": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7280": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7281": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "7283": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7284": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "DUP11",
      "path": "8"
    },
    "7285": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "ADD",
      "path": "8"
    },
    "7286": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7287": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7289": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7290": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "ADD",
      "path": "8"
    },
    "7291": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7292": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20098
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7293": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7294": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7295": {
      "op": "PUSH4",
      "value": "0xA64A2271"
    },
    "7300": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7302": {
      "op": "SHL"
    },
    "7303": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7304": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7305": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7307": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7308": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "ADD",
      "path": "8"
    },
    "7309": {
      "op": "DUP8"
    },
    "7310": {
      "op": "SWAP1"
    },
    "7311": {
      "op": "MSTORE"
    },
    "7312": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19402,
        19508
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "7313": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19402,
        19508
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "7314": {
      "op": "POP"
    },
    "7315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7317": {
      "op": "SWAP4"
    },
    "7318": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7319": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19552,
        19615
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7320": {
      "op": "DUP5"
    },
    "7321": {
      "op": "SWAP3"
    },
    "7322": {
      "op": "DUP4"
    },
    "7323": {
      "op": "SWAP3"
    },
    "7324": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20098
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7325": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20098
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7326": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20098
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7327": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20098
      ],
      "op": "AND",
      "path": "8"
    },
    "7328": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20098
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7329": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20106
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA64A2271"
    },
    "7334": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20106
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7335": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7337": {
      "op": "ADD"
    },
    "7338": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7340": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7341": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7342": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7343": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7344": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "SUB",
      "path": "8"
    },
    "7345": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7346": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "DUP7",
      "path": "8"
    },
    "7347": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "GAS",
      "path": "8"
    },
    "7348": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "7349": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7350": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7351": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7352": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CC5"
    },
    "7355": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7356": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7357": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7359": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7360": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "7361": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7362": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7364": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "REVERT",
      "path": "8"
    },
    "7365": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7366": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "POP",
      "path": "8"
    },
    "7367": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "POP",
      "path": "8"
    },
    "7368": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "POP",
      "path": "8"
    },
    "7369": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "POP",
      "path": "8"
    },
    "7370": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7372": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7373": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7374": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "7376": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "NOT",
      "path": "8"
    },
    "7377": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "7379": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7380": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "ADD",
      "path": "8"
    },
    "7381": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "AND",
      "path": "8"
    },
    "7382": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7383": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "ADD",
      "path": "8"
    },
    "7384": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7385": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7387": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7388": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "POP",
      "path": "8"
    },
    "7389": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7390": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "ADD",
      "path": "8"
    },
    "7391": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7392": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CE9"
    },
    "7395": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7396": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7397": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2616"
    },
    "7400": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        20080,
        20141
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7401": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20080,
        20141
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7402": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20045,
        20141
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7403": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20045,
        20141
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7404": {
      "op": "POP"
    },
    "7405": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20045,
        20141
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7406": {
      "op": "POP"
    },
    "7407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7413": {
      "op": "SHL"
    },
    "7414": {
      "op": "SUB"
    },
    "7415": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20156,
        20176
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7416": {
      "branch": 152,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20156,
        20176
      ],
      "op": "AND",
      "path": "8"
    },
    "7417": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20152,
        20264
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D06"
    },
    "7420": {
      "branch": 152,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20152,
        20264
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7421": {
      "op": "POP"
    },
    "7422": {
      "op": "POP"
    },
    "7423": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20212,
        20231
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 89
    },
    "7424": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20212,
        20231
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7425": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20233,
        20252
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7427": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20233,
        20252
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7428": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20233,
        20252
      ],
      "op": "ADD",
      "path": "8"
    },
    "7429": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20233,
        20252
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7430": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20152,
        20264
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7431": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20296
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "7433": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20296
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7434": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7436": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7437": {
      "op": "PUSH4",
      "value": "0xA751732F"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7444": {
      "op": "SHL"
    },
    "7445": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7446": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7447": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7449": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7450": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "ADD",
      "path": "8"
    },
    "7451": {
      "op": "DUP8"
    },
    "7452": {
      "op": "SWAP1"
    },
    "7453": {
      "op": "MSTORE"
    },
    "7454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7460": {
      "op": "SHL"
    },
    "7461": {
      "op": "SUB"
    },
    "7462": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20296
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7463": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20296
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7464": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20296
      ],
      "op": "AND",
      "path": "8"
    },
    "7465": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20296
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7466": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20314
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA751732F"
    },
    "7471": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20314
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7472": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7474": {
      "op": "ADD"
    },
    "7475": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7477": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7479": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7480": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7481": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7482": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "SUB",
      "path": "8"
    },
    "7483": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7484": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "DUP7",
      "path": "8"
    },
    "7485": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "GAS",
      "path": "8"
    },
    "7486": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "7487": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7488": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7489": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7490": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D4F"
    },
    "7493": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7494": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7495": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7497": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7498": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "7499": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7500": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7502": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "REVERT",
      "path": "8"
    },
    "7503": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7504": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "POP",
      "path": "8"
    },
    "7505": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "POP",
      "path": "8"
    },
    "7506": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "POP",
      "path": "8"
    },
    "7507": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "POP",
      "path": "8"
    },
    "7508": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7510": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7511": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7512": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "7514": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "NOT",
      "path": "8"
    },
    "7515": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "7517": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7518": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "ADD",
      "path": "8"
    },
    "7519": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "AND",
      "path": "8"
    },
    "7520": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7521": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "ADD",
      "path": "8"
    },
    "7522": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7523": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7525": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7526": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "POP",
      "path": "8"
    },
    "7527": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7528": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "ADD",
      "path": "8"
    },
    "7529": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7530": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D73"
    },
    "7533": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7534": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7535": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2644"
    },
    "7538": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        20278,
        20324
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7539": {
      "branch": 153,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20278,
        20324
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7540": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20274,
        20824
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7541": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20274,
        20824
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D81"
    },
    "7544": {
      "branch": 153,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20274,
        20824
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7545": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20392,
        20397
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 90,
      "value": "0x0"
    },
    "7547": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20379,
        20397
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "7548": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20379,
        20397
      ],
      "op": "POP",
      "path": "8"
    },
    "7549": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20274,
        20824
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E13"
    },
    "7552": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20274,
        20824
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7553": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20274,
        20824
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7560": {
      "op": "SHL"
    },
    "7561": {
      "op": "SUB"
    },
    "7562": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20418,
        20438
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7563": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20418,
        20438
      ],
      "op": "AND",
      "path": "8"
    },
    "7564": {
      "branch": 154,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20418,
        20438
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7565": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20414,
        20824
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DB9"
    },
    "7568": {
      "branch": 154,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20414,
        20824
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7569": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20522,
        20535
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 91,
      "value": "0x1"
    },
    "7571": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20522,
        20535
      ],
      "op": "DUP11",
      "path": "8"
    },
    "7572": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20522,
        20535
      ],
      "op": "ADD",
      "path": "8"
    },
    "7573": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20522,
        20535
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7580": {
      "op": "SHL"
    },
    "7581": {
      "op": "SUB"
    },
    "7582": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20512,
        20535
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7583": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20512,
        20535
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7584": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20512,
        20535
      ],
      "op": "AND",
      "path": "8"
    },
    "7585": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20522,
        20535
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7586": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20522,
        20535
      ],
      "op": "AND",
      "path": "8"
    },
    "7587": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20512,
        20535
      ],
      "op": "EQ",
      "path": "8"
    },
    "7588": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20512,
        20561
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7589": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20512,
        20561
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7590": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20512,
        20561
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DB2"
    },
    "7593": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20512,
        20561
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7594": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20512,
        20561
      ],
      "op": "POP",
      "path": "8"
    },
    "7595": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20549,
        20554
      ],
      "op": "DUP10",
      "path": "8"
    },
    "7596": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20549,
        20561
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "7598": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20549,
        20561
      ],
      "op": "ADD",
      "path": "8"
    },
    "7599": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20549,
        20561
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7600": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20539,
        20545
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7601": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20539,
        20561
      ],
      "op": "EQ",
      "path": "8"
    },
    "7602": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20512,
        20561
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7603": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20499,
        20561
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "7604": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20499,
        20561
      ],
      "op": "POP",
      "path": "8"
    },
    "7605": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20414,
        20824
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E13"
    },
    "7608": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20414,
        20824
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7609": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20414,
        20824
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7610": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20675,
        20680
      ],
      "op": "DUP10",
      "path": "8",
      "statement": 92
    },
    "7611": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20675,
        20692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "7613": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20675,
        20692
      ],
      "op": "ADD",
      "path": "8"
    },
    "7614": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20675,
        20692
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7615": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20656,
        20671
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "7616": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20656,
        20692
      ],
      "op": "LT",
      "path": "8"
    },
    "7617": {
      "branch": 155,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20656,
        20692
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7618": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20631,
        20751
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E0D"
    },
    "7621": {
      "branch": 155,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20631,
        20751
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7622": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20631,
        20751
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7624": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20631,
        20751
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7625": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7629": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7631": {
      "op": "SHL"
    },
    "7632": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20631,
        20751
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7633": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20631,
        20751
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7636": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20631,
        20751
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7638": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20631,
        20751
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7639": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20631,
        20751
      ],
      "op": "ADD",
      "path": "8"
    },
    "7640": {
      "op": "MSTORE"
    },
    "7641": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7643": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7645": {
      "op": "DUP3"
    },
    "7646": {
      "op": "ADD"
    },
    "7647": {
      "op": "MSTORE"
    },
    "7648": {
      "op": "PUSH32",
      "value": "0x436C61696D20706572696F64206E6F742066696E697368656400000000000000"
    },
    "7681": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7683": {
      "op": "DUP3"
    },
    "7684": {
      "op": "ADD"
    },
    "7685": {
      "op": "MSTORE"
    },
    "7686": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7688": {
      "op": "ADD"
    },
    "7689": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20631,
        20751
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "7692": {
      "op": "JUMP"
    },
    "7693": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20631,
        20751
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7694": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20793,
        20813
      ],
      "op": "DUP7",
      "path": "8",
      "statement": 93
    },
    "7695": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20778,
        20790
      ],
      "op": "DUP9",
      "path": "8"
    },
    "7696": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20778,
        20813
      ],
      "op": "GT",
      "path": "8"
    },
    "7697": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20765,
        20813
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "7698": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20765,
        20813
      ],
      "op": "POP",
      "path": "8"
    },
    "7699": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20414,
        20824
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7700": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20888,
        20909
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7702": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20919,
        20940
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7703": {
      "branch": 156,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20955,
        20965
      ],
      "op": "DUP6",
      "path": "8"
    },
    "7704": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20951,
        21728
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7705": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20951,
        21728
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E3E"
    },
    "7708": {
      "branch": 156,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20951,
        21728
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7709": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21060,
        21095
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 94,
      "value": "0x1E26"
    },
    "7712": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21075,
        21095
      ],
      "op": "DUP10",
      "path": "8"
    },
    "7713": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21060,
        21072
      ],
      "op": "DUP12",
      "path": "8"
    },
    "7714": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21060,
        21095
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "7717": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        21060,
        21095
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7718": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21060,
        21095
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7719": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21125,
        21138
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 95,
      "value": "0x1"
    },
    "7721": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21125,
        21138
      ],
      "op": "DUP14",
      "path": "8"
    },
    "7722": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21125,
        21138
      ],
      "op": "ADD",
      "path": "8"
    },
    "7723": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21125,
        21138
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7724": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21044,
        21095
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7725": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21044,
        21095
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7726": {
      "op": "POP"
    },
    "7727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7733": {
      "op": "SHL"
    },
    "7734": {
      "op": "SUB"
    },
    "7735": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21125,
        21138
      ],
      "op": "AND",
      "path": "8"
    },
    "7736": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21125,
        21138
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7737": {
      "op": "POP"
    },
    "7738": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20951,
        21728
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1ED7"
    },
    "7741": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20951,
        21728
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7742": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20951,
        21728
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7743": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21159,
        21183
      ],
      "op": "DUP9",
      "path": "8"
    },
    "7744": {
      "branch": 157,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21159,
        21183
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7745": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21155,
        21728
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1EC6"
    },
    "7748": {
      "branch": 157,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21155,
        21728
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7749": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21312,
        21322
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 96
    },
    "7750": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21288,
        21323
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7752": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21288,
        21323
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7753": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21288,
        21323
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7754": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21288,
        21323
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7755": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21288,
        21311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "7757": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21288,
        21311
      ],
      "op": "DUP14",
      "path": "8"
    },
    "7758": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21288,
        21311
      ],
      "op": "ADD",
      "path": "8"
    },
    "7759": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21288,
        21323
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7761": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21288,
        21323
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7762": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21288,
        21323
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7764": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21288,
        21323
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7765": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21288,
        21323
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7766": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21288,
        21323
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7767": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21284,
        21323
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E61"
    },
    "7770": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21284,
        21323
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7771": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21284,
        21285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "7773": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21284,
        21323
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25AA"
    },
    "7776": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        21284,
        21323
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7777": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21284,
        21323
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7778": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21268,
        21323
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7779": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21268,
        21323
      ],
      "op": "POP",
      "path": "8"
    },
    "7780": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21353,
        21363
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 97
    },
    "7781": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21337,
        21363
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7782": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21337,
        21363
      ],
      "op": "POP",
      "path": "8"
    },
    "7783": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21402,
        21403
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 98,
      "value": "0x0"
    },
    "7785": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21386,
        21399
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7786": {
      "branch": 158,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21386,
        21403
      ],
      "op": "GT",
      "path": "8"
    },
    "7787": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21378,
        21442
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1EC1"
    },
    "7790": {
      "branch": 158,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21378,
        21442
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7791": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21378,
        21442
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7793": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21378,
        21442
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7794": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7798": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7800": {
      "op": "SHL"
    },
    "7801": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21378,
        21442
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7802": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21378,
        21442
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7805": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21378,
        21442
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7807": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21378,
        21442
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7808": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21378,
        21442
      ],
      "op": "ADD",
      "path": "8"
    },
    "7809": {
      "op": "MSTORE"
    },
    "7810": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7812": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7814": {
      "op": "DUP3"
    },
    "7815": {
      "op": "ADD"
    },
    "7816": {
      "op": "MSTORE"
    },
    "7817": {
      "op": "PUSH32",
      "value": "0x4368616C6C656E67657220686173206E6F7468696E6720746F20776974686472"
    },
    "7850": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7852": {
      "op": "DUP3"
    },
    "7853": {
      "op": "ADD"
    },
    "7854": {
      "op": "MSTORE"
    },
    "7855": {
      "op": "PUSH2",
      "value": "0x6177"
    },
    "7858": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7860": {
      "op": "SHL"
    },
    "7861": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7863": {
      "op": "DUP3"
    },
    "7864": {
      "op": "ADD"
    },
    "7865": {
      "op": "MSTORE"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7868": {
      "op": "ADD"
    },
    "7869": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21378,
        21442
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7AF"
    },
    "7872": {
      "op": "JUMP"
    },
    "7873": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21378,
        21442
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7874": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21155,
        21728
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1ED7"
    },
    "7877": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21155,
        21728
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7878": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21155,
        21728
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7879": {
      "op": "POP"
    },
    "7880": {
      "op": "POP"
    },
    "7881": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7883": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7884": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21668,
        21680
      ],
      "op": "DUP9",
      "path": "8",
      "statement": 99
    },
    "7885": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21668,
        21680
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7892": {
      "op": "SHL"
    },
    "7893": {
      "op": "SUB"
    },
    "7894": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7895": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21155,
        21728
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7896": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22033,
        22053
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7898": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22033,
        22053
      ],
      "op": "DUP13",
      "path": "8"
    },
    "7899": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22033,
        22053
      ],
      "op": "ADD",
      "path": "8"
    },
    "7900": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22033,
        22053
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7907": {
      "op": "SHL"
    },
    "7908": {
      "op": "SUB"
    },
    "7909": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22033,
        22053
      ],
      "op": "AND",
      "path": "8"
    },
    "7910": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22019,
        22029
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7911": {
      "branch": 159,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22019,
        22053
      ],
      "op": "SUB",
      "path": "8"
    },
    "7912": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22015,
        22300
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F25"
    },
    "7915": {
      "branch": 159,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22015,
        22300
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7916": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22088,
        22108
      ],
      "op": "DUP9",
      "path": "8"
    },
    "7917": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22073,
        22085
      ],
      "op": "DUP11",
      "path": "8"
    },
    "7918": {
      "branch": 160,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22073,
        22108
      ],
      "op": "GT",
      "path": "8"
    },
    "7919": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22069,
        22290
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7920": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22069,
        22290
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F0E"
    },
    "7923": {
      "branch": 160,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22069,
        22290
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7924": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22146,
        22181
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 100,
      "value": "0x1EFD"
    },
    "7927": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22161,
        22181
      ],
      "op": "DUP10",
      "path": "8"
    },
    "7928": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22146,
        22158
      ],
      "op": "DUP12",
      "path": "8"
    },
    "7929": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22146,
        22181
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2554"
    },
    "7932": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22146,
        22181
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7933": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22146,
        22181
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7934": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22128,
        22182
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F07"
    },
    "7937": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22128,
        22182
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7938": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22128,
        22182
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7939": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22128,
        22182
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "7942": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22128,
        22182
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7943": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22128,
        22182
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7944": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22128,
        22182
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7945": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22128,
        22182
      ],
      "op": "POP",
      "path": "8"
    },
    "7946": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22069,
        22290
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F25"
    },
    "7949": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22069,
        22290
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7950": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22069,
        22290
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7951": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22239,
        22274
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 101,
      "value": "0x1F18"
    },
    "7954": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22262,
        22274
      ],
      "op": "DUP11",
      "path": "8"
    },
    "7955": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22239,
        22259
      ],
      "op": "DUP11",
      "path": "8"
    },
    "7956": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22239,
        22274
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2554"
    },
    "7959": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22239,
        22274
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7960": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22239,
        22274
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7961": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22221,
        22275
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F22"
    },
    "7964": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22221,
        22275
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7965": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22221,
        22275
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7966": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22221,
        22275
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2554"
    },
    "7969": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22221,
        22275
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7970": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22221,
        22275
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7971": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22221,
        22275
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7972": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22221,
        22275
      ],
      "op": "POP",
      "path": "8"
    },
    "7973": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22069,
        22290
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7974": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22318,
        22331
      ],
      "op": "SWAP15",
      "path": "8",
      "statement": 102
    },
    "7975": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22333,
        22346
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7976": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22333,
        22346
      ],
      "op": "SWAP14",
      "path": "8"
    },
    "7977": {
      "op": "POP"
    },
    "7978": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18653,
        22354
      ],
      "op": "SWAP12",
      "path": "8"
    },
    "7979": {
      "op": "POP"
    },
    "7980": {
      "op": "POP"
    },
    "7981": {
      "op": "POP"
    },
    "7982": {
      "op": "POP"
    },
    "7983": {
      "op": "POP"
    },
    "7984": {
      "op": "POP"
    },
    "7985": {
      "op": "POP"
    },
    "7986": {
      "op": "POP"
    },
    "7987": {
      "op": "POP"
    },
    "7988": {
      "op": "POP"
    },
    "7989": {
      "op": "POP"
    },
    "7990": {
      "op": "POP"
    },
    "7991": {
      "fn": "RequestManager.resolveClaim",
      "jump": "o",
      "offset": [
        18653,
        22354
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7992": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22360,
        22858
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7993": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22479,
        22492
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "7995": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22479,
        22492
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7996": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22479,
        22492
      ],
      "op": "ADD",
      "path": "8"
    },
    "7997": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22479,
        22492
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7998": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22524,
        22539
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 103
    },
    "7999": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22524,
        22539
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8000": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22507,
        22549
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8002": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22507,
        22549
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8003": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22507,
        22549
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8004": {
      "op": "SWAP2"
    },
    "8005": {
      "op": "DUP3"
    },
    "8006": {
      "op": "MSTORE"
    },
    "8007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8013": {
      "op": "SHL"
    },
    "8014": {
      "op": "SUB"
    },
    "8015": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22479,
        22492
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8016": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22479,
        22492
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "8017": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22479,
        22492
      ],
      "op": "AND",
      "path": "8"
    },
    "8018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8020": {
      "op": "DUP3"
    },
    "8021": {
      "op": "ADD"
    },
    "8022": {
      "op": "DUP2"
    },
    "8023": {
      "op": "SWAP1"
    },
    "8024": {
      "op": "MSTORE"
    },
    "8025": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22479,
        22492
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8026": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22507,
        22549
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xA7B86597910AAE75F7D99FEB2F37420CC80D457465FFBA0F8136D722A9F7095A"
    },
    "8059": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22507,
        22549
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8060": {
      "op": "ADD"
    },
    "8061": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22507,
        22549
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8063": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22507,
        22549
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8064": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22507,
        22549
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8065": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22507,
        22549
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8066": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22507,
        22549
      ],
      "op": "SUB",
      "path": "8"
    },
    "8067": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22507,
        22549
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8068": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22507,
        22549
      ],
      "op": "LOG1",
      "path": "8"
    },
    "8069": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 104,
      "value": "0x40"
    },
    "8071": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8072": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8073": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8074": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8075": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "ADD",
      "path": "8"
    },
    "8076": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8077": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8084": {
      "op": "SHL"
    },
    "8085": {
      "op": "SUB"
    },
    "8086": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8087": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "DUP5",
      "path": "8"
    },
    "8088": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "AND",
      "path": "8"
    },
    "8089": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8090": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "DUP4",
      "path": "8"
    },
    "8091": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8092": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22613,
        22625
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "8094": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22613,
        22625
      ],
      "op": "DUP7",
      "path": "8"
    },
    "8095": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22613,
        22625
      ],
      "op": "ADD",
      "path": "8"
    },
    "8096": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22613,
        22625
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8097": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8099": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "8100": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "DUP5",
      "path": "8"
    },
    "8101": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "ADD",
      "path": "8"
    },
    "8102": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8103": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8104": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22583,
        22626
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8105": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22580
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "8107": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22580
      ],
      "op": "DUP9",
      "path": "8"
    },
    "8108": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22580
      ],
      "op": "ADD",
      "path": "8"
    },
    "8109": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8110": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8117": {
      "op": "SHL"
    },
    "8118": {
      "op": "SUB"
    },
    "8119": {
      "op": "NOT"
    },
    "8120": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "AND",
      "path": "8"
    },
    "8121": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8122": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "8123": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "OR",
      "path": "8"
    },
    "8124": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8125": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8126": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "8127": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "8129": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "DUP8",
      "path": "8"
    },
    "8130": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "ADD",
      "path": "8"
    },
    "8131": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "8132": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22690,
        22722
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 105,
      "value": "0xB"
    },
    "8134": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22690,
        22722
      ],
      "op": "DUP7",
      "path": "8"
    },
    "8135": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22690,
        22722
      ],
      "op": "ADD",
      "path": "8"
    },
    "8136": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22690,
        22722
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8137": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22560,
        22626
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "8139": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22659,
        22685
      ],
      "op": "DUP8",
      "path": "8"
    },
    "8140": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22659,
        22685
      ],
      "op": "ADD",
      "path": "8"
    },
    "8141": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22659,
        22685
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8142": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22659,
        22685
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8143": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22659,
        22685
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8144": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22659,
        22685
      ],
      "op": "AND",
      "path": "8"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8147": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22686
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8148": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22686
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8149": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22686
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8150": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22658
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF"
    },
    "8152": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22686
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8153": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22686
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "8154": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22686
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8155": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22686
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8156": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22686
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8157": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22686
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "8158": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22722
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8159": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22722
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8160": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22686
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8161": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22686
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8162": {
      "op": "SWAP1"
    },
    "8163": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22722
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1FED"
    },
    "8166": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22722
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8167": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22690,
        22722
      ],
      "op": "DUP5",
      "path": "8"
    },
    "8168": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22690,
        22722
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8169": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22722
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "8172": {
      "fn": "RequestManager.withdrawDeposit",
      "jump": "i",
      "offset": [
        22637,
        22722
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8173": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22722
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8174": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22722
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8175": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22722
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8176": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22637,
        22722
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "8177": {
      "op": "POP"
    },
    "8178": {
      "op": "POP"
    },
    "8179": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22755,
        22781
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "8181": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22755,
        22781
      ],
      "op": "DUP4",
      "path": "8"
    },
    "8182": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22755,
        22781
      ],
      "op": "ADD",
      "path": "8"
    },
    "8183": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22755,
        22781
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8184": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22837,
        22850
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 106,
      "value": "0xA"
    },
    "8186": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22837,
        22850
      ],
      "op": "DUP5",
      "path": "8"
    },
    "8187": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22837,
        22850
      ],
      "op": "ADD",
      "path": "8"
    },
    "8188": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22837,
        22850
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8189": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22820,
        22834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "8191": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22820,
        22834
      ],
      "op": "DUP6",
      "path": "8"
    },
    "8192": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22820,
        22834
      ],
      "op": "ADD",
      "path": "8"
    },
    "8193": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22820,
        22834
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8200": {
      "op": "SHL"
    },
    "8201": {
      "op": "SUB"
    },
    "8202": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22755,
        22781
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8203": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22755,
        22781
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "8204": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22755,
        22781
      ],
      "op": "AND",
      "path": "8"
    },
    "8205": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22755,
        22781
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8206": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22792,
        22851
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16C2"
    },
    "8209": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22792,
        22851
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8210": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22811,
        22818
      ],
      "op": "DUP5",
      "path": "8"
    },
    "8211": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22811,
        22818
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8212": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22820,
        22850
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1999"
    },
    "8215": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22820,
        22850
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8216": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22837,
        22850
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8217": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22820,
        22850
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24EE"
    },
    "8220": {
      "fn": "RequestManager.withdrawDeposit",
      "jump": "i",
      "offset": [
        22820,
        22850
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8221": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8222": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 107,
      "value": "0x40"
    },
    "8224": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8231": {
      "op": "SHL"
    },
    "8232": {
      "op": "SUB"
    },
    "8233": {
      "op": "DUP1"
    },
    "8234": {
      "op": "DUP6"
    },
    "8235": {
      "op": "AND"
    },
    "8236": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "8238": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8239": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "2"
    },
    "8240": {
      "op": "MSTORE"
    },
    "8241": {
      "op": "DUP4"
    },
    "8242": {
      "op": "AND"
    },
    "8243": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8245": {
      "op": "DUP3"
    },
    "8246": {
      "op": "ADD"
    },
    "8247": {
      "op": "MSTORE"
    },
    "8248": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8250": {
      "op": "DUP2"
    },
    "8251": {
      "op": "ADD"
    },
    "8252": {
      "op": "DUP3"
    },
    "8253": {
      "op": "SWAP1"
    },
    "8254": {
      "op": "MSTORE"
    },
    "8255": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16C2"
    },
    "8258": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8259": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8260": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8261": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "8266": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8268": {
      "op": "SHL"
    },
    "8269": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1100,
        1127
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8270": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8272": {
      "op": "ADD"
    },
    "8273": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8274": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8276": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8277": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8280": {
      "op": "NOT"
    },
    "8281": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8282": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8283": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SUB",
      "path": "2"
    },
    "8284": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "2"
    },
    "8285": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8286": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8287": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8288": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8289": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8290": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8292": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8293": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "2"
    },
    "8294": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8295": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8300": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8302": {
      "op": "SHL"
    },
    "8303": {
      "op": "SUB"
    },
    "8304": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "2"
    },
    "8305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8309": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8311": {
      "op": "SHL"
    },
    "8312": {
      "op": "SUB"
    },
    "8313": {
      "op": "NOT"
    },
    "8314": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8315": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8316": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "2"
    },
    "8317": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8318": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8319": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8320": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "OR",
      "path": "2"
    },
    "8321": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8322": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8323": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8324": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1069
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2126"
    },
    "8327": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8328": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8329": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8331": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8332": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8339": {
      "op": "SHL"
    },
    "8340": {
      "op": "SUB"
    },
    "8341": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 108
    },
    "8342": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8343": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "8344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8350": {
      "op": "SHL"
    },
    "8351": {
      "op": "SUB"
    },
    "8352": {
      "op": "NOT"
    },
    "8353": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8354": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "8355": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8356": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "8357": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8358": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8359": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 109,
      "value": "0x40"
    },
    "8361": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8362": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8363": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8364": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8365": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "8366": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8367": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8368": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8369": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "8402": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8403": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8404": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8405": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "8406": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "8407": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8408": {
      "fn": "Math.max",
      "offset": [
        285,
        390
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8409": {
      "fn": "Math.max",
      "offset": [
        343,
        350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8411": {
      "fn": "Math.max",
      "offset": [
        374,
        375
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 110
    },
    "8412": {
      "fn": "Math.max",
      "offset": [
        369,
        370
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8413": {
      "fn": "Math.max",
      "offset": [
        369,
        375
      ],
      "op": "LT",
      "path": "5"
    },
    "8414": {
      "branch": 164,
      "fn": "Math.max",
      "offset": [
        369,
        375
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8415": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20E8"
    },
    "8418": {
      "branch": 164,
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8419": {
      "fn": "Math.max",
      "offset": [
        382,
        383
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8420": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20EA"
    },
    "8423": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8424": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8425": {
      "fn": "Math.max",
      "offset": [
        378,
        379
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8426": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8427": {
      "fn": "Math.max",
      "offset": [
        362,
        383
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "8428": {
      "fn": "Math.max",
      "offset": [
        285,
        390
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8429": {
      "op": "POP"
    },
    "8430": {
      "op": "POP"
    },
    "8431": {
      "op": "POP"
    },
    "8432": {
      "fn": "Math.max",
      "jump": "o",
      "offset": [
        285,
        390
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8433": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8434": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 111,
      "value": "0x40"
    },
    "8436": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8443": {
      "op": "SHL"
    },
    "8444": {
      "op": "SUB"
    },
    "8445": {
      "op": "DUP4"
    },
    "8446": {
      "op": "AND"
    },
    "8447": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "8449": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8450": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "8451": {
      "op": "MSTORE"
    },
    "8452": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8454": {
      "op": "DUP2"
    },
    "8455": {
      "op": "ADD"
    },
    "8456": {
      "op": "DUP3"
    },
    "8457": {
      "op": "SWAP1"
    },
    "8458": {
      "op": "MSTORE"
    },
    "8459": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2121"
    },
    "8462": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8463": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8464": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8465": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8472": {
      "op": "SHL"
    },
    "8473": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        886
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8474": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8476": {
      "op": "ADD"
    },
    "8477": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2051"
    },
    "8480": {
      "op": "JUMP"
    },
    "8481": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8482": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "8483": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "8484": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "8485": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8486": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8487": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8489": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217B"
    },
    "8492": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8493": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8495": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8496": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8497": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8499": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "8500": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8502": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8503": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8504": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8506": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8507": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8508": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8510": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "8511": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "8544": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8545": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8546": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "2"
    },
    "8547": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8554": {
      "op": "SHL"
    },
    "8555": {
      "op": "SUB"
    },
    "8556": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "2"
    },
    "8557": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21F8"
    },
    "8560": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8561": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8562": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8563": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8564": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "8569": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "2"
    },
    "8570": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8571": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8572": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8573": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8574": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8575": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8576": {
      "op": "POP"
    },
    "8577": {
      "branch": 166,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8578": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2121"
    },
    "8581": {
      "branch": 166,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8582": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 112
    },
    "8583": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8584": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8586": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "8587": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8588": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8589": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8590": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "8591": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8592": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2199"
    },
    "8595": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8596": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8597": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2644"
    },
    "8600": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8601": {
      "branch": 167,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8602": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2121"
    },
    "8605": {
      "branch": 167,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8606": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8608": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8609": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8613": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8615": {
      "op": "SHL"
    },
    "8616": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8617": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8620": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8622": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8623": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "2"
    },
    "8624": {
      "op": "MSTORE"
    },
    "8625": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "8627": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8629": {
      "op": "DUP3"
    },
    "8630": {
      "op": "ADD"
    },
    "8631": {
      "op": "MSTORE"
    },
    "8632": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "8665": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8667": {
      "op": "DUP3"
    },
    "8668": {
      "op": "ADD"
    },
    "8669": {
      "op": "MSTORE"
    },
    "8670": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "8681": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "8683": {
      "op": "SHL"
    },
    "8684": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8686": {
      "op": "DUP3"
    },
    "8687": {
      "op": "ADD"
    },
    "8688": {
      "op": "MSTORE"
    },
    "8689": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8691": {
      "op": "ADD"
    },
    "8692": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "8695": {
      "op": "JUMP"
    },
    "8696": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8697": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "8699": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 113,
      "value": "0x2207"
    },
    "8702": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8703": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8704": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8706": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8707": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x220F"
    },
    "8710": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8711": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8712": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "8713": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8714": {
      "op": "POP"
    },
    "8715": {
      "op": "POP"
    },
    "8716": {
      "op": "POP"
    },
    "8717": {
      "op": "POP"
    },
    "8718": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8719": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8720": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "8722": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 114
    },
    "8723": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "8724": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "3"
    },
    "8725": {
      "branch": 161,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8726": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2270"
    },
    "8729": {
      "branch": 161,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8730": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8732": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8739": {
      "op": "SHL"
    },
    "8740": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8741": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8744": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8746": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8747": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "3"
    },
    "8748": {
      "op": "MSTORE"
    },
    "8749": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8753": {
      "op": "DUP3"
    },
    "8754": {
      "op": "ADD"
    },
    "8755": {
      "op": "MSTORE"
    },
    "8756": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "8789": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8791": {
      "op": "DUP3"
    },
    "8792": {
      "op": "ADD"
    },
    "8793": {
      "op": "MSTORE"
    },
    "8794": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "8801": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "8803": {
      "op": "SHL"
    },
    "8804": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8806": {
      "op": "DUP3"
    },
    "8807": {
      "op": "ADD"
    },
    "8808": {
      "op": "MSTORE"
    },
    "8809": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8811": {
      "op": "ADD"
    },
    "8812": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7AF"
    },
    "8815": {
      "op": "JUMP"
    },
    "8816": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8823": {
      "op": "SHL"
    },
    "8824": {
      "op": "SUB"
    },
    "8825": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 115
    },
    "8826": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "3"
    },
    "8827": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "8828": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 116,
      "value": "0x22C7"
    },
    "8831": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8832": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8834": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8835": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8839": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8841": {
      "op": "SHL"
    },
    "8842": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8843": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8846": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8848": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8849": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "3"
    },
    "8850": {
      "op": "MSTORE"
    },
    "8851": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "8853": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8855": {
      "op": "DUP3"
    },
    "8856": {
      "op": "ADD"
    },
    "8857": {
      "op": "MSTORE"
    },
    "8858": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "8891": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8893": {
      "op": "DUP3"
    },
    "8894": {
      "op": "ADD"
    },
    "8895": {
      "op": "MSTORE"
    },
    "8896": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8898": {
      "op": "ADD"
    },
    "8899": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7AF"
    },
    "8902": {
      "op": "JUMP"
    },
    "8903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8904": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8906": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8907": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "3"
    },
    "8908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8914": {
      "op": "SHL"
    },
    "8915": {
      "op": "SUB"
    },
    "8916": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "3"
    },
    "8917": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8918": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8919": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8921": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8922": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22E3"
    },
    "8925": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8926": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8927": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2692"
    },
    "8930": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8931": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8932": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8934": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8936": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8937": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8938": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8939": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "3"
    },
    "8940": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8942": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8943": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "3"
    },
    "8944": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "3"
    },
    "8945": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8946": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "8947": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "8948": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "8949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8950": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8951": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8954": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "3"
    },
    "8955": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2320"
    },
    "8958": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8959": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8961": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "8964": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8966": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "3"
    },
    "8967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "8969": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "8971": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "3"
    },
    "8972": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "8974": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8976": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8977": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8978": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8979": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8980": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8981": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8985": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8986": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "8987": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "8988": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2325"
    },
    "8991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8992": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8993": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "8995": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8996": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "8997": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8998": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "8999": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9000": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "9001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9002": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "9003": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 117,
      "value": "0x2335"
    },
    "9006": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9007": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9008": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "3"
    },
    "9009": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2340"
    },
    "9012": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9013": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9014": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "9015": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "9016": {
      "op": "POP"
    },
    "9017": {
      "op": "POP"
    },
    "9018": {
      "op": "POP"
    },
    "9019": {
      "op": "POP"
    },
    "9020": {
      "op": "POP"
    },
    "9021": {
      "op": "POP"
    },
    "9022": {
      "op": "POP"
    },
    "9023": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9024": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9025": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "9027": {
      "branch": 162,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9028": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9029": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x234F"
    },
    "9032": {
      "branch": 162,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9033": {
      "op": "POP"
    },
    "9034": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 118
    },
    "9035": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20EA"
    },
    "9038": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9039": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9040": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9041": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9042": {
      "branch": 163,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9043": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x235F"
    },
    "9046": {
      "branch": 163,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9047": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9048": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9049": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9050": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9051": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9053": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "3"
    },
    "9054": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "3"
    },
    "9055": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9056": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 119
    },
    "9057": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9059": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9066": {
      "op": "SHL"
    },
    "9067": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9068": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9069": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9071": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "3"
    },
    "9072": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7AF"
    },
    "9075": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9076": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9077": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26AE"
    },
    "9080": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9081": {
      "op": "JUMPDEST"
    },
    "9082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9086": {
      "op": "DUP3"
    },
    "9087": {
      "op": "DUP5"
    },
    "9088": {
      "op": "SUB"
    },
    "9089": {
      "op": "SLT"
    },
    "9090": {
      "op": "ISZERO"
    },
    "9091": {
      "op": "PUSH2",
      "value": "0x238B"
    },
    "9094": {
      "op": "JUMPI"
    },
    "9095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9097": {
      "op": "DUP1"
    },
    "9098": {
      "op": "REVERT"
    },
    "9099": {
      "op": "JUMPDEST"
    },
    "9100": {
      "op": "POP"
    },
    "9101": {
      "op": "CALLDATALOAD"
    },
    "9102": {
      "op": "SWAP2"
    },
    "9103": {
      "op": "SWAP1"
    },
    "9104": {
      "op": "POP"
    },
    "9105": {
      "jump": "o",
      "op": "JUMP"
    },
    "9106": {
      "op": "JUMPDEST"
    },
    "9107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9113": {
      "op": "SHL"
    },
    "9114": {
      "op": "SUB"
    },
    "9115": {
      "op": "DUP2"
    },
    "9116": {
      "op": "AND"
    },
    "9117": {
      "op": "DUP2"
    },
    "9118": {
      "op": "EQ"
    },
    "9119": {
      "op": "PUSH2",
      "value": "0x1AFD"
    },
    "9122": {
      "op": "JUMPI"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9125": {
      "op": "DUP1"
    },
    "9126": {
      "op": "REVERT"
    },
    "9127": {
      "op": "JUMPDEST"
    },
    "9128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9130": {
      "op": "DUP1"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9133": {
      "op": "DUP1"
    },
    "9134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9136": {
      "op": "DUP1"
    },
    "9137": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9139": {
      "op": "DUP8"
    },
    "9140": {
      "op": "DUP10"
    },
    "9141": {
      "op": "SUB"
    },
    "9142": {
      "op": "SLT"
    },
    "9143": {
      "op": "ISZERO"
    },
    "9144": {
      "op": "PUSH2",
      "value": "0x23C0"
    },
    "9147": {
      "op": "JUMPI"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9150": {
      "op": "DUP1"
    },
    "9151": {
      "op": "REVERT"
    },
    "9152": {
      "op": "JUMPDEST"
    },
    "9153": {
      "op": "DUP7"
    },
    "9154": {
      "op": "CALLDATALOAD"
    },
    "9155": {
      "op": "SWAP6"
    },
    "9156": {
      "op": "POP"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9159": {
      "op": "DUP8"
    },
    "9160": {
      "op": "ADD"
    },
    "9161": {
      "op": "CALLDATALOAD"
    },
    "9162": {
      "op": "PUSH2",
      "value": "0x23D2"
    },
    "9165": {
      "op": "DUP2"
    },
    "9166": {
      "op": "PUSH2",
      "value": "0x2392"
    },
    "9169": {
      "jump": "i",
      "op": "JUMP"
    },
    "9170": {
      "op": "JUMPDEST"
    },
    "9171": {
      "op": "SWAP5"
    },
    "9172": {
      "op": "POP"
    },
    "9173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9175": {
      "op": "DUP8"
    },
    "9176": {
      "op": "ADD"
    },
    "9177": {
      "op": "CALLDATALOAD"
    },
    "9178": {
      "op": "PUSH2",
      "value": "0x23E2"
    },
    "9181": {
      "op": "DUP2"
    },
    "9182": {
      "op": "PUSH2",
      "value": "0x2392"
    },
    "9185": {
      "jump": "i",
      "op": "JUMP"
    },
    "9186": {
      "op": "JUMPDEST"
    },
    "9187": {
      "op": "SWAP4"
    },
    "9188": {
      "op": "POP"
    },
    "9189": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9191": {
      "op": "DUP8"
    },
    "9192": {
      "op": "ADD"
    },
    "9193": {
      "op": "CALLDATALOAD"
    },
    "9194": {
      "op": "PUSH2",
      "value": "0x23F2"
    },
    "9197": {
      "op": "DUP2"
    },
    "9198": {
      "op": "PUSH2",
      "value": "0x2392"
    },
    "9201": {
      "jump": "i",
      "op": "JUMP"
    },
    "9202": {
      "op": "JUMPDEST"
    },
    "9203": {
      "op": "SWAP6"
    },
    "9204": {
      "op": "SWAP9"
    },
    "9205": {
      "op": "SWAP5"
    },
    "9206": {
      "op": "SWAP8"
    },
    "9207": {
      "op": "POP"
    },
    "9208": {
      "op": "SWAP3"
    },
    "9209": {
      "op": "SWAP6"
    },
    "9210": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9212": {
      "op": "DUP2"
    },
    "9213": {
      "op": "ADD"
    },
    "9214": {
      "op": "CALLDATALOAD"
    },
    "9215": {
      "op": "SWAP5"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9218": {
      "op": "SWAP1"
    },
    "9219": {
      "op": "SWAP2"
    },
    "9220": {
      "op": "ADD"
    },
    "9221": {
      "op": "CALLDATALOAD"
    },
    "9222": {
      "op": "SWAP4"
    },
    "9223": {
      "op": "POP"
    },
    "9224": {
      "op": "SWAP2"
    },
    "9225": {
      "op": "POP"
    },
    "9226": {
      "op": "POP"
    },
    "9227": {
      "jump": "o",
      "op": "JUMP"
    },
    "9228": {
      "op": "JUMPDEST"
    },
    "9229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9233": {
      "op": "DUP3"
    },
    "9234": {
      "op": "DUP5"
    },
    "9235": {
      "op": "SUB"
    },
    "9236": {
      "op": "SLT"
    },
    "9237": {
      "op": "ISZERO"
    },
    "9238": {
      "op": "PUSH2",
      "value": "0x241E"
    },
    "9241": {
      "op": "JUMPI"
    },
    "9242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9244": {
      "op": "DUP1"
    },
    "9245": {
      "op": "REVERT"
    },
    "9246": {
      "op": "JUMPDEST"
    },
    "9247": {
      "op": "DUP2"
    },
    "9248": {
      "op": "CALLDATALOAD"
    },
    "9249": {
      "op": "PUSH2",
      "value": "0x20EA"
    },
    "9252": {
      "op": "DUP2"
    },
    "9253": {
      "op": "PUSH2",
      "value": "0x2392"
    },
    "9256": {
      "jump": "i",
      "op": "JUMP"
    },
    "9257": {
      "op": "JUMPDEST"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9260": {
      "op": "DUP1"
    },
    "9261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9263": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9265": {
      "op": "DUP5"
    },
    "9266": {
      "op": "DUP7"
    },
    "9267": {
      "op": "SUB"
    },
    "9268": {
      "op": "SLT"
    },
    "9269": {
      "op": "ISZERO"
    },
    "9270": {
      "op": "PUSH2",
      "value": "0x243E"
    },
    "9273": {
      "op": "JUMPI"
    },
    "9274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9276": {
      "op": "DUP1"
    },
    "9277": {
      "op": "REVERT"
    },
    "9278": {
      "op": "JUMPDEST"
    },
    "9279": {
      "op": "POP"
    },
    "9280": {
      "op": "POP"
    },
    "9281": {
      "op": "DUP2"
    },
    "9282": {
      "op": "CALLDATALOAD"
    },
    "9283": {
      "op": "SWAP4"
    },
    "9284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9286": {
      "op": "DUP4"
    },
    "9287": {
      "op": "ADD"
    },
    "9288": {
      "op": "CALLDATALOAD"
    },
    "9289": {
      "op": "SWAP4"
    },
    "9290": {
      "op": "POP"
    },
    "9291": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9293": {
      "op": "SWAP1"
    },
    "9294": {
      "op": "SWAP3"
    },
    "9295": {
      "op": "ADD"
    },
    "9296": {
      "op": "CALLDATALOAD"
    },
    "9297": {
      "op": "SWAP2"
    },
    "9298": {
      "op": "SWAP1"
    },
    "9299": {
      "op": "POP"
    },
    "9300": {
      "jump": "o",
      "op": "JUMP"
    },
    "9301": {
      "op": "JUMPDEST"
    },
    "9302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9304": {
      "op": "DUP1"
    },
    "9305": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9307": {
      "op": "DUP4"
    },
    "9308": {
      "op": "DUP6"
    },
    "9309": {
      "op": "SUB"
    },
    "9310": {
      "op": "SLT"
    },
    "9311": {
      "op": "ISZERO"
    },
    "9312": {
      "op": "PUSH2",
      "value": "0x2468"
    },
    "9315": {
      "op": "JUMPI"
    },
    "9316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9318": {
      "op": "DUP1"
    },
    "9319": {
      "op": "REVERT"
    },
    "9320": {
      "op": "JUMPDEST"
    },
    "9321": {
      "op": "POP"
    },
    "9322": {
      "op": "POP"
    },
    "9323": {
      "op": "DUP1"
    },
    "9324": {
      "op": "CALLDATALOAD"
    },
    "9325": {
      "op": "SWAP3"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9328": {
      "op": "SWAP1"
    },
    "9329": {
      "op": "SWAP2"
    },
    "9330": {
      "op": "ADD"
    },
    "9331": {
      "op": "CALLDATALOAD"
    },
    "9332": {
      "op": "SWAP2"
    },
    "9333": {
      "op": "POP"
    },
    "9334": {
      "jump": "o",
      "op": "JUMP"
    },
    "9335": {
      "op": "JUMPDEST"
    },
    "9336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9338": {
      "op": "DUP1"
    },
    "9339": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9341": {
      "op": "DUP4"
    },
    "9342": {
      "op": "DUP6"
    },
    "9343": {
      "op": "SUB"
    },
    "9344": {
      "op": "SLT"
    },
    "9345": {
      "op": "ISZERO"
    },
    "9346": {
      "op": "PUSH2",
      "value": "0x248A"
    },
    "9349": {
      "op": "JUMPI"
    },
    "9350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9352": {
      "op": "DUP1"
    },
    "9353": {
      "op": "REVERT"
    },
    "9354": {
      "op": "JUMPDEST"
    },
    "9355": {
      "op": "DUP3"
    },
    "9356": {
      "op": "CALLDATALOAD"
    },
    "9357": {
      "op": "PUSH2",
      "value": "0x2495"
    },
    "9360": {
      "op": "DUP2"
    },
    "9361": {
      "op": "PUSH2",
      "value": "0x2392"
    },
    "9364": {
      "jump": "i",
      "op": "JUMP"
    },
    "9365": {
      "op": "JUMPDEST"
    },
    "9366": {
      "op": "SWAP2"
    },
    "9367": {
      "op": "POP"
    },
    "9368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9370": {
      "op": "DUP4"
    },
    "9371": {
      "op": "ADD"
    },
    "9372": {
      "op": "CALLDATALOAD"
    },
    "9373": {
      "op": "PUSH2",
      "value": "0x24A5"
    },
    "9376": {
      "op": "DUP2"
    },
    "9377": {
      "op": "PUSH2",
      "value": "0x2392"
    },
    "9380": {
      "jump": "i",
      "op": "JUMP"
    },
    "9381": {
      "op": "JUMPDEST"
    },
    "9382": {
      "op": "DUP1"
    },
    "9383": {
      "op": "SWAP2"
    },
    "9384": {
      "op": "POP"
    },
    "9385": {
      "op": "POP"
    },
    "9386": {
      "op": "SWAP3"
    },
    "9387": {
      "op": "POP"
    },
    "9388": {
      "op": "SWAP3"
    },
    "9389": {
      "op": "SWAP1"
    },
    "9390": {
      "op": "POP"
    },
    "9391": {
      "jump": "o",
      "op": "JUMP"
    },
    "9392": {
      "op": "JUMPDEST"
    },
    "9393": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9398": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9400": {
      "op": "SHL"
    },
    "9401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9403": {
      "op": "MSTORE"
    },
    "9404": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9406": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9408": {
      "op": "MSTORE"
    },
    "9409": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9413": {
      "op": "REVERT"
    },
    "9414": {
      "op": "JUMPDEST"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9421": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9423": {
      "op": "SHL"
    },
    "9424": {
      "op": "SUB"
    },
    "9425": {
      "op": "DUP4"
    },
    "9426": {
      "op": "DUP2"
    },
    "9427": {
      "op": "AND"
    },
    "9428": {
      "op": "SWAP1"
    },
    "9429": {
      "op": "DUP4"
    },
    "9430": {
      "op": "AND"
    },
    "9431": {
      "op": "DUP2"
    },
    "9432": {
      "op": "DUP2"
    },
    "9433": {
      "op": "LT"
    },
    "9434": {
      "op": "ISZERO"
    },
    "9435": {
      "op": "PUSH2",
      "value": "0x24E6"
    },
    "9438": {
      "op": "JUMPI"
    },
    "9439": {
      "op": "PUSH2",
      "value": "0x24E6"
    },
    "9442": {
      "op": "PUSH2",
      "value": "0x24B0"
    },
    "9445": {
      "jump": "i",
      "op": "JUMP"
    },
    "9446": {
      "op": "JUMPDEST"
    },
    "9447": {
      "op": "SUB"
    },
    "9448": {
      "op": "SWAP4"
    },
    "9449": {
      "op": "SWAP3"
    },
    "9450": {
      "op": "POP"
    },
    "9451": {
      "op": "POP"
    },
    "9452": {
      "op": "POP"
    },
    "9453": {
      "jump": "o",
      "op": "JUMP"
    },
    "9454": {
      "op": "JUMPDEST"
    },
    "9455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9457": {
      "op": "DUP3"
    },
    "9458": {
      "op": "NOT"
    },
    "9459": {
      "op": "DUP3"
    },
    "9460": {
      "op": "GT"
    },
    "9461": {
      "op": "ISZERO"
    },
    "9462": {
      "op": "PUSH2",
      "value": "0x2501"
    },
    "9465": {
      "op": "JUMPI"
    },
    "9466": {
      "op": "PUSH2",
      "value": "0x2501"
    },
    "9469": {
      "op": "PUSH2",
      "value": "0x24B0"
    },
    "9472": {
      "jump": "i",
      "op": "JUMP"
    },
    "9473": {
      "op": "JUMPDEST"
    },
    "9474": {
      "op": "POP"
    },
    "9475": {
      "op": "ADD"
    },
    "9476": {
      "op": "SWAP1"
    },
    "9477": {
      "jump": "o",
      "op": "JUMP"
    },
    "9478": {
      "op": "JUMPDEST"
    },
    "9479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9483": {
      "op": "DUP3"
    },
    "9484": {
      "op": "DUP5"
    },
    "9485": {
      "op": "SUB"
    },
    "9486": {
      "op": "SLT"
    },
    "9487": {
      "op": "ISZERO"
    },
    "9488": {
      "op": "PUSH2",
      "value": "0x2518"
    },
    "9491": {
      "op": "JUMPI"
    },
    "9492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9494": {
      "op": "DUP1"
    },
    "9495": {
      "op": "REVERT"
    },
    "9496": {
      "op": "JUMPDEST"
    },
    "9497": {
      "op": "POP"
    },
    "9498": {
      "op": "MLOAD"
    },
    "9499": {
      "op": "SWAP2"
    },
    "9500": {
      "op": "SWAP1"
    },
    "9501": {
      "op": "POP"
    },
    "9502": {
      "jump": "o",
      "op": "JUMP"
    },
    "9503": {
      "op": "JUMPDEST"
    },
    "9504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9506": {
      "op": "DUP1"
    },
    "9507": {
      "op": "DUP3"
    },
    "9508": {
      "op": "MSTORE"
    },
    "9509": {
      "op": "DUP2"
    },
    "9510": {
      "op": "DUP2"
    },
    "9511": {
      "op": "ADD"
    },
    "9512": {
      "op": "MSTORE"
    },
    "9513": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "9546": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9548": {
      "op": "DUP3"
    },
    "9549": {
      "op": "ADD"
    },
    "9550": {
      "op": "MSTORE"
    },
    "9551": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9553": {
      "op": "ADD"
    },
    "9554": {
      "op": "SWAP1"
    },
    "9555": {
      "jump": "o",
      "op": "JUMP"
    },
    "9556": {
      "op": "JUMPDEST"
    },
    "9557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9559": {
      "op": "DUP3"
    },
    "9560": {
      "op": "DUP3"
    },
    "9561": {
      "op": "LT"
    },
    "9562": {
      "op": "ISZERO"
    },
    "9563": {
      "op": "PUSH2",
      "value": "0x2566"
    },
    "9566": {
      "op": "JUMPI"
    },
    "9567": {
      "op": "PUSH2",
      "value": "0x2566"
    },
    "9570": {
      "op": "PUSH2",
      "value": "0x24B0"
    },
    "9573": {
      "jump": "i",
      "op": "JUMP"
    },
    "9574": {
      "op": "JUMPDEST"
    },
    "9575": {
      "op": "POP"
    },
    "9576": {
      "op": "SUB"
    },
    "9577": {
      "op": "SWAP1"
    },
    "9578": {
      "jump": "o",
      "op": "JUMP"
    },
    "9579": {
      "op": "JUMPDEST"
    },
    "9580": {
      "op": "SWAP7"
    },
    "9581": {
      "op": "DUP8"
    },
    "9582": {
      "op": "MSTORE"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9589": {
      "op": "SHL"
    },
    "9590": {
      "op": "SUB"
    },
    "9591": {
      "op": "SWAP6"
    },
    "9592": {
      "op": "DUP7"
    },
    "9593": {
      "op": "AND"
    },
    "9594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9596": {
      "op": "DUP9"
    },
    "9597": {
      "op": "ADD"
    },
    "9598": {
      "op": "MSTORE"
    },
    "9599": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9601": {
      "op": "DUP8"
    },
    "9602": {
      "op": "ADD"
    },
    "9603": {
      "op": "SWAP5"
    },
    "9604": {
      "op": "SWAP1"
    },
    "9605": {
      "op": "SWAP5"
    },
    "9606": {
      "op": "MSTORE"
    },
    "9607": {
      "op": "SWAP2"
    },
    "9608": {
      "op": "SWAP1"
    },
    "9609": {
      "op": "SWAP4"
    },
    "9610": {
      "op": "AND"
    },
    "9611": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9613": {
      "op": "DUP6"
    },
    "9614": {
      "op": "ADD"
    },
    "9615": {
      "op": "MSTORE"
    },
    "9616": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9618": {
      "op": "DUP5"
    },
    "9619": {
      "op": "ADD"
    },
    "9620": {
      "op": "SWAP3"
    },
    "9621": {
      "op": "SWAP1"
    },
    "9622": {
      "op": "SWAP3"
    },
    "9623": {
      "op": "MSTORE"
    },
    "9624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9626": {
      "op": "DUP4"
    },
    "9627": {
      "op": "ADD"
    },
    "9628": {
      "op": "SWAP2"
    },
    "9629": {
      "op": "SWAP1"
    },
    "9630": {
      "op": "SWAP2"
    },
    "9631": {
      "op": "MSTORE"
    },
    "9632": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9634": {
      "op": "DUP3"
    },
    "9635": {
      "op": "ADD"
    },
    "9636": {
      "op": "MSTORE"
    },
    "9637": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9639": {
      "op": "ADD"
    },
    "9640": {
      "op": "SWAP1"
    },
    "9641": {
      "jump": "o",
      "op": "JUMP"
    },
    "9642": {
      "op": "JUMPDEST"
    },
    "9643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9645": {
      "op": "DUP2"
    },
    "9646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9648": {
      "op": "NOT"
    },
    "9649": {
      "op": "DIV"
    },
    "9650": {
      "op": "DUP4"
    },
    "9651": {
      "op": "GT"
    },
    "9652": {
      "op": "DUP3"
    },
    "9653": {
      "op": "ISZERO"
    },
    "9654": {
      "op": "ISZERO"
    },
    "9655": {
      "op": "AND"
    },
    "9656": {
      "op": "ISZERO"
    },
    "9657": {
      "op": "PUSH2",
      "value": "0x25C4"
    },
    "9660": {
      "op": "JUMPI"
    },
    "9661": {
      "op": "PUSH2",
      "value": "0x25C4"
    },
    "9664": {
      "op": "PUSH2",
      "value": "0x24B0"
    },
    "9667": {
      "jump": "i",
      "op": "JUMP"
    },
    "9668": {
      "op": "JUMPDEST"
    },
    "9669": {
      "op": "POP"
    },
    "9670": {
      "op": "MUL"
    },
    "9671": {
      "op": "SWAP1"
    },
    "9672": {
      "jump": "o",
      "op": "JUMP"
    },
    "9673": {
      "op": "JUMPDEST"
    },
    "9674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9676": {
      "op": "DUP3"
    },
    "9677": {
      "op": "PUSH2",
      "value": "0x25E6"
    },
    "9680": {
      "op": "JUMPI"
    },
    "9681": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9686": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9688": {
      "op": "SHL"
    },
    "9689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9691": {
      "op": "MSTORE"
    },
    "9692": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9694": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9696": {
      "op": "MSTORE"
    },
    "9697": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9701": {
      "op": "REVERT"
    },
    "9702": {
      "op": "JUMPDEST"
    },
    "9703": {
      "op": "POP"
    },
    "9704": {
      "op": "DIV"
    },
    "9705": {
      "op": "SWAP1"
    },
    "9706": {
      "jump": "o",
      "op": "JUMP"
    },
    "9707": {
      "op": "JUMPDEST"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9714": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9716": {
      "op": "SHL"
    },
    "9717": {
      "op": "SUB"
    },
    "9718": {
      "op": "DUP3"
    },
    "9719": {
      "op": "DUP2"
    },
    "9720": {
      "op": "AND"
    },
    "9721": {
      "op": "DUP5"
    },
    "9722": {
      "op": "DUP3"
    },
    "9723": {
      "op": "AND"
    },
    "9724": {
      "op": "DUP1"
    },
    "9725": {
      "op": "DUP4"
    },
    "9726": {
      "op": "SUB"
    },
    "9727": {
      "op": "DUP3"
    },
    "9728": {
      "op": "GT"
    },
    "9729": {
      "op": "ISZERO"
    },
    "9730": {
      "op": "PUSH2",
      "value": "0x260D"
    },
    "9733": {
      "op": "JUMPI"
    },
    "9734": {
      "op": "PUSH2",
      "value": "0x260D"
    },
    "9737": {
      "op": "PUSH2",
      "value": "0x24B0"
    },
    "9740": {
      "jump": "i",
      "op": "JUMP"
    },
    "9741": {
      "op": "JUMPDEST"
    },
    "9742": {
      "op": "ADD"
    },
    "9743": {
      "op": "SWAP5"
    },
    "9744": {
      "op": "SWAP4"
    },
    "9745": {
      "op": "POP"
    },
    "9746": {
      "op": "POP"
    },
    "9747": {
      "op": "POP"
    },
    "9748": {
      "op": "POP"
    },
    "9749": {
      "jump": "o",
      "op": "JUMP"
    },
    "9750": {
      "op": "JUMPDEST"
    },
    "9751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9753": {
      "op": "DUP1"
    },
    "9754": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9756": {
      "op": "DUP4"
    },
    "9757": {
      "op": "DUP6"
    },
    "9758": {
      "op": "SUB"
    },
    "9759": {
      "op": "SLT"
    },
    "9760": {
      "op": "ISZERO"
    },
    "9761": {
      "op": "PUSH2",
      "value": "0x2629"
    },
    "9764": {
      "op": "JUMPI"
    },
    "9765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9767": {
      "op": "DUP1"
    },
    "9768": {
      "op": "REVERT"
    },
    "9769": {
      "op": "JUMPDEST"
    },
    "9770": {
      "op": "DUP3"
    },
    "9771": {
      "op": "MLOAD"
    },
    "9772": {
      "op": "PUSH2",
      "value": "0x2634"
    },
    "9775": {
      "op": "DUP2"
    },
    "9776": {
      "op": "PUSH2",
      "value": "0x2392"
    },
    "9779": {
      "jump": "i",
      "op": "JUMP"
    },
    "9780": {
      "op": "JUMPDEST"
    },
    "9781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9783": {
      "op": "SWAP4"
    },
    "9784": {
      "op": "SWAP1"
    },
    "9785": {
      "op": "SWAP4"
    },
    "9786": {
      "op": "ADD"
    },
    "9787": {
      "op": "MLOAD"
    },
    "9788": {
      "op": "SWAP3"
    },
    "9789": {
      "op": "SWAP5"
    },
    "9790": {
      "op": "SWAP3"
    },
    "9791": {
      "op": "SWAP4"
    },
    "9792": {
      "op": "POP"
    },
    "9793": {
      "op": "POP"
    },
    "9794": {
      "op": "POP"
    },
    "9795": {
      "jump": "o",
      "op": "JUMP"
    },
    "9796": {
      "op": "JUMPDEST"
    },
    "9797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9801": {
      "op": "DUP3"
    },
    "9802": {
      "op": "DUP5"
    },
    "9803": {
      "op": "SUB"
    },
    "9804": {
      "op": "SLT"
    },
    "9805": {
      "op": "ISZERO"
    },
    "9806": {
      "op": "PUSH2",
      "value": "0x2656"
    },
    "9809": {
      "op": "JUMPI"
    },
    "9810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9812": {
      "op": "DUP1"
    },
    "9813": {
      "op": "REVERT"
    },
    "9814": {
      "op": "JUMPDEST"
    },
    "9815": {
      "op": "DUP2"
    },
    "9816": {
      "op": "MLOAD"
    },
    "9817": {
      "op": "DUP1"
    },
    "9818": {
      "op": "ISZERO"
    },
    "9819": {
      "op": "ISZERO"
    },
    "9820": {
      "op": "DUP2"
    },
    "9821": {
      "op": "EQ"
    },
    "9822": {
      "op": "PUSH2",
      "value": "0x20EA"
    },
    "9825": {
      "op": "JUMPI"
    },
    "9826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9828": {
      "op": "DUP1"
    },
    "9829": {
      "op": "REVERT"
    },
    "9830": {
      "op": "JUMPDEST"
    },
    "9831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9833": {
      "op": "JUMPDEST"
    },
    "9834": {
      "op": "DUP4"
    },
    "9835": {
      "op": "DUP2"
    },
    "9836": {
      "op": "LT"
    },
    "9837": {
      "op": "ISZERO"
    },
    "9838": {
      "op": "PUSH2",
      "value": "0x2681"
    },
    "9841": {
      "op": "JUMPI"
    },
    "9842": {
      "op": "DUP2"
    },
    "9843": {
      "op": "DUP2"
    },
    "9844": {
      "op": "ADD"
    },
    "9845": {
      "op": "MLOAD"
    },
    "9846": {
      "op": "DUP4"
    },
    "9847": {
      "op": "DUP3"
    },
    "9848": {
      "op": "ADD"
    },
    "9849": {
      "op": "MSTORE"
    },
    "9850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9852": {
      "op": "ADD"
    },
    "9853": {
      "op": "PUSH2",
      "value": "0x2669"
    },
    "9856": {
      "op": "JUMP"
    },
    "9857": {
      "op": "JUMPDEST"
    },
    "9858": {
      "op": "DUP4"
    },
    "9859": {
      "op": "DUP2"
    },
    "9860": {
      "op": "GT"
    },
    "9861": {
      "op": "ISZERO"
    },
    "9862": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "9865": {
      "op": "JUMPI"
    },
    "9866": {
      "op": "POP"
    },
    "9867": {
      "op": "POP"
    },
    "9868": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9870": {
      "op": "SWAP2"
    },
    "9871": {
      "op": "ADD"
    },
    "9872": {
      "op": "MSTORE"
    },
    "9873": {
      "jump": "o",
      "op": "JUMP"
    },
    "9874": {
      "op": "JUMPDEST"
    },
    "9875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9877": {
      "op": "DUP3"
    },
    "9878": {
      "op": "MLOAD"
    },
    "9879": {
      "op": "PUSH2",
      "value": "0x26A4"
    },
    "9882": {
      "op": "DUP2"
    },
    "9883": {
      "op": "DUP5"
    },
    "9884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9886": {
      "op": "DUP8"
    },
    "9887": {
      "op": "ADD"
    },
    "9888": {
      "op": "PUSH2",
      "value": "0x2666"
    },
    "9891": {
      "jump": "i",
      "op": "JUMP"
    },
    "9892": {
      "op": "JUMPDEST"
    },
    "9893": {
      "op": "SWAP2"
    },
    "9894": {
      "op": "SWAP1"
    },
    "9895": {
      "op": "SWAP2"
    },
    "9896": {
      "op": "ADD"
    },
    "9897": {
      "op": "SWAP3"
    },
    "9898": {
      "op": "SWAP2"
    },
    "9899": {
      "op": "POP"
    },
    "9900": {
      "op": "POP"
    },
    "9901": {
      "jump": "o",
      "op": "JUMP"
    },
    "9902": {
      "op": "JUMPDEST"
    },
    "9903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9905": {
      "op": "DUP2"
    },
    "9906": {
      "op": "MSTORE"
    },
    "9907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9909": {
      "op": "DUP3"
    },
    "9910": {
      "op": "MLOAD"
    },
    "9911": {
      "op": "DUP1"
    },
    "9912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9914": {
      "op": "DUP5"
    },
    "9915": {
      "op": "ADD"
    },
    "9916": {
      "op": "MSTORE"
    },
    "9917": {
      "op": "PUSH2",
      "value": "0x26CD"
    },
    "9920": {
      "op": "DUP2"
    },
    "9921": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9923": {
      "op": "DUP6"
    },
    "9924": {
      "op": "ADD"
    },
    "9925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9927": {
      "op": "DUP8"
    },
    "9928": {
      "op": "ADD"
    },
    "9929": {
      "op": "PUSH2",
      "value": "0x2666"
    },
    "9932": {
      "jump": "i",
      "op": "JUMP"
    },
    "9933": {
      "op": "JUMPDEST"
    },
    "9934": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9936": {
      "op": "ADD"
    },
    "9937": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9939": {
      "op": "NOT"
    },
    "9940": {
      "op": "AND"
    },
    "9941": {
      "op": "SWAP2"
    },
    "9942": {
      "op": "SWAP1"
    },
    "9943": {
      "op": "SWAP2"
    },
    "9944": {
      "op": "ADD"
    },
    "9945": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9947": {
      "op": "ADD"
    },
    "9948": {
      "op": "SWAP3"
    },
    "9949": {
      "op": "SWAP2"
    },
    "9950": {
      "op": "POP"
    },
    "9951": {
      "op": "POP"
    },
    "9952": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "59f9946e90b4d72531f340115aedb382b8727ffd",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol\";\n\nimport \"./BeamerUtils.sol\";\nimport \"./ResolutionRegistry.sol\";\n\n/// The request manager.\n///\n/// This contract is responsible for keeping track of transfer requests,\n/// implementing the rules of the challenge game and holding deposited\n/// tokens until they are withdrawn.\n///\n/// It is the only contract that agents need to interact with on the source chain.\ncontract RequestManager is Ownable {\n    using Math for uint256;\n    using SafeERC20 for IERC20;\n\n    // Structs\n    // TODO: check if we can use a smaller type for `targetChainId`, so that the\n    // fields can be packed into one storage slot\n    struct Request {\n        address sender;\n        address sourceTokenAddress;\n        uint256 targetChainId;\n        address targetTokenAddress;\n        address targetAddress;\n        uint256 amount;\n        BeamerUtils.FillInfo withdrawInfo;\n        uint192 activeClaims;\n        uint256 validUntil;\n        uint256 lpFee;\n        uint256 protocolFee;\n    }\n\n    struct Claim {\n        uint256 requestId;\n        address claimer;\n        uint256 claimerStake;\n        mapping(address => uint256) challengersStakes;\n        address lastChallenger;\n        uint256 challengerStakeTotal;\n        uint256 withdrawnAmount;\n        uint256 termination;\n        bytes32 fillId;\n    }\n\n    // Events\n\n    /// Emitted when a new request has been created.\n    ///\n    /// .. seealso:: :sol:func:`createRequest`\n    event RequestCreated(\n        uint256 requestId,\n        uint256 targetChainId,\n        address sourceTokenAddress,\n        address targetTokenAddress,\n        address targetAddress,\n        uint256 amount,\n        uint256 validUntil\n    );\n\n    /// Emitted when the token deposit for request ``requestId`` has been\n    /// transferred to the ``receiver``.\n    ///\n    /// This can happen in two cases:\n    ///\n    ///  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`\n    ///  * a claim related to the request has been resolved successfully in favor of the claimer\n    ///\n    /// .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`\n    event DepositWithdrawn(uint256 requestId, address receiver);\n\n    /// Emitted when a claim or a counter-claim (challenge) has been made.\n    ///\n    /// .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`\n    event ClaimMade(\n        uint256 indexed requestId,\n        uint256 claimId,\n        address claimer,\n        uint256 claimerStake,\n        address lastChallenger,\n        uint256 challengerStakeTotal,\n        uint256 termination,\n        bytes32 fillId\n    );\n\n    /// Emitted when staked native tokens tied to a claim have been withdrawn.\n    ///\n    /// This can only happen when the claim has been resolved and the caller\n    /// of :sol:func:`withdraw` is allowed to withdraw their stake.\n    ///\n    /// .. seealso:: :sol:func:`withdraw`\n    event ClaimStakeWithdrawn(\n        uint256 claimId,\n        uint256 indexed requestId,\n        address claimReceiver\n    );\n\n    event FinalityPeriodUpdated(uint256 targetChainId, uint256 finalityPeriod);\n\n    // Constants\n\n    /// The minimum amount of source chain's native token that the claimer needs to\n    /// provide when making a claim, as well in each round of the challenge game.\n    uint256 public claimStake;\n\n    /// The period for which the claim is valid.\n    uint256 public claimPeriod;\n\n    /// The period by which the termination time of a claim is extended after each\n    /// round of the challenge game. This period should allow enough time for the\n    /// other parties to counter-challenge.\n    ///\n    /// .. note::\n    ///\n    ///    The claim's termination time is extended only if it is less than the\n    ///    extension time.\n    ///\n    /// Note that in the first challenge round, i.e. the round initiated by the first\n    /// challenger, the termination time is extended additionally by the finality\n    /// period of the target chain. This is done to allow for L1 resolution.\n    uint256 public challengePeriodExtension;\n\n    /// The minimum validity period of a request.\n    uint256 public constant MIN_VALIDITY_PERIOD = 5 minutes;\n\n    /// The maximum validity period of a request.\n    uint256 public constant MAX_VALIDITY_PERIOD = 30 minutes;\n\n    // Variables\n\n    /// Indicates whether the contract is deprecated. A deprecated contract\n    /// cannot be used to create new requests.\n    bool public deprecated;\n\n    /// The request counter, used to generate request IDs.\n    uint256 public requestCounter;\n\n    /// The claim counter, used to generate claim IDs.\n    uint256 public claimCounter;\n\n    /// The resolution registry that is used to query for results of L1 resolution.\n    ResolutionRegistry public resolutionRegistry;\n\n    /// Maps target rollup chain IDs to finality periods.\n    /// Finality periods are in seconds.\n    mapping(uint256 => uint256) public finalityPeriods;\n\n    /// Maps request IDs to requests.\n    mapping(uint256 => Request) public requests;\n\n    /// Maps claim IDs to claims.\n    mapping(uint256 => Claim) public claims;\n\n    /// The minimum fee, denominated in transfer token, paid to the liquidity provider.\n    uint256 public minLpFee = 5 ether; // 5e18\n\n    /// Liquidity provider fee percentage, expressed in ppm (parts per million).\n    uint256 public lpFeePPM = 1_000; // 0.1% of the token amount being transferred\n\n    /// Protocol fee percentage, expressed in ppm (parts per million).\n    uint256 public protocolFeePPM = 0; // 0% of the token amount being transferred\n\n    /// The maximum amount of tokens that can be transferred in a single request.\n    uint256 public transferLimit = 10000 ether; // 10000e18\n\n    /// Maps ERC20 token addresses to related token amounts that belong to the protocol.\n    mapping(address => uint256) public collectedProtocolFees;\n\n    /// Compute the liquidy provider fee that needs to be paid for a given transfer amount.\n    function lpFee(uint256 amount) public view returns (uint256) {\n        return Math.max(minLpFee, (amount * lpFeePPM) / 1_000_000);\n    }\n\n    /// Compute the protocol fee that needs to be paid for a given transfer amount.\n    function protocolFee(uint256 amount) public view returns (uint256) {\n        return (amount * protocolFeePPM) / 1_000_000;\n    }\n\n    /// Compute the total fee that needs to be paid for a given transfer amount.\n    /// The total fee is the sum of the liquidity provider fee and the protocol fee.\n    function totalFee(uint256 amount) public view returns (uint256) {\n        return lpFee(amount) + protocolFee(amount);\n    }\n\n    // Modifiers\n\n    /// Check whether a given request ID is valid.\n    modifier validRequestId(uint256 requestId) {\n        require(\n            requestId <= requestCounter && requestId > 0,\n            \"requestId not valid\"\n        );\n        _;\n    }\n\n    /// Check whether a given claim ID is valid.\n    modifier validClaimId(uint256 claimId) {\n        require(claimId <= claimCounter && claimId > 0, \"claimId not valid\");\n        _;\n    }\n\n    /// Constructor.\n    ///\n    /// @param _claimStake Claim stake amount.\n    /// @param _claimPeriod Claim period, in seconds.\n    /// @param _challengePeriodExtension Challenge period extension, in seconds.\n    /// @param _resolutionRegistry Address of the resolution registry.\n    constructor(\n        uint256 _claimStake,\n        uint256 _claimPeriod,\n        uint256 _challengePeriodExtension,\n        address _resolutionRegistry\n    ) {\n        claimStake = _claimStake;\n        claimPeriod = _claimPeriod;\n        challengePeriodExtension = _challengePeriodExtension;\n        resolutionRegistry = ResolutionRegistry(_resolutionRegistry);\n    }\n\n    /// Create a new transfer request.\n    ///\n    /// @param targetChainId ID of the target chain.\n    /// @param sourceTokenAddress Address of the token contract on the source chain.\n    /// @param targetTokenAddress Address of the token contract on the target chain.\n    /// @param targetAddress Recipient address on the target chain.\n    /// @param amount Amount of tokens to transfer. Does not include fees.\n    /// @param validityPeriod The number of seconds the request is to be considered valid.\n    ///                       Once its validity period has elapsed, the request cannot be claimed\n    ///                       anymore and will eventually expire, allowing the request submitter\n    ///                       to withdraw the deposited tokens if there are no active claims.\n    /// @return ID of the newly created request.\n    function createRequest(\n        uint256 targetChainId,\n        address sourceTokenAddress,\n        address targetTokenAddress,\n        address targetAddress,\n        uint256 amount,\n        uint256 validityPeriod\n    ) external returns (uint256) {\n        require(deprecated == false, \"Contract is deprecated\");\n        require(\n            finalityPeriods[targetChainId] != 0,\n            \"Target rollup not supported\"\n        );\n        require(\n            validityPeriod >= MIN_VALIDITY_PERIOD,\n            \"Validity period too short\"\n        );\n        require(\n            validityPeriod <= MAX_VALIDITY_PERIOD,\n            \"Validity period too long\"\n        );\n        require(amount <= transferLimit, \"Amount exceeds transfer limit\");\n\n        IERC20 token = IERC20(sourceTokenAddress);\n\n        uint256 lpFee = lpFee(amount);\n        uint256 protocolFee = protocolFee(amount);\n        uint256 totalTokenAmount = amount + lpFee + protocolFee;\n\n        require(\n            token.allowance(msg.sender, address(this)) >= totalTokenAmount,\n            \"Insufficient allowance\"\n        );\n\n        requestCounter += 1;\n        Request storage newRequest = requests[requestCounter];\n        newRequest.sender = msg.sender;\n        newRequest.sourceTokenAddress = sourceTokenAddress;\n        newRequest.targetChainId = targetChainId;\n        newRequest.targetTokenAddress = targetTokenAddress;\n        newRequest.targetAddress = targetAddress;\n        newRequest.amount = amount;\n        newRequest.withdrawInfo = BeamerUtils.FillInfo(address(0), bytes32(0));\n        newRequest.validUntil = block.timestamp + validityPeriod;\n        newRequest.lpFee = lpFee;\n        newRequest.protocolFee = protocolFee;\n\n        emit RequestCreated(\n            requestCounter,\n            targetChainId,\n            sourceTokenAddress,\n            targetTokenAddress,\n            targetAddress,\n            amount,\n            newRequest.validUntil\n        );\n\n        token.safeTransferFrom(msg.sender, address(this), totalTokenAmount);\n\n        return requestCounter;\n    }\n\n    /// Withdraw funds deposited with an expired request.\n    ///\n    /// No claims must be active for the request.\n    ///\n    /// @param requestId ID of the expired request.\n    function withdrawExpiredRequest(uint256 requestId)\n        external\n        validRequestId(requestId)\n    {\n        Request storage request = requests[requestId];\n\n        require(\n            request.withdrawInfo.filler == address(0),\n            \"Deposit already withdrawn\"\n        );\n        require(\n            block.timestamp >= request.validUntil,\n            \"Request not expired yet\"\n        );\n        require(request.activeClaims == 0, \"Active claims running\");\n\n        request.withdrawInfo.filler = request.sender;\n\n        emit DepositWithdrawn(requestId, request.sender);\n\n        IERC20 token = IERC20(request.sourceTokenAddress);\n        token.safeTransfer(\n            request.sender,\n            request.amount + request.lpFee + request.protocolFee\n        );\n    }\n\n    /// Claim that a request was filled by the caller.\n    ///\n    /// The request must still be valid at call time.\n    /// The caller must provide the ``claimStake`` amount of source rollup's native\n    /// token.\n    ///\n    /// @param requestId ID of the request.\n    /// @param fillId The fill ID.\n    /// @return The claim ID.\n    function claimRequest(uint256 requestId, bytes32 fillId)\n        external\n        payable\n        validRequestId(requestId)\n        returns (uint256)\n    {\n        Request storage request = requests[requestId];\n\n        require(block.timestamp < request.validUntil, \"Request expired\");\n        require(\n            request.withdrawInfo.filler == address(0),\n            \"Deposit already withdrawn\"\n        );\n        require(msg.value == claimStake, \"Invalid stake amount\");\n        require(fillId != bytes32(0), \"FillId must not be 0x0\");\n\n        request.activeClaims += 1;\n        claimCounter += 1;\n\n        Claim storage claim = claims[claimCounter];\n        claim.requestId = requestId;\n        claim.claimer = msg.sender;\n        claim.claimerStake = claimStake;\n        claim.lastChallenger = address(0);\n        claim.challengerStakeTotal = 0;\n        claim.withdrawnAmount = 0;\n        claim.termination = block.timestamp + claimPeriod;\n        claim.fillId = fillId;\n\n        emit ClaimMade(\n            requestId,\n            claimCounter,\n            claim.claimer,\n            claim.claimerStake,\n            claim.lastChallenger,\n            claim.challengerStakeTotal,\n            claim.termination,\n            fillId\n        );\n\n        return claimCounter;\n    }\n\n    /// Challenge an existing claim.\n    ///\n    /// The claim must still be valid at call time.\n    /// This function implements one round of the challenge game.\n    /// The original claimer is allowed to call this function only\n    /// after someone else made a challenge, i.e. every second round.\n    /// However, once the original claimer counter-challenges, anyone\n    /// can join the game and make another challenge.\n    ///\n    /// The caller must provide enough native tokens as their stake.\n    /// For the original claimer, the minimum stake is\n    /// ``challengerStakeTotal - claimerStake + claimStake``.\n    ///\n    /// For challengers, the minimum stake is\n    /// ``claimerStake - challengerStakeTotal + 1``.\n    ///\n    /// An example (time flows downwards, claimStake = 10)::\n    ///\n    ///   claimRequest() by Max [stakes 10]\n    ///   challengeClaim() by Alice [stakes 11]\n    ///   challengeClaim() by Max [stakes 11]\n    ///   challengeClaim() by Bob [stakes 16]\n    ///\n    /// In this example, if Max didn't want to lose the challenge game to\n    /// Alice and Bob, he would have to challenge with a stake of at least 16.\n    ///\n    /// @param claimId The claim ID.\n    function challengeClaim(uint256 claimId)\n        external\n        payable\n        validClaimId(claimId)\n    {\n        Claim storage claim = claims[claimId];\n        Request storage request = requests[claim.requestId];\n        require(block.timestamp < claim.termination, \"Claim expired\");\n\n        address nextActor;\n        uint256 minValue;\n        uint256 periodExtension = challengePeriodExtension;\n        uint256 claimerStake = claim.claimerStake;\n        uint256 challengerStakeTotal = claim.challengerStakeTotal;\n\n        if (claimerStake > challengerStakeTotal) {\n            if (challengerStakeTotal == 0) {\n                periodExtension += finalityPeriods[request.targetChainId];\n            }\n            require(claim.claimer != msg.sender, \"Cannot challenge own claim\");\n            nextActor = msg.sender;\n            minValue = claimerStake - challengerStakeTotal + 1;\n        } else {\n            nextActor = claim.claimer;\n            minValue = challengerStakeTotal - claimerStake + claimStake;\n        }\n\n        require(msg.sender == nextActor, \"Not eligible to outbid\");\n        require(msg.value >= minValue, \"Not enough stake provided\");\n\n        if (nextActor == claim.claimer) {\n            claim.claimerStake += msg.value;\n        } else {\n            claim.lastChallenger = msg.sender;\n            claim.challengersStakes[msg.sender] += msg.value;\n            claim.challengerStakeTotal += msg.value;\n        }\n\n        claim.termination = Math.max(\n            claim.termination,\n            block.timestamp + periodExtension\n        );\n        uint256 minimumTermination = block.timestamp + challengePeriodExtension;\n        require(\n            claim.termination >= minimumTermination,\n            \"Claim termination did not increase enough\"\n        );\n\n        emit ClaimMade(\n            claim.requestId,\n            claimId,\n            claim.claimer,\n            claim.claimerStake,\n            claim.lastChallenger,\n            claim.challengerStakeTotal,\n            claim.termination,\n            claim.fillId\n        );\n    }\n\n    /// Withdraw the deposit that the request submitter left with the contract,\n    /// as well as the staked native tokens associated with the claim.\n    ///\n    /// In case the caller of this function is a challenger that won the game,\n    /// they will only get their staked native tokens plus the reward in the form\n    /// of full (sole challenger) or partial (multiple challengers) amount\n    /// of native tokens staked by the dishonest claimer.\n    ///\n    /// @param claimId The claim ID.\n    /// @return The address of the deposit receiver.\n    function withdraw(uint256 claimId)\n        external\n        validClaimId(claimId)\n        returns (address)\n    {\n        Claim storage claim = claims[claimId];\n        Request storage request = requests[claim.requestId];\n\n        (address claimReceiver, uint256 ethToTransfer) = resolveClaim(claimId);\n\n        if (claim.challengersStakes[claimReceiver] > 0) {\n            //Re-entrancy protection\n            claim.challengersStakes[claimReceiver] = 0;\n        }\n\n        // First time withdraw is called, remove it from active claims\n        if (claim.withdrawnAmount == 0) {\n            request.activeClaims -= 1;\n        }\n        claim.withdrawnAmount += ethToTransfer;\n        require(\n            claim.withdrawnAmount <=\n                claim.claimerStake + claim.challengerStakeTotal,\n            \"Amount to withdraw too large\"\n        );\n\n        (bool sent, ) = claimReceiver.call{value: ethToTransfer}(\"\");\n        require(sent, \"Failed to send Ether\");\n\n        emit ClaimStakeWithdrawn(claimId, claim.requestId, claimReceiver);\n\n        if (\n            request.withdrawInfo.filler == address(0) &&\n            claimReceiver == claim.claimer\n        ) {\n            withdrawDeposit(request, claim);\n        }\n\n        return claimReceiver;\n    }\n\n    function resolveClaim(uint256 claimId)\n        private\n        view\n        returns (address, uint256)\n    {\n        Claim storage claim = claims[claimId];\n        Request storage request = requests[claim.requestId];\n        uint256 claimerStake = claim.claimerStake;\n        uint256 challengerStakeTotal = claim.challengerStakeTotal;\n        require(\n            claim.withdrawnAmount < claimerStake + challengerStakeTotal,\n            \"Claim already withdrawn\"\n        );\n\n        bytes32 requestHash = BeamerUtils.createRequestHash(\n            claim.requestId,\n            block.chainid,\n            request.targetChainId,\n            request.targetTokenAddress,\n            request.targetAddress,\n            request.amount\n        );\n\n        bytes32 fillHash = BeamerUtils.createFillHash(\n            requestHash,\n            claim.fillId\n        );\n\n        bool claimValid = false;\n        BeamerUtils.FillInfo memory withdrawInfo = request.withdrawInfo;\n\n        // Priority list for validity check of claim\n        // Claim is valid if either\n        // 1) ResolutionRegistry entry in fillers, claimer is the filler\n        // 2) ResolutionRegistry entry in invalidFillHashes, claim is invalid\n        // 3) Request.withdrawInfo, the claimer withdrew with an identical claim (same fill id)\n        // 4) Claim properties, claim terminated and claimer has the highest stake\n        (address filler, bytes32 fillId) = resolutionRegistry.fillers(\n            requestHash\n        );\n\n        if (filler == address(0)) {\n            (filler, fillId) = (withdrawInfo.filler, withdrawInfo.fillId);\n        }\n\n        if (resolutionRegistry.invalidFillHashes(fillHash)) {\n            // Claim resolution via 2)\n            claimValid = false;\n        } else if (filler != address(0)) {\n            // Claim resolution via 1) or 3)\n            claimValid = filler == claim.claimer && fillId == claim.fillId;\n        } else {\n            // Claim resolution via 4)\n            require(\n                block.timestamp >= claim.termination,\n                \"Claim period not finished\"\n            );\n            claimValid = claimerStake > challengerStakeTotal;\n        }\n\n        // Calculate withdraw scheme for claim stakes\n        uint256 ethToTransfer;\n        address claimReceiver;\n\n        if (claimValid) {\n            // If claim is valid, all stakes go to the claimer\n            ethToTransfer = claimerStake + challengerStakeTotal;\n            claimReceiver = claim.claimer;\n        } else if (challengerStakeTotal > 0) {\n            // If claim is invalid, partial withdrawal by the sender\n            ethToTransfer = 2 * claim.challengersStakes[msg.sender];\n            claimReceiver = msg.sender;\n\n            require(ethToTransfer > 0, \"Challenger has nothing to withdraw\");\n        } else {\n            // The unlikely event is possible that a false claim has no challenger\n            // If it is known that the claim is false then the claim stake goes to the platform\n            ethToTransfer = claimerStake;\n            claimReceiver = owner();\n        }\n\n        // If the challenger wins and is the last challenger, he gets either\n        // twice his stake plus the excess stake (if the claimer was winning), or\n        // twice his stake minus the difference between the claimer and challenger stakes (if the claimer was losing)\n        if (msg.sender == claim.lastChallenger) {\n            if (claimerStake > challengerStakeTotal) {\n                ethToTransfer += (claimerStake - challengerStakeTotal);\n            } else {\n                ethToTransfer -= (challengerStakeTotal - claimerStake);\n            }\n        }\n\n        return (claimReceiver, ethToTransfer);\n    }\n\n    function withdrawDeposit(Request storage request, Claim storage claim)\n        private\n    {\n        address claimer = claim.claimer;\n        emit DepositWithdrawn(claim.requestId, claimer);\n\n        request.withdrawInfo = BeamerUtils.FillInfo(claimer, claim.fillId);\n\n        collectedProtocolFees[request.sourceTokenAddress] += request\n            .protocolFee;\n\n        IERC20 token = IERC20(request.sourceTokenAddress);\n        token.safeTransfer(claimer, request.amount + request.lpFee);\n    }\n\n    /// Withdraw protocol fees collected by the contract.\n    ///\n    /// Protocol fees are paid in token transferred.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param tokenAddress The address of the token contract.\n    /// @param recipient The address the fees should be sent to.\n    function withdrawProtocolFees(address tokenAddress, address recipient)\n        external\n        onlyOwner\n    {\n        uint256 amount = collectedProtocolFees[tokenAddress];\n        require(amount > 0, \"Protocol fee is zero\");\n        collectedProtocolFees[tokenAddress] = 0;\n\n        IERC20 token = IERC20(tokenAddress);\n        token.safeTransfer(recipient, amount);\n    }\n\n    /// Update fee parameters.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param newProtocolFeePPM The new value for ``protocolFeePPM``.\n    /// @param newLpFeePPM The new value for ``lpFeePPM``.\n    /// @param newMinLpFee The new value for ``minLpFee``.\n    function updateFeeData(\n        uint256 newProtocolFeePPM,\n        uint256 newLpFeePPM,\n        uint256 newMinLpFee\n    ) external onlyOwner {\n        protocolFeePPM = newProtocolFeePPM;\n        lpFeePPM = newLpFeePPM;\n        minLpFee = newMinLpFee;\n    }\n\n    /// Update the transfer amount limit.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param newTransferLimit The new value for ``transferLimit``.\n    function updateTransferLimit(uint256 newTransferLimit) external onlyOwner {\n        transferLimit = newTransferLimit;\n    }\n\n    /// Set the finality period for the given target chain.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param targetChainId The target chain ID.\n    /// @param finalityPeriod Finality period in seconds.\n    function setFinalityPeriod(uint256 targetChainId, uint256 finalityPeriod)\n        external\n        onlyOwner\n    {\n        require(finalityPeriod > 0, \"Finality period must be greater than 0\");\n        finalityPeriods[targetChainId] = finalityPeriod;\n\n        emit FinalityPeriodUpdated(targetChainId, finalityPeriod);\n    }\n\n    /// Mark the contract as deprecated.\n    ///\n    /// Once the contract is deprecated, it cannot be used to create new\n    /// requests anymore. Withdrawing deposited funds and claim stakes\n    /// still works, though.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    function deprecateContract() external onlyOwner {\n        require(deprecated == false, \"Contract already deprecated\");\n        deprecated = true;\n    }\n}\n",
  "sourceMap": "762:24766:8:-:0;;;5590:7;5564:33;;5719:5;5693:31;;5880:1;5848:33;;6045:11;6014:42;;7702:366;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;7869:10:8;:24;;;;7903:11;:26;;;;7939:24;:52;8001:18;:60;;-1:-1:-1;;;;;;8001:60:8;-1:-1:-1;;;;;8001:60:8;;;;;;;;;762:24766;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:474:11:-;111:6;119;127;135;188:3;176:9;167:7;163:23;159:33;156:53;;;205:1;202;195:12;156:53;228:16;;284:2;269:18;;263:25;328:2;313:18;;307:25;375:2;360:18;;354:25;228:16;;-1:-1:-1;263:25:11;;-1:-1:-1;307:25:11;-1:-1:-1;;;;;;408:31:11;;398:42;;388:70;;454:1;451;444:12;388:70;14:474;;;;-1:-1:-1;14:474:11;;-1:-1:-1;;14:474:11:o;:::-;762:24766:8;;;;;;",
  "sourcePath": "contracts/contracts/RequestManager.sol",
  "type": "contract"
}