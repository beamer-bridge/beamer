{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_claimStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_claimPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_challengePeriodExtension",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_resolutionRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimerStake",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lastChallenger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "challengerStakeTotal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "termination",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "ClaimMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimReceiver",
          "type": "address"
        }
      ],
      "name": "ClaimStakeWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "DepositWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "finalityPeriod",
          "type": "uint256"
        }
      ],
      "name": "FinalityPeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "validUntil",
          "type": "uint256"
        }
      ],
      "name": "RequestCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_VALIDITY_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VALIDITY_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "challengeClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengePeriodExtension",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "claimRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claimerStake",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lastChallenger",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "challengerStakeTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawnAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "termination",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collectedProtocolFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validityPeriod",
          "type": "uint256"
        }
      ],
      "name": "createRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deprecateContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deprecated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "finalityPeriods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpFeePPM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minLpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeePPM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requests",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "filler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "fillId",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BeamerUtils.FillInfo",
          "name": "withdrawInfo",
          "type": "tuple"
        },
        {
          "internalType": "uint192",
          "name": "activeClaims",
          "type": "uint192"
        },
        {
          "internalType": "uint256",
          "name": "validUntil",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lpFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resolutionRegistry",
      "outputs": [
        {
          "internalType": "contract ResolutionRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "finalityPeriod",
          "type": "uint256"
        }
      ],
      "name": "setFinalityPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "totalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProtocolFeePPM",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newLpFeePPM",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newMinLpFee",
          "type": "uint256"
        }
      ],
      "name": "updateFeeData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newTransferLimit",
          "type": "uint256"
        }
      ],
      "name": "updateTransferLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "withdrawExpiredRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawProtocolFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "12": "contracts/contracts/RequestManager.sol",
    "13": "contracts/contracts/ResolutionRegistry.sol",
    "2": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "4": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "5": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "6": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "7": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
    "8": "contracts/contracts/BeamerUtils.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/RequestManager.sol",
    "exportedSymbols": {
      "Address": [
        4394
      ],
      "BeamerUtils": [
        87
      ],
      "Context": [
        4099
      ],
      "CrossDomainRestrictedCalls": [
        192
      ],
      "IERC20": [
        3141
      ],
      "IMessenger": [
        3063
      ],
      "Math": [
        4077
      ],
      "Ownable": [
        3037
      ],
      "RequestManager": [
        2018
      ],
      "ResolutionRegistry": [
        2168
      ],
      "SafeERC20": [
        3365
      ]
    },
    "id": 2019,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 503,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:12"
      },
      {
        "absolutePath": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "id": 504,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2019,
        "sourceUnit": 3142,
        "src": "58:84:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 505,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2019,
        "sourceUnit": 3366,
        "src": "143:93:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
        "id": 506,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2019,
        "sourceUnit": 4078,
        "src": "237:81:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "id": 507,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2019,
        "sourceUnit": 3038,
        "src": "319:80:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/BeamerUtils.sol",
        "file": "./BeamerUtils.sol",
        "id": 508,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2019,
        "sourceUnit": 88,
        "src": "401:27:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/ResolutionRegistry.sol",
        "file": "./ResolutionRegistry.sol",
        "id": 509,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2019,
        "sourceUnit": 2169,
        "src": "429:34:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 511,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3037,
              "src": "789:7:12"
            },
            "id": 512,
            "nodeType": "InheritanceSpecifier",
            "src": "789:7:12"
          }
        ],
        "canonicalName": "RequestManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 510,
          "nodeType": "StructuredDocumentation",
          "src": "465:297:12",
          "text": "The request manager.\n This contract is responsible for keeping track of transfer requests,\n implementing the rules of the challenge game and holding deposited\n tokens until they are withdrawn.\n It is the only contract that agents need to interact with on the source chain."
        },
        "fullyImplemented": true,
        "id": 2018,
        "linearizedBaseContracts": [
          2018,
          3037,
          4099
        ],
        "name": "RequestManager",
        "nameLocation": "771:14:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 515,
            "libraryName": {
              "id": 513,
              "name": "Math",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4077,
              "src": "809:4:12"
            },
            "nodeType": "UsingForDirective",
            "src": "803:23:12",
            "typeName": {
              "id": 514,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "818:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "global": false,
            "id": 519,
            "libraryName": {
              "id": 516,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3365,
              "src": "837:9:12"
            },
            "nodeType": "UsingForDirective",
            "src": "831:27:12",
            "typeName": {
              "id": 518,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 517,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3141,
                "src": "851:6:12"
              },
              "referencedDeclaration": 3141,
              "src": "851:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3141",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "RequestManager.Request",
            "id": 543,
            "members": [
              {
                "constant": false,
                "id": 521,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "1043:6:12",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "1035:14:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 520,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1035:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 523,
                "mutability": "mutable",
                "name": "sourceTokenAddress",
                "nameLocation": "1067:18:12",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "1059:26:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 522,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1059:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 525,
                "mutability": "mutable",
                "name": "targetChainId",
                "nameLocation": "1103:13:12",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "1095:21:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 524,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1095:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 527,
                "mutability": "mutable",
                "name": "targetTokenAddress",
                "nameLocation": "1134:18:12",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "1126:26:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 526,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1126:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 529,
                "mutability": "mutable",
                "name": "targetAddress",
                "nameLocation": "1170:13:12",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "1162:21:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 528,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1162:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 531,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1201:6:12",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "1193:14:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 530,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1193:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 534,
                "mutability": "mutable",
                "name": "withdrawInfo",
                "nameLocation": "1238:12:12",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "1217:33:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FillInfo_$6_storage_ptr",
                  "typeString": "struct BeamerUtils.FillInfo"
                },
                "typeName": {
                  "id": 533,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 532,
                    "name": "BeamerUtils.FillInfo",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 6,
                    "src": "1217:20:12"
                  },
                  "referencedDeclaration": 6,
                  "src": "1217:20:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FillInfo_$6_storage_ptr",
                    "typeString": "struct BeamerUtils.FillInfo"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 536,
                "mutability": "mutable",
                "name": "activeClaims",
                "nameLocation": "1268:12:12",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "1260:20:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint192",
                  "typeString": "uint192"
                },
                "typeName": {
                  "id": 535,
                  "name": "uint192",
                  "nodeType": "ElementaryTypeName",
                  "src": "1260:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint192",
                    "typeString": "uint192"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 538,
                "mutability": "mutable",
                "name": "validUntil",
                "nameLocation": "1298:10:12",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "1290:18:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 537,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1290:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 540,
                "mutability": "mutable",
                "name": "lpFee",
                "nameLocation": "1326:5:12",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "1318:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 539,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1318:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 542,
                "mutability": "mutable",
                "name": "protocolFee",
                "nameLocation": "1349:11:12",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "1341:19:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 541,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1341:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Request",
            "nameLocation": "1017:7:12",
            "nodeType": "StructDefinition",
            "scope": 2018,
            "src": "1010:357:12",
            "visibility": "public"
          },
          {
            "canonicalName": "RequestManager.Claim",
            "id": 564,
            "members": [
              {
                "constant": false,
                "id": 545,
                "mutability": "mutable",
                "name": "requestId",
                "nameLocation": "1404:9:12",
                "nodeType": "VariableDeclaration",
                "scope": 564,
                "src": "1396:17:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 544,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1396:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 547,
                "mutability": "mutable",
                "name": "claimer",
                "nameLocation": "1431:7:12",
                "nodeType": "VariableDeclaration",
                "scope": 564,
                "src": "1423:15:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 546,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1423:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 549,
                "mutability": "mutable",
                "name": "claimerStake",
                "nameLocation": "1456:12:12",
                "nodeType": "VariableDeclaration",
                "scope": 564,
                "src": "1448:20:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 548,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1448:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 553,
                "mutability": "mutable",
                "name": "challengersStakes",
                "nameLocation": "1506:17:12",
                "nodeType": "VariableDeclaration",
                "scope": 564,
                "src": "1478:45:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 552,
                  "keyType": {
                    "id": 550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1478:27:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 555,
                "mutability": "mutable",
                "name": "lastChallenger",
                "nameLocation": "1541:14:12",
                "nodeType": "VariableDeclaration",
                "scope": 564,
                "src": "1533:22:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 554,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1533:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 557,
                "mutability": "mutable",
                "name": "challengerStakeTotal",
                "nameLocation": "1573:20:12",
                "nodeType": "VariableDeclaration",
                "scope": 564,
                "src": "1565:28:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 556,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1565:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 559,
                "mutability": "mutable",
                "name": "withdrawnAmount",
                "nameLocation": "1611:15:12",
                "nodeType": "VariableDeclaration",
                "scope": 564,
                "src": "1603:23:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 558,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1603:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 561,
                "mutability": "mutable",
                "name": "termination",
                "nameLocation": "1644:11:12",
                "nodeType": "VariableDeclaration",
                "scope": 564,
                "src": "1636:19:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 560,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1636:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 563,
                "mutability": "mutable",
                "name": "fillId",
                "nameLocation": "1673:6:12",
                "nodeType": "VariableDeclaration",
                "scope": 564,
                "src": "1665:14:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 562,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1665:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nameLocation": "1380:5:12",
            "nodeType": "StructDefinition",
            "scope": 2018,
            "src": "1373:313:12",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 565,
              "nodeType": "StructuredDocumentation",
              "src": "1707:103:12",
              "text": "Emitted when a new request has been created.\n .. seealso:: :sol:func:`createRequest`"
            },
            "eventSelector": "18a412d0656b9a5c9263a134f66a34da33cad7c3690971601f9963ade588e701",
            "id": 581,
            "name": "RequestCreated",
            "nameLocation": "1821:14:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1853:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "1845:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1845:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 569,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "1880:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "1872:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 571,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceTokenAddress",
                  "nameLocation": "1911:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "1903:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1903:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 573,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "1947:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "1939:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 575,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "1983:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "1975:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 577,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2014:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "2006:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 579,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "2038:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "2030:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1835:219:12"
            },
            "src": "1815:240:12"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 582,
              "nodeType": "StructuredDocumentation",
              "src": "2061:445:12",
              "text": "Emitted when the token deposit for request ``requestId`` has been\n transferred to the ``receiver``.\n This can happen in two cases:\n  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`\n  * a claim related to the request has been resolved successfully in favor of the claimer\n .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`"
            },
            "eventSelector": "a7b86597910aae75f7d99feb2f37420cc80d457465ffba0f8136d722a9f7095a",
            "id": 588,
            "name": "DepositWithdrawn",
            "nameLocation": "2517:16:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2542:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "2534:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2534:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 586,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2561:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "2553:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2553:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2533:37:12"
            },
            "src": "2511:60:12"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 589,
              "nodeType": "StructuredDocumentation",
              "src": "2577:151:12",
              "text": "Emitted when a claim or a counter-claim (challenge) has been made.\n .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`"
            },
            "eventSelector": "29fd2df293ba511e44ca47212c915137020231ed3ac0ee7bd02a7a655275ad37",
            "id": 607,
            "name": "ClaimMade",
            "nameLocation": "2739:9:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2774:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "2758:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 593,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "2801:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "2793:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2793:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 595,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "2826:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "2818:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2818:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 597,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimerStake",
                  "nameLocation": "2851:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "2843:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2843:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 599,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastChallenger",
                  "nameLocation": "2881:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "2873:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "challengerStakeTotal",
                  "nameLocation": "2913:20:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "2905:28:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "termination",
                  "nameLocation": "2951:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "2943:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2943:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 605,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "2980:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "2972:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2972:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2748:244:12"
            },
            "src": "2733:260:12"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 608,
              "nodeType": "StructuredDocumentation",
              "src": "2999:277:12",
              "text": "Emitted when staked native tokens tied to a claim have been withdrawn.\n This can only happen when the claim has been resolved and the caller\n of :sol:func:`withdraw` is allowed to withdraw their stake.\n .. seealso:: :sol:func:`withdraw`"
            },
            "eventSelector": "5b0aec51a74bf236e8fa08bcb2e303068c7ac1aed3ca410d25b8dad27538d73c",
            "id": 616,
            "name": "ClaimStakeWithdrawn",
            "nameLocation": "3287:19:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 610,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "3324:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "3316:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3316:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 612,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3357:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "3341:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3341:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 614,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimReceiver",
                  "nameLocation": "3384:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "3376:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3306:97:12"
            },
            "src": "3281:123:12"
          },
          {
            "anonymous": false,
            "eventSelector": "aba57b48b9f1dfd5747a52ed348a6ab6aa7bafb0575363a5cb7b62659f727b65",
            "id": 622,
            "name": "FinalityPeriodUpdated",
            "nameLocation": "3416:21:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "3446:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "3438:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3438:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 620,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "finalityPeriod",
                  "nameLocation": "3469:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "3461:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3461:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3437:47:12"
            },
            "src": "3410:75:12"
          },
          {
            "constant": false,
            "documentation": {
              "id": 623,
              "nodeType": "StructuredDocumentation",
              "src": "3509:161:12",
              "text": "The minimum amount of source chain's native token that the claimer needs to\n provide when making a claim, as well in each round of the challenge game."
            },
            "functionSelector": "eb321173",
            "id": 625,
            "mutability": "mutable",
            "name": "claimStake",
            "nameLocation": "3690:10:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "3675:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 624,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3675:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 626,
              "nodeType": "StructuredDocumentation",
              "src": "3707:44:12",
              "text": "The period for which the claim is valid."
            },
            "functionSelector": "7dc2cd98",
            "id": 628,
            "mutability": "mutable",
            "name": "claimPeriod",
            "nameLocation": "3771:11:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "3756:26:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 627,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3756:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 629,
              "nodeType": "StructuredDocumentation",
              "src": "3789:598:12",
              "text": "The period by which the termination time of a claim is extended after each\n round of the challenge game. This period should allow enough time for the\n other parties to counter-challenge.\n .. note::\n    The claim's termination time is extended only if it is less than the\n    extension time.\n Note that in the first challenge round, i.e. the round initiated by the first\n challenger, the termination time is extended additionally by the finality\n period of the target chain. This is done to allow for L1 resolution."
            },
            "functionSelector": "1d18adc5",
            "id": 631,
            "mutability": "mutable",
            "name": "challengePeriodExtension",
            "nameLocation": "4407:24:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "4392:39:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 630,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4392:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 632,
              "nodeType": "StructuredDocumentation",
              "src": "4438:45:12",
              "text": "The minimum validity period of a request."
            },
            "functionSelector": "1489f8d2",
            "id": 635,
            "mutability": "constant",
            "name": "MIN_VALIDITY_PERIOD",
            "nameLocation": "4512:19:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "4488:55:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 633,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4488:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 634,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4534:9:12",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_300_by_1",
                "typeString": "int_const 300"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 636,
              "nodeType": "StructuredDocumentation",
              "src": "4550:45:12",
              "text": "The maximum validity period of a request."
            },
            "functionSelector": "96171d05",
            "id": 639,
            "mutability": "constant",
            "name": "MAX_VALIDITY_PERIOD",
            "nameLocation": "4624:19:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "4600:54:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 637,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4600:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3532",
              "id": 638,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4646:8:12",
              "subdenomination": "weeks",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_31449600_by_1",
                "typeString": "int_const 31449600"
              },
              "value": "52"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 640,
              "nodeType": "StructuredDocumentation",
              "src": "4679:118:12",
              "text": "Indicates whether the contract is deprecated. A deprecated contract\n cannot be used to create new requests."
            },
            "functionSelector": "0e136b19",
            "id": 642,
            "mutability": "mutable",
            "name": "deprecated",
            "nameLocation": "4814:10:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "4802:22:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 641,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "4802:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 643,
              "nodeType": "StructuredDocumentation",
              "src": "4831:54:12",
              "text": "The request counter, used to generate request IDs."
            },
            "functionSelector": "973a814e",
            "id": 645,
            "mutability": "mutable",
            "name": "requestCounter",
            "nameLocation": "4905:14:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "4890:29:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 644,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4890:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 646,
              "nodeType": "StructuredDocumentation",
              "src": "4926:50:12",
              "text": "The claim counter, used to generate claim IDs."
            },
            "functionSelector": "4efa8f17",
            "id": 648,
            "mutability": "mutable",
            "name": "claimCounter",
            "nameLocation": "4996:12:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "4981:27:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 647,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4981:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 649,
              "nodeType": "StructuredDocumentation",
              "src": "5015:79:12",
              "text": "The resolution registry that is used to query for results of L1 resolution."
            },
            "functionSelector": "ab9634ee",
            "id": 652,
            "mutability": "mutable",
            "name": "resolutionRegistry",
            "nameLocation": "5125:18:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "5099:44:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ResolutionRegistry_$2168",
              "typeString": "contract ResolutionRegistry"
            },
            "typeName": {
              "id": 651,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 650,
                "name": "ResolutionRegistry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2168,
                "src": "5099:18:12"
              },
              "referencedDeclaration": 2168,
              "src": "5099:18:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ResolutionRegistry_$2168",
                "typeString": "contract ResolutionRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 653,
              "nodeType": "StructuredDocumentation",
              "src": "5150:94:12",
              "text": "Maps target rollup chain IDs to finality periods.\n Finality periods are in seconds."
            },
            "functionSelector": "2f92f009",
            "id": 657,
            "mutability": "mutable",
            "name": "finalityPeriods",
            "nameLocation": "5284:15:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "5249:50:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 656,
              "keyType": {
                "id": 654,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5257:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "5249:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 655,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5268:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 658,
              "nodeType": "StructuredDocumentation",
              "src": "5306:33:12",
              "text": "Maps request IDs to requests."
            },
            "functionSelector": "81d12c58",
            "id": 663,
            "mutability": "mutable",
            "name": "requests",
            "nameLocation": "5379:8:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "5344:43:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$543_storage_$",
              "typeString": "mapping(uint256 => struct RequestManager.Request)"
            },
            "typeName": {
              "id": 662,
              "keyType": {
                "id": 659,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5352:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "5344:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$543_storage_$",
                "typeString": "mapping(uint256 => struct RequestManager.Request)"
              },
              "valueType": {
                "id": 661,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 660,
                  "name": "Request",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 543,
                  "src": "5363:7:12"
                },
                "referencedDeclaration": 543,
                "src": "5363:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                  "typeString": "struct RequestManager.Request"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 664,
              "nodeType": "StructuredDocumentation",
              "src": "5394:29:12",
              "text": "Maps claim IDs to claims."
            },
            "functionSelector": "a888c2cd",
            "id": 669,
            "mutability": "mutable",
            "name": "claims",
            "nameLocation": "5461:6:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "5428:39:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$564_storage_$",
              "typeString": "mapping(uint256 => struct RequestManager.Claim)"
            },
            "typeName": {
              "id": 668,
              "keyType": {
                "id": 665,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5436:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "5428:25:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$564_storage_$",
                "typeString": "mapping(uint256 => struct RequestManager.Claim)"
              },
              "valueType": {
                "id": 667,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 666,
                  "name": "Claim",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 564,
                  "src": "5447:5:12"
                },
                "referencedDeclaration": 564,
                "src": "5447:5:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                  "typeString": "struct RequestManager.Claim"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 670,
              "nodeType": "StructuredDocumentation",
              "src": "5474:83:12",
              "text": "The minimum fee, denominated in transfer token, paid to the liquidity provider."
            },
            "functionSelector": "5d5aa11b",
            "id": 673,
            "mutability": "mutable",
            "name": "minLpFee",
            "nameLocation": "5577:8:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "5562:33:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 671,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5562:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 672,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5588:7:12",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000000000000000000_by_1",
                "typeString": "int_const 5000000000000000000"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 674,
              "nodeType": "StructuredDocumentation",
              "src": "5610:76:12",
              "text": "Liquidity provider fee percentage, expressed in ppm (parts per million)."
            },
            "functionSelector": "e2653eeb",
            "id": 677,
            "mutability": "mutable",
            "name": "lpFeePPM",
            "nameLocation": "5706:8:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "5691:31:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 675,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5691:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "315f303030",
              "id": 676,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5717:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1_000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 678,
              "nodeType": "StructuredDocumentation",
              "src": "5775:66:12",
              "text": "Protocol fee percentage, expressed in ppm (parts per million)."
            },
            "functionSelector": "e7aad5c4",
            "id": 681,
            "mutability": "mutable",
            "name": "protocolFeePPM",
            "nameLocation": "5861:14:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "5846:33:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 679,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5846:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 680,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5878:1:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 682,
              "nodeType": "StructuredDocumentation",
              "src": "5930:77:12",
              "text": "The maximum amount of tokens that can be transferred in a single request."
            },
            "functionSelector": "f9432517",
            "id": 685,
            "mutability": "mutable",
            "name": "transferLimit",
            "nameLocation": "6027:13:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "6012:42:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 683,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6012:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 684,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6043:11:12",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 686,
              "nodeType": "StructuredDocumentation",
              "src": "6073:84:12",
              "text": "Maps ERC20 token addresses to related token amounts that belong to the protocol."
            },
            "functionSelector": "6bc6c8d1",
            "id": 690,
            "mutability": "mutable",
            "name": "collectedProtocolFees",
            "nameLocation": "6197:21:12",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "6162:56:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 689,
              "keyType": {
                "id": 687,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "6170:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "6162:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 688,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6181:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 709,
              "nodeType": "Block",
              "src": "6378:75:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 700,
                        "name": "minLpFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 673,
                        "src": "6404:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 701,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "6415:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 702,
                                "name": "lpFeePPM",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 677,
                                "src": "6424:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6415:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 704,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6414:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "315f3030305f303030",
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6436:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1_000_000"
                        },
                        "src": "6414:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 698,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "6395:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$4077_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4010,
                      "src": "6395:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6395:51:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 697,
                  "id": 708,
                  "nodeType": "Return",
                  "src": "6388:58:12"
                }
              ]
            },
            "documentation": {
              "id": 691,
              "nodeType": "StructuredDocumentation",
              "src": "6225:87:12",
              "text": "Compute the liquidy provider fee that needs to be paid for a given transfer amount."
            },
            "functionSelector": "f7d64cec",
            "id": 710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lpFee",
            "nameLocation": "6326:5:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6340:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "6332:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6332:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6331:16:12"
            },
            "returnParameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "6369:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6369:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6368:9:12"
            },
            "scope": 2018,
            "src": "6317:136:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 725,
              "nodeType": "Block",
              "src": "6610:61:12",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 718,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 713,
                            "src": "6628:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 719,
                            "name": "protocolFeePPM",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 681,
                            "src": "6637:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6628:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 721,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6627:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "315f3030305f303030",
                      "id": 722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6655:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1_000_000"
                    },
                    "src": "6627:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 717,
                  "id": 724,
                  "nodeType": "Return",
                  "src": "6620:44:12"
                }
              ]
            },
            "documentation": {
              "id": 711,
              "nodeType": "StructuredDocumentation",
              "src": "6459:79:12",
              "text": "Compute the protocol fee that needs to be paid for a given transfer amount."
            },
            "functionSelector": "a032b5f4",
            "id": 726,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "protocolFee",
            "nameLocation": "6552:11:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 713,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6572:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 726,
                  "src": "6564:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6564:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6563:16:12"
            },
            "returnParameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 716,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 726,
                  "src": "6601:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6601:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6600:9:12"
            },
            "scope": 2018,
            "src": "6543:128:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 742,
              "nodeType": "Block",
              "src": "6907:59:12",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 735,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 729,
                          "src": "6930:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 734,
                        "name": "lpFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "6924:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6924:13:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 738,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 729,
                          "src": "6952:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 737,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "6940:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6940:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6924:35:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 733,
                  "id": 741,
                  "nodeType": "Return",
                  "src": "6917:42:12"
                }
              ]
            },
            "documentation": {
              "id": 727,
              "nodeType": "StructuredDocumentation",
              "src": "6677:161:12",
              "text": "Compute the total fee that needs to be paid for a given transfer amount.\n The total fee is the sum of the liquidity provider fee and the protocol fee."
            },
            "functionSelector": "cea74edf",
            "id": 743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalFee",
            "nameLocation": "6852:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6869:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "6861:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6861:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6860:16:12"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 732,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "6898:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6898:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6897:9:12"
            },
            "scope": 2018,
            "src": "6843:123:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 760,
              "nodeType": "Block",
              "src": "7084:138:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 749,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "7115:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 750,
                            "name": "requestCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "7128:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7115:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 752,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "7146:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7158:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7146:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7115:44:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726571756573744964206e6f742076616c6964",
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7173:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bb782a5a1857b463ef883d3e4b99e9751b0d5423347851634a49140c150f705",
                          "typeString": "literal_string \"requestId not valid\""
                        },
                        "value": "requestId not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bb782a5a1857b463ef883d3e4b99e9751b0d5423347851634a49140c150f705",
                          "typeString": "literal_string \"requestId not valid\""
                        }
                      ],
                      "id": 748,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7094:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7094:110:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "7094:110:12"
                },
                {
                  "id": 759,
                  "nodeType": "PlaceholderStatement",
                  "src": "7214:1:12"
                }
              ]
            },
            "documentation": {
              "id": 744,
              "nodeType": "StructuredDocumentation",
              "src": "6990:46:12",
              "text": "Check whether a given request ID is valid."
            },
            "id": 761,
            "name": "validRequestId",
            "nameLocation": "7050:14:12",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "7073:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "7065:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7065:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7064:19:12"
            },
            "src": "7041:181:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 778,
              "nodeType": "Block",
              "src": "7316:96:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 767,
                            "name": "claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 764,
                            "src": "7334:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 768,
                            "name": "claimCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "7345:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7334:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 770,
                            "name": "claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 764,
                            "src": "7361:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7371:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7361:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7334:38:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636c61696d4964206e6f742076616c6964",
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7374:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76ef4b9559047f48ccd368349bc1d95713392442f579fe3d262d71404d1dcff",
                          "typeString": "literal_string \"claimId not valid\""
                        },
                        "value": "claimId not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f76ef4b9559047f48ccd368349bc1d95713392442f579fe3d262d71404d1dcff",
                          "typeString": "literal_string \"claimId not valid\""
                        }
                      ],
                      "id": 766,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7326:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7326:68:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "7326:68:12"
                },
                {
                  "id": 777,
                  "nodeType": "PlaceholderStatement",
                  "src": "7404:1:12"
                }
              ]
            },
            "documentation": {
              "id": 762,
              "nodeType": "StructuredDocumentation",
              "src": "7228:44:12",
              "text": "Check whether a given claim ID is valid."
            },
            "id": 779,
            "name": "validClaimId",
            "nameLocation": "7286:12:12",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 764,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "7307:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "7299:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7299:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7298:17:12"
            },
            "src": "7277:135:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 809,
              "nodeType": "Block",
              "src": "7857:209:12",
              "statements": [
                {
                  "expression": {
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 791,
                      "name": "claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 625,
                      "src": "7867:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 792,
                      "name": "_claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 782,
                      "src": "7880:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7867:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "7867:24:12"
                },
                {
                  "expression": {
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 795,
                      "name": "claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "7901:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 796,
                      "name": "_claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "7915:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7901:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "7901:26:12"
                },
                {
                  "expression": {
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 799,
                      "name": "challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 631,
                      "src": "7937:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 800,
                      "name": "_challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 786,
                      "src": "7964:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7937:52:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "7937:52:12"
                },
                {
                  "expression": {
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 803,
                      "name": "resolutionRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "7999:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ResolutionRegistry_$2168",
                        "typeString": "contract ResolutionRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 805,
                          "name": "_resolutionRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "8039:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 804,
                        "name": "ResolutionRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2168,
                        "src": "8020:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ResolutionRegistry_$2168_$",
                          "typeString": "type(contract ResolutionRegistry)"
                        }
                      },
                      "id": 806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8020:39:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ResolutionRegistry_$2168",
                        "typeString": "contract ResolutionRegistry"
                      }
                    },
                    "src": "7999:60:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ResolutionRegistry_$2168",
                      "typeString": "contract ResolutionRegistry"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "7999:60:12"
                }
              ]
            },
            "documentation": {
              "id": 780,
              "nodeType": "StructuredDocumentation",
              "src": "7418:277:12",
              "text": "Constructor.\n @param _claimStake Claim stake amount.\n @param _claimPeriod Claim period, in seconds.\n @param _challengePeriodExtension Challenge period extension, in seconds.\n @param _resolutionRegistry Address of the resolution registry."
            },
            "id": 810,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "_claimStake",
                  "nameLocation": "7729:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "7721:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7721:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "_claimPeriod",
                  "nameLocation": "7758:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "7750:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7750:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "_challengePeriodExtension",
                  "nameLocation": "7788:25:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "7780:33:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7780:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "_resolutionRegistry",
                  "nameLocation": "7831:19:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "7823:27:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7823:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7711:145:12"
            },
            "returnParameters": {
              "id": 790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7857:0:12"
            },
            "scope": 2018,
            "src": "7700:366:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1017,
              "nodeType": "Block",
              "src": "9160:1818:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 829,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 642,
                          "src": "9178:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9192:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "9178:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742069732064657072656361746564",
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9199:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_529c15b06099d61815914f4912757faaa0741e9262b36f0004cb178f36fdd9f1",
                          "typeString": "literal_string \"Contract is deprecated\""
                        },
                        "value": "Contract is deprecated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_529c15b06099d61815914f4912757faaa0741e9262b36f0004cb178f36fdd9f1",
                          "typeString": "literal_string \"Contract is deprecated\""
                        }
                      ],
                      "id": 828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9170:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9170:54:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 834,
                  "nodeType": "ExpressionStatement",
                  "src": "9170:54:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 836,
                            "name": "finalityPeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "9255:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 838,
                          "indexExpression": {
                            "id": 837,
                            "name": "targetChainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "9271:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9255:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9289:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9255:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54617267657420726f6c6c7570206e6f7420737570706f72746564",
                        "id": 841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9304:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce613defff4868c9fbec08ddde530282de33cee8241a08645b008dbc00137e2b",
                          "typeString": "literal_string \"Target rollup not supported\""
                        },
                        "value": "Target rollup not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce613defff4868c9fbec08ddde530282de33cee8241a08645b008dbc00137e2b",
                          "typeString": "literal_string \"Target rollup not supported\""
                        }
                      ],
                      "id": 835,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9234:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9234:109:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "9234:109:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 845,
                          "name": "validityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 823,
                          "src": "9374:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 846,
                          "name": "MIN_VALIDITY_PERIOD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 635,
                          "src": "9392:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9374:37:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696469747920706572696f6420746f6f2073686f7274",
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9425:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c45904cb6a178378bb37a9a1c03f015a39361ce913918834ec5a52c283667008",
                          "typeString": "literal_string \"Validity period too short\""
                        },
                        "value": "Validity period too short"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c45904cb6a178378bb37a9a1c03f015a39361ce913918834ec5a52c283667008",
                          "typeString": "literal_string \"Validity period too short\""
                        }
                      ],
                      "id": 844,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9353:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9353:109:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "9353:109:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 852,
                          "name": "validityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 823,
                          "src": "9493:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 853,
                          "name": "MAX_VALIDITY_PERIOD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 639,
                          "src": "9511:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9493:37:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696469747920706572696f6420746f6f206c6f6e67",
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9544:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac933946aa9f1b3cff59a7d1daa9668099cd3b65a18787e4f598bc11cc28194",
                          "typeString": "literal_string \"Validity period too long\""
                        },
                        "value": "Validity period too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac933946aa9f1b3cff59a7d1daa9668099cd3b65a18787e4f598bc11cc28194",
                          "typeString": "literal_string \"Validity period too long\""
                        }
                      ],
                      "id": 851,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9472:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9472:108:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 857,
                  "nodeType": "ExpressionStatement",
                  "src": "9472:108:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 859,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 821,
                          "src": "9598:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 860,
                          "name": "transferLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 685,
                          "src": "9608:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9598:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473207472616e73666572206c696d6974",
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9623:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62ea95ea2c2e47e95fdd347a7b56999ecf4d6210b6715ec00b4f5e3d0c9f95d8",
                          "typeString": "literal_string \"Amount exceeds transfer limit\""
                        },
                        "value": "Amount exceeds transfer limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62ea95ea2c2e47e95fdd347a7b56999ecf4d6210b6715ec00b4f5e3d0c9f95d8",
                          "typeString": "literal_string \"Amount exceeds transfer limit\""
                        }
                      ],
                      "id": 858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9590:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9590:65:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "9590:65:12"
                },
                {
                  "assignments": [
                    867
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 867,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "9673:5:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1017,
                      "src": "9666:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3141",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 866,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 865,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3141,
                          "src": "9666:6:12"
                        },
                        "referencedDeclaration": 3141,
                        "src": "9666:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3141",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 871,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 869,
                        "name": "sourceTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "9688:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 868,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3141,
                      "src": "9681:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3141_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9681:26:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3141",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9666:41:12"
                },
                {
                  "assignments": [
                    873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 873,
                      "mutability": "mutable",
                      "name": "lpFee",
                      "nameLocation": "9726:5:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1017,
                      "src": "9718:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 872,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9718:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 877,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 875,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 821,
                        "src": "9740:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 874,
                      "name": "lpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 710,
                      "src": "9734:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9734:13:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9718:29:12"
                },
                {
                  "assignments": [
                    879
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 879,
                      "mutability": "mutable",
                      "name": "protocolFee",
                      "nameLocation": "9765:11:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1017,
                      "src": "9757:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 878,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9757:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 883,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 881,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 821,
                        "src": "9791:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 880,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 726,
                      "src": "9779:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9779:19:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9757:41:12"
                },
                {
                  "assignments": [
                    885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 885,
                      "mutability": "mutable",
                      "name": "totalTokenAmount",
                      "nameLocation": "9816:16:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1017,
                      "src": "9808:24:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 884,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9808:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 891,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 886,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 821,
                        "src": "9835:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 887,
                        "name": "lpFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "9844:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9835:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 889,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 879,
                      "src": "9852:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9835:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9808:55:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 895,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9911:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9911:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 899,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9931:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RequestManager_$2018",
                                    "typeString": "contract RequestManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RequestManager_$2018",
                                    "typeString": "contract RequestManager"
                                  }
                                ],
                                "id": 898,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9923:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 897,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9923:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9923:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 893,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 867,
                              "src": "9895:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3141",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3100,
                            "src": "9895:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9895:42:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 902,
                          "name": "totalTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 885,
                          "src": "9941:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9895:62:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9971:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        },
                        "value": "Insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        }
                      ],
                      "id": 892,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9874:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9874:131:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "ExpressionStatement",
                  "src": "9874:131:12"
                },
                {
                  "expression": {
                    "id": 909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 907,
                      "name": "requestCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "10016:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10034:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10016:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 910,
                  "nodeType": "ExpressionStatement",
                  "src": "10016:19:12"
                },
                {
                  "assignments": [
                    913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 913,
                      "mutability": "mutable",
                      "name": "newRequest",
                      "nameLocation": "10061:10:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1017,
                      "src": "10045:26:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 912,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 911,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 543,
                          "src": "10045:7:12"
                        },
                        "referencedDeclaration": 543,
                        "src": "10045:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 917,
                  "initialValue": {
                    "baseExpression": {
                      "id": 914,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "10074:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$543_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 916,
                    "indexExpression": {
                      "id": 915,
                      "name": "requestCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "10083:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10074:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$543_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10045:53:12"
                },
                {
                  "expression": {
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 918,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "10108:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 920,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 521,
                      "src": "10108:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 921,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10128:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10128:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10108:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 924,
                  "nodeType": "ExpressionStatement",
                  "src": "10108:30:12"
                },
                {
                  "expression": {
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 925,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "10148:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 927,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sourceTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 523,
                      "src": "10148:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 928,
                      "name": "sourceTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "10180:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10148:50:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "10148:50:12"
                },
                {
                  "expression": {
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 931,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "10208:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 933,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetChainId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 525,
                      "src": "10208:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 934,
                      "name": "targetChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "10235:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10208:40:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "10208:40:12"
                },
                {
                  "expression": {
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 937,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "10258:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 939,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 527,
                      "src": "10258:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 940,
                      "name": "targetTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "10290:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10258:50:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 942,
                  "nodeType": "ExpressionStatement",
                  "src": "10258:50:12"
                },
                {
                  "expression": {
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 943,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "10318:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 945,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 529,
                      "src": "10318:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 946,
                      "name": "targetAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 819,
                      "src": "10345:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10318:40:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "10318:40:12"
                },
                {
                  "expression": {
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 949,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "10368:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 531,
                      "src": "10368:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 952,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 821,
                      "src": "10388:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10368:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 954,
                  "nodeType": "ExpressionStatement",
                  "src": "10368:26:12"
                },
                {
                  "expression": {
                    "id": 969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 955,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "10404:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 957,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 534,
                      "src": "10404:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillInfo_$6_storage",
                        "typeString": "struct BeamerUtils.FillInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10459:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10451:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 960,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10451:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10451:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10471:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10463:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 964,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10463:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10463:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 958,
                          "name": "BeamerUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "10430:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$87_$",
                            "typeString": "type(library BeamerUtils)"
                          }
                        },
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FillInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6,
                        "src": "10430:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FillInfo_$6_storage_ptr_$",
                          "typeString": "type(struct BeamerUtils.FillInfo storage pointer)"
                        }
                      },
                      "id": 968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10430:44:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillInfo_$6_memory_ptr",
                        "typeString": "struct BeamerUtils.FillInfo memory"
                      }
                    },
                    "src": "10404:70:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillInfo_$6_storage",
                      "typeString": "struct BeamerUtils.FillInfo storage ref"
                    }
                  },
                  "id": 970,
                  "nodeType": "ExpressionStatement",
                  "src": "10404:70:12"
                },
                {
                  "expression": {
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 971,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "10484:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 973,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "validUntil",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 538,
                      "src": "10484:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 974,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "10508:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "10508:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 976,
                        "name": "validityPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 823,
                        "src": "10526:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10508:32:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10484:56:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 979,
                  "nodeType": "ExpressionStatement",
                  "src": "10484:56:12"
                },
                {
                  "expression": {
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 980,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "10550:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 982,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lpFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 540,
                      "src": "10550:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 983,
                      "name": "lpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "10569:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10550:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "10550:24:12"
                },
                {
                  "expression": {
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 986,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "10584:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 988,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protocolFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 542,
                      "src": "10584:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 989,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 879,
                      "src": "10609:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10584:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "10584:36:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 993,
                        "name": "requestCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "10664:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 994,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "10692:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 995,
                        "name": "sourceTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "10719:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 996,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "10751:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 997,
                        "name": "targetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "10783:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 998,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 821,
                        "src": "10810:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 999,
                          "name": "newRequest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 913,
                          "src": "10830:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "validUntil",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 538,
                        "src": "10830:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 992,
                      "name": "RequestCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "10636:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10636:225:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1002,
                  "nodeType": "EmitStatement",
                  "src": "10631:230:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1006,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10895:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10895:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1010,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10915:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RequestManager_$2018",
                              "typeString": "contract RequestManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RequestManager_$2018",
                              "typeString": "contract RequestManager"
                            }
                          ],
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10907:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1008,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10907:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10907:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1012,
                        "name": "totalTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "10922:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1003,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 867,
                        "src": "10872:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3141",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3198,
                      "src": "10872:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3141_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3141_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10872:67:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1014,
                  "nodeType": "ExpressionStatement",
                  "src": "10872:67:12"
                },
                {
                  "expression": {
                    "id": 1015,
                    "name": "requestCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 645,
                    "src": "10957:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 827,
                  "id": 1016,
                  "nodeType": "Return",
                  "src": "10950:21:12"
                }
              ]
            },
            "documentation": {
              "id": 811,
              "nodeType": "StructuredDocumentation",
              "src": "8072:837:12",
              "text": "Create a new transfer request.\n @param targetChainId ID of the target chain.\n @param sourceTokenAddress Address of the token contract on the source chain.\n @param targetTokenAddress Address of the token contract on the target chain.\n @param targetAddress Recipient address on the target chain.\n @param amount Amount of tokens to transfer. Does not include fees.\n @param validityPeriod The number of seconds the request is to be considered valid.\n                       Once its validity period has elapsed, the request cannot be claimed\n                       anymore and will eventually expire, allowing the request submitter\n                       to withdraw the deposited tokens if there are no active claims.\n @return ID of the newly created request."
            },
            "functionSelector": "2f4212b8",
            "id": 1018,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "8923:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "8954:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "8946:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8946:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "sourceTokenAddress",
                  "nameLocation": "8985:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "8977:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8977:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "9021:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "9013:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9013:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 819,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "9057:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "9049:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9049:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 821,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9088:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "9080:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9080:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 823,
                  "mutability": "mutable",
                  "name": "validityPeriod",
                  "nameLocation": "9112:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "9104:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9104:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8936:196:12"
            },
            "returnParameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 826,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "9151:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9151:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9150:9:12"
            },
            "scope": 2018,
            "src": "8914:2064:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1101,
              "nodeType": "Block",
              "src": "11266:678:12",
              "statements": [
                {
                  "assignments": [
                    1029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1029,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "11292:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1101,
                      "src": "11276:23:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1028,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1027,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 543,
                          "src": "11276:7:12"
                        },
                        "referencedDeclaration": 543,
                        "src": "11276:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1033,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1030,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "11302:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$543_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1032,
                    "indexExpression": {
                      "id": 1031,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1021,
                      "src": "11311:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11302:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$543_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11276:45:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 1035,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1029,
                              "src": "11353:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1036,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 534,
                            "src": "11353:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FillInfo_$6_storage",
                              "typeString": "struct BeamerUtils.FillInfo storage ref"
                            }
                          },
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "filler",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3,
                          "src": "11353:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11392:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11384:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1038,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11384:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11384:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11353:41:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f73697420616c72656164792077697468647261776e",
                        "id": 1043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11408:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        },
                        "value": "Deposit already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        }
                      ],
                      "id": 1034,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11332:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11332:113:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "11332:113:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1047,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11476:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11476:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1049,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "11495:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 538,
                          "src": "11495:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11476:37:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657175657374206e6f74206578706972656420796574",
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11527:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39bdfa9a2d26c13da0c9b6ca3d4e83611affcc397929e29cfb9e09c9d5c42830",
                          "typeString": "literal_string \"Request not expired yet\""
                        },
                        "value": "Request not expired yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39bdfa9a2d26c13da0c9b6ca3d4e83611affcc397929e29cfb9e09c9d5c42830",
                          "typeString": "literal_string \"Request not expired yet\""
                        }
                      ],
                      "id": 1046,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11455:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11455:107:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "11455:107:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1056,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "11580:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "activeClaims",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 536,
                          "src": "11580:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11604:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11580:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41637469766520636c61696d732072756e6e696e67",
                        "id": 1060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11607:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f03ffa7bffee1c6dfb6edeb3466aa724b633b692eb668560f915ebb9d3a9a8b",
                          "typeString": "literal_string \"Active claims running\""
                        },
                        "value": "Active claims running"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f03ffa7bffee1c6dfb6edeb3466aa724b633b692eb668560f915ebb9d3a9a8b",
                          "typeString": "literal_string \"Active claims running\""
                        }
                      ],
                      "id": 1055,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11572:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11572:59:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1062,
                  "nodeType": "ExpressionStatement",
                  "src": "11572:59:12"
                },
                {
                  "expression": {
                    "id": 1070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 1063,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "11642:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 534,
                        "src": "11642:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillInfo_$6_storage",
                          "typeString": "struct BeamerUtils.FillInfo storage ref"
                        }
                      },
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "filler",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "11642:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1068,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "11672:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1069,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 521,
                      "src": "11672:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11642:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1071,
                  "nodeType": "ExpressionStatement",
                  "src": "11642:44:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1073,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1021,
                        "src": "11719:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1074,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "11730:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "11730:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1072,
                      "name": "DepositWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "11702:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11702:43:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1077,
                  "nodeType": "EmitStatement",
                  "src": "11697:48:12"
                },
                {
                  "assignments": [
                    1080
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1080,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "11763:5:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1101,
                      "src": "11756:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3141",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1079,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1078,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3141,
                          "src": "11756:6:12"
                        },
                        "referencedDeclaration": 3141,
                        "src": "11756:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3141",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1085,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1082,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "11778:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 523,
                        "src": "11778:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1081,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3141,
                      "src": "11771:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3141_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11771:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3141",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11756:49:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1089,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "11847:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "11847:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1091,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1029,
                              "src": "11875:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 531,
                            "src": "11875:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 1093,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1029,
                              "src": "11892:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 540,
                            "src": "11892:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11875:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 1096,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "11908:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "protocolFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 542,
                          "src": "11908:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11875:52:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1086,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "11815:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3141",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3172,
                      "src": "11815:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3141_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3141_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11815:122:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
                  "src": "11815:122:12"
                }
              ]
            },
            "documentation": {
              "id": 1019,
              "nodeType": "StructuredDocumentation",
              "src": "10984:171:12",
              "text": "Withdraw funds deposited with an expired request.\n No claims must be active for the request.\n @param requestId ID of the expired request."
            },
            "functionSelector": "d3868348",
            "id": 1102,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1024,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1021,
                    "src": "11251:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1025,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1023,
                  "name": "validRequestId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 761,
                  "src": "11236:14:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "11236:25:12"
              }
            ],
            "name": "withdrawExpiredRequest",
            "nameLocation": "11169:22:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1021,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "11200:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1102,
                  "src": "11192:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11192:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11191:19:12"
            },
            "returnParameters": {
              "id": 1026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11266:0:12"
            },
            "scope": 2018,
            "src": "11160:784:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1251,
              "nodeType": "Block",
              "src": "12437:1127:12",
              "statements": [
                {
                  "assignments": [
                    1117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1117,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "12463:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "12447:23:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1116,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1115,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 543,
                          "src": "12447:7:12"
                        },
                        "referencedDeclaration": 543,
                        "src": "12447:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1121,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1118,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "12473:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$543_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1120,
                    "indexExpression": {
                      "id": 1119,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "12482:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12473:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$543_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12447:45:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1123,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12511:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12511:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1125,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1117,
                            "src": "12529:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 538,
                          "src": "12529:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12511:36:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526571756573742065787069726564",
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12549:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9025c283ecf0e47ba79d56362348df0807a1b8d91051901470410464f6fd80f1",
                          "typeString": "literal_string \"Request expired\""
                        },
                        "value": "Request expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9025c283ecf0e47ba79d56362348df0807a1b8d91051901470410464f6fd80f1",
                          "typeString": "literal_string \"Request expired\""
                        }
                      ],
                      "id": 1122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12503:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12503:64:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1130,
                  "nodeType": "ExpressionStatement",
                  "src": "12503:64:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 1132,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1117,
                              "src": "12598:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1133,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 534,
                            "src": "12598:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FillInfo_$6_storage",
                              "typeString": "struct BeamerUtils.FillInfo storage ref"
                            }
                          },
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "filler",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3,
                          "src": "12598:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12637:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12629:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1135,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12629:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12629:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12598:41:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f73697420616c72656164792077697468647261776e",
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12653:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        },
                        "value": "Deposit already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        }
                      ],
                      "id": 1131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12577:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12577:113:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1142,
                  "nodeType": "ExpressionStatement",
                  "src": "12577:113:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1144,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12708:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "12708:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1146,
                          "name": "claimStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 625,
                          "src": "12721:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12708:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374616b6520616d6f756e74",
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12733:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ad3e5bc3e0d5a08a9885d6e44516a7467939c5df8fabf19beccfc02562b99dc",
                          "typeString": "literal_string \"Invalid stake amount\""
                        },
                        "value": "Invalid stake amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ad3e5bc3e0d5a08a9885d6e44516a7467939c5df8fabf19beccfc02562b99dc",
                          "typeString": "literal_string \"Invalid stake amount\""
                        }
                      ],
                      "id": 1143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12700:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12700:56:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1150,
                  "nodeType": "ExpressionStatement",
                  "src": "12700:56:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1152,
                          "name": "fillId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1107,
                          "src": "12774:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12792:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12784:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 1153,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "12784:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12784:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "12774:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c6c4964206d757374206e6f7420626520307830",
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12796:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_576d47f738afedfa6cd889e052ba048e590239bf0398ab4e36e95ec97dbb5828",
                          "typeString": "literal_string \"FillId must not be 0x0\""
                        },
                        "value": "FillId must not be 0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_576d47f738afedfa6cd889e052ba048e590239bf0398ab4e36e95ec97dbb5828",
                          "typeString": "literal_string \"FillId must not be 0x0\""
                        }
                      ],
                      "id": 1151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12766:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12766:55:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1160,
                  "nodeType": "ExpressionStatement",
                  "src": "12766:55:12"
                },
                {
                  "expression": {
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1161,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1117,
                        "src": "12832:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1163,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activeClaims",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 536,
                      "src": "12832:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint192",
                        "typeString": "uint192"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12856:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12832:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint192",
                      "typeString": "uint192"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "12832:25:12"
                },
                {
                  "expression": {
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1167,
                      "name": "claimCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "12867:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12883:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12867:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "12867:17:12"
                },
                {
                  "assignments": [
                    1173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1173,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "12909:5:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "12895:19:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1172,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1171,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 564,
                          "src": "12895:5:12"
                        },
                        "referencedDeclaration": 564,
                        "src": "12895:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1177,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1174,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "12917:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$564_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1176,
                    "indexExpression": {
                      "id": 1175,
                      "name": "claimCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "12924:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12917:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$564_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12895:42:12"
                },
                {
                  "expression": {
                    "id": 1182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1178,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "12947:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1180,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 545,
                      "src": "12947:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1181,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "12965:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12947:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1183,
                  "nodeType": "ExpressionStatement",
                  "src": "12947:27:12"
                },
                {
                  "expression": {
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1184,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "12984:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 547,
                      "src": "12984:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1187,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "13000:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "13000:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12984:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1190,
                  "nodeType": "ExpressionStatement",
                  "src": "12984:26:12"
                },
                {
                  "expression": {
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1191,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "13020:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1193,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimerStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 549,
                      "src": "13020:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1194,
                      "name": "claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 625,
                      "src": "13041:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13020:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1196,
                  "nodeType": "ExpressionStatement",
                  "src": "13020:31:12"
                },
                {
                  "expression": {
                    "id": 1204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1197,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "13061:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1199,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastChallenger",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 555,
                      "src": "13061:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13092:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13084:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1200,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13084:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13084:10:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13061:33:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1205,
                  "nodeType": "ExpressionStatement",
                  "src": "13061:33:12"
                },
                {
                  "expression": {
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1206,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "13104:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "challengerStakeTotal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 557,
                      "src": "13104:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13133:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13104:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1211,
                  "nodeType": "ExpressionStatement",
                  "src": "13104:30:12"
                },
                {
                  "expression": {
                    "id": 1216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1212,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "13144:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawnAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 559,
                      "src": "13144:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13168:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13144:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1217,
                  "nodeType": "ExpressionStatement",
                  "src": "13144:25:12"
                },
                {
                  "expression": {
                    "id": 1225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1218,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "13179:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1220,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "termination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 561,
                      "src": "13179:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1221,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "13199:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "13199:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1223,
                        "name": "claimPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "13217:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13199:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13179:49:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1226,
                  "nodeType": "ExpressionStatement",
                  "src": "13179:49:12"
                },
                {
                  "expression": {
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1227,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "13238:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1229,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fillId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 563,
                      "src": "13238:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1230,
                      "name": "fillId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1107,
                      "src": "13253:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "13238:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "13238:21:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1234,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "13298:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1235,
                        "name": "claimCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "13321:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1236,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1173,
                          "src": "13347:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1237,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 547,
                        "src": "13347:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1238,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1173,
                          "src": "13374:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimerStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 549,
                        "src": "13374:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1240,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1173,
                          "src": "13406:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1241,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastChallenger",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 555,
                        "src": "13406:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1242,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1173,
                          "src": "13440:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengerStakeTotal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 557,
                        "src": "13440:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1244,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1173,
                          "src": "13480:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1245,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "termination",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 561,
                        "src": "13480:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1246,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "13511:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1233,
                      "name": "ClaimMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "13275:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 1247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13275:252:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1248,
                  "nodeType": "EmitStatement",
                  "src": "13270:257:12"
                },
                {
                  "expression": {
                    "id": 1249,
                    "name": "claimCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 648,
                    "src": "13545:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1114,
                  "id": 1250,
                  "nodeType": "Return",
                  "src": "13538:19:12"
                }
              ]
            },
            "documentation": {
              "id": 1103,
              "nodeType": "StructuredDocumentation",
              "src": "11950:328:12",
              "text": "Claim that a request was filled by the caller.\n The request must still be valid at call time.\n The caller must provide the ``claimStake`` amount of source rollup's native\n token.\n @param requestId ID of the request.\n @param fillId The fill ID.\n @return The claim ID."
            },
            "functionSelector": "b1743c5b",
            "id": 1252,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1110,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1105,
                    "src": "12396:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1111,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1109,
                  "name": "validRequestId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 761,
                  "src": "12381:14:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "12381:25:12"
              }
            ],
            "name": "claimRequest",
            "nameLocation": "12292:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1105,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "12313:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "12305:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12305:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "12332:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "12324:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12324:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12304:35:12"
            },
            "returnParameters": {
              "id": 1114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1113,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "12424:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12424:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12423:9:12"
            },
            "scope": 2018,
            "src": "12283:1281:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "14870:1958:12",
              "statements": [
                {
                  "assignments": [
                    1263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1263,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "14894:5:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "14880:19:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1262,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1261,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 564,
                          "src": "14880:5:12"
                        },
                        "referencedDeclaration": 564,
                        "src": "14880:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1267,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1264,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "14902:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$564_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1266,
                    "indexExpression": {
                      "id": 1265,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1255,
                      "src": "14909:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14902:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$564_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14880:37:12"
                },
                {
                  "assignments": [
                    1270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1270,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "14943:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "14927:23:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1269,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1268,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 543,
                          "src": "14927:7:12"
                        },
                        "referencedDeclaration": 543,
                        "src": "14927:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1275,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1271,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "14953:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$543_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1274,
                    "indexExpression": {
                      "expression": {
                        "id": 1272,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1263,
                        "src": "14962:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1273,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 545,
                      "src": "14962:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14953:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$543_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14927:51:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1277,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14996:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14996:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1279,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1263,
                            "src": "15014:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "termination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 561,
                          "src": "15014:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14996:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d2065787069726564",
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15033:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_798014e7325cea2d102adb3bd5e2a99ef885fb00dba060d9a4f562f3b9926d61",
                          "typeString": "literal_string \"Claim expired\""
                        },
                        "value": "Claim expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_798014e7325cea2d102adb3bd5e2a99ef885fb00dba060d9a4f562f3b9926d61",
                          "typeString": "literal_string \"Claim expired\""
                        }
                      ],
                      "id": 1276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14988:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14988:61:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "14988:61:12"
                },
                {
                  "assignments": [
                    1286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1286,
                      "mutability": "mutable",
                      "name": "nextActor",
                      "nameLocation": "15068:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "15060:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1285,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15060:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1287,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15060:17:12"
                },
                {
                  "assignments": [
                    1289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1289,
                      "mutability": "mutable",
                      "name": "minValue",
                      "nameLocation": "15095:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "15087:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1288,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15087:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1290,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15087:16:12"
                },
                {
                  "assignments": [
                    1292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1292,
                      "mutability": "mutable",
                      "name": "periodExtension",
                      "nameLocation": "15121:15:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "15113:23:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15113:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1294,
                  "initialValue": {
                    "id": 1293,
                    "name": "challengePeriodExtension",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 631,
                    "src": "15139:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15113:50:12"
                },
                {
                  "assignments": [
                    1296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1296,
                      "mutability": "mutable",
                      "name": "claimerStake",
                      "nameLocation": "15181:12:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "15173:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1295,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15173:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1299,
                  "initialValue": {
                    "expression": {
                      "id": 1297,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1263,
                      "src": "15196:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimerStake",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 549,
                    "src": "15196:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15173:41:12"
                },
                {
                  "assignments": [
                    1301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1301,
                      "mutability": "mutable",
                      "name": "challengerStakeTotal",
                      "nameLocation": "15232:20:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "15224:28:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1300,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15224:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1304,
                  "initialValue": {
                    "expression": {
                      "id": 1302,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1263,
                      "src": "15255:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "challengerStakeTotal",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 557,
                    "src": "15255:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15224:57:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1305,
                      "name": "claimerStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1296,
                      "src": "15296:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1306,
                      "name": "challengerStakeTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1301,
                      "src": "15311:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15296:35:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1356,
                    "nodeType": "Block",
                    "src": "15664:123:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1343,
                            "name": "nextActor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1286,
                            "src": "15678:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1344,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1263,
                              "src": "15690:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1345,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 547,
                            "src": "15690:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15678:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1347,
                        "nodeType": "ExpressionStatement",
                        "src": "15678:25:12"
                      },
                      {
                        "expression": {
                          "id": 1354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1348,
                            "name": "minValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "15717:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1349,
                                "name": "challengerStakeTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1301,
                                "src": "15728:20:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1350,
                                "name": "claimerStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1296,
                                "src": "15751:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15728:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1352,
                              "name": "claimStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "15766:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15728:48:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15717:59:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1355,
                        "nodeType": "ExpressionStatement",
                        "src": "15717:59:12"
                      }
                    ]
                  },
                  "id": 1357,
                  "nodeType": "IfStatement",
                  "src": "15292:495:12",
                  "trueBody": {
                    "id": 1342,
                    "nodeType": "Block",
                    "src": "15333:325:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1308,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1301,
                            "src": "15351:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15375:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15351:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1319,
                        "nodeType": "IfStatement",
                        "src": "15347:121:12",
                        "trueBody": {
                          "id": 1318,
                          "nodeType": "Block",
                          "src": "15378:90:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 1316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1311,
                                  "name": "periodExtension",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1292,
                                  "src": "15396:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1312,
                                    "name": "finalityPeriods",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 657,
                                    "src": "15415:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1315,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1313,
                                      "name": "request",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1270,
                                      "src": "15431:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                                        "typeString": "struct RequestManager.Request storage pointer"
                                      }
                                    },
                                    "id": 1314,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "targetChainId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 525,
                                    "src": "15431:21:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15415:38:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15396:57:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1317,
                              "nodeType": "ExpressionStatement",
                              "src": "15396:57:12"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1321,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1263,
                                  "src": "15489:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                    "typeString": "struct RequestManager.Claim storage pointer"
                                  }
                                },
                                "id": 1322,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "claimer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 547,
                                "src": "15489:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1323,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "15506:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "15506:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15489:27:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206368616c6c656e6765206f776e20636c61696d",
                              "id": 1326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15518:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_64fb5de882b2bc56d2cbaf6fec54a1e8989ac954bff861bb575a51a0c2e2517c",
                                "typeString": "literal_string \"Cannot challenge own claim\""
                              },
                              "value": "Cannot challenge own claim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_64fb5de882b2bc56d2cbaf6fec54a1e8989ac954bff861bb575a51a0c2e2517c",
                                "typeString": "literal_string \"Cannot challenge own claim\""
                              }
                            ],
                            "id": 1320,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15481:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15481:66:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1328,
                        "nodeType": "ExpressionStatement",
                        "src": "15481:66:12"
                      },
                      {
                        "expression": {
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1329,
                            "name": "nextActor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1286,
                            "src": "15561:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1330,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "15573:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "15573:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15561:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1333,
                        "nodeType": "ExpressionStatement",
                        "src": "15561:22:12"
                      },
                      {
                        "expression": {
                          "id": 1340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1334,
                            "name": "minValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "15597:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1335,
                                "name": "claimerStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1296,
                                "src": "15608:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1336,
                                "name": "challengerStakeTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1301,
                                "src": "15623:20:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15608:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15646:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "15608:39:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15597:50:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1341,
                        "nodeType": "ExpressionStatement",
                        "src": "15597:50:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1359,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15805:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15805:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1361,
                          "name": "nextActor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1286,
                          "src": "15819:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15805:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656c696769626c6520746f206f7574626964",
                        "id": 1363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15830:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53e2604a0114b11c1d789e6b14267b95918e9ede3be05afe9cd186cfa90bc222",
                          "typeString": "literal_string \"Not eligible to outbid\""
                        },
                        "value": "Not eligible to outbid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53e2604a0114b11c1d789e6b14267b95918e9ede3be05afe9cd186cfa90bc222",
                          "typeString": "literal_string \"Not eligible to outbid\""
                        }
                      ],
                      "id": 1358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15797:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15797:58:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1365,
                  "nodeType": "ExpressionStatement",
                  "src": "15797:58:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1367,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15873:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "15873:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1369,
                          "name": "minValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1289,
                          "src": "15886:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15873:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207374616b652070726f7669646564",
                        "id": 1371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15896:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                          "typeString": "literal_string \"Not enough stake provided\""
                        },
                        "value": "Not enough stake provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                          "typeString": "literal_string \"Not enough stake provided\""
                        }
                      ],
                      "id": 1366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15865:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15865:59:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1373,
                  "nodeType": "ExpressionStatement",
                  "src": "15865:59:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1374,
                      "name": "nextActor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1286,
                      "src": "15939:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1375,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1263,
                        "src": "15952:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1376,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 547,
                      "src": "15952:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15939:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1410,
                    "nodeType": "Block",
                    "src": "16029:173:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1386,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1263,
                              "src": "16043:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1388,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastChallenger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 555,
                            "src": "16043:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1389,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16066:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16066:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16043:33:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1392,
                        "nodeType": "ExpressionStatement",
                        "src": "16043:33:12"
                      },
                      {
                        "expression": {
                          "id": 1401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1393,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1263,
                                "src": "16090:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                  "typeString": "struct RequestManager.Claim storage pointer"
                                }
                              },
                              "id": 1397,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challengersStakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 553,
                              "src": "16090:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1398,
                            "indexExpression": {
                              "expression": {
                                "id": 1395,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16114:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16114:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16090:35:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1399,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16129:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "16129:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16090:48:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1402,
                        "nodeType": "ExpressionStatement",
                        "src": "16090:48:12"
                      },
                      {
                        "expression": {
                          "id": 1408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1403,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1263,
                              "src": "16152:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1405,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "challengerStakeTotal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 557,
                            "src": "16152:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1406,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16182:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "16182:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16152:39:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1409,
                        "nodeType": "ExpressionStatement",
                        "src": "16152:39:12"
                      }
                    ]
                  },
                  "id": 1411,
                  "nodeType": "IfStatement",
                  "src": "15935:267:12",
                  "trueBody": {
                    "id": 1385,
                    "nodeType": "Block",
                    "src": "15967:56:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1378,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1263,
                              "src": "15981:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1380,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "claimerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 549,
                            "src": "15981:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1381,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16003:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "16003:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15981:31:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1384,
                        "nodeType": "ExpressionStatement",
                        "src": "15981:31:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1412,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1263,
                        "src": "16212:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1414,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "termination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 561,
                      "src": "16212:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1417,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1263,
                            "src": "16254:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "termination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 561,
                          "src": "16254:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1419,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "16285:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "16285:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1421,
                            "name": "periodExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1292,
                            "src": "16303:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16285:33:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1415,
                          "name": "Math",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4077,
                          "src": "16232:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Math_$4077_$",
                            "typeString": "type(library Math)"
                          }
                        },
                        "id": 1416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4010,
                        "src": "16232:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16232:96:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16212:116:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1425,
                  "nodeType": "ExpressionStatement",
                  "src": "16212:116:12"
                },
                {
                  "assignments": [
                    1427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1427,
                      "mutability": "mutable",
                      "name": "minimumTermination",
                      "nameLocation": "16346:18:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "16338:26:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1426,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16338:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1432,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1428,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "16367:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "16367:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1430,
                      "name": "challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 631,
                      "src": "16385:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16367:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16338:71:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1434,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1263,
                            "src": "16440:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1435,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "termination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 561,
                          "src": "16440:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1436,
                          "name": "minimumTermination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "16461:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16440:39:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d207465726d696e6174696f6e20646964206e6f7420696e63726561736520656e6f756768",
                        "id": 1438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16493:43:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_52f68f05681233e159840b61cff71be03c3572a6f365b1b868b9f20d0b66ef2d",
                          "typeString": "literal_string \"Claim termination did not increase enough\""
                        },
                        "value": "Claim termination did not increase enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_52f68f05681233e159840b61cff71be03c3572a6f365b1b868b9f20d0b66ef2d",
                          "typeString": "literal_string \"Claim termination did not increase enough\""
                        }
                      ],
                      "id": 1433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16419:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16419:127:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1440,
                  "nodeType": "ExpressionStatement",
                  "src": "16419:127:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1442,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1263,
                          "src": "16585:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1443,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 545,
                        "src": "16585:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1444,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1255,
                        "src": "16614:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1445,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1263,
                          "src": "16635:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 547,
                        "src": "16635:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1447,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1263,
                          "src": "16662:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1448,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimerStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 549,
                        "src": "16662:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1449,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1263,
                          "src": "16694:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1450,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastChallenger",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 555,
                        "src": "16694:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1451,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1263,
                          "src": "16728:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengerStakeTotal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 557,
                        "src": "16728:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1453,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1263,
                          "src": "16768:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1454,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "termination",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 561,
                        "src": "16768:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1455,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1263,
                          "src": "16799:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1456,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fillId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 563,
                        "src": "16799:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1441,
                      "name": "ClaimMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "16562:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16562:259:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1458,
                  "nodeType": "EmitStatement",
                  "src": "16557:264:12"
                }
              ]
            },
            "documentation": {
              "id": 1253,
              "nodeType": "StructuredDocumentation",
              "src": "13570:1187:12",
              "text": "Challenge an existing claim.\n The claim must still be valid at call time.\n This function implements one round of the challenge game.\n The original claimer is allowed to call this function only\n after someone else made a challenge, i.e. every second round.\n However, once the original claimer counter-challenges, anyone\n can join the game and make another challenge.\n The caller must provide enough native tokens as their stake.\n For the original claimer, the minimum stake is\n ``challengerStakeTotal - claimerStake + claimStake``.\n For challengers, the minimum stake is\n ``claimerStake - challengerStakeTotal + 1``.\n An example (time flows downwards, claimStake = 10)::\n   claimRequest() by Max [stakes 10]\n   challengeClaim() by Alice [stakes 11]\n   challengeClaim() by Max [stakes 11]\n   challengeClaim() by Bob [stakes 16]\n In this example, if Max didn't want to lose the challenge game to\n Alice and Bob, he would have to challenge with a stake of at least 16.\n @param claimId The claim ID."
            },
            "functionSelector": "92c824d8",
            "id": 1460,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1258,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1255,
                    "src": "14857:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1259,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1257,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 779,
                  "src": "14844:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "14844:21:12"
              }
            ],
            "name": "challengeClaim",
            "nameLocation": "14771:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "14794:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "14786:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14786:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14785:17:12"
            },
            "returnParameters": {
              "id": 1260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14870:0:12"
            },
            "scope": 2018,
            "src": "14762:2066:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1583,
              "nodeType": "Block",
              "src": "17497:1148:12",
              "statements": [
                {
                  "assignments": [
                    1473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1473,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "17521:5:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1583,
                      "src": "17507:19:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1472,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1471,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 564,
                          "src": "17507:5:12"
                        },
                        "referencedDeclaration": 564,
                        "src": "17507:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1477,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1474,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "17529:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$564_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1476,
                    "indexExpression": {
                      "id": 1475,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1463,
                      "src": "17536:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17529:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$564_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17507:37:12"
                },
                {
                  "assignments": [
                    1480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1480,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "17570:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1583,
                      "src": "17554:23:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1479,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1478,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 543,
                          "src": "17554:7:12"
                        },
                        "referencedDeclaration": 543,
                        "src": "17554:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1485,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1481,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "17580:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$543_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1484,
                    "indexExpression": {
                      "expression": {
                        "id": 1482,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "17589:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1483,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 545,
                      "src": "17589:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17580:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$543_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17554:51:12"
                },
                {
                  "assignments": [
                    1487,
                    1489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1487,
                      "mutability": "mutable",
                      "name": "claimReceiver",
                      "nameLocation": "17625:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1583,
                      "src": "17617:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1486,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17617:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1489,
                      "mutability": "mutable",
                      "name": "ethToTransfer",
                      "nameLocation": "17648:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1583,
                      "src": "17640:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1488,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17640:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1493,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1491,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "17678:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1490,
                      "name": "resolveClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1829,
                      "src": "17665:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (address,uint256)"
                      }
                    },
                    "id": 1492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17665:21:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17616:70:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 1494,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1473,
                          "src": "17701:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1495,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengersStakes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 553,
                        "src": "17701:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1497,
                      "indexExpression": {
                        "id": 1496,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "17725:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17701:38:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17742:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17701:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1509,
                  "nodeType": "IfStatement",
                  "src": "17697:152:12",
                  "trueBody": {
                    "id": 1508,
                    "nodeType": "Block",
                    "src": "17745:104:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1500,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1473,
                                "src": "17796:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                  "typeString": "struct RequestManager.Claim storage pointer"
                                }
                              },
                              "id": 1503,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challengersStakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 553,
                              "src": "17796:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1504,
                            "indexExpression": {
                              "id": 1502,
                              "name": "claimReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1487,
                              "src": "17820:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17796:38:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17837:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17796:42:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1507,
                        "nodeType": "ExpressionStatement",
                        "src": "17796:42:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1510,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "17934:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1511,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawnAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 559,
                      "src": "17934:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17959:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17934:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1521,
                  "nodeType": "IfStatement",
                  "src": "17930:82:12",
                  "trueBody": {
                    "id": 1520,
                    "nodeType": "Block",
                    "src": "17962:50:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1514,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1480,
                              "src": "17976:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1516,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "activeClaims",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 536,
                            "src": "17976:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint192",
                              "typeString": "uint192"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18000:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "17976:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          }
                        },
                        "id": 1519,
                        "nodeType": "ExpressionStatement",
                        "src": "17976:25:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1522,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "18021:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1524,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawnAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 559,
                      "src": "18021:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1525,
                      "name": "ethToTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "18046:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18021:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "18021:38:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1529,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1473,
                            "src": "18090:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1530,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawnAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 559,
                          "src": "18090:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1531,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1473,
                              "src": "18131:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1532,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 549,
                            "src": "18131:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 1533,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1473,
                              "src": "18152:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1534,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "challengerStakeTotal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 557,
                            "src": "18152:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18131:47:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18090:88:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420746f20776974686472617720746f6f206c61726765",
                        "id": 1537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18192:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fbc1cd561c6fdb8c44ffb8537b819c0b098bbbbb6ac5255fbe98d734e5cf1dc0",
                          "typeString": "literal_string \"Amount to withdraw too large\""
                        },
                        "value": "Amount to withdraw too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fbc1cd561c6fdb8c44ffb8537b819c0b098bbbbb6ac5255fbe98d734e5cf1dc0",
                          "typeString": "literal_string \"Amount to withdraw too large\""
                        }
                      ],
                      "id": 1528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18069:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18069:163:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1539,
                  "nodeType": "ExpressionStatement",
                  "src": "18069:163:12"
                },
                {
                  "assignments": [
                    1541,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1541,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "18249:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1583,
                      "src": "18244:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1540,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "18244:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1548,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18300:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1542,
                          "name": "claimReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1487,
                          "src": "18259:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "18259:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1544,
                          "name": "ethToTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1489,
                          "src": "18285:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "18259:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18259:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18243:60:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1550,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1541,
                        "src": "18321:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18327:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18313:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18313:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1553,
                  "nodeType": "ExpressionStatement",
                  "src": "18313:37:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1555,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "18386:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1556,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1473,
                          "src": "18395:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1557,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 545,
                        "src": "18395:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1558,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "18412:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1554,
                      "name": "ClaimStakeWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "18366:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18366:60:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1560,
                  "nodeType": "EmitStatement",
                  "src": "18361:65:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 1561,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1480,
                            "src": "18454:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1562,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 534,
                          "src": "18454:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FillInfo_$6_storage",
                            "typeString": "struct BeamerUtils.FillInfo storage ref"
                          }
                        },
                        "id": 1563,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "filler",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3,
                        "src": "18454:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18493:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18485:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1564,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18485:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18485:10:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "18454:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1569,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "18511:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 1570,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1473,
                          "src": "18528:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1571,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 547,
                        "src": "18528:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "18511:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "18454:87:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1580,
                  "nodeType": "IfStatement",
                  "src": "18437:171:12",
                  "trueBody": {
                    "id": 1579,
                    "nodeType": "Block",
                    "src": "18552:56:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1575,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1480,
                              "src": "18582:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            {
                              "id": 1576,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1473,
                              "src": "18591:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            ],
                            "id": 1574,
                            "name": "withdrawDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1888,
                            "src": "18566:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Request_$543_storage_ptr_$_t_struct$_Claim_$564_storage_ptr_$returns$__$",
                              "typeString": "function (struct RequestManager.Request storage pointer,struct RequestManager.Claim storage pointer)"
                            }
                          },
                          "id": 1577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18566:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1578,
                        "nodeType": "ExpressionStatement",
                        "src": "18566:31:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1581,
                    "name": "claimReceiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1487,
                    "src": "18625:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1470,
                  "id": 1582,
                  "nodeType": "Return",
                  "src": "18618:20:12"
                }
              ]
            },
            "documentation": {
              "id": 1461,
              "nodeType": "StructuredDocumentation",
              "src": "16834:546:12",
              "text": "Withdraw the deposit that the request submitter left with the contract,\n as well as the staked native tokens associated with the claim.\n In case the caller of this function is a challenger that won the game,\n they will only get their staked native tokens plus the reward in the form\n of full (sole challenger) or partial (multiple challengers) amount\n of native tokens staked by the dishonest claimer.\n @param claimId The claim ID.\n @return The address of the deposit receiver."
            },
            "functionSelector": "2e1a7d4d",
            "id": 1584,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1466,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1463,
                    "src": "17458:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1467,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1465,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 779,
                  "src": "17445:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "17445:21:12"
              }
            ],
            "name": "withdraw",
            "nameLocation": "17394:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "17411:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1584,
                  "src": "17403:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17403:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17402:17:12"
            },
            "returnParameters": {
              "id": 1470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1469,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1584,
                  "src": "17484:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17484:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17483:9:12"
            },
            "scope": 2018,
            "src": "17385:1260:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1828,
              "nodeType": "Block",
              "src": "18758:3594:12",
              "statements": [
                {
                  "assignments": [
                    1595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1595,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "18782:5:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1828,
                      "src": "18768:19:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1594,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1593,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 564,
                          "src": "18768:5:12"
                        },
                        "referencedDeclaration": 564,
                        "src": "18768:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1599,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1596,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "18790:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$564_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1598,
                    "indexExpression": {
                      "id": 1597,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1586,
                      "src": "18797:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18790:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$564_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18768:37:12"
                },
                {
                  "assignments": [
                    1602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1602,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "18831:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1828,
                      "src": "18815:23:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1601,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1600,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 543,
                          "src": "18815:7:12"
                        },
                        "referencedDeclaration": 543,
                        "src": "18815:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1607,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1603,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "18841:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$543_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1606,
                    "indexExpression": {
                      "expression": {
                        "id": 1604,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "18850:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1605,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 545,
                      "src": "18850:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18841:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$543_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18815:51:12"
                },
                {
                  "assignments": [
                    1609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1609,
                      "mutability": "mutable",
                      "name": "claimerStake",
                      "nameLocation": "18884:12:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1828,
                      "src": "18876:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1608,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18876:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1612,
                  "initialValue": {
                    "expression": {
                      "id": 1610,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1595,
                      "src": "18899:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1611,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimerStake",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 549,
                    "src": "18899:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18876:41:12"
                },
                {
                  "assignments": [
                    1614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1614,
                      "mutability": "mutable",
                      "name": "challengerStakeTotal",
                      "nameLocation": "18935:20:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1828,
                      "src": "18927:28:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1613,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18927:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1617,
                  "initialValue": {
                    "expression": {
                      "id": 1615,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1595,
                      "src": "18958:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "challengerStakeTotal",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 557,
                    "src": "18958:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18927:57:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1619,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1595,
                            "src": "19015:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1620,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawnAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 559,
                          "src": "19015:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1621,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1609,
                            "src": "19039:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1622,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1614,
                            "src": "19054:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19039:35:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19015:59:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d20616c72656164792077697468647261776e",
                        "id": 1625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19088:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fed46cfba65dedd80d8275fc8dce90ac19cc49eb8cac5fe8e04a827801d5c7ac",
                          "typeString": "literal_string \"Claim already withdrawn\""
                        },
                        "value": "Claim already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fed46cfba65dedd80d8275fc8dce90ac19cc49eb8cac5fe8e04a827801d5c7ac",
                          "typeString": "literal_string \"Claim already withdrawn\""
                        }
                      ],
                      "id": 1618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18994:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18994:129:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1627,
                  "nodeType": "ExpressionStatement",
                  "src": "18994:129:12"
                },
                {
                  "assignments": [
                    1629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1629,
                      "mutability": "mutable",
                      "name": "requestHash",
                      "nameLocation": "19142:11:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1828,
                      "src": "19134:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1628,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19134:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1645,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1632,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1595,
                          "src": "19199:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1633,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 545,
                        "src": "19199:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1634,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "19228:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainid",
                        "nodeType": "MemberAccess",
                        "src": "19228:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1636,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1602,
                          "src": "19255:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1637,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "targetChainId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 525,
                        "src": "19255:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1638,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1602,
                          "src": "19290:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1639,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "targetTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 527,
                        "src": "19290:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1640,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1602,
                          "src": "19330:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1641,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "targetAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 529,
                        "src": "19330:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1642,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1602,
                          "src": "19365:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1643,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 531,
                        "src": "19365:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1630,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "19156:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$87_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 1631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createRequestHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "19156:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256,address,address,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 1644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19156:233:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19134:255:12"
                },
                {
                  "assignments": [
                    1647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1647,
                      "mutability": "mutable",
                      "name": "fillHash",
                      "nameLocation": "19408:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1828,
                      "src": "19400:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1646,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19400:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1654,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1650,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1629,
                        "src": "19459:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1651,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1595,
                          "src": "19484:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1652,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fillId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 563,
                        "src": "19484:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1648,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "19419:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$87_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 1649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createFillHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "19419:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 1653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19419:87:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19400:106:12"
                },
                {
                  "assignments": [
                    1656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1656,
                      "mutability": "mutable",
                      "name": "claimValid",
                      "nameLocation": "19522:10:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1828,
                      "src": "19517:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1655,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19517:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1658,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19535:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19517:23:12"
                },
                {
                  "assignments": [
                    1663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1663,
                      "mutability": "mutable",
                      "name": "withdrawInfo",
                      "nameLocation": "19578:12:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1828,
                      "src": "19550:40:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillInfo_$6_memory_ptr",
                        "typeString": "struct BeamerUtils.FillInfo"
                      },
                      "typeName": {
                        "id": 1662,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1661,
                          "name": "BeamerUtils.FillInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6,
                          "src": "19550:20:12"
                        },
                        "referencedDeclaration": 6,
                        "src": "19550:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillInfo_$6_storage_ptr",
                          "typeString": "struct BeamerUtils.FillInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1666,
                  "initialValue": {
                    "expression": {
                      "id": 1664,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1602,
                      "src": "19593:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                        "typeString": "struct RequestManager.Request storage pointer"
                      }
                    },
                    "id": 1665,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "withdrawInfo",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 534,
                    "src": "19593:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillInfo_$6_storage",
                      "typeString": "struct BeamerUtils.FillInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19550:63:12"
                },
                {
                  "assignments": [
                    1668,
                    1670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1668,
                      "mutability": "mutable",
                      "name": "filler",
                      "nameLocation": "20052:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1828,
                      "src": "20044:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1667,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "20044:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1670,
                      "mutability": "mutable",
                      "name": "fillId",
                      "nameLocation": "20068:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1828,
                      "src": "20060:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1669,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "20060:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1675,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1673,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1629,
                        "src": "20118:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1671,
                        "name": "resolutionRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 652,
                        "src": "20078:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ResolutionRegistry_$2168",
                          "typeString": "contract ResolutionRegistry"
                        }
                      },
                      "id": 1672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fillers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2045,
                      "src": "20078:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$_t_bytes32_$",
                        "typeString": "function (bytes32) view external returns (address,bytes32)"
                      }
                    },
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20078:61:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_bytes32_$",
                      "typeString": "tuple(address,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20043:96:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1676,
                      "name": "filler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1668,
                      "src": "20154:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20172:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20164:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1677,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20164:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20164:10:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20154:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1693,
                  "nodeType": "IfStatement",
                  "src": "20150:112:12",
                  "trueBody": {
                    "id": 1692,
                    "nodeType": "Block",
                    "src": "20176:86:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1682,
                                "name": "filler",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1668,
                                "src": "20191:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1683,
                                "name": "fillId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1670,
                                "src": "20199:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "id": 1684,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "20190:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_bytes32_$",
                              "typeString": "tuple(address,bytes32)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 1685,
                                  "name": "withdrawInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1663,
                                  "src": "20210:12:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_FillInfo_$6_memory_ptr",
                                    "typeString": "struct BeamerUtils.FillInfo memory"
                                  }
                                },
                                "id": 1686,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "filler",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3,
                                "src": "20210:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1687,
                                  "name": "withdrawInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1663,
                                  "src": "20231:12:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_FillInfo_$6_memory_ptr",
                                    "typeString": "struct BeamerUtils.FillInfo memory"
                                  }
                                },
                                "id": 1688,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fillId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5,
                                "src": "20231:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "id": 1689,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "20209:42:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_bytes32_$",
                              "typeString": "tuple(address,bytes32)"
                            }
                          },
                          "src": "20190:61:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1691,
                        "nodeType": "ExpressionStatement",
                        "src": "20190:61:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 1696,
                        "name": "fillHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1647,
                        "src": "20313:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1694,
                        "name": "resolutionRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 652,
                        "src": "20276:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ResolutionRegistry_$2168",
                          "typeString": "contract ResolutionRegistry"
                        }
                      },
                      "id": 1695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "invalidFillHashes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2050,
                      "src": "20276:36:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32) view external returns (bool)"
                      }
                    },
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20276:46:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1703,
                        "name": "filler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1668,
                        "src": "20416:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20434:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20426:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1704,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20426:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20426:10:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "20416:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1737,
                      "nodeType": "Block",
                      "src": "20576:246:12",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1723,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "20654:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "20654:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1725,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1595,
                                    "src": "20673:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                      "typeString": "struct RequestManager.Claim storage pointer"
                                    }
                                  },
                                  "id": 1726,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "termination",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 561,
                                  "src": "20673:17:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20654:36:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "436c61696d20706572696f64206e6f742066696e6973686564",
                                "id": 1728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20708:27:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b8448f60bea41c2365f4846fbc9740459fd6b3e474680edd33ee842ead499b03",
                                  "typeString": "literal_string \"Claim period not finished\""
                                },
                                "value": "Claim period not finished"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b8448f60bea41c2365f4846fbc9740459fd6b3e474680edd33ee842ead499b03",
                                  "typeString": "literal_string \"Claim period not finished\""
                                }
                              ],
                              "id": 1722,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "20629:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20629:120:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1730,
                          "nodeType": "ExpressionStatement",
                          "src": "20629:120:12"
                        },
                        {
                          "expression": {
                            "id": 1735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1731,
                              "name": "claimValid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1656,
                              "src": "20763:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1732,
                                "name": "claimerStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1609,
                                "src": "20776:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 1733,
                                "name": "challengerStakeTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1614,
                                "src": "20791:20:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "20776:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "20763:48:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1736,
                          "nodeType": "ExpressionStatement",
                          "src": "20763:48:12"
                        }
                      ]
                    },
                    "id": 1738,
                    "nodeType": "IfStatement",
                    "src": "20412:410:12",
                    "trueBody": {
                      "id": 1721,
                      "nodeType": "Block",
                      "src": "20438:132:12",
                      "statements": [
                        {
                          "expression": {
                            "id": 1719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1709,
                              "name": "claimValid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1656,
                              "src": "20497:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1710,
                                  "name": "filler",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1668,
                                  "src": "20510:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1711,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1595,
                                    "src": "20520:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                      "typeString": "struct RequestManager.Claim storage pointer"
                                    }
                                  },
                                  "id": 1712,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "claimer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 547,
                                  "src": "20520:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "20510:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 1717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1714,
                                  "name": "fillId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1670,
                                  "src": "20537:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1715,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1595,
                                    "src": "20547:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                      "typeString": "struct RequestManager.Claim storage pointer"
                                    }
                                  },
                                  "id": 1716,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "fillId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 563,
                                  "src": "20547:12:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "20537:22:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "20510:49:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "20497:62:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1720,
                          "nodeType": "ExpressionStatement",
                          "src": "20497:62:12"
                        }
                      ]
                    }
                  },
                  "id": 1739,
                  "nodeType": "IfStatement",
                  "src": "20272:550:12",
                  "trueBody": {
                    "id": 1702,
                    "nodeType": "Block",
                    "src": "20324:82:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1698,
                            "name": "claimValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1656,
                            "src": "20377:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20390:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "20377:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1701,
                        "nodeType": "ExpressionStatement",
                        "src": "20377:18:12"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1741,
                      "mutability": "mutable",
                      "name": "ethToTransfer",
                      "nameLocation": "20894:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1828,
                      "src": "20886:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1740,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20886:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1742,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20886:21:12"
                },
                {
                  "assignments": [
                    1744
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1744,
                      "mutability": "mutable",
                      "name": "claimReceiver",
                      "nameLocation": "20925:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1828,
                      "src": "20917:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1743,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "20917:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1745,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20917:21:12"
                },
                {
                  "condition": {
                    "id": 1746,
                    "name": "claimValid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1656,
                    "src": "20953:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1759,
                        "name": "challengerStakeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1614,
                        "src": "21157:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21180:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "21157:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1794,
                      "nodeType": "Block",
                      "src": "21457:269:12",
                      "statements": [
                        {
                          "expression": {
                            "id": 1787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1785,
                              "name": "ethToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1741,
                              "src": "21650:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1786,
                              "name": "claimerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1609,
                              "src": "21666:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21650:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1788,
                          "nodeType": "ExpressionStatement",
                          "src": "21650:28:12"
                        },
                        {
                          "expression": {
                            "id": 1792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1789,
                              "name": "claimReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1744,
                              "src": "21692:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1790,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2965,
                                "src": "21708:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21708:7:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "21692:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1793,
                          "nodeType": "ExpressionStatement",
                          "src": "21692:23:12"
                        }
                      ]
                    },
                    "id": 1795,
                    "nodeType": "IfStatement",
                    "src": "21153:573:12",
                    "trueBody": {
                      "id": 1784,
                      "nodeType": "Block",
                      "src": "21183:268:12",
                      "statements": [
                        {
                          "expression": {
                            "id": 1770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1762,
                              "name": "ethToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1741,
                              "src": "21266:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 1763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21282:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 1764,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1595,
                                    "src": "21286:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                      "typeString": "struct RequestManager.Claim storage pointer"
                                    }
                                  },
                                  "id": 1765,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "challengersStakes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 553,
                                  "src": "21286:23:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1768,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1766,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "21310:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1767,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "21310:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21286:35:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21282:39:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21266:55:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1771,
                          "nodeType": "ExpressionStatement",
                          "src": "21266:55:12"
                        },
                        {
                          "expression": {
                            "id": 1775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1772,
                              "name": "claimReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1744,
                              "src": "21335:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 1773,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "21351:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "21351:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "21335:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1776,
                          "nodeType": "ExpressionStatement",
                          "src": "21335:26:12"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1778,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1741,
                                  "src": "21384:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1779,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21400:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "21384:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4368616c6c656e67657220686173206e6f7468696e6720746f207769746864726177",
                                "id": 1781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21403:36:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_53dcae0c26834ddf9df4522d4ebdb30b7c2bd99b5ce87dd1bca47f3b3a7ab017",
                                  "typeString": "literal_string \"Challenger has nothing to withdraw\""
                                },
                                "value": "Challenger has nothing to withdraw"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_53dcae0c26834ddf9df4522d4ebdb30b7c2bd99b5ce87dd1bca47f3b3a7ab017",
                                  "typeString": "literal_string \"Challenger has nothing to withdraw\""
                                }
                              ],
                              "id": 1777,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "21376:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21376:64:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1783,
                          "nodeType": "ExpressionStatement",
                          "src": "21376:64:12"
                        }
                      ]
                    }
                  },
                  "id": 1796,
                  "nodeType": "IfStatement",
                  "src": "20949:777:12",
                  "trueBody": {
                    "id": 1758,
                    "nodeType": "Block",
                    "src": "20965:182:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1747,
                            "name": "ethToTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1741,
                            "src": "21042:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1748,
                              "name": "claimerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1609,
                              "src": "21058:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1749,
                              "name": "challengerStakeTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1614,
                              "src": "21073:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21058:35:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21042:51:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1752,
                        "nodeType": "ExpressionStatement",
                        "src": "21042:51:12"
                      },
                      {
                        "expression": {
                          "id": 1756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1753,
                            "name": "claimReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1744,
                            "src": "21107:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1754,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1595,
                              "src": "21123:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1755,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 547,
                            "src": "21123:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "21107:29:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1757,
                        "nodeType": "ExpressionStatement",
                        "src": "21107:29:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1797,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "22017:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "22017:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1799,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "22031:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1800,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastChallenger",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 555,
                      "src": "22031:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "22017:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1823,
                  "nodeType": "IfStatement",
                  "src": "22013:285:12",
                  "trueBody": {
                    "id": 1822,
                    "nodeType": "Block",
                    "src": "22053:245:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1802,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1609,
                            "src": "22071:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1803,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1614,
                            "src": "22086:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22071:35:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1820,
                          "nodeType": "Block",
                          "src": "22201:87:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 1818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1813,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1741,
                                  "src": "22219:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1816,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1814,
                                        "name": "challengerStakeTotal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1614,
                                        "src": "22237:20:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1815,
                                        "name": "claimerStake",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1609,
                                        "src": "22260:12:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "22237:35:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1817,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "22236:37:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22219:54:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1819,
                              "nodeType": "ExpressionStatement",
                              "src": "22219:54:12"
                            }
                          ]
                        },
                        "id": 1821,
                        "nodeType": "IfStatement",
                        "src": "22067:221:12",
                        "trueBody": {
                          "id": 1812,
                          "nodeType": "Block",
                          "src": "22108:87:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 1810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1805,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1741,
                                  "src": "22126:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1808,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1806,
                                        "name": "claimerStake",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1609,
                                        "src": "22144:12:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1807,
                                        "name": "challengerStakeTotal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1614,
                                        "src": "22159:20:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "22144:35:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1809,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "22143:37:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22126:54:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1811,
                              "nodeType": "ExpressionStatement",
                              "src": "22126:54:12"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1824,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1744,
                        "src": "22316:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1825,
                        "name": "ethToTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1741,
                        "src": "22331:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1826,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "22315:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "functionReturnParameters": 1592,
                  "id": 1827,
                  "nodeType": "Return",
                  "src": "22308:37:12"
                }
              ]
            },
            "id": 1829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resolveClaim",
            "nameLocation": "18660:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1586,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "18681:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1829,
                  "src": "18673:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18673:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18672:17:12"
            },
            "returnParameters": {
              "id": 1592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1589,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1829,
                  "src": "18736:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18736:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1591,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1829,
                  "src": "18745:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18745:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18735:18:12"
            },
            "scope": 2018,
            "src": "18651:3701:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1887,
              "nodeType": "Block",
              "src": "22449:407:12",
              "statements": [
                {
                  "assignments": [
                    1839
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1839,
                      "mutability": "mutable",
                      "name": "claimer",
                      "nameLocation": "22467:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1887,
                      "src": "22459:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1838,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "22459:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1842,
                  "initialValue": {
                    "expression": {
                      "id": 1840,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1835,
                      "src": "22477:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 547,
                    "src": "22477:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22459:31:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1844,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1835,
                          "src": "22522:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1845,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 545,
                        "src": "22522:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1846,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "22539:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1843,
                      "name": "DepositWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "22505:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 1847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22505:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1848,
                  "nodeType": "EmitStatement",
                  "src": "22500:47:12"
                },
                {
                  "expression": {
                    "id": 1858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1849,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1832,
                        "src": "22558:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1851,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 534,
                      "src": "22558:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillInfo_$6_storage",
                        "typeString": "struct BeamerUtils.FillInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1854,
                          "name": "claimer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1839,
                          "src": "22602:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1855,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1835,
                            "src": "22611:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fillId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 563,
                          "src": "22611:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 1852,
                          "name": "BeamerUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "22581:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$87_$",
                            "typeString": "type(library BeamerUtils)"
                          }
                        },
                        "id": 1853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FillInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6,
                        "src": "22581:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FillInfo_$6_storage_ptr_$",
                          "typeString": "type(struct BeamerUtils.FillInfo storage pointer)"
                        }
                      },
                      "id": 1857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22581:43:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillInfo_$6_memory_ptr",
                        "typeString": "struct BeamerUtils.FillInfo memory"
                      }
                    },
                    "src": "22558:66:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillInfo_$6_storage",
                      "typeString": "struct BeamerUtils.FillInfo storage ref"
                    }
                  },
                  "id": 1859,
                  "nodeType": "ExpressionStatement",
                  "src": "22558:66:12"
                },
                {
                  "expression": {
                    "id": 1866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1860,
                        "name": "collectedProtocolFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "22635:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1863,
                      "indexExpression": {
                        "expression": {
                          "id": 1861,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1832,
                          "src": "22657:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1862,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 523,
                        "src": "22657:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22635:49:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1864,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1832,
                        "src": "22688:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1865,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "protocolFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 542,
                      "src": "22688:32:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22635:85:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1867,
                  "nodeType": "ExpressionStatement",
                  "src": "22635:85:12"
                },
                {
                  "assignments": [
                    1870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1870,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "22738:5:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1887,
                      "src": "22731:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3141",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1869,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1868,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3141,
                          "src": "22731:6:12"
                        },
                        "referencedDeclaration": 3141,
                        "src": "22731:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3141",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1875,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1872,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1832,
                          "src": "22753:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1873,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 523,
                        "src": "22753:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1871,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3141,
                      "src": "22746:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3141_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22746:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3141",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22731:49:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1879,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "22809:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1880,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1832,
                            "src": "22818:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1881,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 531,
                          "src": "22818:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 1882,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1832,
                            "src": "22835:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1883,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lpFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 540,
                          "src": "22835:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "22818:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1876,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1870,
                        "src": "22790:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3141",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3172,
                      "src": "22790:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3141_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3141_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22790:59:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1886,
                  "nodeType": "ExpressionStatement",
                  "src": "22790:59:12"
                }
              ]
            },
            "id": 1888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawDeposit",
            "nameLocation": "22367:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1832,
                  "mutability": "mutable",
                  "name": "request",
                  "nameLocation": "22399:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "22383:23:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                    "typeString": "struct RequestManager.Request"
                  },
                  "typeName": {
                    "id": 1831,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1830,
                      "name": "Request",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 543,
                      "src": "22383:7:12"
                    },
                    "referencedDeclaration": 543,
                    "src": "22383:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$543_storage_ptr",
                      "typeString": "struct RequestManager.Request"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1835,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "22422:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "22408:19:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                    "typeString": "struct RequestManager.Claim"
                  },
                  "typeName": {
                    "id": 1834,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1833,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 564,
                      "src": "22408:5:12"
                    },
                    "referencedDeclaration": 564,
                    "src": "22408:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$564_storage_ptr",
                      "typeString": "struct RequestManager.Claim"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22382:46:12"
            },
            "returnParameters": {
              "id": 1837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22449:0:12"
            },
            "scope": 2018,
            "src": "22358:498:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1931,
              "nodeType": "Block",
              "src": "23309:264:12",
              "statements": [
                {
                  "assignments": [
                    1899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1899,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "23327:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1931,
                      "src": "23319:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1898,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23319:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1903,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1900,
                      "name": "collectedProtocolFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 690,
                      "src": "23336:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1902,
                    "indexExpression": {
                      "id": 1901,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1891,
                      "src": "23358:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23336:35:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23319:52:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1905,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1899,
                          "src": "23389:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23398:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "23389:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f746f636f6c20666565206973207a65726f",
                        "id": 1908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23401:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce8ad1c74ab92ff10c0820b04fa1725b871af2e2542ec5c6a08e76dbfc13ba06",
                          "typeString": "literal_string \"Protocol fee is zero\""
                        },
                        "value": "Protocol fee is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce8ad1c74ab92ff10c0820b04fa1725b871af2e2542ec5c6a08e76dbfc13ba06",
                          "typeString": "literal_string \"Protocol fee is zero\""
                        }
                      ],
                      "id": 1904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23381:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23381:43:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1910,
                  "nodeType": "ExpressionStatement",
                  "src": "23381:43:12"
                },
                {
                  "expression": {
                    "id": 1915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1911,
                        "name": "collectedProtocolFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "23434:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1913,
                      "indexExpression": {
                        "id": 1912,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1891,
                        "src": "23456:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23434:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23472:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23434:39:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1916,
                  "nodeType": "ExpressionStatement",
                  "src": "23434:39:12"
                },
                {
                  "assignments": [
                    1919
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1919,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "23491:5:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1931,
                      "src": "23484:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3141",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1918,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1917,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3141,
                          "src": "23484:6:12"
                        },
                        "referencedDeclaration": 3141,
                        "src": "23484:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3141",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1923,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1921,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1891,
                        "src": "23506:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1920,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3141,
                      "src": "23499:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3141_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23499:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3141",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23484:35:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1927,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1893,
                        "src": "23548:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1928,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1899,
                        "src": "23559:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1924,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "23529:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3141",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3172,
                      "src": "23529:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3141_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3141_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23529:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1930,
                  "nodeType": "ExpressionStatement",
                  "src": "23529:37:12"
                }
              ]
            },
            "documentation": {
              "id": 1889,
              "nodeType": "StructuredDocumentation",
              "src": "22862:332:12",
              "text": "Withdraw protocol fees collected by the contract.\n Protocol fees are paid in token transferred.\n .. note:: This function can only be called by the contract owner.\n @param tokenAddress The address of the token contract.\n @param recipient The address the fees should be sent to."
            },
            "functionSelector": "cf7b287f",
            "id": 1932,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1896,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1895,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2979,
                  "src": "23295:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "23295:9:12"
              }
            ],
            "name": "withdrawProtocolFees",
            "nameLocation": "23208:20:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1891,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "23237:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "23229:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23229:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1893,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "23259:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "23251:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23251:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23228:41:12"
            },
            "returnParameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23309:0:12"
            },
            "scope": 2018,
            "src": "23199:374:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1956,
              "nodeType": "Block",
              "src": "24030:115:12",
              "statements": [
                {
                  "expression": {
                    "id": 1946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1944,
                      "name": "protocolFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "24040:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1945,
                      "name": "newProtocolFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1935,
                      "src": "24057:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24040:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1947,
                  "nodeType": "ExpressionStatement",
                  "src": "24040:34:12"
                },
                {
                  "expression": {
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1948,
                      "name": "lpFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "24084:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1949,
                      "name": "newLpFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1937,
                      "src": "24095:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24084:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1951,
                  "nodeType": "ExpressionStatement",
                  "src": "24084:22:12"
                },
                {
                  "expression": {
                    "id": 1954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1952,
                      "name": "minLpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "24116:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1953,
                      "name": "newMinLpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1939,
                      "src": "24127:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24116:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1955,
                  "nodeType": "ExpressionStatement",
                  "src": "24116:22:12"
                }
              ]
            },
            "documentation": {
              "id": 1933,
              "nodeType": "StructuredDocumentation",
              "src": "23579:305:12",
              "text": "Update fee parameters.\n .. note:: This function can only be called by the contract owner.\n @param newProtocolFeePPM The new value for ``protocolFeePPM``.\n @param newLpFeePPM The new value for ``lpFeePPM``.\n @param newMinLpFee The new value for ``minLpFee``."
            },
            "functionSelector": "78da194b",
            "id": 1957,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1942,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1941,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2979,
                  "src": "24020:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "24020:9:12"
              }
            ],
            "name": "updateFeeData",
            "nameLocation": "23898:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1935,
                  "mutability": "mutable",
                  "name": "newProtocolFeePPM",
                  "nameLocation": "23929:17:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1957,
                  "src": "23921:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23921:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1937,
                  "mutability": "mutable",
                  "name": "newLpFeePPM",
                  "nameLocation": "23964:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1957,
                  "src": "23956:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23956:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1939,
                  "mutability": "mutable",
                  "name": "newMinLpFee",
                  "nameLocation": "23993:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1957,
                  "src": "23985:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23985:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23911:99:12"
            },
            "returnParameters": {
              "id": 1943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24030:0:12"
            },
            "scope": 2018,
            "src": "23889:256:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1969,
              "nodeType": "Block",
              "src": "24426:49:12",
              "statements": [
                {
                  "expression": {
                    "id": 1967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1965,
                      "name": "transferLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 685,
                      "src": "24436:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1966,
                      "name": "newTransferLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1960,
                      "src": "24452:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24436:32:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1968,
                  "nodeType": "ExpressionStatement",
                  "src": "24436:32:12"
                }
              ]
            },
            "documentation": {
              "id": 1958,
              "nodeType": "StructuredDocumentation",
              "src": "24151:196:12",
              "text": "Update the transfer amount limit.\n .. note:: This function can only be called by the contract owner.\n @param newTransferLimit The new value for ``transferLimit``."
            },
            "functionSelector": "d762a37b",
            "id": 1970,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1963,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1962,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2979,
                  "src": "24416:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "24416:9:12"
              }
            ],
            "name": "updateTransferLimit",
            "nameLocation": "24361:19:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1960,
                  "mutability": "mutable",
                  "name": "newTransferLimit",
                  "nameLocation": "24389:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1970,
                  "src": "24381:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24381:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24380:26:12"
            },
            "returnParameters": {
              "id": 1964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24426:0:12"
            },
            "scope": 2018,
            "src": "24352:123:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1998,
              "nodeType": "Block",
              "src": "24852:211:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1981,
                          "name": "finalityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1975,
                          "src": "24870:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24887:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24870:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696e616c69747920706572696f64206d7573742062652067726561746572207468616e2030",
                        "id": 1984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24890:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25ea573be6ea1512aa3df00891acf9b351bb62ca968c15c699c1ce305b8feae2",
                          "typeString": "literal_string \"Finality period must be greater than 0\""
                        },
                        "value": "Finality period must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25ea573be6ea1512aa3df00891acf9b351bb62ca968c15c699c1ce305b8feae2",
                          "typeString": "literal_string \"Finality period must be greater than 0\""
                        }
                      ],
                      "id": 1980,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24862:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24862:69:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1986,
                  "nodeType": "ExpressionStatement",
                  "src": "24862:69:12"
                },
                {
                  "expression": {
                    "id": 1991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1987,
                        "name": "finalityPeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "24941:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1989,
                      "indexExpression": {
                        "id": 1988,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1973,
                        "src": "24957:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24941:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1990,
                      "name": "finalityPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1975,
                      "src": "24974:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24941:47:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1992,
                  "nodeType": "ExpressionStatement",
                  "src": "24941:47:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1994,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1973,
                        "src": "25026:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1995,
                        "name": "finalityPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1975,
                        "src": "25041:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1993,
                      "name": "FinalityPeriodUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 622,
                      "src": "25004:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25004:52:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1997,
                  "nodeType": "EmitStatement",
                  "src": "24999:57:12"
                }
              ]
            },
            "documentation": {
              "id": 1971,
              "nodeType": "StructuredDocumentation",
              "src": "24481:253:12",
              "text": "Set the finality period for the given target chain.\n .. note:: This function can only be called by the contract owner.\n @param targetChainId The target chain ID.\n @param finalityPeriod Finality period in seconds."
            },
            "functionSelector": "d137920b",
            "id": 1999,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1978,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1977,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2979,
                  "src": "24838:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "24838:9:12"
              }
            ],
            "name": "setFinalityPeriod",
            "nameLocation": "24748:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1973,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "24774:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1999,
                  "src": "24766:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24766:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1975,
                  "mutability": "mutable",
                  "name": "finalityPeriod",
                  "nameLocation": "24797:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1999,
                  "src": "24789:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24789:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24765:47:12"
            },
            "returnParameters": {
              "id": 1979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24852:0:12"
            },
            "scope": 2018,
            "src": "24739:324:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2016,
              "nodeType": "Block",
              "src": "25421:103:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2006,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 642,
                          "src": "25439:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 2007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25453:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "25439:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420616c72656164792064657072656361746564",
                        "id": 2009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25460:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad2c6c42423d3e98c875f9dce2f80040aa442e807c64f7403f0d4b02b859f419",
                          "typeString": "literal_string \"Contract already deprecated\""
                        },
                        "value": "Contract already deprecated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad2c6c42423d3e98c875f9dce2f80040aa442e807c64f7403f0d4b02b859f419",
                          "typeString": "literal_string \"Contract already deprecated\""
                        }
                      ],
                      "id": 2005,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25431:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25431:59:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2011,
                  "nodeType": "ExpressionStatement",
                  "src": "25431:59:12"
                },
                {
                  "expression": {
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2012,
                      "name": "deprecated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 642,
                      "src": "25500:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25513:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "25500:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2015,
                  "nodeType": "ExpressionStatement",
                  "src": "25500:17:12"
                }
              ]
            },
            "documentation": {
              "id": 2000,
              "nodeType": "StructuredDocumentation",
              "src": "25069:299:12",
              "text": "Mark the contract as deprecated.\n Once the contract is deprecated, it cannot be used to create new\n requests anymore. Withdrawing deposited funds and claim stakes\n still works, though.\n .. note:: This function can only be called by the contract owner."
            },
            "functionSelector": "ea656f7d",
            "id": 2017,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2003,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2002,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2979,
                  "src": "25411:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "25411:9:12"
              }
            ],
            "name": "deprecateContract",
            "nameLocation": "25382:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25399:2:12"
            },
            "returnParameters": {
              "id": 2004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25421:0:12"
            },
            "scope": 2018,
            "src": "25373:151:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2019,
        "src": "762:24764:12",
        "usedErrors": []
      }
    ],
    "src": "32:25495:12"
  },
  "bytecode": "6080604052674563918244f40000600b556103e8600c556000600d5569021e19e0c9bab2400000600e553480156200003657600080fd5b5060405162002864380380620028648339810160408190526200005991620000e8565b620000643362000098565b600193909355600291909155600355600780546001600160a01b0319166001600160a01b0390921691909117905562000139565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060008060808587031215620000ff57600080fd5b845160208601516040870151606088015192965090945092506001600160a01b03811681146200012e57600080fd5b939692955090935050565b61271b80620001496000396000f3fe6080604052600436106101ee5760003560e01c8063973a814e1161010d578063d3868348116100a0578063ea656f7d1161006f578063ea656f7d146106df578063eb321173146106f4578063f2fde38b1461070a578063f7d64cec1461072a578063f94325171461074a57600080fd5b8063d386834814610673578063d762a37b14610693578063e2653eeb146106b3578063e7aad5c4146106c957600080fd5b8063b1743c5b116100dc578063b1743c5b14610600578063cea74edf14610613578063cf7b287f14610633578063d137920b1461065357600080fd5b8063973a814e146104fa578063a032b5f414610510578063a888c2cd14610530578063ab9634ee146105e057600080fd5b80636bc6c8d11161018557806381d12c581161015457806381d12c58146103875780638da5cb5b146104b157806392c824d8146104cf57806396171d05146104e257600080fd5b80636bc6c8d11461030d578063715018a61461033a57806378da194b146103515780637dc2cd981461037157600080fd5b80632f4212b8116101c15780632f4212b8146102945780632f92f009146102b45780634efa8f17146102e15780635d5aa11b146102f757600080fd5b80630e136b19146101f35780631489f8d2146102225780631d18adc5146102465780632e1a7d4d1461025c575b600080fd5b3480156101ff57600080fd5b5060045461020d9060ff1681565b60405190151581526020015b60405180910390f35b34801561022e57600080fd5b5061023861012c81565b604051908152602001610219565b34801561025257600080fd5b5061023860035481565b34801561026857600080fd5b5061027c61027736600461237d565b610760565b6040516001600160a01b039091168152602001610219565b3480156102a057600080fd5b506102386102af3660046123ab565b610a17565b3480156102c057600080fd5b506102386102cf36600461237d565b60086020526000908152604090205481565b3480156102ed57600080fd5b5061023860065481565b34801561030357600080fd5b50610238600b5481565b34801561031957600080fd5b50610238610328366004612410565b600f6020526000908152604090205481565b34801561034657600080fd5b5061034f610ea3565b005b34801561035d57600080fd5b5061034f61036c36600461242d565b610ed9565b34801561037d57600080fd5b5061023860025481565b34801561039357600080fd5b5061042d6103a236600461237d565b6009602081815260009283526040928390208054600182015460028301546003840154600485015460058601548951808b01909a5260068701546001600160a01b039081168b526007880154988b0198909852600887015498870154600a880154600b909801549689169a9589169994989384169793909216959094936001600160c01b031692908b565b604080516001600160a01b039c8d1681529a8c166020808d0191909152908b0199909952968a1660608a0152948916608089015260a0880193909352815190971660c08701529093015160e08501526001600160c01b0390941661010084015261012083019190915261014082019290925261016081019190915261018001610219565b3480156104bd57600080fd5b506000546001600160a01b031661027c565b61034f6104dd36600461237d565b610f11565b3480156104ee57600080fd5b506102386301dfe20081565b34801561050657600080fd5b5061023860055481565b34801561051c57600080fd5b5061023861052b36600461237d565b611309565b34801561053c57600080fd5b5061059a61054b36600461237d565b600a602052600090815260409020805460018201546002830154600484015460058501546006860154600787015460089097015495966001600160a01b03958616969495909316939192909188565b604080519889526001600160a01b0397881660208a0152880195909552949092166060860152608085015260a084015260c083019190915260e082015261010001610219565b3480156105ec57600080fd5b5060075461027c906001600160a01b031681565b61023861060e366004612459565b61132d565b34801561061f57600080fd5b5061023861062e36600461237d565b6115fb565b34801561063f57600080fd5b5061034f61064e36600461247b565b611619565b34801561065f57600080fd5b5061034f61066e366004612459565b6116cc565b34801561067f57600080fd5b5061034f61068e36600461237d565b6117a4565b34801561069f57600080fd5b5061034f6106ae36600461237d565b6119ae565b3480156106bf57600080fd5b50610238600c5481565b3480156106d557600080fd5b50610238600d5481565b3480156106eb57600080fd5b5061034f6119dd565b34801561070057600080fd5b5061023860015481565b34801561071657600080fd5b5061034f610725366004612410565b611a69565b34801561073657600080fd5b5061023861074536600461237d565b611b04565b34801561075657600080fd5b50610238600e5481565b60008160065481111580156107755750600081115b6107ba5760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b60448201526064015b60405180910390fd5b6000838152600a6020908152604080832080548452600990925282209091806107e287611b28565b6001600160a01b0382166000908152600387016020526040902054919350915015610823576001600160a01b03821660009081526003850160205260408120555b836006015460000361087557600883018054600191906000906108509084906001600160c01b03166124ca565b92506101000a8154816001600160c01b0302191690836001600160c01b031602179055505b8084600601600082825461088991906124f2565b9091555050600584015460028501546108a291906124f2565b846006015411156108f55760405162461bcd60e51b815260206004820152601c60248201527f416d6f756e7420746f20776974686472617720746f6f206c617267650000000060448201526064016107b1565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610942576040519150601f19603f3d011682016040523d82523d6000602084013e610947565b606091505b505090508061098f5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016107b1565b8454604080518a81526001600160a01b03861660208201527f5b0aec51a74bf236e8fa08bcb2e303068c7ac1aed3ca410d25b8dad27538d73c910160405180910390a260068401546001600160a01b03161580156109fc575060018501546001600160a01b038481169116145b15610a0b57610a0b8486611f3c565b50909695505050505050565b60045460009060ff1615610a665760405162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd081a5cc819195c1c9958d85d195960521b60448201526064016107b1565b6000878152600860205260408120549003610ac35760405162461bcd60e51b815260206004820152601b60248201527f54617267657420726f6c6c7570206e6f7420737570706f72746564000000000060448201526064016107b1565b61012c821015610b155760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920706572696f6420746f6f2073686f72740000000000000060448201526064016107b1565b6301dfe200821115610b695760405162461bcd60e51b815260206004820152601860248201527f56616c696469747920706572696f6420746f6f206c6f6e67000000000000000060448201526064016107b1565b600e54831115610bbb5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e742065786365656473207472616e73666572206c696d697400000060448201526064016107b1565b856000610bc785611b04565b90506000610bd486611309565b9050600081610be384896124f2565b610bed91906124f2565b604051636eb1769f60e11b815233600482015230602482015290915081906001600160a01b0386169063dd62ed3e90604401602060405180830381865afa158015610c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c60919061250a565b1015610ca75760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064016107b1565b600160056000828254610cba91906124f2565b9250508190555060006009600060055481526020019081526020016000209050338160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508a8160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508b8160020181905550898160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550888160040160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550878160050181905550604051806040016040528060006001600160a01b031681526020016000801b8152508160060160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101559050508642610dfc91906124f2565b60098201819055600a8201859055600b820184905560055460408051918252602082018f90526001600160a01b038e8116838301528d811660608401528c16608083015260a082018b905260c082019290925290517f18a412d0656b9a5c9263a134f66a34da33cad7c3690971601f9963ade588e7019181900360e00190a1610e906001600160a01b038616333085612021565b50506005549a9950505050505050505050565b6000546001600160a01b03163314610ecd5760405162461bcd60e51b81526004016107b190612523565b610ed7600061208c565b565b6000546001600160a01b03163314610f035760405162461bcd60e51b81526004016107b190612523565b600d92909255600c55600b55565b806006548111158015610f245750600081115b610f645760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b60448201526064016107b1565b6000828152600a6020908152604080832080548452600990925290912060078201544210610fc45760405162461bcd60e51b815260206004820152600d60248201526c10db185a5b48195e1c1a5c9959609a1b60448201526064016107b1565b600354600283015460058401546000928392909180821115611086578060000361100957600286015460009081526008602052604090205461100690846124f2565b92505b6001870154336001600160a01b03909116036110675760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74206368616c6c656e6765206f776e20636c61696d00000000000060448201526064016107b1565b3394506110748183612558565b61107f9060016124f2565b93506110b2565b60018088015490546001600160a01b0390911695506110a58383612558565b6110af91906124f2565b93505b336001600160a01b038616146111035760405162461bcd60e51b8152602060048201526016602482015275139bdd08195b1a59da589b19481d1bc81bdd5d189a5960521b60448201526064016107b1565b833410156111535760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f756768207374616b652070726f76696465640000000000000060448201526064016107b1565b60018701546001600160a01b039081169086160361118a573487600201600082825461117f91906124f2565b909155506111e29050565b6004870180546001600160a01b031916339081179091556000908152600388016020526040812080543492906111c19084906124f2565b92505081905550348760050160008282546111dc91906124f2565b90915550505b60078701546111fa906111f585426124f2565b6120dc565b600788015560035460009061120f90426124f2565b905080886007015410156112775760405162461bcd60e51b815260206004820152602960248201527f436c61696d207465726d696e6174696f6e20646964206e6f7420696e637265616044820152680e6ca40cadcdeeaced60bb1b60648201526084016107b1565b87600001547f29fd2df293ba511e44ca47212c915137020231ed3ac0ee7bd02a7a655275ad378b8a60010160009054906101000a90046001600160a01b03168b600201548c60040160009054906101000a90046001600160a01b03168d600501548e600701548f600801546040516112f5979695949392919061256f565b60405180910390a250505050505050505050565b6000620f4240600d548361131d91906125ae565b61132791906125cd565b92915050565b60008260055481111580156113425750600081115b6113845760405162461bcd60e51b81526020600482015260136024820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b60448201526064016107b1565b60008481526009602081905260409091209081015442106113d95760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b60448201526064016107b1565b60068101546001600160a01b0316156114305760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b60448201526064016107b1565b60015434146114785760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081cdd185ad948185b5bdd5b9d60621b60448201526064016107b1565b836114be5760405162461bcd60e51b8152602060048201526016602482015275046696c6c4964206d757374206e6f74206265203078360541b60448201526064016107b1565b600881018054600191906000906114df9084906001600160c01b03166125ef565b92506101000a8154816001600160c01b0302191690836001600160c01b0316021790555060016006600082825461151691906124f2565b9091555050600680546000908152600a60205260408120878155600180820180546001600160a01b0319908116331790915590546002808401919091556004830180549092169091556005820183905592810191909155905461157990426124f2565b600782018190556008820186905560065460018301546002840154600485015460058601546040518c967f29fd2df293ba511e44ca47212c915137020231ed3ac0ee7bd02a7a655275ad37966115e69690956001600160a01b039182169590949116929091908e9061256f565b60405180910390a25050600654949350505050565b600061160682611309565b61160f83611b04565b61132791906124f2565b6000546001600160a01b031633146116435760405162461bcd60e51b81526004016107b190612523565b6001600160a01b0382166000908152600f6020526040902054806116a05760405162461bcd60e51b815260206004820152601460248201527350726f746f636f6c20666565206973207a65726f60601b60448201526064016107b1565b6001600160a01b0383166000818152600f602052604081205583906116c69084846120f5565b50505050565b6000546001600160a01b031633146116f65760405162461bcd60e51b81526004016107b190612523565b600081116117555760405162461bcd60e51b815260206004820152602660248201527f46696e616c69747920706572696f64206d75737420626520677265617465722060448201526507468616e20360d41b60648201526084016107b1565b60008281526008602090815260409182902083905581518481529081018390527faba57b48b9f1dfd5747a52ed348a6ab6aa7bafb0575363a5cb7b62659f727b65910160405180910390a15050565b8060055481111580156117b75750600081115b6117f95760405162461bcd60e51b81526020600482015260136024820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b60448201526064016107b1565b600082815260096020526040902060068101546001600160a01b03161561185e5760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b60448201526064016107b1565b80600901544210156118b25760405162461bcd60e51b815260206004820152601760248201527f52657175657374206e6f7420657870697265642079657400000000000000000060448201526064016107b1565b60088101546001600160c01b0316156119055760405162461bcd60e51b815260206004820152601560248201527441637469766520636c61696d732072756e6e696e6760581b60448201526064016107b1565b80546006820180546001600160a01b0319166001600160a01b0390921691821790556040805185815260208101929092527fa7b86597910aae75f7d99feb2f37420cc80d457465ffba0f8136d722a9f7095a910160405180910390a160018101548154600b830154600a84015460058501546001600160a01b03948516946116c694169291611993916124f2565b61199d91906124f2565b6001600160a01b03841691906120f5565b6000546001600160a01b031633146119d85760405162461bcd60e51b81526004016107b190612523565b600e55565b6000546001600160a01b03163314611a075760405162461bcd60e51b81526004016107b190612523565b60045460ff1615611a5a5760405162461bcd60e51b815260206004820152601b60248201527f436f6e747261637420616c72656164792064657072656361746564000000000060448201526064016107b1565b6004805460ff19166001179055565b6000546001600160a01b03163314611a935760405162461bcd60e51b81526004016107b190612523565b6001600160a01b038116611af85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107b1565b611b018161208c565b50565b6000611327600b54620f4240600c5485611b1e91906125ae565b6111f591906125cd565b6000818152600a602090815260408083208054845260099092528220600282015460058301548493929190611b5d81836124f2565b846006015410611baf5760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792077697468647261776e00000000000000000060448201526064016107b1565b835460028401546003850154600486015460058701546040805160208082019790975246818301526060808201969096526bffffffffffffffffffffffff1994861b851660808201529290941b909216609482015260a8808201929092528251808203909201825260c80190915280519101206000611c59828760080154604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b60408051808201825260068801546001600160a01b0390811682526007808a0154602084015254925163a64a227160e01b815260048101879052939450600093919284928392919091169063a64a2271906024016040805180830381865afa158015611cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ced919061261a565b90925090506001600160a01b038216611d0a575050805160208201515b60075460405163a751732f60e01b8152600481018790526001600160a01b039091169063a751732f90602401602060405180830381865afa158015611d53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d779190612648565b15611d855760009350611e17565b6001600160a01b03821615611dbd5760018a01546001600160a01b038381169116148015611db65750896008015481145b9350611e17565b8960070154421015611e115760405162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f742066696e69736865640000000000000060448201526064016107b1565b86881193505b6000808515611e4257611e2a898b6124f2565b60018d01549092506001600160a01b03169050611edb565b8815611eca5733600090815260038d016020526040902054611e659060026125ae565b915033905060008211611ec55760405162461bcd60e51b815260206004820152602260248201527f4368616c6c656e67657220686173206e6f7468696e6720746f20776974686472604482015261617760f01b60648201526084016107b1565b611edb565b505060005488906001600160a01b03165b60048c01546001600160a01b03163303611f2957888a1115611f1257611f01898b612558565b611f0b90836124f2565b9150611f29565b611f1c8a8a612558565b611f269083612558565b91505b9e909d509b505050505050505050505050565b60018101548154604080519182526001600160a01b0390921660208201819052917fa7b86597910aae75f7d99feb2f37420cc80d457465ffba0f8136d722a9f7095a910160405180910390a16040805180820182526001600160a01b03808416808352600886015460209384018190526006880180546001600160a01b0319169092179091556007870155600b86015460018701549091166000908152600f9092529181208054909190611ff19084906124f2565b90915550506001830154600a84015460058501546001600160a01b03909216916116c691849161199d91906124f2565b6040516001600160a01b03808516602483015283166044820152606481018290526116c69085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261212a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818310156120ec57816120ee565b825b9392505050565b6040516001600160a01b03831660248201526044810182905261212590849063a9059cbb60e01b90606401612055565b505050565b600061217f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121fc9092919063ffffffff16565b805190915015612125578080602001905181019061219d9190612648565b6121255760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107b1565b606061220b8484600085612213565b949350505050565b6060824710156122745760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107b1565b6001600160a01b0385163b6122cb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107b1565b600080866001600160a01b031685876040516122e79190612696565b60006040518083038185875af1925050503d8060008114612324576040519150601f19603f3d011682016040523d82523d6000602084013e612329565b606091505b5091509150612339828286612344565b979650505050505050565b606083156123535750816120ee565b8251156123635782518084602001fd5b8160405162461bcd60e51b81526004016107b191906126b2565b60006020828403121561238f57600080fd5b5035919050565b6001600160a01b0381168114611b0157600080fd5b60008060008060008060c087890312156123c457600080fd5b8635955060208701356123d681612396565b945060408701356123e681612396565b935060608701356123f681612396565b9598949750929560808101359460a0909101359350915050565b60006020828403121561242257600080fd5b81356120ee81612396565b60008060006060848603121561244257600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561246c57600080fd5b50508035926020909101359150565b6000806040838503121561248e57600080fd5b823561249981612396565b915060208301356124a981612396565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b60006001600160c01b03838116908316818110156124ea576124ea6124b4565b039392505050565b60008219821115612505576125056124b4565b500190565b60006020828403121561251c57600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008282101561256a5761256a6124b4565b500390565b9687526001600160a01b0395861660208801526040870194909452919093166060850152608084019290925260a083019190915260c082015260e00190565b60008160001904831182151516156125c8576125c86124b4565b500290565b6000826125ea57634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160c01b03828116848216808303821115612611576126116124b4565b01949350505050565b6000806040838503121561262d57600080fd5b825161263881612396565b6020939093015192949293505050565b60006020828403121561265a57600080fd5b815180151581146120ee57600080fd5b60005b8381101561268557818101518382015260200161266d565b838111156116c65750506000910152565b600082516126a881846020870161266a565b9190910192915050565b60208152600082518060208401526126d181604085016020870161266a565b601f01601f1916919091016040019291505056fea26469706673582212206ce8521a489a72409700b7dcbdf5f4bf64b2573ea76b8ef4e61c8f859cca711364736f6c634300080d0033",
  "bytecodeSha1": "d87f828086e1c9d0616e58e7ea1549a1d65e47a8",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "RequestManager",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "165": [
            2006,
            2028,
            true
          ]
        }
      },
      "12": {
        "RequestManager.challengeClaim": {
          "132": [
            7334,
            7357,
            false
          ],
          "133": [
            14996,
            15031,
            true
          ],
          "134": [
            15296,
            15331,
            false
          ],
          "135": [
            15351,
            15376,
            false
          ],
          "136": [
            15489,
            15516,
            true
          ],
          "137": [
            15805,
            15828,
            true
          ],
          "138": [
            15873,
            15894,
            true
          ],
          "139": [
            15939,
            15965,
            false
          ],
          "140": [
            16440,
            16479,
            true
          ]
        },
        "RequestManager.claimRequest": {
          "141": [
            12511,
            12547,
            true
          ],
          "142": [
            12598,
            12639,
            true
          ],
          "143": [
            12708,
            12731,
            true
          ]
        },
        "RequestManager.createRequest": {
          "126": [
            9178,
            9197,
            true
          ],
          "127": [
            9255,
            9290,
            true
          ],
          "128": [
            9374,
            9411,
            true
          ],
          "129": [
            9493,
            9530,
            true
          ],
          "130": [
            9598,
            9621,
            true
          ],
          "131": [
            9895,
            9957,
            true
          ]
        },
        "RequestManager.deprecateContract": {
          "150": [
            25439,
            25458,
            true
          ]
        },
        "RequestManager.resolveClaim": {
          "151": [
            19015,
            19074,
            true
          ],
          "152": [
            20154,
            20174,
            false
          ],
          "153": [
            20276,
            20322,
            false
          ],
          "154": [
            20416,
            20436,
            false
          ],
          "155": [
            20654,
            20690,
            true
          ],
          "156": [
            20953,
            20963,
            false
          ],
          "157": [
            21157,
            21181,
            false
          ],
          "158": [
            21384,
            21401,
            true
          ],
          "159": [
            22017,
            22051,
            false
          ],
          "160": [
            22071,
            22106,
            false
          ]
        },
        "RequestManager.setFinalityPeriod": {
          "145": [
            24870,
            24888,
            true
          ]
        },
        "RequestManager.withdraw": {
          "120": [
            17701,
            17743,
            false
          ],
          "121": [
            17934,
            17960,
            false
          ],
          "122": [
            18090,
            18178,
            true
          ],
          "123": [
            18321,
            18325,
            true
          ],
          "124": [
            18454,
            18495,
            false
          ],
          "125": [
            18511,
            18541,
            false
          ]
        },
        "RequestManager.withdrawExpiredRequest": {
          "146": [
            7115,
            7142,
            false
          ],
          "147": [
            11353,
            11394,
            true
          ],
          "148": [
            11476,
            11513,
            true
          ],
          "149": [
            11580,
            11605,
            true
          ]
        },
        "RequestManager.withdrawProtocolFees": {
          "144": [
            23389,
            23399,
            true
          ]
        }
      },
      "13": {},
      "2": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "166": [
            3735,
            3756,
            false
          ],
          "167": [
            3819,
            3849,
            true
          ]
        }
      },
      "5": {
        "Address.functionCallWithValue": {
          "161": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "162": [
            7735,
            7742,
            false
          ],
          "163": [
            7876,
            7897,
            false
          ]
        }
      },
      "6": {},
      "7": {
        "Math.max": {
          "164": [
            369,
            375,
            true
          ]
        }
      },
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "108": [
            2378,
            2395
          ],
          "109": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "30": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "83": [
            1998,
            2071
          ],
          "84": [
            2081,
            2109
          ]
        }
      },
      "12": {
        "RequestManager.challengeClaim": {
          "34": [
            14988,
            15049
          ],
          "35": [
            15396,
            15453
          ],
          "36": [
            15481,
            15547
          ],
          "37": [
            15561,
            15583
          ],
          "38": [
            15597,
            15647
          ],
          "39": [
            15678,
            15703
          ],
          "40": [
            15717,
            15776
          ],
          "41": [
            15797,
            15855
          ],
          "42": [
            15865,
            15924
          ],
          "43": [
            15981,
            16012
          ],
          "44": [
            16043,
            16076
          ],
          "45": [
            16090,
            16138
          ],
          "46": [
            16152,
            16191
          ],
          "47": [
            16212,
            16328
          ],
          "48": [
            16419,
            16546
          ],
          "49": [
            16557,
            16821
          ]
        },
        "RequestManager.claimRequest": {
          "51": [
            12503,
            12567
          ],
          "52": [
            12577,
            12690
          ],
          "53": [
            12700,
            12756
          ],
          "54": [
            12766,
            12821
          ],
          "55": [
            12832,
            12857
          ],
          "56": [
            12867,
            12884
          ],
          "57": [
            12947,
            12974
          ],
          "58": [
            12984,
            13010
          ],
          "59": [
            13020,
            13051
          ],
          "60": [
            13061,
            13094
          ],
          "61": [
            13104,
            13134
          ],
          "62": [
            13144,
            13169
          ],
          "63": [
            13179,
            13228
          ],
          "64": [
            13238,
            13259
          ],
          "65": [
            13270,
            13527
          ],
          "66": [
            13538,
            13557
          ]
        },
        "RequestManager.createRequest": {
          "9": [
            9170,
            9224
          ],
          "10": [
            9234,
            9343
          ],
          "11": [
            9353,
            9462
          ],
          "12": [
            9472,
            9580
          ],
          "13": [
            9590,
            9655
          ],
          "14": [
            9874,
            10005
          ],
          "15": [
            10016,
            10035
          ],
          "16": [
            10108,
            10138
          ],
          "17": [
            10148,
            10198
          ],
          "18": [
            10208,
            10248
          ],
          "19": [
            10258,
            10308
          ],
          "20": [
            10318,
            10358
          ],
          "21": [
            10368,
            10394
          ],
          "22": [
            10404,
            10474
          ],
          "23": [
            10484,
            10540
          ],
          "24": [
            10550,
            10574
          ],
          "25": [
            10584,
            10620
          ],
          "26": [
            10631,
            10861
          ],
          "27": [
            10872,
            10939
          ],
          "28": [
            10950,
            10971
          ]
        },
        "RequestManager.deprecateContract": {
          "81": [
            25431,
            25490
          ],
          "82": [
            25500,
            25517
          ]
        },
        "RequestManager.lpFee": {
          "85": [
            6388,
            6446
          ]
        },
        "RequestManager.protocolFee": {
          "50": [
            6620,
            6664
          ]
        },
        "RequestManager.resolveClaim": {
          "86": [
            18994,
            19123
          ],
          "89": [
            20190,
            20251
          ],
          "90": [
            20377,
            20395
          ],
          "91": [
            20497,
            20559
          ],
          "92": [
            20629,
            20749
          ],
          "93": [
            20763,
            20811
          ],
          "94": [
            21042,
            21093
          ],
          "95": [
            21107,
            21136
          ],
          "96": [
            21266,
            21321
          ],
          "97": [
            21335,
            21361
          ],
          "98": [
            21376,
            21440
          ],
          "99": [
            21650,
            21678
          ],
          "100": [
            22126,
            22180
          ],
          "101": [
            22219,
            22273
          ],
          "102": [
            22308,
            22345
          ]
        },
        "RequestManager.setFinalityPeriod": {
          "71": [
            24862,
            24931
          ],
          "72": [
            24941,
            24988
          ],
          "73": [
            24999,
            25056
          ]
        },
        "RequestManager.totalFee": {
          "67": [
            6917,
            6959
          ]
        },
        "RequestManager.updateFeeData": {
          "31": [
            24040,
            24074
          ],
          "32": [
            24084,
            24106
          ],
          "33": [
            24116,
            24138
          ]
        },
        "RequestManager.updateTransferLimit": {
          "80": [
            24436,
            24468
          ]
        },
        "RequestManager.withdraw": {
          "1": [
            17796,
            17838
          ],
          "2": [
            17976,
            18001
          ],
          "3": [
            18021,
            18059
          ],
          "4": [
            18069,
            18232
          ],
          "5": [
            18313,
            18350
          ],
          "6": [
            18361,
            18426
          ],
          "7": [
            18566,
            18597
          ],
          "8": [
            18618,
            18638
          ]
        },
        "RequestManager.withdrawDeposit": {
          "103": [
            22500,
            22547
          ],
          "104": [
            22558,
            22624
          ],
          "105": [
            22635,
            22720
          ],
          "106": [
            22790,
            22849
          ]
        },
        "RequestManager.withdrawExpiredRequest": {
          "74": [
            11332,
            11445
          ],
          "75": [
            11455,
            11562
          ],
          "76": [
            11572,
            11631
          ],
          "77": [
            11642,
            11686
          ],
          "78": [
            11697,
            11745
          ],
          "79": [
            11815,
            11937
          ]
        },
        "RequestManager.withdrawProtocolFees": {
          "68": [
            23381,
            23424
          ],
          "69": [
            23434,
            23473
          ],
          "70": [
            23529,
            23566
          ]
        }
      },
      "13": {},
      "2": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "112": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "111": [
            813,
            899
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "107": [
            1050,
            1146
          ]
        }
      },
      "5": {
        "Address.functionCall": {
          "113": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "114": [
            5137,
            5218
          ],
          "116": [
            5228,
            5288
          ],
          "117": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "115": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "118": [
            7758,
            7775
          ],
          "119": [
            8202,
            8222
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "29": [
            712,
            729
          ]
        }
      },
      "7": {
        "Math.max": {
          "110": [
            362,
            383
          ]
        }
      },
      "8": {
        "BeamerUtils.createFillHash": {
          "88": [
            874,
            929
          ]
        },
        "BeamerUtils.createRequestHash": {
          "87": [
            424,
            730
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "BeamerUtils",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Math",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "ResolutionRegistry",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "6080604052600436106101ee5760003560e01c8063973a814e1161010d578063d3868348116100a0578063ea656f7d1161006f578063ea656f7d146106df578063eb321173146106f4578063f2fde38b1461070a578063f7d64cec1461072a578063f94325171461074a57600080fd5b8063d386834814610673578063d762a37b14610693578063e2653eeb146106b3578063e7aad5c4146106c957600080fd5b8063b1743c5b116100dc578063b1743c5b14610600578063cea74edf14610613578063cf7b287f14610633578063d137920b1461065357600080fd5b8063973a814e146104fa578063a032b5f414610510578063a888c2cd14610530578063ab9634ee146105e057600080fd5b80636bc6c8d11161018557806381d12c581161015457806381d12c58146103875780638da5cb5b146104b157806392c824d8146104cf57806396171d05146104e257600080fd5b80636bc6c8d11461030d578063715018a61461033a57806378da194b146103515780637dc2cd981461037157600080fd5b80632f4212b8116101c15780632f4212b8146102945780632f92f009146102b45780634efa8f17146102e15780635d5aa11b146102f757600080fd5b80630e136b19146101f35780631489f8d2146102225780631d18adc5146102465780632e1a7d4d1461025c575b600080fd5b3480156101ff57600080fd5b5060045461020d9060ff1681565b60405190151581526020015b60405180910390f35b34801561022e57600080fd5b5061023861012c81565b604051908152602001610219565b34801561025257600080fd5b5061023860035481565b34801561026857600080fd5b5061027c61027736600461237d565b610760565b6040516001600160a01b039091168152602001610219565b3480156102a057600080fd5b506102386102af3660046123ab565b610a17565b3480156102c057600080fd5b506102386102cf36600461237d565b60086020526000908152604090205481565b3480156102ed57600080fd5b5061023860065481565b34801561030357600080fd5b50610238600b5481565b34801561031957600080fd5b50610238610328366004612410565b600f6020526000908152604090205481565b34801561034657600080fd5b5061034f610ea3565b005b34801561035d57600080fd5b5061034f61036c36600461242d565b610ed9565b34801561037d57600080fd5b5061023860025481565b34801561039357600080fd5b5061042d6103a236600461237d565b6009602081815260009283526040928390208054600182015460028301546003840154600485015460058601548951808b01909a5260068701546001600160a01b039081168b526007880154988b0198909852600887015498870154600a880154600b909801549689169a9589169994989384169793909216959094936001600160c01b031692908b565b604080516001600160a01b039c8d1681529a8c166020808d0191909152908b0199909952968a1660608a0152948916608089015260a0880193909352815190971660c08701529093015160e08501526001600160c01b0390941661010084015261012083019190915261014082019290925261016081019190915261018001610219565b3480156104bd57600080fd5b506000546001600160a01b031661027c565b61034f6104dd36600461237d565b610f11565b3480156104ee57600080fd5b506102386301dfe20081565b34801561050657600080fd5b5061023860055481565b34801561051c57600080fd5b5061023861052b36600461237d565b611309565b34801561053c57600080fd5b5061059a61054b36600461237d565b600a602052600090815260409020805460018201546002830154600484015460058501546006860154600787015460089097015495966001600160a01b03958616969495909316939192909188565b604080519889526001600160a01b0397881660208a0152880195909552949092166060860152608085015260a084015260c083019190915260e082015261010001610219565b3480156105ec57600080fd5b5060075461027c906001600160a01b031681565b61023861060e366004612459565b61132d565b34801561061f57600080fd5b5061023861062e36600461237d565b6115fb565b34801561063f57600080fd5b5061034f61064e36600461247b565b611619565b34801561065f57600080fd5b5061034f61066e366004612459565b6116cc565b34801561067f57600080fd5b5061034f61068e36600461237d565b6117a4565b34801561069f57600080fd5b5061034f6106ae36600461237d565b6119ae565b3480156106bf57600080fd5b50610238600c5481565b3480156106d557600080fd5b50610238600d5481565b3480156106eb57600080fd5b5061034f6119dd565b34801561070057600080fd5b5061023860015481565b34801561071657600080fd5b5061034f610725366004612410565b611a69565b34801561073657600080fd5b5061023861074536600461237d565b611b04565b34801561075657600080fd5b50610238600e5481565b60008160065481111580156107755750600081115b6107ba5760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b60448201526064015b60405180910390fd5b6000838152600a6020908152604080832080548452600990925282209091806107e287611b28565b6001600160a01b0382166000908152600387016020526040902054919350915015610823576001600160a01b03821660009081526003850160205260408120555b836006015460000361087557600883018054600191906000906108509084906001600160c01b03166124ca565b92506101000a8154816001600160c01b0302191690836001600160c01b031602179055505b8084600601600082825461088991906124f2565b9091555050600584015460028501546108a291906124f2565b846006015411156108f55760405162461bcd60e51b815260206004820152601c60248201527f416d6f756e7420746f20776974686472617720746f6f206c617267650000000060448201526064016107b1565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610942576040519150601f19603f3d011682016040523d82523d6000602084013e610947565b606091505b505090508061098f5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016107b1565b8454604080518a81526001600160a01b03861660208201527f5b0aec51a74bf236e8fa08bcb2e303068c7ac1aed3ca410d25b8dad27538d73c910160405180910390a260068401546001600160a01b03161580156109fc575060018501546001600160a01b038481169116145b15610a0b57610a0b8486611f3c565b50909695505050505050565b60045460009060ff1615610a665760405162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd081a5cc819195c1c9958d85d195960521b60448201526064016107b1565b6000878152600860205260408120549003610ac35760405162461bcd60e51b815260206004820152601b60248201527f54617267657420726f6c6c7570206e6f7420737570706f72746564000000000060448201526064016107b1565b61012c821015610b155760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920706572696f6420746f6f2073686f72740000000000000060448201526064016107b1565b6301dfe200821115610b695760405162461bcd60e51b815260206004820152601860248201527f56616c696469747920706572696f6420746f6f206c6f6e67000000000000000060448201526064016107b1565b600e54831115610bbb5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e742065786365656473207472616e73666572206c696d697400000060448201526064016107b1565b856000610bc785611b04565b90506000610bd486611309565b9050600081610be384896124f2565b610bed91906124f2565b604051636eb1769f60e11b815233600482015230602482015290915081906001600160a01b0386169063dd62ed3e90604401602060405180830381865afa158015610c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c60919061250a565b1015610ca75760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064016107b1565b600160056000828254610cba91906124f2565b9250508190555060006009600060055481526020019081526020016000209050338160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508a8160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508b8160020181905550898160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550888160040160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550878160050181905550604051806040016040528060006001600160a01b031681526020016000801b8152508160060160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101559050508642610dfc91906124f2565b60098201819055600a8201859055600b820184905560055460408051918252602082018f90526001600160a01b038e8116838301528d811660608401528c16608083015260a082018b905260c082019290925290517f18a412d0656b9a5c9263a134f66a34da33cad7c3690971601f9963ade588e7019181900360e00190a1610e906001600160a01b038616333085612021565b50506005549a9950505050505050505050565b6000546001600160a01b03163314610ecd5760405162461bcd60e51b81526004016107b190612523565b610ed7600061208c565b565b6000546001600160a01b03163314610f035760405162461bcd60e51b81526004016107b190612523565b600d92909255600c55600b55565b806006548111158015610f245750600081115b610f645760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b60448201526064016107b1565b6000828152600a6020908152604080832080548452600990925290912060078201544210610fc45760405162461bcd60e51b815260206004820152600d60248201526c10db185a5b48195e1c1a5c9959609a1b60448201526064016107b1565b600354600283015460058401546000928392909180821115611086578060000361100957600286015460009081526008602052604090205461100690846124f2565b92505b6001870154336001600160a01b03909116036110675760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74206368616c6c656e6765206f776e20636c61696d00000000000060448201526064016107b1565b3394506110748183612558565b61107f9060016124f2565b93506110b2565b60018088015490546001600160a01b0390911695506110a58383612558565b6110af91906124f2565b93505b336001600160a01b038616146111035760405162461bcd60e51b8152602060048201526016602482015275139bdd08195b1a59da589b19481d1bc81bdd5d189a5960521b60448201526064016107b1565b833410156111535760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f756768207374616b652070726f76696465640000000000000060448201526064016107b1565b60018701546001600160a01b039081169086160361118a573487600201600082825461117f91906124f2565b909155506111e29050565b6004870180546001600160a01b031916339081179091556000908152600388016020526040812080543492906111c19084906124f2565b92505081905550348760050160008282546111dc91906124f2565b90915550505b60078701546111fa906111f585426124f2565b6120dc565b600788015560035460009061120f90426124f2565b905080886007015410156112775760405162461bcd60e51b815260206004820152602960248201527f436c61696d207465726d696e6174696f6e20646964206e6f7420696e637265616044820152680e6ca40cadcdeeaced60bb1b60648201526084016107b1565b87600001547f29fd2df293ba511e44ca47212c915137020231ed3ac0ee7bd02a7a655275ad378b8a60010160009054906101000a90046001600160a01b03168b600201548c60040160009054906101000a90046001600160a01b03168d600501548e600701548f600801546040516112f5979695949392919061256f565b60405180910390a250505050505050505050565b6000620f4240600d548361131d91906125ae565b61132791906125cd565b92915050565b60008260055481111580156113425750600081115b6113845760405162461bcd60e51b81526020600482015260136024820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b60448201526064016107b1565b60008481526009602081905260409091209081015442106113d95760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b60448201526064016107b1565b60068101546001600160a01b0316156114305760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b60448201526064016107b1565b60015434146114785760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081cdd185ad948185b5bdd5b9d60621b60448201526064016107b1565b836114be5760405162461bcd60e51b8152602060048201526016602482015275046696c6c4964206d757374206e6f74206265203078360541b60448201526064016107b1565b600881018054600191906000906114df9084906001600160c01b03166125ef565b92506101000a8154816001600160c01b0302191690836001600160c01b0316021790555060016006600082825461151691906124f2565b9091555050600680546000908152600a60205260408120878155600180820180546001600160a01b0319908116331790915590546002808401919091556004830180549092169091556005820183905592810191909155905461157990426124f2565b600782018190556008820186905560065460018301546002840154600485015460058601546040518c967f29fd2df293ba511e44ca47212c915137020231ed3ac0ee7bd02a7a655275ad37966115e69690956001600160a01b039182169590949116929091908e9061256f565b60405180910390a25050600654949350505050565b600061160682611309565b61160f83611b04565b61132791906124f2565b6000546001600160a01b031633146116435760405162461bcd60e51b81526004016107b190612523565b6001600160a01b0382166000908152600f6020526040902054806116a05760405162461bcd60e51b815260206004820152601460248201527350726f746f636f6c20666565206973207a65726f60601b60448201526064016107b1565b6001600160a01b0383166000818152600f602052604081205583906116c69084846120f5565b50505050565b6000546001600160a01b031633146116f65760405162461bcd60e51b81526004016107b190612523565b600081116117555760405162461bcd60e51b815260206004820152602660248201527f46696e616c69747920706572696f64206d75737420626520677265617465722060448201526507468616e20360d41b60648201526084016107b1565b60008281526008602090815260409182902083905581518481529081018390527faba57b48b9f1dfd5747a52ed348a6ab6aa7bafb0575363a5cb7b62659f727b65910160405180910390a15050565b8060055481111580156117b75750600081115b6117f95760405162461bcd60e51b81526020600482015260136024820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b60448201526064016107b1565b600082815260096020526040902060068101546001600160a01b03161561185e5760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b60448201526064016107b1565b80600901544210156118b25760405162461bcd60e51b815260206004820152601760248201527f52657175657374206e6f7420657870697265642079657400000000000000000060448201526064016107b1565b60088101546001600160c01b0316156119055760405162461bcd60e51b815260206004820152601560248201527441637469766520636c61696d732072756e6e696e6760581b60448201526064016107b1565b80546006820180546001600160a01b0319166001600160a01b0390921691821790556040805185815260208101929092527fa7b86597910aae75f7d99feb2f37420cc80d457465ffba0f8136d722a9f7095a910160405180910390a160018101548154600b830154600a84015460058501546001600160a01b03948516946116c694169291611993916124f2565b61199d91906124f2565b6001600160a01b03841691906120f5565b6000546001600160a01b031633146119d85760405162461bcd60e51b81526004016107b190612523565b600e55565b6000546001600160a01b03163314611a075760405162461bcd60e51b81526004016107b190612523565b60045460ff1615611a5a5760405162461bcd60e51b815260206004820152601b60248201527f436f6e747261637420616c72656164792064657072656361746564000000000060448201526064016107b1565b6004805460ff19166001179055565b6000546001600160a01b03163314611a935760405162461bcd60e51b81526004016107b190612523565b6001600160a01b038116611af85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107b1565b611b018161208c565b50565b6000611327600b54620f4240600c5485611b1e91906125ae565b6111f591906125cd565b6000818152600a602090815260408083208054845260099092528220600282015460058301548493929190611b5d81836124f2565b846006015410611baf5760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792077697468647261776e00000000000000000060448201526064016107b1565b835460028401546003850154600486015460058701546040805160208082019790975246818301526060808201969096526bffffffffffffffffffffffff1994861b851660808201529290941b909216609482015260a8808201929092528251808203909201825260c80190915280519101206000611c59828760080154604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b60408051808201825260068801546001600160a01b0390811682526007808a0154602084015254925163a64a227160e01b815260048101879052939450600093919284928392919091169063a64a2271906024016040805180830381865afa158015611cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ced919061261a565b90925090506001600160a01b038216611d0a575050805160208201515b60075460405163a751732f60e01b8152600481018790526001600160a01b039091169063a751732f90602401602060405180830381865afa158015611d53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d779190612648565b15611d855760009350611e17565b6001600160a01b03821615611dbd5760018a01546001600160a01b038381169116148015611db65750896008015481145b9350611e17565b8960070154421015611e115760405162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f742066696e69736865640000000000000060448201526064016107b1565b86881193505b6000808515611e4257611e2a898b6124f2565b60018d01549092506001600160a01b03169050611edb565b8815611eca5733600090815260038d016020526040902054611e659060026125ae565b915033905060008211611ec55760405162461bcd60e51b815260206004820152602260248201527f4368616c6c656e67657220686173206e6f7468696e6720746f20776974686472604482015261617760f01b60648201526084016107b1565b611edb565b505060005488906001600160a01b03165b60048c01546001600160a01b03163303611f2957888a1115611f1257611f01898b612558565b611f0b90836124f2565b9150611f29565b611f1c8a8a612558565b611f269083612558565b91505b9e909d509b505050505050505050505050565b60018101548154604080519182526001600160a01b0390921660208201819052917fa7b86597910aae75f7d99feb2f37420cc80d457465ffba0f8136d722a9f7095a910160405180910390a16040805180820182526001600160a01b03808416808352600886015460209384018190526006880180546001600160a01b0319169092179091556007870155600b86015460018701549091166000908152600f9092529181208054909190611ff19084906124f2565b90915550506001830154600a84015460058501546001600160a01b03909216916116c691849161199d91906124f2565b6040516001600160a01b03808516602483015283166044820152606481018290526116c69085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261212a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818310156120ec57816120ee565b825b9392505050565b6040516001600160a01b03831660248201526044810182905261212590849063a9059cbb60e01b90606401612055565b505050565b600061217f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121fc9092919063ffffffff16565b805190915015612125578080602001905181019061219d9190612648565b6121255760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107b1565b606061220b8484600085612213565b949350505050565b6060824710156122745760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107b1565b6001600160a01b0385163b6122cb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107b1565b600080866001600160a01b031685876040516122e79190612696565b60006040518083038185875af1925050503d8060008114612324576040519150601f19603f3d011682016040523d82523d6000602084013e612329565b606091505b5091509150612339828286612344565b979650505050505050565b606083156123535750816120ee565b8251156123635782518084602001fd5b8160405162461bcd60e51b81526004016107b191906126b2565b60006020828403121561238f57600080fd5b5035919050565b6001600160a01b0381168114611b0157600080fd5b60008060008060008060c087890312156123c457600080fd5b8635955060208701356123d681612396565b945060408701356123e681612396565b935060608701356123f681612396565b9598949750929560808101359460a0909101359350915050565b60006020828403121561242257600080fd5b81356120ee81612396565b60008060006060848603121561244257600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561246c57600080fd5b50508035926020909101359150565b6000806040838503121561248e57600080fd5b823561249981612396565b915060208301356124a981612396565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b60006001600160c01b03838116908316818110156124ea576124ea6124b4565b039392505050565b60008219821115612505576125056124b4565b500190565b60006020828403121561251c57600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008282101561256a5761256a6124b4565b500390565b9687526001600160a01b0395861660208801526040870194909452919093166060850152608084019290925260a083019190915260c082015260e00190565b60008160001904831182151516156125c8576125c86124b4565b500290565b6000826125ea57634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160c01b03828116848216808303821115612611576126116124b4565b01949350505050565b6000806040838503121561262d57600080fd5b825161263881612396565b6020939093015192949293505050565b60006020828403121561265a57600080fd5b815180151581146120ee57600080fd5b60005b8381101561268557818101518382015260200161266d565b838111156116c65750506000910152565b600082516126a881846020870161266a565b9190910192915050565b60208152600082518060208401526126d181604085016020870161266a565b601f01601f1916919091016040019291505056fea26469706673582212206ce8521a489a72409700b7dcbdf5f4bf64b2573ea76b8ef4e61c8f859cca711364736f6c634300080d0033",
  "deployedSourceMap": "762:24764:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4802:22;;;;;;;;;;-1:-1:-1;4802:22:12;;;;;;;;;;;179:14:25;;172:22;154:41;;142:2;127:18;4802:22:12;;;;;;;;4488:55;;;;;;;;;;;;4534:9;4488:55;;;;;352:25:25;;;340:2;325:18;4488:55:12;206:177:25;4392:39:12;;;;;;;;;;;;;;;;17385:1260;;;;;;;;;;-1:-1:-1;17385:1260:12;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;737:32:25;;;719:51;;707:2;692:18;17385:1260:12;573:203:25;8914:2064:12;;;;;;;;;;-1:-1:-1;8914:2064:12;;;;;:::i;:::-;;:::i;5249:50::-;;;;;;;;;;-1:-1:-1;5249:50:12;;;;;:::i;:::-;;;;;;;;;;;;;;4981:27;;;;;;;;;;;;;;;;5562:33;;;;;;;;;;;;;;;;6162:56;;;;;;;;;;-1:-1:-1;6162:56:12;;;;;:::i;:::-;;;;;;;;;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;23889:256:12;;;;;;;;;;-1:-1:-1;23889:256:12;;;;;:::i;:::-;;:::i;3756:26::-;;;;;;;;;;;;;;;;5344:43;;;;;;;;;;-1:-1:-1;5344:43:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5344:43:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5344:43:12;;;;;;;;;-1:-1:-1;;;;;2761:15:25;;;2743:34;;2813:15;;;2808:2;2793:18;;;2786:43;;;;2845:18;;;2838:34;;;;2908:15;;;2903:2;2888:18;;2881:43;2961:15;;;2955:3;2940:19;;2933:44;2723:3;2993:19;;2986:35;;;;3062:13;;3058:22;;;3052:3;3037:19;;3030:51;3124:15;;;3118:22;3112:3;3097:19;;3090:51;-1:-1:-1;;;;;3178:32:25;;;3172:3;3157:19;;3150:61;3242:3;3227:19;;3220:35;;;;3286:3;3271:19;;3264:35;;;;3330:3;3315:19;;3308:36;;;;2692:3;2677:19;5344:43:12;2231:1119:25;1036:85:0;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;14762:2066:12;;;;;;:::i;:::-;;:::i;4600:54::-;;;;;;;;;;;;4646:8;4600:54;;4890:29;;;;;;;;;;;;;;;;6543:128;;;;;;;;;;-1:-1:-1;6543:128:12;;;;;:::i;:::-;;:::i;5428:39::-;;;;;;;;;;-1:-1:-1;5428:39:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5428:39:12;;;;;;;;;;;;;;;;;;;;3698:25:25;;;-1:-1:-1;;;;;3797:15:25;;;3792:2;3777:18;;3770:43;3829:18;;3822:34;;;;3892:15;;;;3887:2;3872:18;;3865:43;3939:3;3924:19;;3917:35;3750:3;3968:19;;3961:35;4027:3;4012:19;;4005:35;;;;4071:3;4056:19;;4049:35;3685:3;3670:19;5428:39:12;3355:735:25;5099:44:12;;;;;;;;;;-1:-1:-1;5099:44:12;;;;-1:-1:-1;;;;;5099:44:12;;;12283:1281;;;;;;:::i;:::-;;:::i;6843:123::-;;;;;;;;;;-1:-1:-1;6843:123:12;;;;;:::i;:::-;;:::i;23199:374::-;;;;;;;;;;-1:-1:-1;23199:374:12;;;;;:::i;:::-;;:::i;24739:324::-;;;;;;;;;;-1:-1:-1;24739:324:12;;;;;:::i;:::-;;:::i;11160:784::-;;;;;;;;;;-1:-1:-1;11160:784:12;;;;;:::i;:::-;;:::i;24352:123::-;;;;;;;;;;-1:-1:-1;24352:123:12;;;;;:::i;:::-;;:::i;5691:31::-;;;;;;;;;;;;;;;;5846:33;;;;;;;;;;;;;;;;25373:151;;;;;;;;;;;;;:::i;3675:25::-;;;;;;;;;;;;;;;;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;6317:136:12:-;;;;;;;;;;-1:-1:-1;6317:136:12;;;;;:::i;:::-;;:::i;6012:42::-;;;;;;;;;;;;;;;;17385:1260;17484:7;17458;7345:12;;7334:7;:23;;:38;;;;;7371:1;7361:7;:11;7334:38;7326:68;;;;-1:-1:-1;;;7326:68:12;;5431:2:25;7326:68:12;;;5413:21:25;5470:2;5450:18;;;5443:30;-1:-1:-1;;;5489:18:25;;;5482:47;5546:18;;7326:68:12;;;;;;;;;17507:19:::1;17529:15:::0;;;:6:::1;:15;::::0;;;;;;;17589;;17580:25;;:8:::1;:25:::0;;;;;17529:15;;17507:19;17665:21:::1;17536:7:::0;17665:12:::1;:21::i;:::-;-1:-1:-1::0;;;;;17701:38:12;::::1;17742:1;17701:38:::0;;;:23:::1;::::0;::::1;:38;::::0;;;;;17616:70;;-1:-1:-1;17616:70:12;-1:-1:-1;17701:42:12;17697:152:::1;;-1:-1:-1::0;;;;;17796:38:12;::::1;17837:1;17796:38:::0;;;:23:::1;::::0;::::1;:38;::::0;;;;:42;17697:152:::1;17934:5;:21;;;17959:1;17934:26:::0;17930:82:::1;;17976:20;::::0;::::1;:25:::0;;18000:1:::1;::::0;17976:20;::::1;::::0;:25:::1;::::0;18000:1;;-1:-1:-1;;;;;17976:25:12::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;17976:25:12::1;;;;;-1:-1:-1::0;;;;;17976:25:12::1;;;;;;17930:82;18046:13;18021:5;:21;;;:38;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;18152:26:12::1;::::0;::::1;::::0;18131:18:::1;::::0;::::1;::::0;:47:::1;::::0;18152:26;18131:47:::1;:::i;:::-;18090:5;:21;;;:88;;18069:163;;;::::0;-1:-1:-1;;;18069:163:12;;6278:2:25;18069:163:12::1;::::0;::::1;6260:21:25::0;6317:2;6297:18;;;6290:30;6356;6336:18;;;6329:58;6404:18;;18069:163:12::1;6076:352:25::0;18069:163:12::1;18244:9;18259:13;-1:-1:-1::0;;;;;18259:18:12::1;18285:13;18259:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18243:60;;;18321:4;18313:37;;;::::0;-1:-1:-1;;;18313:37:12;;6845:2:25;18313:37:12::1;::::0;::::1;6827:21:25::0;6884:2;6864:18;;;6857:30;-1:-1:-1;;;6903:18:25;;;6896:50;6963:18;;18313:37:12::1;6643:344:25::0;18313:37:12::1;18395:15:::0;;18366:60:::1;::::0;;7166:25:25;;;-1:-1:-1;;;;;7227:32:25;;7222:2;7207:18;;7200:60;18366::12::1;::::0;7139:18:25;18366:60:12::1;;;;;;;18454:20;::::0;::::1;:27:::0;-1:-1:-1;;;;;18454:27:12::1;:41:::0;:87;::::1;;;-1:-1:-1::0;18528:13:12::1;::::0;::::1;::::0;-1:-1:-1;;;;;18511:30:12;;::::1;18528:13:::0;::::1;18511:30;18454:87;18437:171;;;18566:31;18582:7;18591:5;18566:15;:31::i;:::-;-1:-1:-1::0;18625:13:12;;17385:1260;-1:-1:-1;;;;;;17385:1260:12:o;8914:2064::-;9178:10;;9151:7;;9178:10;;:19;9170:54;;;;-1:-1:-1;;;9170:54:12;;7473:2:25;9170:54:12;;;7455:21:25;7512:2;7492:18;;;7485:30;-1:-1:-1;;;7531:18:25;;;7524:52;7593:18;;9170:54:12;7271:346:25;9170:54:12;9255:30;;;;:15;:30;;;;;;:35;;9234:109;;;;-1:-1:-1;;;9234:109:12;;7824:2:25;9234:109:12;;;7806:21:25;7863:2;7843:18;;;7836:30;7902:29;7882:18;;;7875:57;7949:18;;9234:109:12;7622:351:25;9234:109:12;4534:9;9374:14;:37;;9353:109;;;;-1:-1:-1;;;9353:109:12;;8180:2:25;9353:109:12;;;8162:21:25;8219:2;8199:18;;;8192:30;8258:27;8238:18;;;8231:55;8303:18;;9353:109:12;7978:349:25;9353:109:12;4646:8;9493:14;:37;;9472:108;;;;-1:-1:-1;;;9472:108:12;;8534:2:25;9472:108:12;;;8516:21:25;8573:2;8553:18;;;8546:30;8612:26;8592:18;;;8585:54;8656:18;;9472:108:12;8332:348:25;9472:108:12;9608:13;;9598:6;:23;;9590:65;;;;-1:-1:-1;;;9590:65:12;;8887:2:25;9590:65:12;;;8869:21:25;8926:2;8906:18;;;8899:30;8965:31;8945:18;;;8938:59;9014:18;;9590:65:12;8685:353:25;9590:65:12;9688:18;9666:12;9734:13;9740:6;9734:5;:13::i;:::-;9718:29;;9757:19;9779;9791:6;9779:11;:19::i;:::-;9757:41;-1:-1:-1;9808:24:12;9757:41;9835:14;9844:5;9835:6;:14;:::i;:::-;:28;;;;:::i;:::-;9895:42;;-1:-1:-1;;;9895:42:12;;9911:10;9895:42;;;9255:34:25;9931:4:12;9305:18:25;;;9298:43;9808:55:12;;-1:-1:-1;9808:55:12;;-1:-1:-1;;;;;9895:15:12;;;;;9190:18:25;;9895:42:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;9874:131;;;;-1:-1:-1;;;9874:131:12;;9743:2:25;9874:131:12;;;9725:21:25;9782:2;9762:18;;;9755:30;-1:-1:-1;;;9801:18:25;;;9794:52;9863:18;;9874:131:12;9541:346:25;9874:131:12;10034:1;10016:14;;:19;;;;;;;:::i;:::-;;;;;;;;10045:26;10074:8;:24;10083:14;;10074:24;;;;;;;;;;;10045:53;;10128:10;10108;:17;;;:30;;;;;-1:-1:-1;;;;;10108:30:12;;;;;-1:-1:-1;;;;;10108:30:12;;;;;;10180:18;10148:10;:29;;;:50;;;;;-1:-1:-1;;;;;10148:50:12;;;;;-1:-1:-1;;;;;10148:50:12;;;;;;10235:13;10208:10;:24;;:40;;;;10290:18;10258:10;:29;;;:50;;;;;-1:-1:-1;;;;;10258:50:12;;;;;-1:-1:-1;;;;;10258:50:12;;;;;;10345:13;10318:10;:24;;;:40;;;;;-1:-1:-1;;;;;10318:40:12;;;;;-1:-1:-1;;;;;10318:40:12;;;;;;10388:6;10368:10;:17;;:26;;;;10430:44;;;;;;;;10459:1;-1:-1:-1;;;;;10430:44:12;;;;;10471:1;10463:10;;10430:44;;;10404:10;:23;;:70;;;;;;;;;;;;;-1:-1:-1;;;;;10404:70:12;;;;;-1:-1:-1;;;;;10404:70:12;;;;;;;;;;;;;;;;;10526:14;10508:15;:32;;;;:::i;:::-;10484:21;;;:56;;;10550:16;;;:24;;;10584:22;;;:36;;;10664:14;;10636:225;;;10207:25:25;;;10263:2;10248:18;;10241:34;;;-1:-1:-1;;;;;10349:15:25;;;10329:18;;;10322:43;10401:15;;;10396:2;10381:18;;10374:43;10454:15;;10448:3;10433:19;;10426:44;10302:3;10486:19;;10479:35;;;10545:3;10530:19;;10523:35;;;;10636:225:12;;;;;;;10194:3:25;10636:225:12;;;10872:67;-1:-1:-1;;;;;10872:22:12;;10895:10;10915:4;10922:16;10872:22;:67::i;:::-;-1:-1:-1;;10957:14:12;;;8914:2064;-1:-1:-1;;;;;;;;;;8914:2064:12:o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;23889:256:12:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;24040:14:12::1;:34:::0;;;;24084:8:::1;:22:::0;24116:8:::1;:22:::0;23889:256::o;14762:2066::-;14857:7;7345:12;;7334:7;:23;;:38;;;;;7371:1;7361:7;:11;7334:38;7326:68;;;;-1:-1:-1;;;7326:68:12;;5431:2:25;7326:68:12;;;5413:21:25;5470:2;5450:18;;;5443:30;-1:-1:-1;;;5489:18:25;;;5482:47;5546:18;;7326:68:12;5229:341:25;7326:68:12;14880:19:::1;14902:15:::0;;;:6:::1;:15;::::0;;;;;;;14962;;14953:25;;:8:::1;:25:::0;;;;;;15014:17:::1;::::0;::::1;::::0;14996:15:::1;:35;14988:61;;;::::0;-1:-1:-1;;;14988:61:12;;11132:2:25;14988:61:12::1;::::0;::::1;11114:21:25::0;11171:2;11151:18;;;11144:30;-1:-1:-1;;;11190:18:25;;;11183:43;11243:18;;14988:61:12::1;10930:337:25::0;14988:61:12::1;15139:24;::::0;15196:18:::1;::::0;::::1;::::0;15255:26:::1;::::0;::::1;::::0;15060:17:::1;::::0;;;15139:24;;15296:35;;::::1;15292:495;;;15351:20;15375:1;15351:25:::0;15347:121:::1;;15431:21;::::0;::::1;::::0;15415:38:::1;::::0;;;:15:::1;:38;::::0;;;;;15396:57:::1;::::0;;::::1;:::i;:::-;;;15347:121;15489:13;::::0;::::1;::::0;15506:10:::1;-1:-1:-1::0;;;;;15489:13:12;;::::1;:27:::0;15481:66:::1;;;::::0;-1:-1:-1;;;15481:66:12;;11474:2:25;15481:66:12::1;::::0;::::1;11456:21:25::0;11513:2;11493:18;;;11486:30;11552:28;11532:18;;;11525:56;11598:18;;15481:66:12::1;11272:350:25::0;15481:66:12::1;15573:10;::::0;-1:-1:-1;15608:35:12::1;15623:20:::0;15608:12;:35:::1;:::i;:::-;:39;::::0;15646:1:::1;15608:39;:::i;:::-;15597:50;;15292:495;;;15690:13;::::0;;::::1;::::0;15766:10;;-1:-1:-1;;;;;15690:13:12;;::::1;::::0;-1:-1:-1;15728:35:12::1;15751:12:::0;15728:20;:35:::1;:::i;:::-;:48;;;;:::i;:::-;15717:59;;15292:495;15805:10;-1:-1:-1::0;;;;;15805:23:12;::::1;;15797:58;;;::::0;-1:-1:-1;;;15797:58:12;;11959:2:25;15797:58:12::1;::::0;::::1;11941:21:25::0;11998:2;11978:18;;;11971:30;-1:-1:-1;;;12017:18:25;;;12010:52;12079:18;;15797:58:12::1;11757:346:25::0;15797:58:12::1;15886:8;15873:9;:21;;15865:59;;;::::0;-1:-1:-1;;;15865:59:12;;12310:2:25;15865:59:12::1;::::0;::::1;12292:21:25::0;12349:2;12329:18;;;12322:30;12388:27;12368:18;;;12361:55;12433:18;;15865:59:12::1;12108:349:25::0;15865:59:12::1;15952:13;::::0;::::1;::::0;-1:-1:-1;;;;;15952:13:12;;::::1;15939:26:::0;;::::1;::::0;15935:267:::1;;16003:9;15981:5;:18;;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;15935:267:12::1;::::0;-1:-1:-1;15935:267:12::1;;16043:20;::::0;::::1;:33:::0;;-1:-1:-1;;;;;;16043:33:12::1;16066:10;16043:33:::0;;::::1;::::0;;;:20:::1;16090:35:::0;;;:23:::1;::::0;::::1;:35;::::0;;;;:48;;16129:9:::1;::::0;16043:20;16090:48:::1;::::0;16129:9;;16090:48:::1;:::i;:::-;;;;;;;;16182:9;16152:5;:26;;;:39;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;15935:267:12::1;16254:17;::::0;::::1;::::0;16232:96:::1;::::0;16285:33:::1;16303:15:::0;16285::::1;:33;:::i;:::-;16232:8;:96::i;:::-;16212:17;::::0;::::1;:116:::0;16385:24:::1;::::0;16338:26:::1;::::0;16367:42:::1;::::0;:15:::1;:42;:::i;:::-;16338:71;;16461:18;16440:5;:17;;;:39;;16419:127;;;::::0;-1:-1:-1;;;16419:127:12;;12664:2:25;16419:127:12::1;::::0;::::1;12646:21:25::0;12703:2;12683:18;;;12676:30;12742:34;12722:18;;;12715:62;-1:-1:-1;;;12793:18:25;;;12786:39;12842:19;;16419:127:12::1;12462:405:25::0;16419:127:12::1;16585:5;:15;;;16562:259;16614:7;16635:5;:13;;;;;;;;;;-1:-1:-1::0;;;;;16635:13:12::1;16662:5;:18;;;16694:5;:20;;;;;;;;;;-1:-1:-1::0;;;;;16694:20:12::1;16728:5;:26;;;16768:5;:17;;;16799:5;:12;;;16562:259;;;;;;;;;;;;:::i;:::-;;;;;;;;14870:1958;;;;;;;;14762:2066:::0;;:::o;6543:128::-;6601:7;6655:9;6637:14;;6628:6;:23;;;;:::i;:::-;6627:37;;;;:::i;:::-;6620:44;6543:128;-1:-1:-1;;6543:128:12:o;12283:1281::-;12424:7;12396:9;7128:14;;7115:9;:27;;:44;;;;;7158:1;7146:9;:13;7115:44;7094:110;;;;-1:-1:-1;;;7094:110:12;;14137:2:25;7094:110:12;;;14119:21:25;14176:2;14156:18;;;14149:30;-1:-1:-1;;;14195:18:25;;;14188:49;14254:18;;7094:110:12;13935:343:25;7094:110:12;12447:23:::1;12473:19:::0;;;:8:::1;:19;::::0;;;;;;;12529:18;;::::1;::::0;12511:15:::1;:36;12503:64;;;::::0;-1:-1:-1;;;12503:64:12;;14485:2:25;12503:64:12::1;::::0;::::1;14467:21:25::0;14524:2;14504:18;;;14497:30;-1:-1:-1;;;14543:18:25;;;14536:45;14598:18;;12503:64:12::1;14283:339:25::0;12503:64:12::1;12598:20;::::0;::::1;:27:::0;-1:-1:-1;;;;;12598:27:12::1;:41:::0;12577:113:::1;;;::::0;-1:-1:-1;;;12577:113:12;;14829:2:25;12577:113:12::1;::::0;::::1;14811:21:25::0;14868:2;14848:18;;;14841:30;-1:-1:-1;;;14887:18:25;;;14880:55;14952:18;;12577:113:12::1;14627:349:25::0;12577:113:12::1;12721:10;;12708:9;:23;12700:56;;;::::0;-1:-1:-1;;;12700:56:12;;15183:2:25;12700:56:12::1;::::0;::::1;15165:21:25::0;15222:2;15202:18;;;15195:30;-1:-1:-1;;;15241:18:25;;;15234:50;15301:18;;12700:56:12::1;14981:344:25::0;12700:56:12::1;12774:6:::0;12766:55:::1;;;::::0;-1:-1:-1;;;12766:55:12;;15532:2:25;12766:55:12::1;::::0;::::1;15514:21:25::0;15571:2;15551:18;;;15544:30;-1:-1:-1;;;15590:18:25;;;15583:52;15652:18;;12766:55:12::1;15330:346:25::0;12766:55:12::1;12832:20;::::0;::::1;:25:::0;;12856:1:::1;::::0;12832:20;::::1;::::0;:25:::1;::::0;12856:1;;-1:-1:-1;;;;;12832:25:12::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;12832:25:12::1;;;;;-1:-1:-1::0;;;;;12832:25:12::1;;;;;;12883:1;12867:12;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;12924:12:12::1;::::0;;12895:19:::1;12917:20:::0;;;:6:::1;:20;::::0;;;;12947:27;;;12984:13:::1;::::0;;::::1;:26:::0;;-1:-1:-1;;;;;;12984:26:12;;::::1;13000:10;12984:26;::::0;;;13041:10;;13020:18:::1;::::0;;::::1;:31:::0;;;;13061:20:::1;::::0;::::1;:33:::0;;;;::::1;::::0;;;13104:26:::1;::::0;::::1;:30:::0;;;13144:21;;::::1;:25:::0;;;;13217:11;;13199:29:::1;::::0;:15:::1;:29;:::i;:::-;13179:17;::::0;::::1;:49:::0;;;13238:12:::1;::::0;::::1;:21:::0;;;13321:12:::1;::::0;13347:13:::1;::::0;::::1;::::0;13374:18:::1;::::0;::::1;::::0;13406:20:::1;::::0;::::1;::::0;13440:26:::1;::::0;::::1;::::0;13275:252:::1;::::0;13298:9;;13275:252:::1;::::0;::::1;::::0;13321:12;;-1:-1:-1;;;;;13347:13:12;;::::1;::::0;13374:18;;13406:20;::::1;::::0;13440:26;;13179:49;13253:6;;13275:252:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;13545:12:12::1;::::0;;12283:1281;-1:-1:-1;;;;12283:1281:12:o;6843:123::-;6898:7;6940:19;6952:6;6940:11;:19::i;:::-;6924:13;6930:6;6924:5;:13::i;:::-;:35;;;;:::i;23199:374::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;23336:35:12;::::1;23319:14;23336:35:::0;;;:21:::1;:35;::::0;;;;;23389:10;23381:43:::1;;;::::0;-1:-1:-1;;;23381:43:12;;16126:2:25;23381:43:12::1;::::0;::::1;16108:21:25::0;16165:2;16145:18;;;16138:30;-1:-1:-1;;;16184:18:25;;;16177:50;16244:18;;23381:43:12::1;15924:344:25::0;23381:43:12::1;-1:-1:-1::0;;;;;23434:35:12;::::1;23472:1;23434:35:::0;;;:21:::1;:35;::::0;;;;:39;23456:12;;23529:37:::1;::::0;23548:9;23559:6;23529:18:::1;:37::i;:::-;23309:264;;23199:374:::0;;:::o;24739:324::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;24887:1:12::1;24870:14;:18;24862:69;;;::::0;-1:-1:-1;;;24862:69:12;;16475:2:25;24862:69:12::1;::::0;::::1;16457:21:25::0;16514:2;16494:18;;;16487:30;16553:34;16533:18;;;16526:62;-1:-1:-1;;;16604:18:25;;;16597:36;16650:19;;24862:69:12::1;16273:402:25::0;24862:69:12::1;24941:30;::::0;;;:15:::1;:30;::::0;;;;;;;;:47;;;25004:52;;16854:25:25;;;16895:18;;;16888:34;;;25004:52:12::1;::::0;16827:18:25;25004:52:12::1;;;;;;;24739:324:::0;;:::o;11160:784::-;11251:9;7128:14;;7115:9;:27;;:44;;;;;7158:1;7146:9;:13;7115:44;7094:110;;;;-1:-1:-1;;;7094:110:12;;14137:2:25;7094:110:12;;;14119:21:25;14176:2;14156:18;;;14149:30;-1:-1:-1;;;14195:18:25;;;14188:49;14254:18;;7094:110:12;13935:343:25;7094:110:12;11276:23:::1;11302:19:::0;;;:8:::1;:19;::::0;;;;11353:20:::1;::::0;::::1;:27:::0;-1:-1:-1;;;;;11353:27:12::1;:41:::0;11332:113:::1;;;::::0;-1:-1:-1;;;11332:113:12;;14829:2:25;11332:113:12::1;::::0;::::1;14811:21:25::0;14868:2;14848:18;;;14841:30;-1:-1:-1;;;14887:18:25;;;14880:55;14952:18;;11332:113:12::1;14627:349:25::0;11332:113:12::1;11495:7;:18;;;11476:15;:37;;11455:107;;;::::0;-1:-1:-1;;;11455:107:12;;17135:2:25;11455:107:12::1;::::0;::::1;17117:21:25::0;17174:2;17154:18;;;17147:30;17213:25;17193:18;;;17186:53;17256:18;;11455:107:12::1;16933:347:25::0;11455:107:12::1;11580:20;::::0;::::1;::::0;-1:-1:-1;;;;;11580:20:12::1;:25:::0;11572:59:::1;;;::::0;-1:-1:-1;;;11572:59:12;;17487:2:25;11572:59:12::1;::::0;::::1;17469:21:25::0;17526:2;17506:18;;;17499:30;-1:-1:-1;;;17545:18:25;;;17538:51;17606:18;;11572:59:12::1;17285:345:25::0;11572:59:12::1;11672:14:::0;;11642:20:::1;::::0;::::1;:44:::0;;-1:-1:-1;;;;;;11642:44:12::1;-1:-1:-1::0;;;;;11672:14:12;;::::1;11642:44:::0;;::::1;::::0;;11702:43:::1;::::0;;7166:25:25;;;7222:2;7207:18;;7200:60;;;;11702:43:12::1;::::0;7139:18:25;11702:43:12::1;;;;;;;11778:26;::::0;::::1;::::0;11847:14;;11908:19:::1;::::0;::::1;::::0;11892:13:::1;::::0;::::1;::::0;11875:14:::1;::::0;::::1;::::0;-1:-1:-1;;;;;11778:26:12;;::::1;::::0;11815:122:::1;::::0;11847:14:::1;::::0;11908:19;11875:30:::1;::::0;::::1;:::i;:::-;:52;;;;:::i;:::-;-1:-1:-1::0;;;;;11815:18:12;::::1;::::0;:122;:18:::1;:122::i;24352:123::-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;24436:13:12::1;:32:::0;24352:123::o;25373:151::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;25439:10:12::1;::::0;::::1;;:19;25431:59;;;::::0;-1:-1:-1;;;25431:59:12;;17837:2:25;25431:59:12::1;::::0;::::1;17819:21:25::0;17876:2;17856:18;;;17849:30;17915:29;17895:18;;;17888:57;17962:18;;25431:59:12::1;17635:351:25::0;25431:59:12::1;25500:10;:17:::0;;-1:-1:-1;;25500:17:12::1;25513:4;25500:17;::::0;;25373:151::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;18193:2:25;1998:73:0::1;::::0;::::1;18175:21:25::0;18232:2;18212:18;;;18205:30;18271:34;18251:18;;;18244:62;-1:-1:-1;;;18322:18:25;;;18315:36;18368:19;;1998:73:0::1;17991:402:25::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6317:136:12:-;6369:7;6395:51;6404:8;;6436:9;6424:8;;6415:6;:17;;;;:::i;:::-;6414:31;;;;:::i;18651:3701::-;18736:7;18790:15;;;:6;:15;;;;;;;;18850;;18841:25;;:8;:25;;;;;18899:18;;;;18958:26;;;;18736:7;;18790:15;18841:25;18899:18;19039:35;18958:26;18899:18;19039:35;:::i;:::-;19015:5;:21;;;:59;18994:129;;;;-1:-1:-1;;;18994:129:12;;18600:2:25;18994:129:12;;;18582:21:25;18639:2;18619:18;;;18612:30;18678:25;18658:18;;;18651:53;18721:18;;18994:129:12;18398:347:25;18994:129:12;19199:15;;19255:21;;;;19290:26;;;;19330:21;;;;19365:14;;;;470:246:8;;;;;;;21216:19:25;;;;19228:13:12;21251:12:25;;;21244:28;21288:12;;;;21281:28;;;;-1:-1:-1;;21393:15:25;;;;;21375:12;;;21368:46;21449:15;;;;;;;21430:13;;;21423:47;21486:13;;;;21479:29;;;;470:246:8;;;;;;;;;;21524:13:25;;470:246:8;;;443:287;;;;;19400:16:12;19419:87;19459:11;19484:5;:12;;;891:37:8;;;;;;;21705:19:25;;;;21740:12;;;21733:28;;;;891:37:8;;;;;;;;;21777:12:25;;;;891:37:8;;881:48;;;;;;743:193;19419:87:12;19550:63;;;;;;;;19593:20;;;19550:63;-1:-1:-1;;;;;19550:63:12;;;;;;;;;;;;;;20078:18;:61;;-1:-1:-1;;;20078:61:12;;;;;352:25:25;;;19400:106:12;;-1:-1:-1;;;19550:63:12;;-1:-1:-1;;;;20078:18:12;;;;;:26;;325:18:25;;20078:61:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20043:96;;-1:-1:-1;20043:96:12;-1:-1:-1;;;;;;20154:20:12;;20150:112;;-1:-1:-1;;20210:19:12;;20231;;;;20150:112;20276:18;;:46;;-1:-1:-1;;;20276:46:12;;;;;352:25:25;;;-1:-1:-1;;;;;20276:18:12;;;;:36;;325:18:25;;20276:46:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20272:550;;;20390:5;20377:18;;20272:550;;;-1:-1:-1;;;;;20416:20:12;;;20412:410;;20520:13;;;;-1:-1:-1;;;;;20510:23:12;;;20520:13;;20510:23;:49;;;;;20547:5;:12;;;20537:6;:22;20510:49;20497:62;;20412:410;;;20673:5;:17;;;20654:15;:36;;20629:120;;;;-1:-1:-1;;;20629:120:12;;19733:2:25;20629:120:12;;;19715:21:25;19772:2;19752:18;;;19745:30;19811:27;19791:18;;;19784:55;19856:18;;20629:120:12;19531:349:25;20629:120:12;20791:20;20776:12;:35;20763:48;;20412:410;20886:21;20917;20953:10;20949:777;;;21058:35;21073:20;21058:12;:35;:::i;:::-;21123:13;;;;21042:51;;-1:-1:-1;;;;;;21123:13:12;;-1:-1:-1;20949:777:12;;;21157:24;;21153:573;;21310:10;21286:35;;;;:23;;;:35;;;;;;21282:39;;:1;:39;:::i;:::-;21266:55;;21351:10;21335:26;;21400:1;21384:13;:17;21376:64;;;;-1:-1:-1;;;21376:64:12;;20087:2:25;21376:64:12;;;20069:21:25;20126:2;20106:18;;;20099:30;20165:34;20145:18;;;20138:62;-1:-1:-1;;;20216:18:25;;;20209:32;20258:19;;21376:64:12;19885:398:25;21376:64:12;21153:573;;;-1:-1:-1;;1082:7:0;1108:6;21666:12:12;;-1:-1:-1;;;;;1108:6:0;21153:573:12;22031:20;;;;-1:-1:-1;;;;;22031:20:12;22017:10;:34;22013:285;;22086:20;22071:12;:35;22067:221;;;22144:35;22159:20;22144:12;:35;:::i;:::-;22126:54;;;;:::i;:::-;;;22067:221;;;22237:35;22260:12;22237:20;:35;:::i;:::-;22219:54;;;;:::i;:::-;;;22067:221;22316:13;22331;;-1:-1:-1;18651:3701:12;-1:-1:-1;;;;;;;;;;;;18651:3701:12:o;22358:498::-;22477:13;;;;22522:15;;22505:42;;;7166:25:25;;;-1:-1:-1;;;;;22477:13:12;;;7222:2:25;7207:18;;7200:60;;;22477:13:12;22505:42;;7139:18:25;22505:42:12;;;;;;;22581:43;;;;;;;;-1:-1:-1;;;;;22581:43:12;;;;;;22611:12;;;;22581:43;;;;;;;22558:20;;;:66;;-1:-1:-1;;;;;;22558:66:12;;;;;;;;;;;22688:32;;;;22558:66;22657:26;;;;;;-1:-1:-1;22635:49:12;;;:21;:49;;;;;;:85;;:49;;-1:-1:-1;22635:85:12;;22688:32;;22635:85;:::i;:::-;;;;-1:-1:-1;;22753:26:12;;;;22835:13;;;;22818:14;;;;-1:-1:-1;;;;;22753:26:12;;;;22790:59;;22809:7;;22818:30;;22835:13;22818:30;:::i;912:241:4:-;1077:68;;-1:-1:-1;;;;;20546:15:25;;;1077:68:4;;;20528:34:25;20598:15;;20578:18;;;20571:43;20630:18;;;20623:34;;;1050:96:4;;1070:5;;-1:-1:-1;;;1100:27:4;20463:18:25;;1077:68:4;;;;-1:-1:-1;;1077:68:4;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:4;-1:-1:-1;;;;;;1077:68:4;;;;;;;;;;1050:19;:96::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;285:105:7:-;343:7;374:1;369;:6;;:14;;382:1;369:14;;;378:1;369:14;362:21;285:105;-1:-1:-1;;;285:105:7:o;701:205:4:-;840:58;;-1:-1:-1;;;;;20860:32:25;;840:58:4;;;20842:51:25;20909:18;;;20902:34;;;813:86:4;;833:5;;-1:-1:-1;;;863:23:4;20815:18:25;;840:58:4;20668:274:25;813:86:4;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:4;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:4;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:4;;22002:2:25;3811:85:4;;;21984:21:25;22041:2;22021:18;;;22014:30;22080:34;22060:18;;;22053:62;-1:-1:-1;;;22131:18:25;;;22124:40;22181:19;;3811:85:4;21800:406:25;3861:223:5;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:5:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:5;;22413:2:25;5137:81:5;;;22395:21:25;22452:2;22432:18;;;22425:30;22491:34;22471:18;;;22464:62;-1:-1:-1;;;22542:18:25;;;22535:36;22588:19;;5137:81:5;22211:402:25;5137:81:5;-1:-1:-1;;;;;1465:19:5;;;5228:60;;;;-1:-1:-1;;;5228:60:5;;22820:2:25;5228:60:5;;;22802:21:25;22859:2;22839:18;;;22832:30;22898:31;22878:18;;;22871:59;22947:18;;5228:60:5;22618:353:25;5228:60:5;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:5;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:5:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:5;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:5;;;;;;;;:::i;388:180:25:-;447:6;500:2;488:9;479:7;475:23;471:32;468:52;;;516:1;513;506:12;468:52;-1:-1:-1;539:23:25;;388:180;-1:-1:-1;388:180:25:o;781:131::-;-1:-1:-1;;;;;856:31:25;;846:42;;836:70;;902:1;899;892:12;917:736;1021:6;1029;1037;1045;1053;1061;1114:3;1102:9;1093:7;1089:23;1085:33;1082:53;;;1131:1;1128;1121:12;1082:53;1167:9;1154:23;1144:33;;1227:2;1216:9;1212:18;1199:32;1240:31;1265:5;1240:31;:::i;:::-;1290:5;-1:-1:-1;1347:2:25;1332:18;;1319:32;1360:33;1319:32;1360:33;:::i;:::-;1412:7;-1:-1:-1;1471:2:25;1456:18;;1443:32;1484:33;1443:32;1484:33;:::i;:::-;917:736;;;;-1:-1:-1;917:736:25;;1590:3;1575:19;;1562:33;;1642:3;1627:19;;;1614:33;;-1:-1:-1;917:736:25;-1:-1:-1;;917:736:25:o;1658:247::-;1717:6;1770:2;1758:9;1749:7;1745:23;1741:32;1738:52;;;1786:1;1783;1776:12;1738:52;1825:9;1812:23;1844:31;1869:5;1844:31;:::i;1910:316::-;1987:6;1995;2003;2056:2;2044:9;2035:7;2031:23;2027:32;2024:52;;;2072:1;2069;2062:12;2024:52;-1:-1:-1;;2095:23:25;;;2165:2;2150:18;;2137:32;;-1:-1:-1;2216:2:25;2201:18;;;2188:32;;1910:316;-1:-1:-1;1910:316:25:o;4330:248::-;4398:6;4406;4459:2;4447:9;4438:7;4434:23;4430:32;4427:52;;;4475:1;4472;4465:12;4427:52;-1:-1:-1;;4498:23:25;;;4568:2;4553:18;;;4540:32;;-1:-1:-1;4330:248:25:o;4583:388::-;4651:6;4659;4712:2;4700:9;4691:7;4687:23;4683:32;4680:52;;;4728:1;4725;4718:12;4680:52;4767:9;4754:23;4786:31;4811:5;4786:31;:::i;:::-;4836:5;-1:-1:-1;4893:2:25;4878:18;;4865:32;4906:33;4865:32;4906:33;:::i;:::-;4958:7;4948:17;;;4583:388;;;;;:::o;5575:127::-;5636:10;5631:3;5627:20;5624:1;5617:31;5667:4;5664:1;5657:15;5691:4;5688:1;5681:15;5707:231;5747:4;-1:-1:-1;;;;;5845:10:25;;;;5815;;5867:12;;;5864:38;;;5882:18;;:::i;:::-;5919:13;;5707:231;-1:-1:-1;;;5707:231:25:o;5943:128::-;5983:3;6014:1;6010:6;6007:1;6004:13;6001:39;;;6020:18;;:::i;:::-;-1:-1:-1;6056:9:25;;5943:128::o;9352:184::-;9422:6;9475:2;9463:9;9454:7;9450:23;9446:32;9443:52;;;9491:1;9488;9481:12;9443:52;-1:-1:-1;9514:16:25;;9352:184;-1:-1:-1;9352:184:25:o;10569:356::-;10771:2;10753:21;;;10790:18;;;10783:30;10849:34;10844:2;10829:18;;10822:62;10916:2;10901:18;;10569:356::o;11627:125::-;11667:4;11695:1;11692;11689:8;11686:34;;;11700:18;;:::i;:::-;-1:-1:-1;11737:9:25;;11627:125::o;12872:663::-;13187:25;;;-1:-1:-1;;;;;13286:15:25;;;13281:2;13266:18;;13259:43;13333:2;13318:18;;13311:34;;;;13381:15;;;;13376:2;13361:18;;13354:43;13428:3;13413:19;;13406:35;;;;13239:3;13457:19;;13450:35;;;;13516:3;13501:19;;13494:35;13174:3;13159:19;;12872:663::o;13540:168::-;13580:7;13646:1;13642;13638:6;13634:14;13631:1;13628:21;13623:1;13616:9;13609:17;13605:45;13602:71;;;13653:18;;:::i;:::-;-1:-1:-1;13693:9:25;;13540:168::o;13713:217::-;13753:1;13779;13769:132;;13823:10;13818:3;13814:20;13811:1;13804:31;13858:4;13855:1;13848:15;13886:4;13883:1;13876:15;13769:132;-1:-1:-1;13915:9:25;;13713:217::o;15681:238::-;15721:3;-1:-1:-1;;;;;15788:10:25;;;15818;;;15848:12;;;15840:21;;15837:47;;;15864:18;;:::i;:::-;15900:13;;15681:238;-1:-1:-1;;;;15681:238:25:o;18932:312::-;19011:6;19019;19072:2;19060:9;19051:7;19047:23;19043:32;19040:52;;;19088:1;19085;19078:12;19040:52;19120:9;19114:16;19139:31;19164:5;19139:31;:::i;:::-;19234:2;19219:18;;;;19213:25;19189:5;;19213:25;;-1:-1:-1;;;18932:312:25:o;19249:277::-;19316:6;19369:2;19357:9;19348:7;19344:23;19340:32;19337:52;;;19385:1;19382;19375:12;19337:52;19417:9;19411:16;19470:5;19463:13;19456:21;19449:5;19446:32;19436:60;;19492:1;19489;19482:12;22976:258;23048:1;23058:113;23072:6;23069:1;23066:13;23058:113;;;23148:11;;;23142:18;23129:11;;;23122:39;23094:2;23087:10;23058:113;;;23189:6;23186:1;23183:13;23180:48;;;-1:-1:-1;;23224:1:25;23206:16;;23199:27;22976:258::o;23239:274::-;23368:3;23406:6;23400:13;23422:53;23468:6;23463:3;23456:4;23448:6;23444:17;23422:53;:::i;:::-;23491:16;;;;;23239:274;-1:-1:-1;;23239:274:25:o;23518:383::-;23667:2;23656:9;23649:21;23630:4;23699:6;23693:13;23742:6;23737:2;23726:9;23722:18;23715:34;23758:66;23817:6;23812:2;23801:9;23797:18;23792:2;23784:6;23780:15;23758:66;:::i;:::-;23885:2;23864:15;-1:-1:-1;;23860:29:25;23845:45;;;;23892:2;23841:54;;23518:383;-1:-1:-1;;23518:383:25:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "ClaimMade(uint256,uint256,address,uint256,address,uint256,uint256,bytes32)": {
        "notice": "Emitted when a claim or a counter-claim (challenge) has been made. .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`"
      },
      "ClaimStakeWithdrawn(uint256,uint256,address)": {
        "notice": "Emitted when staked native tokens tied to a claim have been withdrawn. This can only happen when the claim has been resolved and the caller of :sol:func:`withdraw` is allowed to withdraw their stake. .. seealso:: :sol:func:`withdraw`"
      },
      "DepositWithdrawn(uint256,address)": {
        "notice": "Emitted when the token deposit for request ``requestId`` has been transferred to the ``receiver``. This can happen in two cases:  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`  * a claim related to the request has been resolved successfully in favor of the claimer .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`"
      },
      "RequestCreated(uint256,uint256,address,address,address,uint256,uint256)": {
        "notice": "Emitted when a new request has been created. .. seealso:: :sol:func:`createRequest`"
      }
    },
    "kind": "dev",
    "methods": {
      "MAX_VALIDITY_PERIOD()": {
        "notice": "The maximum validity period of a request."
      },
      "MIN_VALIDITY_PERIOD()": {
        "notice": "The minimum validity period of a request."
      },
      "challengeClaim(uint256)": {
        "notice": "Challenge an existing claim. The claim must still be valid at call time. This function implements one round of the challenge game. The original claimer is allowed to call this function only after someone else made a challenge, i.e. every second round. However, once the original claimer counter-challenges, anyone can join the game and make another challenge. The caller must provide enough native tokens as their stake. For the original claimer, the minimum stake is ``challengerStakeTotal - claimerStake + claimStake``. For challengers, the minimum stake is ``claimerStake - challengerStakeTotal + 1``. An example (time flows downwards, claimStake = 10)::   claimRequest() by Max [stakes 10]   challengeClaim() by Alice [stakes 11]   challengeClaim() by Max [stakes 11]   challengeClaim() by Bob [stakes 16] In this example, if Max didn't want to lose the challenge game to Alice and Bob, he would have to challenge with a stake of at least 16.",
        "params": {
          "claimId": "The claim ID."
        }
      },
      "challengePeriodExtension()": {
        "notice": "The period by which the termination time of a claim is extended after each round of the challenge game. This period should allow enough time for the other parties to counter-challenge. .. note::    The claim's termination time is extended only if it is less than the    extension time. Note that in the first challenge round, i.e. the round initiated by the first challenger, the termination time is extended additionally by the finality period of the target chain. This is done to allow for L1 resolution."
      },
      "claimCounter()": {
        "notice": "The claim counter, used to generate claim IDs."
      },
      "claimPeriod()": {
        "notice": "The period for which the claim is valid."
      },
      "claimRequest(uint256,bytes32)": {
        "notice": "Claim that a request was filled by the caller. The request must still be valid at call time. The caller must provide the ``claimStake`` amount of source rollup's native token.",
        "params": {
          "fillId": "The fill ID.",
          "requestId": "ID of the request."
        },
        "returns": {
          "_0": "The claim ID."
        }
      },
      "claimStake()": {
        "notice": "The minimum amount of source chain's native token that the claimer needs to provide when making a claim, as well in each round of the challenge game."
      },
      "claims(uint256)": {
        "notice": "Maps claim IDs to claims."
      },
      "collectedProtocolFees(address)": {
        "notice": "Maps ERC20 token addresses to related token amounts that belong to the protocol."
      },
      "constructor": {
        "notice": "Constructor.",
        "params": {
          "_challengePeriodExtension": "Challenge period extension, in seconds.",
          "_claimPeriod": "Claim period, in seconds.",
          "_claimStake": "Claim stake amount.",
          "_resolutionRegistry": "Address of the resolution registry."
        }
      },
      "createRequest(uint256,address,address,address,uint256,uint256)": {
        "notice": "Create a new transfer request.",
        "params": {
          "amount": "Amount of tokens to transfer. Does not include fees.",
          "sourceTokenAddress": "Address of the token contract on the source chain.",
          "targetAddress": "Recipient address on the target chain.",
          "targetChainId": "ID of the target chain.",
          "targetTokenAddress": "Address of the token contract on the target chain.",
          "validityPeriod": "The number of seconds the request is to be considered valid.                       Once its validity period has elapsed, the request cannot be claimed                       anymore and will eventually expire, allowing the request submitter                       to withdraw the deposited tokens if there are no active claims."
        },
        "returns": {
          "_0": "ID of the newly created request."
        }
      },
      "deprecateContract()": {
        "notice": "Mark the contract as deprecated. Once the contract is deprecated, it cannot be used to create new requests anymore. Withdrawing deposited funds and claim stakes still works, though. .. note:: This function can only be called by the contract owner."
      },
      "deprecated()": {
        "notice": "Indicates whether the contract is deprecated. A deprecated contract cannot be used to create new requests."
      },
      "finalityPeriods(uint256)": {
        "notice": "Maps target rollup chain IDs to finality periods. Finality periods are in seconds."
      },
      "lpFee(uint256)": {
        "notice": "Compute the liquidy provider fee that needs to be paid for a given transfer amount."
      },
      "lpFeePPM()": {
        "notice": "Liquidity provider fee percentage, expressed in ppm (parts per million)."
      },
      "minLpFee()": {
        "notice": "The minimum fee, denominated in transfer token, paid to the liquidity provider."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "protocolFee(uint256)": {
        "notice": "Compute the protocol fee that needs to be paid for a given transfer amount."
      },
      "protocolFeePPM()": {
        "notice": "Protocol fee percentage, expressed in ppm (parts per million)."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "requestCounter()": {
        "notice": "The request counter, used to generate request IDs."
      },
      "requests(uint256)": {
        "notice": "Maps request IDs to requests."
      },
      "resolutionRegistry()": {
        "notice": "The resolution registry that is used to query for results of L1 resolution."
      },
      "setFinalityPeriod(uint256,uint256)": {
        "notice": "Set the finality period for the given target chain. .. note:: This function can only be called by the contract owner.",
        "params": {
          "finalityPeriod": "Finality period in seconds.",
          "targetChainId": "The target chain ID."
        }
      },
      "totalFee(uint256)": {
        "notice": "Compute the total fee that needs to be paid for a given transfer amount. The total fee is the sum of the liquidity provider fee and the protocol fee."
      },
      "transferLimit()": {
        "notice": "The maximum amount of tokens that can be transferred in a single request."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateFeeData(uint256,uint256,uint256)": {
        "notice": "Update fee parameters. .. note:: This function can only be called by the contract owner.",
        "params": {
          "newLpFeePPM": "The new value for ``lpFeePPM``.",
          "newMinLpFee": "The new value for ``minLpFee``.",
          "newProtocolFeePPM": "The new value for ``protocolFeePPM``."
        }
      },
      "updateTransferLimit(uint256)": {
        "notice": "Update the transfer amount limit. .. note:: This function can only be called by the contract owner.",
        "params": {
          "newTransferLimit": "The new value for ``transferLimit``."
        }
      },
      "withdraw(uint256)": {
        "notice": "Withdraw the deposit that the request submitter left with the contract, as well as the staked native tokens associated with the claim. In case the caller of this function is a challenger that won the game, they will only get their staked native tokens plus the reward in the form of full (sole challenger) or partial (multiple challengers) amount of native tokens staked by the dishonest claimer.",
        "params": {
          "claimId": "The claim ID."
        },
        "returns": {
          "_0": "The address of the deposit receiver."
        }
      },
      "withdrawExpiredRequest(uint256)": {
        "notice": "Withdraw funds deposited with an expired request. No claims must be active for the request.",
        "params": {
          "requestId": "ID of the expired request."
        }
      },
      "withdrawProtocolFees(address,address)": {
        "notice": "Withdraw protocol fees collected by the contract. Protocol fees are paid in token transferred. .. note:: This function can only be called by the contract owner.",
        "params": {
          "recipient": "The address the fees should be sent to.",
          "tokenAddress": "The address of the token contract."
        }
      }
    },
    "notice": "The request manager. This contract is responsible for keeping track of transfer requests, implementing the rules of the challenge game and holding deposited tokens until they are withdrawn. It is the only contract that agents need to interact with on the source chain.",
    "version": 1
  },
  "offset": [
    762,
    25526
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x973A814E GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xD3868348 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xEA656F7D GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEA656F7D EQ PUSH2 0x6DF JUMPI DUP1 PUSH4 0xEB321173 EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x70A JUMPI DUP1 PUSH4 0xF7D64CEC EQ PUSH2 0x72A JUMPI DUP1 PUSH4 0xF9432517 EQ PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD3868348 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0xD762A37B EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0xE2653EEB EQ PUSH2 0x6B3 JUMPI DUP1 PUSH4 0xE7AAD5C4 EQ PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB1743C5B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xB1743C5B EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0xCEA74EDF EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0xCF7B287F EQ PUSH2 0x633 JUMPI DUP1 PUSH4 0xD137920B EQ PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x973A814E EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xA032B5F4 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xAB9634EE EQ PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6BC6C8D1 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x81D12C58 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x81D12C58 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x92C824D8 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x96171D05 EQ PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6BC6C8D1 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x78DA194B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x7DC2CD98 EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F4212B8 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x2F4212B8 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x2F92F009 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x4EFA8F17 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x5D5AA11B EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE136B19 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x1489F8D2 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x1D18ADC5 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x25C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x20D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x12C DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x219 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x219 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x23AB JUMP JUMPDEST PUSH2 0xA17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x2410 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0xEA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x242D JUMP JUMPDEST PUSH2 0xED9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42D PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD DUP10 MLOAD DUP1 DUP12 ADD SWAP1 SWAP11 MSTORE PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP12 MSTORE PUSH1 0x7 DUP9 ADD SLOAD SWAP9 DUP12 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x8 DUP8 ADD SLOAD SWAP9 DUP8 ADD SLOAD PUSH1 0xA DUP9 ADD SLOAD PUSH1 0xB SWAP1 SWAP9 ADD SLOAD SWAP7 DUP10 AND SWAP11 SWAP6 DUP10 AND SWAP10 SWAP5 SWAP9 SWAP4 DUP5 AND SWAP8 SWAP4 SWAP1 SWAP3 AND SWAP6 SWAP1 SWAP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND SWAP3 SWAP1 DUP12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP13 DUP14 AND DUP2 MSTORE SWAP11 DUP13 AND PUSH1 0x20 DUP1 DUP14 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP12 ADD SWAP10 SWAP1 SWAP10 MSTORE SWAP7 DUP11 AND PUSH1 0x60 DUP11 ADD MSTORE SWAP5 DUP10 AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD SWAP1 SWAP8 AND PUSH1 0xC0 DUP8 ADD MSTORE SWAP1 SWAP4 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB SWAP1 SWAP5 AND PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x140 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x160 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 ADD PUSH2 0x219 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x27C JUMP JUMPDEST PUSH2 0x34F PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH2 0xF11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH4 0x1DFE200 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x1309 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59A PUSH2 0x54B CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP7 SWAP5 SWAP6 SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x20 DUP11 ADD MSTORE DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 SWAP1 SWAP3 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x219 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x27C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x60E CALLDATASIZE PUSH1 0x4 PUSH2 0x2459 JUMP JUMPDEST PUSH2 0x132D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x62E CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x15FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x64E CALLDATASIZE PUSH1 0x4 PUSH2 0x247B JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x66E CALLDATASIZE PUSH1 0x4 PUSH2 0x2459 JUMP JUMPDEST PUSH2 0x16CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x68E CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x17A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x6AE CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x19AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x19DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x725 CALLDATASIZE PUSH1 0x4 PUSH2 0x2410 JUMP JUMPDEST PUSH2 0x1A69 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x745 CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x1B04 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x775 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x7BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x18DB185A5B5259081B9BDD081D985B1A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SWAP1 SWAP2 DUP1 PUSH2 0x7E2 DUP8 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP4 POP SWAP2 POP ISZERO PUSH2 0x823 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST DUP4 PUSH1 0x6 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x875 JUMPI PUSH1 0x8 DUP4 ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x850 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH2 0x24CA JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP5 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST DUP5 PUSH1 0x6 ADD SLOAD GT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F20776974686472617720746F6F206C6172676500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x942 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x947 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST DUP5 SLOAD PUSH1 0x40 DUP1 MLOAD DUP11 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x5B0AEC51A74BF236E8FA08BCB2E303068C7AC1AED3CA410D25B8DAD27538D73C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x9FC JUMPI POP PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0xA0B JUMPI PUSH2 0xA0B DUP5 DUP7 PUSH2 0x1F3C JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x10DBDB9D1C9858DD081A5CC819195C1C9958D85D1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xAC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617267657420726F6C6C7570206E6F7420737570706F727465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x12C DUP3 LT ISZERO PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696469747920706572696F6420746F6F2073686F727400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH4 0x1DFE200 DUP3 GT ISZERO PUSH2 0xB69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696469747920706572696F6420746F6F206C6F6E670000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0xE SLOAD DUP4 GT ISZERO PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473207472616E73666572206C696D6974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST DUP6 PUSH1 0x0 PUSH2 0xBC7 DUP6 PUSH2 0x1B04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBD4 DUP7 PUSH2 0x1309 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0xBE3 DUP5 DUP10 PUSH2 0x24F2 JUMP JUMPDEST PUSH2 0xBED SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC3C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC60 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST LT ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP11 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP12 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP10 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP9 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE POP DUP2 PUSH1 0x6 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP7 TIMESTAMP PUSH2 0xDFC SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0xA DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0xB DUP3 ADD DUP5 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP16 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP4 DUP4 ADD MSTORE DUP14 DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE DUP13 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH32 0x18A412D0656B9A5C9263A134F66A34DA33CAD7C3690971601F9963ADE588E701 SWAP2 DUP2 SWAP1 SUB PUSH1 0xE0 ADD SWAP1 LOG1 PUSH2 0xE90 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND CALLER ADDRESS DUP6 PUSH2 0x2021 JUMP JUMPDEST POP POP PUSH1 0x5 SLOAD SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xECD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0xED7 PUSH1 0x0 PUSH2 0x208C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0xD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xC SSTORE PUSH1 0xB SSTORE JUMP JUMPDEST DUP1 PUSH1 0x6 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0xF24 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x18DB185A5B5259081B9BDD081D985B1A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x7 DUP3 ADD SLOAD TIMESTAMP LT PUSH2 0xFC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x10DB185A5B48195E1C1A5C9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 DUP1 DUP3 GT ISZERO PUSH2 0x1086 JUMPI DUP1 PUSH1 0x0 SUB PUSH2 0x1009 JUMPI PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1006 SWAP1 DUP5 PUSH2 0x24F2 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 DUP8 ADD SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x1067 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206368616C6C656E6765206F776E20636C61696D000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST CALLER SWAP5 POP PUSH2 0x1074 DUP2 DUP4 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x107F SWAP1 PUSH1 0x1 PUSH2 0x24F2 JUMP JUMPDEST SWAP4 POP PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP9 ADD SLOAD SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP6 POP PUSH2 0x10A5 DUP4 DUP4 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x10AF SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST SWAP4 POP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ PUSH2 0x1103 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08195B1A59DA589B19481D1BC81BDD5D189A59 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST DUP4 CALLVALUE LT ISZERO PUSH2 0x1153 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207374616B652070726F766964656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP7 AND SUB PUSH2 0x118A JUMPI CALLVALUE DUP8 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x117F SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x11E2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x11C1 SWAP1 DUP5 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE DUP8 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11DC SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x7 DUP8 ADD SLOAD PUSH2 0x11FA SWAP1 PUSH2 0x11F5 DUP6 TIMESTAMP PUSH2 0x24F2 JUMP JUMPDEST PUSH2 0x20DC JUMP JUMPDEST PUSH1 0x7 DUP9 ADD SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x120F SWAP1 TIMESTAMP PUSH2 0x24F2 JUMP JUMPDEST SWAP1 POP DUP1 DUP9 PUSH1 0x7 ADD SLOAD LT ISZERO PUSH2 0x1277 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D207465726D696E6174696F6E20646964206E6F7420696E63726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0xE6CA40CADCDEEACED PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B1 JUMP JUMPDEST DUP8 PUSH1 0x0 ADD SLOAD PUSH32 0x29FD2DF293BA511E44CA47212C915137020231ED3AC0EE7BD02A7A655275AD37 DUP12 DUP11 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x2 ADD SLOAD DUP13 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP14 PUSH1 0x5 ADD SLOAD DUP15 PUSH1 0x7 ADD SLOAD DUP16 PUSH1 0x8 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x12F5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF4240 PUSH1 0xD SLOAD DUP4 PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x25AE JUMP JUMPDEST PUSH2 0x1327 SWAP2 SWAP1 PUSH2 0x25CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x5 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x1342 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1384 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1C995C5D595CDD1259081B9BDD081D985B1A59 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD TIMESTAMP LT PUSH2 0x13D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14995C5D595CDD08195E1C1A5C9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1430 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0x1478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081CDD185AD948185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST DUP4 PUSH2 0x14BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x46696C6C4964206D757374206E6F742062652030783 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x14DF SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH2 0x25EF JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1516 SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP8 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE SWAP1 SLOAD PUSH1 0x2 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP3 ADD DUP4 SWAP1 SSTORE SWAP3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SLOAD PUSH2 0x1579 SWAP1 TIMESTAMP PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x7 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x40 MLOAD DUP13 SWAP7 PUSH32 0x29FD2DF293BA511E44CA47212C915137020231ED3AC0EE7BD02A7A655275AD37 SWAP7 PUSH2 0x15E6 SWAP7 SWAP1 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP6 SWAP1 SWAP5 SWAP2 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP15 SWAP1 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x6 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1606 DUP3 PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x160F DUP4 PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x1327 SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x16A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x50726F746F636F6C20666565206973207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP4 SWAP1 PUSH2 0x16C6 SWAP1 DUP5 DUP5 PUSH2 0x20F5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1755 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696E616C69747920706572696F64206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD DUP5 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xABA57B48B9F1DFD5747A52ED348A6AB6AA7BAFB0575363A5CB7B62659F727B65 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x17B7 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x17F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1C995C5D595CDD1259081B9BDD081D985B1A59 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x185E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST DUP1 PUSH1 0x9 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175657374206E6F74206578706972656420796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND ISZERO PUSH2 0x1905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x41637469766520636C61696D732072756E6E696E67 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xA7B86597910AAE75F7D99FEB2F37420CC80D457465FFBA0F8136D722A9F7095A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0xB DUP4 ADD SLOAD PUSH1 0xA DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH2 0x16C6 SWAP5 AND SWAP3 SWAP2 PUSH2 0x1993 SWAP2 PUSH2 0x24F2 JUMP JUMPDEST PUSH2 0x199D SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0xE SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420616C726561647920646570726563617465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1AF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x1B01 DUP2 PUSH2 0x208C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1327 PUSH1 0xB SLOAD PUSH3 0xF4240 PUSH1 0xC SLOAD DUP6 PUSH2 0x1B1E SWAP2 SWAP1 PUSH2 0x25AE JUMP JUMPDEST PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x25CD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD DUP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B5D DUP2 DUP4 PUSH2 0x24F2 JUMP JUMPDEST DUP5 PUSH1 0x6 ADD SLOAD LT PUSH2 0x1BAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20616C72656164792077697468647261776E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP8 SWAP1 SWAP8 MSTORE CHAINID DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP5 DUP7 SHL DUP6 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP5 SHL SWAP1 SWAP3 AND PUSH1 0x94 DUP3 ADD MSTORE PUSH1 0xA8 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 MLOAD DUP1 DUP3 SUB SWAP1 SWAP3 ADD DUP3 MSTORE PUSH1 0xC8 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 PUSH2 0x1C59 DUP3 DUP8 PUSH1 0x8 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP9 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x7 DUP1 DUP11 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE SLOAD SWAP3 MLOAD PUSH4 0xA64A2271 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP4 SWAP5 POP PUSH1 0x0 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA64A2271 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CED SWAP2 SWAP1 PUSH2 0x261A JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D0A JUMPI POP POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA751732F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA751732F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D77 SWAP2 SWAP1 PUSH2 0x2648 JUMP JUMPDEST ISZERO PUSH2 0x1D85 JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1DBD JUMPI PUSH1 0x1 DUP11 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1DB6 JUMPI POP DUP10 PUSH1 0x8 ADD SLOAD DUP2 EQ JUMPDEST SWAP4 POP PUSH2 0x1E17 JUMP JUMPDEST DUP10 PUSH1 0x7 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1E11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20706572696F64206E6F742066696E697368656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST DUP7 DUP9 GT SWAP4 POP JUMPDEST PUSH1 0x0 DUP1 DUP6 ISZERO PUSH2 0x1E42 JUMPI PUSH2 0x1E2A DUP10 DUP12 PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x1 DUP14 ADD SLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x1EDB JUMP JUMPDEST DUP9 ISZERO PUSH2 0x1ECA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP14 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1E65 SWAP1 PUSH1 0x2 PUSH2 0x25AE JUMP JUMPDEST SWAP2 POP CALLER SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x1EC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4368616C6C656E67657220686173206E6F7468696E6720746F20776974686472 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6177 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x1EDB JUMP JUMPDEST POP POP PUSH1 0x0 SLOAD DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x4 DUP13 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1F29 JUMPI DUP9 DUP11 GT ISZERO PUSH2 0x1F12 JUMPI PUSH2 0x1F01 DUP10 DUP12 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x1F0B SWAP1 DUP4 PUSH2 0x24F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x1F1C DUP11 DUP11 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x1F26 SWAP1 DUP4 PUSH2 0x2558 JUMP JUMPDEST SWAP2 POP JUMPDEST SWAP15 SWAP1 SWAP14 POP SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH32 0xA7B86597910AAE75F7D99FEB2F37420CC80D457465FFBA0F8136D722A9F7095A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND DUP1 DUP4 MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH1 0x20 SWAP4 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x6 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP8 ADD SSTORE PUSH1 0xB DUP7 ADD SLOAD PUSH1 0x1 DUP8 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF SWAP1 SWAP3 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1FF1 SWAP1 DUP5 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0xA DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH2 0x16C6 SWAP2 DUP5 SWAP2 PUSH2 0x199D SWAP2 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x16C6 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x212A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x20EC JUMPI DUP2 PUSH2 0x20EE JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2125 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x2055 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21FC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2125 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x219D SWAP2 SWAP1 PUSH2 0x2648 JUMP JUMPDEST PUSH2 0x2125 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x220B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2213 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x22CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x22E7 SWAP2 SWAP1 PUSH2 0x2696 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2324 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2339 DUP3 DUP3 DUP7 PUSH2 0x2344 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2353 JUMPI POP DUP2 PUSH2 0x20EE JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2363 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x26B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x238F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x23C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x23D6 DUP2 PUSH2 0x2396 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x23E6 DUP2 PUSH2 0x2396 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x23F6 DUP2 PUSH2 0x2396 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20EE DUP2 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x246C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x248E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2499 DUP2 PUSH2 0x2396 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x24A9 DUP2 PUSH2 0x2396 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x24EA JUMPI PUSH2 0x24EA PUSH2 0x24B4 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2505 JUMPI PUSH2 0x2505 PUSH2 0x24B4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x251C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x256A JUMPI PUSH2 0x256A PUSH2 0x24B4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST SWAP7 DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP4 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x25C8 JUMPI PUSH2 0x25C8 PUSH2 0x24B4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x25EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP3 DUP2 AND DUP5 DUP3 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x2611 JUMPI PUSH2 0x2611 PUSH2 0x24B4 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x262D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x2638 DUP2 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x265A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x20EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2685 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x266D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16C6 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x26A8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x266A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x26D1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x266A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xE8521A489A72409700B7DCBDF5 DELEGATECALL 0xBF PUSH5 0xB2573EA76B DUP15 DELEGATECALL 0xE6 SHR DUP16 DUP6 SWAP13 0xCA PUSH18 0x1364736F6C634300080D0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        762,
        25526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "LT",
      "path": "12"
    },
    "9": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1EE"
    },
    "12": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "SHR",
      "path": "12"
    },
    "19": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x973A814E"
    },
    "25": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "GT",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10D"
    },
    "29": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "30": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "31": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD3868348"
    },
    "36": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "GT",
      "path": "12"
    },
    "37": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA0"
    },
    "40": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "41": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "42": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xEA656F7D"
    },
    "47": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "GT",
      "path": "12"
    },
    "48": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6F"
    },
    "51": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "52": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "53": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xEA656F7D"
    },
    "58": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "59": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6DF"
    },
    "62": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "63": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "64": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xEB321173"
    },
    "69": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "70": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6F4"
    },
    "73": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "74": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "75": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "81": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x70A"
    },
    "84": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "85": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "86": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF7D64CEC"
    },
    "91": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "92": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x72A"
    },
    "95": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "96": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "97": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF9432517"
    },
    "102": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "103": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x74A"
    },
    "106": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "107": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "110": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "REVERT",
      "path": "12"
    },
    "111": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "112": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "113": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD3868348"
    },
    "118": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "119": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x673"
    },
    "122": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "123": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "124": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD762A37B"
    },
    "129": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "130": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x693"
    },
    "133": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "134": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "135": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE2653EEB"
    },
    "140": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "141": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6B3"
    },
    "144": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "145": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "146": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE7AAD5C4"
    },
    "151": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "152": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6C9"
    },
    "155": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "156": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "159": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "REVERT",
      "path": "12"
    },
    "160": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "161": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "162": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB1743C5B"
    },
    "167": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "GT",
      "path": "12"
    },
    "168": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "172": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "173": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB1743C5B"
    },
    "178": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "179": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x600"
    },
    "182": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "183": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "184": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCEA74EDF"
    },
    "189": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "190": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x613"
    },
    "193": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "194": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "195": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCF7B287F"
    },
    "200": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "201": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x633"
    },
    "204": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "205": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "206": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD137920B"
    },
    "211": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "212": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x653"
    },
    "215": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "216": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "219": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "REVERT",
      "path": "12"
    },
    "220": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "221": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "222": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x973A814E"
    },
    "227": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "228": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4FA"
    },
    "231": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "232": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "233": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA032B5F4"
    },
    "238": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "239": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x510"
    },
    "242": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "243": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "244": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA888C2CD"
    },
    "249": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "250": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x530"
    },
    "253": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "254": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "255": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xAB9634EE"
    },
    "260": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "261": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5E0"
    },
    "264": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "265": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "267": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "268": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "REVERT",
      "path": "12"
    },
    "269": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "270": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "271": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6BC6C8D1"
    },
    "276": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "GT",
      "path": "12"
    },
    "277": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x185"
    },
    "280": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "281": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "282": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x81D12C58"
    },
    "287": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "GT",
      "path": "12"
    },
    "288": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x154"
    },
    "291": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "292": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "293": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x81D12C58"
    },
    "298": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "299": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x387"
    },
    "302": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "303": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "304": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8DA5CB5B"
    },
    "309": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "310": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B1"
    },
    "313": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "314": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "315": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x92C824D8"
    },
    "320": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "321": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4CF"
    },
    "324": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "325": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "326": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x96171D05"
    },
    "331": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "332": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4E2"
    },
    "335": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "336": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "338": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "339": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "REVERT",
      "path": "12"
    },
    "340": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "341": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "342": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6BC6C8D1"
    },
    "347": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "348": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30D"
    },
    "351": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "352": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "353": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x715018A6"
    },
    "358": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "359": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x33A"
    },
    "362": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "363": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "364": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x78DA194B"
    },
    "369": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "370": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x351"
    },
    "373": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "374": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "375": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x7DC2CD98"
    },
    "380": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "381": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x371"
    },
    "384": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "385": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "387": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "388": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "REVERT",
      "path": "12"
    },
    "389": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "390": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "391": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2F4212B8"
    },
    "396": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "GT",
      "path": "12"
    },
    "397": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C1"
    },
    "400": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "401": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "402": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2F4212B8"
    },
    "407": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "408": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x294"
    },
    "411": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "412": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "413": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2F92F009"
    },
    "418": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "419": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B4"
    },
    "422": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "423": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "424": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4EFA8F17"
    },
    "429": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "430": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E1"
    },
    "433": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "434": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "435": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x5D5AA11B"
    },
    "440": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "441": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F7"
    },
    "444": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "445": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "447": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "448": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "REVERT",
      "path": "12"
    },
    "449": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "450": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "451": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE136B19"
    },
    "456": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "457": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F3"
    },
    "460": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "461": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "462": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1489F8D2"
    },
    "467": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "468": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x222"
    },
    "471": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "472": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "473": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1D18ADC5"
    },
    "478": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "479": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x246"
    },
    "482": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "483": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "484": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2E1A7D4D"
    },
    "489": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "EQ",
      "path": "12"
    },
    "490": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25C"
    },
    "493": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "494": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "495": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "497": {
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "498": {
      "first_revert": true,
      "fn": null,
      "offset": [
        762,
        25526
      ],
      "op": "REVERT",
      "path": "12"
    },
    "499": {
      "offset": [
        4802,
        4824
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "500": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "501": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "DUP1",
      "path": "12"
    },
    "502": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "503": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FF"
    },
    "506": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "507": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "509": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "DUP1",
      "path": "12"
    },
    "510": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "REVERT",
      "path": "12"
    },
    "511": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "512": {
      "op": "POP"
    },
    "513": {
      "offset": [
        4802,
        4824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "515": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "516": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x20D"
    },
    "519": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "520": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "522": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "AND",
      "path": "12"
    },
    "523": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "DUP2",
      "path": "12"
    },
    "524": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "JUMP",
      "path": "12"
    },
    "525": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "526": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "528": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "529": {
      "op": "SWAP1"
    },
    "530": {
      "op": "ISZERO"
    },
    "531": {
      "op": "ISZERO"
    },
    "532": {
      "op": "DUP2"
    },
    "533": {
      "op": "MSTORE"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "536": {
      "op": "ADD"
    },
    "537": {
      "offset": [
        4802,
        4824
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "538": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "540": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "541": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "DUP1",
      "path": "12"
    },
    "542": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "543": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "SUB",
      "path": "12"
    },
    "544": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "545": {
      "fn": null,
      "offset": [
        4802,
        4824
      ],
      "op": "RETURN",
      "path": "12"
    },
    "546": {
      "offset": [
        4488,
        4543
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "547": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "548": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "DUP1",
      "path": "12"
    },
    "549": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "550": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22E"
    },
    "553": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "554": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "556": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "DUP1",
      "path": "12"
    },
    "557": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "REVERT",
      "path": "12"
    },
    "558": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "559": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "POP",
      "path": "12"
    },
    "560": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "563": {
      "offset": [
        4534,
        4543
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12C"
    },
    "566": {
      "offset": [
        4488,
        4543
      ],
      "op": "DUP2",
      "path": "12"
    },
    "567": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "JUMP",
      "path": "12"
    },
    "568": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "569": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "571": {
      "fn": null,
      "offset": [
        4488,
        4543
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "572": {
      "op": "SWAP1"
    },
    "573": {
      "op": "DUP2"
    },
    "574": {
      "op": "MSTORE"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "577": {
      "op": "ADD"
    },
    "578": {
      "offset": [
        4488,
        4543
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x219"
    },
    "581": {
      "op": "JUMP"
    },
    "582": {
      "offset": [
        4392,
        4431
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "583": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "584": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "DUP1",
      "path": "12"
    },
    "585": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "586": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x252"
    },
    "589": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "590": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "592": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "DUP1",
      "path": "12"
    },
    "593": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "REVERT",
      "path": "12"
    },
    "594": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "595": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "POP",
      "path": "12"
    },
    "596": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "599": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "601": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "602": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "DUP2",
      "path": "12"
    },
    "603": {
      "fn": null,
      "offset": [
        4392,
        4431
      ],
      "op": "JUMP",
      "path": "12"
    },
    "604": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "605": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "606": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "DUP1",
      "path": "12"
    },
    "607": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "608": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x268"
    },
    "611": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "612": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "614": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "DUP1",
      "path": "12"
    },
    "615": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "REVERT",
      "path": "12"
    },
    "616": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "617": {
      "op": "POP"
    },
    "618": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27C"
    },
    "621": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x277"
    },
    "624": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "625": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "627": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237D"
    },
    "630": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        17385,
        18645
      ],
      "op": "JUMP",
      "path": "12"
    },
    "631": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "632": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x760"
    },
    "635": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        17385,
        18645
      ],
      "op": "JUMP",
      "path": "12"
    },
    "636": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "637": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "639": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "646": {
      "op": "SHL"
    },
    "647": {
      "op": "SUB"
    },
    "648": {
      "op": "SWAP1"
    },
    "649": {
      "op": "SWAP2"
    },
    "650": {
      "op": "AND"
    },
    "651": {
      "op": "DUP2"
    },
    "652": {
      "op": "MSTORE"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "655": {
      "op": "ADD"
    },
    "656": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x219"
    },
    "659": {
      "op": "JUMP"
    },
    "660": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "661": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "662": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "DUP1",
      "path": "12"
    },
    "663": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "664": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A0"
    },
    "667": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "668": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "670": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "DUP1",
      "path": "12"
    },
    "671": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "REVERT",
      "path": "12"
    },
    "672": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "673": {
      "op": "POP"
    },
    "674": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "677": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AF"
    },
    "680": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "681": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "683": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23AB"
    },
    "686": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        8914,
        10978
      ],
      "op": "JUMP",
      "path": "12"
    },
    "687": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "688": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA17"
    },
    "691": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        8914,
        10978
      ],
      "op": "JUMP",
      "path": "12"
    },
    "692": {
      "offset": [
        5249,
        5299
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "693": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "694": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "DUP1",
      "path": "12"
    },
    "695": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "696": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C0"
    },
    "699": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "700": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "702": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "DUP1",
      "path": "12"
    },
    "703": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "REVERT",
      "path": "12"
    },
    "704": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "705": {
      "op": "POP"
    },
    "706": {
      "offset": [
        5249,
        5299
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "709": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CF"
    },
    "712": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "713": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "715": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237D"
    },
    "718": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        5249,
        5299
      ],
      "op": "JUMP",
      "path": "12"
    },
    "719": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "720": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "722": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "724": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "725": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "727": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "728": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "DUP2",
      "path": "12"
    },
    "729": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "730": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "732": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "733": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "734": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "735": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "DUP2",
      "path": "12"
    },
    "736": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5249,
        5299
      ],
      "op": "JUMP",
      "path": "12"
    },
    "737": {
      "offset": [
        4981,
        5008
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "738": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "739": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "DUP1",
      "path": "12"
    },
    "740": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "741": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2ED"
    },
    "744": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "745": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "747": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "DUP1",
      "path": "12"
    },
    "748": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "REVERT",
      "path": "12"
    },
    "749": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "750": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "POP",
      "path": "12"
    },
    "751": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "754": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "756": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "757": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "DUP2",
      "path": "12"
    },
    "758": {
      "fn": "RequestManager.createRequest",
      "offset": [
        4981,
        5008
      ],
      "op": "JUMP",
      "path": "12"
    },
    "759": {
      "offset": [
        5562,
        5595
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "760": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "761": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "DUP1",
      "path": "12"
    },
    "762": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "763": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x303"
    },
    "766": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "767": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "769": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "DUP1",
      "path": "12"
    },
    "770": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "REVERT",
      "path": "12"
    },
    "771": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "772": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "POP",
      "path": "12"
    },
    "773": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "776": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "778": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "779": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "DUP2",
      "path": "12"
    },
    "780": {
      "fn": "RequestManager.createRequest",
      "offset": [
        5562,
        5595
      ],
      "op": "JUMP",
      "path": "12"
    },
    "781": {
      "offset": [
        6162,
        6218
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "782": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "783": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "DUP1",
      "path": "12"
    },
    "784": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "785": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x319"
    },
    "788": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "789": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "791": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "DUP1",
      "path": "12"
    },
    "792": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "REVERT",
      "path": "12"
    },
    "793": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "794": {
      "op": "POP"
    },
    "795": {
      "offset": [
        6162,
        6218
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "798": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x328"
    },
    "801": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "802": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "804": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2410"
    },
    "807": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        6162,
        6218
      ],
      "op": "JUMP",
      "path": "12"
    },
    "808": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "809": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "811": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "813": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "814": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "816": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "817": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "DUP2",
      "path": "12"
    },
    "818": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "819": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "821": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "822": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "823": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "824": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "DUP2",
      "path": "12"
    },
    "825": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6162,
        6218
      ],
      "op": "JUMP",
      "path": "12"
    },
    "826": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "827": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "828": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "829": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "830": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x346"
    },
    "833": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "834": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "836": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "837": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "838": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "839": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "840": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34F"
    },
    "843": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA3"
    },
    "846": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "847": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "848": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "849": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "850": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "851": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "DUP1",
      "path": "12"
    },
    "852": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "853": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35D"
    },
    "856": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "857": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "859": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "DUP1",
      "path": "12"
    },
    "860": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "REVERT",
      "path": "12"
    },
    "861": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "862": {
      "op": "POP"
    },
    "863": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34F"
    },
    "866": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36C"
    },
    "869": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "870": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "872": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x242D"
    },
    "875": {
      "fn": "RequestManager.updateFeeData",
      "jump": "i",
      "offset": [
        23889,
        24145
      ],
      "op": "JUMP",
      "path": "12"
    },
    "876": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "877": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xED9"
    },
    "880": {
      "fn": "RequestManager.updateFeeData",
      "jump": "i",
      "offset": [
        23889,
        24145
      ],
      "op": "JUMP",
      "path": "12"
    },
    "881": {
      "offset": [
        3756,
        3782
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "882": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "883": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "DUP1",
      "path": "12"
    },
    "884": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "885": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x37D"
    },
    "888": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "889": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "891": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "DUP1",
      "path": "12"
    },
    "892": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "REVERT",
      "path": "12"
    },
    "893": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "894": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "POP",
      "path": "12"
    },
    "895": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "898": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "900": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "901": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "DUP2",
      "path": "12"
    },
    "902": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        3756,
        3782
      ],
      "op": "JUMP",
      "path": "12"
    },
    "903": {
      "offset": [
        5344,
        5387
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "904": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "905": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP1",
      "path": "12"
    },
    "906": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "907": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x393"
    },
    "910": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "911": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "913": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP1",
      "path": "12"
    },
    "914": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "REVERT",
      "path": "12"
    },
    "915": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "916": {
      "op": "POP"
    },
    "917": {
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x42D"
    },
    "920": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A2"
    },
    "923": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "924": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "926": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237D"
    },
    "929": {
      "fn": "RequestManager.updateFeeData",
      "jump": "i",
      "offset": [
        5344,
        5387
      ],
      "op": "JUMP",
      "path": "12"
    },
    "930": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "931": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "933": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "935": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP2",
      "path": "12"
    },
    "936": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP2",
      "path": "12"
    },
    "937": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "938": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "940": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "941": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP4",
      "path": "12"
    },
    "942": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "943": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "945": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "946": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP4",
      "path": "12"
    },
    "947": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "948": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "949": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP1",
      "path": "12"
    },
    "950": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "951": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "953": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP3",
      "path": "12"
    },
    "954": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ADD",
      "path": "12"
    },
    "955": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "956": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "958": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP4",
      "path": "12"
    },
    "959": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ADD",
      "path": "12"
    },
    "960": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "961": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "963": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP5",
      "path": "12"
    },
    "964": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ADD",
      "path": "12"
    },
    "965": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "966": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "968": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP6",
      "path": "12"
    },
    "969": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ADD",
      "path": "12"
    },
    "970": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "971": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "973": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP7",
      "path": "12"
    },
    "974": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ADD",
      "path": "12"
    },
    "975": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "976": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP10",
      "path": "12"
    },
    "977": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "978": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP1",
      "path": "12"
    },
    "979": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP12",
      "path": "12"
    },
    "980": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ADD",
      "path": "12"
    },
    "981": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "982": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP11",
      "path": "12"
    },
    "983": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "984": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "986": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP8",
      "path": "12"
    },
    "987": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ADD",
      "path": "12"
    },
    "988": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "SUB"
    },
    "997": {
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "998": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP2",
      "path": "12"
    },
    "999": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "AND",
      "path": "12"
    },
    "1000": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP12",
      "path": "12"
    },
    "1001": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1002": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "1004": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP9",
      "path": "12"
    },
    "1005": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ADD",
      "path": "12"
    },
    "1006": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1007": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP9",
      "path": "12"
    },
    "1008": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP12",
      "path": "12"
    },
    "1009": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ADD",
      "path": "12"
    },
    "1010": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP9",
      "path": "12"
    },
    "1011": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1012": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP9",
      "path": "12"
    },
    "1013": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1014": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "1016": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1017": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ADD",
      "path": "12"
    },
    "1018": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1019": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP9",
      "path": "12"
    },
    "1020": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1021": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ADD",
      "path": "12"
    },
    "1022": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1023": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "1025": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP9",
      "path": "12"
    },
    "1026": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ADD",
      "path": "12"
    },
    "1027": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1028": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "1030": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1031": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP9",
      "path": "12"
    },
    "1032": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "ADD",
      "path": "12"
    },
    "1033": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1034": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "1035": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP10",
      "path": "12"
    },
    "1036": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "AND",
      "path": "12"
    },
    "1037": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP11",
      "path": "12"
    },
    "1038": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "1039": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP10",
      "path": "12"
    },
    "1040": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "AND",
      "path": "12"
    },
    "1041": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP10",
      "path": "12"
    },
    "1042": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "1043": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP9",
      "path": "12"
    },
    "1044": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1045": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1046": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "AND",
      "path": "12"
    },
    "1047": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "1048": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1049": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1050": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1051": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "AND",
      "path": "12"
    },
    "1052": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "1053": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1054": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "1055": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "op": "SUB"
    },
    "1064": {
      "offset": [
        5344,
        5387
      ],
      "op": "AND",
      "path": "12"
    },
    "1065": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1066": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1067": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP12",
      "path": "12"
    },
    "1068": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1069": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1070": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1072": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1073": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        5344,
        5387
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1080": {
      "op": "SHL"
    },
    "1081": {
      "op": "SUB"
    },
    "1082": {
      "op": "SWAP13"
    },
    "1083": {
      "op": "DUP14"
    },
    "1084": {
      "op": "AND"
    },
    "1085": {
      "op": "DUP2"
    },
    "1086": {
      "op": "MSTORE"
    },
    "1087": {
      "op": "SWAP11"
    },
    "1088": {
      "op": "DUP13"
    },
    "1089": {
      "op": "AND"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1092": {
      "op": "DUP1"
    },
    "1093": {
      "op": "DUP14"
    },
    "1094": {
      "op": "ADD"
    },
    "1095": {
      "op": "SWAP2"
    },
    "1096": {
      "op": "SWAP1"
    },
    "1097": {
      "op": "SWAP2"
    },
    "1098": {
      "op": "MSTORE"
    },
    "1099": {
      "op": "SWAP1"
    },
    "1100": {
      "op": "DUP12"
    },
    "1101": {
      "op": "ADD"
    },
    "1102": {
      "op": "SWAP10"
    },
    "1103": {
      "op": "SWAP1"
    },
    "1104": {
      "op": "SWAP10"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "SWAP7"
    },
    "1107": {
      "op": "DUP11"
    },
    "1108": {
      "op": "AND"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1111": {
      "op": "DUP11"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "op": "MSTORE"
    },
    "1114": {
      "op": "SWAP5"
    },
    "1115": {
      "op": "DUP10"
    },
    "1116": {
      "op": "AND"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1119": {
      "op": "DUP10"
    },
    "1120": {
      "op": "ADD"
    },
    "1121": {
      "op": "MSTORE"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1124": {
      "op": "DUP9"
    },
    "1125": {
      "op": "ADD"
    },
    "1126": {
      "op": "SWAP4"
    },
    "1127": {
      "op": "SWAP1"
    },
    "1128": {
      "op": "SWAP4"
    },
    "1129": {
      "op": "MSTORE"
    },
    "1130": {
      "op": "DUP2"
    },
    "1131": {
      "op": "MLOAD"
    },
    "1132": {
      "op": "SWAP1"
    },
    "1133": {
      "op": "SWAP8"
    },
    "1134": {
      "op": "AND"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1137": {
      "op": "DUP8"
    },
    "1138": {
      "op": "ADD"
    },
    "1139": {
      "op": "MSTORE"
    },
    "1140": {
      "op": "SWAP1"
    },
    "1141": {
      "op": "SWAP4"
    },
    "1142": {
      "op": "ADD"
    },
    "1143": {
      "op": "MLOAD"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1146": {
      "op": "DUP6"
    },
    "1147": {
      "op": "ADD"
    },
    "1148": {
      "op": "MSTORE"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1155": {
      "op": "SHL"
    },
    "1156": {
      "op": "SUB"
    },
    "1157": {
      "op": "SWAP1"
    },
    "1158": {
      "op": "SWAP5"
    },
    "1159": {
      "op": "AND"
    },
    "1160": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1163": {
      "op": "DUP5"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "op": "MSTORE"
    },
    "1166": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "1169": {
      "op": "DUP4"
    },
    "1170": {
      "op": "ADD"
    },
    "1171": {
      "op": "SWAP2"
    },
    "1172": {
      "op": "SWAP1"
    },
    "1173": {
      "op": "SWAP2"
    },
    "1174": {
      "op": "MSTORE"
    },
    "1175": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "1178": {
      "op": "DUP3"
    },
    "1179": {
      "op": "ADD"
    },
    "1180": {
      "op": "SWAP3"
    },
    "1181": {
      "op": "SWAP1"
    },
    "1182": {
      "op": "SWAP3"
    },
    "1183": {
      "op": "MSTORE"
    },
    "1184": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "1187": {
      "op": "DUP2"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "SWAP2"
    },
    "1190": {
      "op": "SWAP1"
    },
    "1191": {
      "op": "SWAP2"
    },
    "1192": {
      "op": "MSTORE"
    },
    "1193": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "1196": {
      "op": "ADD"
    },
    "1197": {
      "offset": [
        5344,
        5387
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x219"
    },
    "1200": {
      "op": "JUMP"
    },
    "1201": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1202": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1203": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1204": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1205": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "1208": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1209": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1211": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1212": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1213": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1214": {
      "op": "POP"
    },
    "1215": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1217": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1224": {
      "op": "SHL"
    },
    "1225": {
      "op": "SUB"
    },
    "1226": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1227": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27C"
    },
    "1230": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1231": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14762,
        16828
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1232": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14762,
        16828
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34F"
    },
    "1235": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14762,
        16828
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4DD"
    },
    "1238": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14762,
        16828
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1239": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14762,
        16828
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1241": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14762,
        16828
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237D"
    },
    "1244": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        14762,
        16828
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1245": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14762,
        16828
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1246": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14762,
        16828
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF11"
    },
    "1249": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        14762,
        16828
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1250": {
      "offset": [
        4600,
        4654
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1251": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4654
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1252": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4654
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1253": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4654
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1254": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4654
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4EE"
    },
    "1257": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4654
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1258": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4654
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1260": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4654
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1261": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4654
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1262": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4654
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1263": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4654
      ],
      "op": "POP",
      "path": "12"
    },
    "1264": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4654
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "1267": {
      "offset": [
        4646,
        4654
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1DFE200"
    },
    "1272": {
      "offset": [
        4600,
        4654
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1273": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4600,
        4654
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1274": {
      "offset": [
        4890,
        4919
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1275": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1276": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1277": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1278": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x506"
    },
    "1281": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1282": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1284": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1285": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1286": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1287": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "POP",
      "path": "12"
    },
    "1288": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "1291": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "1293": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1294": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1295": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4890,
        4919
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1296": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1297": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1298": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1299": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1300": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x51C"
    },
    "1303": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1304": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1306": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1307": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1308": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1309": {
      "op": "POP"
    },
    "1310": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "1313": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x52B"
    },
    "1316": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1317": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1319": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237D"
    },
    "1322": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        6543,
        6671
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1323": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1324": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1309"
    },
    "1327": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        6543,
        6671
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1328": {
      "offset": [
        5428,
        5467
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1329": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1330": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1331": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1332": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x53C"
    },
    "1335": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1336": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1338": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1339": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1340": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1341": {
      "op": "POP"
    },
    "1342": {
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x59A"
    },
    "1345": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x54B"
    },
    "1348": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1349": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1351": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237D"
    },
    "1354": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        5428,
        5467
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1355": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1356": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "1358": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1360": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1361": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1363": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1364": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1365": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1366": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1368": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1369": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1370": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1371": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1372": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1374": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1375": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "ADD",
      "path": "12"
    },
    "1376": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1377": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1379": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1380": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "ADD",
      "path": "12"
    },
    "1381": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1382": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1384": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1385": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "ADD",
      "path": "12"
    },
    "1386": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1387": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "1389": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1390": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "ADD",
      "path": "12"
    },
    "1391": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1392": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "1394": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1395": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "ADD",
      "path": "12"
    },
    "1396": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1397": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "1399": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1400": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "ADD",
      "path": "12"
    },
    "1401": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1402": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "1404": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1405": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "1406": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "ADD",
      "path": "12"
    },
    "1407": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1408": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "1409": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "SUB"
    },
    "1418": {
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "1419": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1420": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "AND",
      "path": "12"
    },
    "1421": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "1422": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "1423": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "1424": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1425": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1426": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "AND",
      "path": "12"
    },
    "1427": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1428": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1429": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1430": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1431": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1432": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "DUP9",
      "path": "12"
    },
    "1433": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1434": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1435": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1437": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1438": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5428,
        5467
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1439": {
      "op": "SWAP9"
    },
    "1440": {
      "op": "DUP10"
    },
    "1441": {
      "op": "MSTORE"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1448": {
      "op": "SHL"
    },
    "1449": {
      "op": "SUB"
    },
    "1450": {
      "op": "SWAP8"
    },
    "1451": {
      "op": "DUP9"
    },
    "1452": {
      "op": "AND"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1455": {
      "op": "DUP11"
    },
    "1456": {
      "op": "ADD"
    },
    "1457": {
      "op": "MSTORE"
    },
    "1458": {
      "op": "DUP9"
    },
    "1459": {
      "op": "ADD"
    },
    "1460": {
      "op": "SWAP6"
    },
    "1461": {
      "op": "SWAP1"
    },
    "1462": {
      "op": "SWAP6"
    },
    "1463": {
      "op": "MSTORE"
    },
    "1464": {
      "op": "SWAP5"
    },
    "1465": {
      "op": "SWAP1"
    },
    "1466": {
      "op": "SWAP3"
    },
    "1467": {
      "op": "AND"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1470": {
      "op": "DUP7"
    },
    "1471": {
      "op": "ADD"
    },
    "1472": {
      "op": "MSTORE"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1475": {
      "op": "DUP6"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "op": "MSTORE"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1480": {
      "op": "DUP5"
    },
    "1481": {
      "op": "ADD"
    },
    "1482": {
      "op": "MSTORE"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1485": {
      "op": "DUP4"
    },
    "1486": {
      "op": "ADD"
    },
    "1487": {
      "op": "SWAP2"
    },
    "1488": {
      "op": "SWAP1"
    },
    "1489": {
      "op": "SWAP2"
    },
    "1490": {
      "op": "MSTORE"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1493": {
      "op": "DUP3"
    },
    "1494": {
      "op": "ADD"
    },
    "1495": {
      "op": "MSTORE"
    },
    "1496": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1499": {
      "op": "ADD"
    },
    "1500": {
      "offset": [
        5428,
        5467
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x219"
    },
    "1503": {
      "op": "JUMP"
    },
    "1504": {
      "offset": [
        5099,
        5143
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1505": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1506": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1507": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1508": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5EC"
    },
    "1511": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1512": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1514": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1515": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1516": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1517": {
      "op": "POP"
    },
    "1518": {
      "offset": [
        5099,
        5143
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "1520": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1521": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27C"
    },
    "1524": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1531": {
      "op": "SHL"
    },
    "1532": {
      "op": "SUB"
    },
    "1533": {
      "offset": [
        5099,
        5143
      ],
      "op": "AND",
      "path": "12"
    },
    "1534": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1535": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5099,
        5143
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1536": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12283,
        13564
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1537": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12283,
        13564
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "1540": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12283,
        13564
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x60E"
    },
    "1543": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12283,
        13564
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1544": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12283,
        13564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1546": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12283,
        13564
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2459"
    },
    "1549": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        12283,
        13564
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1550": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12283,
        13564
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1551": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12283,
        13564
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x132D"
    },
    "1554": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        12283,
        13564
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1555": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1556": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1557": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1558": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1559": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x61F"
    },
    "1562": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1563": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1565": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1566": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1567": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "1572": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x62E"
    },
    "1575": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1576": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1578": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237D"
    },
    "1581": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        6843,
        6966
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1582": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1583": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15FB"
    },
    "1586": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        6843,
        6966
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1587": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1588": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1589": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1590": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1591": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x63F"
    },
    "1594": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1595": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1597": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1598": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1599": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1600": {
      "op": "POP"
    },
    "1601": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34F"
    },
    "1604": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x64E"
    },
    "1607": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1608": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1610": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x247B"
    },
    "1613": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        23199,
        23573
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1614": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1615": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1619"
    },
    "1618": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        23199,
        23573
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1619": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1620": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1621": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1622": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1623": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x65F"
    },
    "1626": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1627": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1629": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1630": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1631": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1632": {
      "op": "POP"
    },
    "1633": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34F"
    },
    "1636": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x66E"
    },
    "1639": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1640": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1642": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2459"
    },
    "1645": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "i",
      "offset": [
        24739,
        25063
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1646": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1647": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16CC"
    },
    "1650": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "i",
      "offset": [
        24739,
        25063
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1651": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1652": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1653": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1654": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1655": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x67F"
    },
    "1658": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1659": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1661": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1662": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1663": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1664": {
      "op": "POP"
    },
    "1665": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34F"
    },
    "1668": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x68E"
    },
    "1671": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1672": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1674": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237D"
    },
    "1677": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        11160,
        11944
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1678": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1679": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17A4"
    },
    "1682": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        11160,
        11944
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1683": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1684": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1685": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1686": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1687": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x69F"
    },
    "1690": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1691": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1693": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1694": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1695": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1696": {
      "op": "POP"
    },
    "1697": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34F"
    },
    "1700": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6AE"
    },
    "1703": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1704": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1706": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237D"
    },
    "1709": {
      "fn": "RequestManager.updateTransferLimit",
      "jump": "i",
      "offset": [
        24352,
        24475
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1710": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1711": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19AE"
    },
    "1714": {
      "fn": "RequestManager.updateTransferLimit",
      "jump": "i",
      "offset": [
        24352,
        24475
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1715": {
      "offset": [
        5691,
        5722
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1716": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1717": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1718": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1719": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6BF"
    },
    "1722": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1723": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1725": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1726": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1727": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1728": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "POP",
      "path": "12"
    },
    "1729": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "1732": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "1734": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1735": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1736": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5691,
        5722
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1737": {
      "offset": [
        5846,
        5879
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1738": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1739": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1740": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1741": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6D5"
    },
    "1744": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1745": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1747": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1748": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1749": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1750": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "POP",
      "path": "12"
    },
    "1751": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "1754": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "1756": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1757": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1758": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5846,
        5879
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1759": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1760": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1761": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1762": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1763": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6EB"
    },
    "1766": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1767": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1769": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1770": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1771": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1772": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "POP",
      "path": "12"
    },
    "1773": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34F"
    },
    "1776": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19DD"
    },
    "1779": {
      "fn": "RequestManager.deprecateContract",
      "jump": "i",
      "offset": [
        25373,
        25524
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1780": {
      "offset": [
        3675,
        3700
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1781": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1782": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1783": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1784": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x700"
    },
    "1787": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1788": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1790": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1791": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1792": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1793": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "POP",
      "path": "12"
    },
    "1794": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "1797": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1799": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1800": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1801": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        3675,
        3700
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1802": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1803": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1804": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1805": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1806": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x716"
    },
    "1809": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1810": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1812": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1813": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1814": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34F"
    },
    "1819": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x725"
    },
    "1822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1823": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1825": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2410"
    },
    "1828": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1829": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A69"
    },
    "1833": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1834": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1835": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1836": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1837": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1838": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x736"
    },
    "1841": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1842": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1844": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1845": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1846": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1847": {
      "op": "POP"
    },
    "1848": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "1851": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x745"
    },
    "1854": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1855": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1857": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237D"
    },
    "1860": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        6317,
        6453
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1861": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1862": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B04"
    },
    "1865": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        6317,
        6453
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1866": {
      "offset": [
        6012,
        6054
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1867": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1868": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1869": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1870": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x756"
    },
    "1873": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1874": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1876": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1877": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1878": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1879": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "POP",
      "path": "12"
    },
    "1880": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238"
    },
    "1883": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "1885": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1886": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1887": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6012,
        6054
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1888": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1889": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17484,
        17491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1891": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17458,
        17465
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1892": {
      "offset": [
        7345,
        7357
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "1894": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7345,
        7357
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1895": {
      "offset": [
        7334,
        7341
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1896": {
      "offset": [
        7334,
        7357
      ],
      "op": "GT",
      "path": "12"
    },
    "1897": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7334,
        7357
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1898": {
      "offset": [
        7334,
        7372
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1899": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7334,
        7372
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1900": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7334,
        7372
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x775"
    },
    "1903": {
      "offset": [
        7334,
        7372
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1904": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7334,
        7372
      ],
      "op": "POP",
      "path": "12"
    },
    "1905": {
      "offset": [
        7371,
        7372
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1907": {
      "offset": [
        7361,
        7368
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1908": {
      "offset": [
        7361,
        7372
      ],
      "op": "GT",
      "path": "12"
    },
    "1909": {
      "offset": [
        7334,
        7372
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1910": {
      "offset": [
        7326,
        7394
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7BA"
    },
    "1913": {
      "offset": [
        7326,
        7394
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1914": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7326,
        7394
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1916": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7326,
        7394
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1917": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1923": {
      "op": "SHL"
    },
    "1924": {
      "offset": [
        7326,
        7394
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1925": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7326,
        7394
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1928": {
      "offset": [
        7326,
        7394
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1930": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7326,
        7394
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1931": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7326,
        7394
      ],
      "op": "ADD",
      "path": "12"
    },
    "1932": {
      "op": "MSTORE"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1937": {
      "op": "DUP3"
    },
    "1938": {
      "op": "ADD"
    },
    "1939": {
      "op": "MSTORE"
    },
    "1940": {
      "op": "PUSH17",
      "value": "0x18DB185A5B5259081B9BDD081D985B1A59"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "1960": {
      "op": "SHL"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1963": {
      "op": "DUP3"
    },
    "1964": {
      "op": "ADD"
    },
    "1965": {
      "op": "MSTORE"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1968": {
      "op": "ADD"
    },
    "1969": {
      "offset": [
        7326,
        7394
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1970": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7326,
        7394
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1972": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7326,
        7394
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1973": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7326,
        7394
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1974": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7326,
        7394
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1975": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7326,
        7394
      ],
      "op": "SUB",
      "path": "12"
    },
    "1976": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7326,
        7394
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1977": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7326,
        7394
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "12"
    },
    "1978": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7326,
        7394
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1979": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17507,
        17526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1981": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17544
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1982": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17544
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1983": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17544
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1984": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17535
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "1986": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1988": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1989": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17544
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1990": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17544
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1991": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1993": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17544
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1994": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17544
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1995": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17544
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1996": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17589,
        17604
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1997": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17589,
        17604
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1998": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17580,
        17605
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1999": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17580,
        17605
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2000": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17580,
        17588
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "2002": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17580,
        17605
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2003": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17580,
        17605
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2004": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17580,
        17605
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2005": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17580,
        17605
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2006": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17580,
        17605
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2007": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2008": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17529,
        17544
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2009": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17507,
        17526
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2010": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17665,
        17686
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7E2"
    },
    "2013": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17536,
        17543
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2014": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17665,
        17677
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B28"
    },
    "2017": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        17665,
        17686
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2018": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17665,
        17686
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2025": {
      "op": "SHL"
    },
    "2026": {
      "op": "SUB"
    },
    "2027": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17739
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2028": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17739
      ],
      "op": "AND",
      "path": "12"
    },
    "2029": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17742,
        17743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2031": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17739
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2032": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17739
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2033": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17739
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2034": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17724
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "2036": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17724
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2037": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17724
      ],
      "op": "ADD",
      "path": "12"
    },
    "2038": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17739
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2040": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17739
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2041": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17739
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2043": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17739
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2044": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17739
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2045": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17739
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2046": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17616,
        17686
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2047": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17616,
        17686
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2048": {
      "op": "POP"
    },
    "2049": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17616,
        17686
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2050": {
      "op": "POP"
    },
    "2051": {
      "branch": 120,
      "fn": "RequestManager.withdraw",
      "offset": [
        17701,
        17743
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2052": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17697,
        17849
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x823"
    },
    "2055": {
      "branch": 120,
      "fn": "RequestManager.withdraw",
      "offset": [
        17697,
        17849
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2062": {
      "op": "SHL"
    },
    "2063": {
      "op": "SUB"
    },
    "2064": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17834
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 1
    },
    "2065": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17834
      ],
      "op": "AND",
      "path": "12"
    },
    "2066": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17837,
        17838
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2068": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2069": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2070": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2071": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17819
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "2073": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17819
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2074": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17819
      ],
      "op": "ADD",
      "path": "12"
    },
    "2075": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2077": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2078": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2080": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2081": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17834
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2082": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17796,
        17838
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2083": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17697,
        17849
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2084": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17934,
        17939
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2085": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17934,
        17955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "2087": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17934,
        17955
      ],
      "op": "ADD",
      "path": "12"
    },
    "2088": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17934,
        17955
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2089": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17959,
        17960
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2091": {
      "branch": 121,
      "fn": "RequestManager.withdraw",
      "offset": [
        17934,
        17960
      ],
      "op": "SUB",
      "path": "12"
    },
    "2092": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17930,
        18012
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x875"
    },
    "2095": {
      "branch": 121,
      "fn": "RequestManager.withdraw",
      "offset": [
        17930,
        18012
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2096": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        17996
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 2,
      "value": "0x8"
    },
    "2098": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        17996
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2099": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        17996
      ],
      "op": "ADD",
      "path": "12"
    },
    "2100": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2101": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2102": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18000,
        18001
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2104": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18000,
        18001
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2105": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        17996
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2106": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        17996
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2108": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        17996
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2109": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x850"
    },
    "2112": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2113": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18000,
        18001
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2114": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18000,
        18001
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2121": {
      "op": "SHL"
    },
    "2122": {
      "op": "SUB"
    },
    "2123": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "AND",
      "path": "12"
    },
    "2124": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24CA"
    },
    "2127": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        17976,
        18001
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2128": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2129": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2130": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "POP",
      "path": "12"
    },
    "2131": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "2134": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "EXP",
      "path": "12"
    },
    "2135": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2136": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2137": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2144": {
      "op": "SHL"
    },
    "2145": {
      "op": "SUB"
    },
    "2146": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "MUL",
      "path": "12"
    },
    "2147": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "NOT",
      "path": "12"
    },
    "2148": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "AND",
      "path": "12"
    },
    "2149": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2150": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2157": {
      "op": "SHL"
    },
    "2158": {
      "op": "SUB"
    },
    "2159": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "AND",
      "path": "12"
    },
    "2160": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "MUL",
      "path": "12"
    },
    "2161": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "OR",
      "path": "12"
    },
    "2162": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2163": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2164": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17976,
        18001
      ],
      "op": "POP",
      "path": "12"
    },
    "2165": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17930,
        18012
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2166": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18046,
        18059
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 3
    },
    "2167": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18026
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2168": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18042
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "2170": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18042
      ],
      "op": "ADD",
      "path": "12"
    },
    "2171": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18042
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2173": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18059
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2174": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18059
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2175": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18059
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2176": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18059
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x889"
    },
    "2179": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18059
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2180": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18059
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2181": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18059
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "2184": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18021,
        18059
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2185": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18059
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2186": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18059
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2187": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18059
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2188": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18021,
        18059
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2189": {
      "op": "POP"
    },
    "2190": {
      "op": "POP"
    },
    "2191": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18152,
        18178
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 4,
      "value": "0x5"
    },
    "2193": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18152,
        18178
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2194": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18152,
        18178
      ],
      "op": "ADD",
      "path": "12"
    },
    "2195": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18152,
        18178
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2196": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18131,
        18149
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2198": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18131,
        18149
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2199": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18131,
        18149
      ],
      "op": "ADD",
      "path": "12"
    },
    "2200": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18131,
        18149
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2201": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18131,
        18178
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8A2"
    },
    "2204": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18131,
        18178
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2205": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18152,
        18178
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2206": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18131,
        18178
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "2209": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18131,
        18178
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2210": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18131,
        18178
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2211": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18090,
        18095
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2212": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18090,
        18111
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "2214": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18090,
        18111
      ],
      "op": "ADD",
      "path": "12"
    },
    "2215": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18090,
        18111
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2216": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18090,
        18178
      ],
      "op": "GT",
      "path": "12"
    },
    "2217": {
      "branch": 122,
      "fn": "RequestManager.withdraw",
      "offset": [
        18090,
        18178
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2218": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18069,
        18232
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8F5"
    },
    "2221": {
      "branch": 122,
      "fn": "RequestManager.withdraw",
      "offset": [
        18069,
        18232
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2222": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18069,
        18232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2224": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18069,
        18232
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2225": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2231": {
      "op": "SHL"
    },
    "2232": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18069,
        18232
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2233": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18069,
        18232
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2236": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18069,
        18232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2238": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18069,
        18232
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2239": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18069,
        18232
      ],
      "op": "ADD",
      "path": "12"
    },
    "2240": {
      "op": "MSTORE"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2245": {
      "op": "DUP3"
    },
    "2246": {
      "op": "ADD"
    },
    "2247": {
      "op": "MSTORE"
    },
    "2248": {
      "op": "PUSH32",
      "value": "0x416D6F756E7420746F20776974686472617720746F6F206C6172676500000000"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2283": {
      "op": "DUP3"
    },
    "2284": {
      "op": "ADD"
    },
    "2285": {
      "op": "MSTORE"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2288": {
      "op": "ADD"
    },
    "2289": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18069,
        18232
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "2292": {
      "op": "JUMP"
    },
    "2293": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18069,
        18232
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2294": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18253
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2296": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18272
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2303": {
      "op": "SHL"
    },
    "2304": {
      "op": "SUB"
    },
    "2305": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18277
      ],
      "op": "AND",
      "path": "12"
    },
    "2306": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18285,
        18298
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2307": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2309": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2310": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2312": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2314": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2315": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2316": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2317": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "SUB",
      "path": "12"
    },
    "2318": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2319": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2320": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2321": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "GAS",
      "path": "12"
    },
    "2322": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "CALL",
      "path": "12"
    },
    "2323": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2324": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "POP",
      "path": "12"
    },
    "2325": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "POP",
      "path": "12"
    },
    "2326": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "POP",
      "path": "12"
    },
    "2327": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2328": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2329": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2331": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2332": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "EQ",
      "path": "12"
    },
    "2333": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x942"
    },
    "2336": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2337": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2339": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2340": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2341": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "POP",
      "path": "12"
    },
    "2342": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2344": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "NOT",
      "path": "12"
    },
    "2345": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "2347": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2348": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "ADD",
      "path": "12"
    },
    "2349": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "AND",
      "path": "12"
    },
    "2350": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2351": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "ADD",
      "path": "12"
    },
    "2352": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2354": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2355": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2356": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2357": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2358": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2359": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2361": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2363": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2364": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "ADD",
      "path": "12"
    },
    "2365": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2366": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x947"
    },
    "2369": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2370": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2371": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "2373": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2374": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "POP",
      "path": "12"
    },
    "2375": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2376": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18259,
        18303
      ],
      "op": "POP",
      "path": "12"
    },
    "2377": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18243,
        18303
      ],
      "op": "POP",
      "path": "12"
    },
    "2378": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18243,
        18303
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2379": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18243,
        18303
      ],
      "op": "POP",
      "path": "12"
    },
    "2380": {
      "branch": 123,
      "fn": "RequestManager.withdraw",
      "offset": [
        18321,
        18325
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 5
    },
    "2381": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18313,
        18350
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x98F"
    },
    "2384": {
      "branch": 123,
      "fn": "RequestManager.withdraw",
      "offset": [
        18313,
        18350
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2385": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18313,
        18350
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2387": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18313,
        18350
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2388": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2394": {
      "op": "SHL"
    },
    "2395": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18313,
        18350
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2396": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18313,
        18350
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2399": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18313,
        18350
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2401": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18313,
        18350
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2402": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18313,
        18350
      ],
      "op": "ADD",
      "path": "12"
    },
    "2403": {
      "op": "MSTORE"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2408": {
      "op": "DUP3"
    },
    "2409": {
      "op": "ADD"
    },
    "2410": {
      "op": "MSTORE"
    },
    "2411": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2434": {
      "op": "SHL"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2437": {
      "op": "DUP3"
    },
    "2438": {
      "op": "ADD"
    },
    "2439": {
      "op": "MSTORE"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2442": {
      "op": "ADD"
    },
    "2443": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18313,
        18350
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "2446": {
      "op": "JUMP"
    },
    "2447": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18313,
        18350
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2448": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18395,
        18410
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 6
    },
    "2449": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18395,
        18410
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2450": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18366,
        18426
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2452": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18366,
        18426
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2453": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18366,
        18426
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2454": {
      "op": "DUP11"
    },
    "2455": {
      "op": "DUP2"
    },
    "2456": {
      "op": "MSTORE"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2463": {
      "op": "SHL"
    },
    "2464": {
      "op": "SUB"
    },
    "2465": {
      "op": "DUP7"
    },
    "2466": {
      "op": "AND"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2469": {
      "op": "DUP3"
    },
    "2470": {
      "op": "ADD"
    },
    "2471": {
      "op": "MSTORE"
    },
    "2472": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18366,
        18426
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x5B0AEC51A74BF236E8FA08BCB2E303068C7AC1AED3CA410D25B8DAD27538D73C"
    },
    "2505": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18366,
        18426
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2506": {
      "op": "ADD"
    },
    "2507": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18366,
        18426
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2509": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18366,
        18426
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2510": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18366,
        18426
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2511": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18366,
        18426
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2512": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18366,
        18426
      ],
      "op": "SUB",
      "path": "12"
    },
    "2513": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18366,
        18426
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2514": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18366,
        18426
      ],
      "op": "LOG2",
      "path": "12"
    },
    "2515": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18454,
        18474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "2517": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18454,
        18474
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2518": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18454,
        18474
      ],
      "op": "ADD",
      "path": "12"
    },
    "2519": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18454,
        18481
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2526": {
      "op": "SHL"
    },
    "2527": {
      "op": "SUB"
    },
    "2528": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18454,
        18481
      ],
      "op": "AND",
      "path": "12"
    },
    "2529": {
      "branch": 124,
      "fn": "RequestManager.withdraw",
      "offset": [
        18454,
        18495
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2530": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18454,
        18541
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2531": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18454,
        18541
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2532": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18454,
        18541
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9FC"
    },
    "2535": {
      "branch": 124,
      "fn": "RequestManager.withdraw",
      "offset": [
        18454,
        18541
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2536": {
      "op": "POP"
    },
    "2537": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18528,
        18541
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2539": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18528,
        18541
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2540": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18528,
        18541
      ],
      "op": "ADD",
      "path": "12"
    },
    "2541": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18528,
        18541
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2548": {
      "op": "SHL"
    },
    "2549": {
      "op": "SUB"
    },
    "2550": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18541
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2551": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18541
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2552": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18541
      ],
      "op": "AND",
      "path": "12"
    },
    "2553": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18528,
        18541
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2554": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18528,
        18541
      ],
      "op": "AND",
      "path": "12"
    },
    "2555": {
      "branch": 125,
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18541
      ],
      "op": "EQ",
      "path": "12"
    },
    "2556": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18454,
        18541
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2557": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18437,
        18608
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2558": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18437,
        18608
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA0B"
    },
    "2561": {
      "branch": 125,
      "fn": "RequestManager.withdraw",
      "offset": [
        18437,
        18608
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2562": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18566,
        18597
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 7,
      "value": "0xA0B"
    },
    "2565": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18582,
        18589
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2566": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18591,
        18596
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2567": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18566,
        18581
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F3C"
    },
    "2570": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18566,
        18597
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2571": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18566,
        18597
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2572": {
      "op": "POP"
    },
    "2573": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18625,
        18638
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 8
    },
    "2574": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18625,
        18638
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "2575": {
      "fn": "RequestManager.withdraw",
      "offset": [
        17385,
        18645
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "2576": {
      "op": "POP"
    },
    "2577": {
      "op": "POP"
    },
    "2578": {
      "op": "POP"
    },
    "2579": {
      "op": "POP"
    },
    "2580": {
      "op": "POP"
    },
    "2581": {
      "op": "POP"
    },
    "2582": {
      "fn": "RequestManager.withdraw",
      "jump": "o",
      "offset": [
        17385,
        18645
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2583": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2584": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9178,
        9188
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 9,
      "value": "0x4"
    },
    "2586": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9178,
        9188
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2587": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9151,
        9158
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2589": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9151,
        9158
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2590": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9178,
        9188
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "2592": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9178,
        9188
      ],
      "op": "AND",
      "path": "12"
    },
    "2593": {
      "branch": 126,
      "fn": "RequestManager.createRequest",
      "offset": [
        9178,
        9197
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2594": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9170,
        9224
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA66"
    },
    "2597": {
      "branch": 126,
      "fn": "RequestManager.createRequest",
      "offset": [
        9170,
        9224
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2598": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9170,
        9224
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2600": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9170,
        9224
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2607": {
      "op": "SHL"
    },
    "2608": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9170,
        9224
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2609": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9170,
        9224
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2612": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9170,
        9224
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2614": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9170,
        9224
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2615": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9170,
        9224
      ],
      "op": "ADD",
      "path": "12"
    },
    "2616": {
      "op": "MSTORE"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2621": {
      "op": "DUP3"
    },
    "2622": {
      "op": "ADD"
    },
    "2623": {
      "op": "MSTORE"
    },
    "2624": {
      "op": "PUSH22",
      "value": "0x10DBDB9D1C9858DD081A5CC819195C1C9958D85D1959"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "2649": {
      "op": "SHL"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2652": {
      "op": "DUP3"
    },
    "2653": {
      "op": "ADD"
    },
    "2654": {
      "op": "MSTORE"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2657": {
      "op": "ADD"
    },
    "2658": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9170,
        9224
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "2661": {
      "op": "JUMP"
    },
    "2662": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9170,
        9224
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2663": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9255,
        9285
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 10,
      "value": "0x0"
    },
    "2665": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9255,
        9285
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2666": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9255,
        9285
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2667": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9255,
        9285
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2668": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9255,
        9270
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "2670": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9255,
        9285
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2672": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9255,
        9285
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2673": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9255,
        9285
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2675": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9255,
        9285
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2676": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9255,
        9285
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2677": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9255,
        9285
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2678": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9255,
        9290
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2679": {
      "branch": 127,
      "fn": "RequestManager.createRequest",
      "offset": [
        9255,
        9290
      ],
      "op": "SUB",
      "path": "12"
    },
    "2680": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9234,
        9343
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAC3"
    },
    "2683": {
      "branch": 127,
      "fn": "RequestManager.createRequest",
      "offset": [
        9234,
        9343
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2684": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9234,
        9343
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2686": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9234,
        9343
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2693": {
      "op": "SHL"
    },
    "2694": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9234,
        9343
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2695": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9234,
        9343
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2698": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9234,
        9343
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2700": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9234,
        9343
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2701": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9234,
        9343
      ],
      "op": "ADD",
      "path": "12"
    },
    "2702": {
      "op": "MSTORE"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2707": {
      "op": "DUP3"
    },
    "2708": {
      "op": "ADD"
    },
    "2709": {
      "op": "MSTORE"
    },
    "2710": {
      "op": "PUSH32",
      "value": "0x54617267657420726F6C6C7570206E6F7420737570706F727465640000000000"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2745": {
      "op": "DUP3"
    },
    "2746": {
      "op": "ADD"
    },
    "2747": {
      "op": "MSTORE"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2750": {
      "op": "ADD"
    },
    "2751": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9234,
        9343
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "2754": {
      "op": "JUMP"
    },
    "2755": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9234,
        9343
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2756": {
      "offset": [
        4534,
        4543
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12C"
    },
    "2759": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9374,
        9388
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 11
    },
    "2760": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9374,
        9411
      ],
      "op": "LT",
      "path": "12"
    },
    "2761": {
      "branch": 128,
      "fn": "RequestManager.createRequest",
      "offset": [
        9374,
        9411
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2762": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9353,
        9462
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB15"
    },
    "2765": {
      "branch": 128,
      "fn": "RequestManager.createRequest",
      "offset": [
        9353,
        9462
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2766": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9353,
        9462
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2768": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9353,
        9462
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2769": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2775": {
      "op": "SHL"
    },
    "2776": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9353,
        9462
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2777": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9353,
        9462
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2780": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9353,
        9462
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2782": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9353,
        9462
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2783": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9353,
        9462
      ],
      "op": "ADD",
      "path": "12"
    },
    "2784": {
      "op": "MSTORE"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2789": {
      "op": "DUP3"
    },
    "2790": {
      "op": "ADD"
    },
    "2791": {
      "op": "MSTORE"
    },
    "2792": {
      "op": "PUSH32",
      "value": "0x56616C696469747920706572696F6420746F6F2073686F727400000000000000"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2827": {
      "op": "DUP3"
    },
    "2828": {
      "op": "ADD"
    },
    "2829": {
      "op": "MSTORE"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2832": {
      "op": "ADD"
    },
    "2833": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9353,
        9462
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "2836": {
      "op": "JUMP"
    },
    "2837": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9353,
        9462
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2838": {
      "offset": [
        4646,
        4654
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1DFE200"
    },
    "2843": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9493,
        9507
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 12
    },
    "2844": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9493,
        9530
      ],
      "op": "GT",
      "path": "12"
    },
    "2845": {
      "branch": 129,
      "fn": "RequestManager.createRequest",
      "offset": [
        9493,
        9530
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2846": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9472,
        9580
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB69"
    },
    "2849": {
      "branch": 129,
      "fn": "RequestManager.createRequest",
      "offset": [
        9472,
        9580
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2850": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9472,
        9580
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2852": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9472,
        9580
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2859": {
      "op": "SHL"
    },
    "2860": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9472,
        9580
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2861": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9472,
        9580
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2864": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9472,
        9580
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2866": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9472,
        9580
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2867": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9472,
        9580
      ],
      "op": "ADD",
      "path": "12"
    },
    "2868": {
      "op": "MSTORE"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2873": {
      "op": "DUP3"
    },
    "2874": {
      "op": "ADD"
    },
    "2875": {
      "op": "MSTORE"
    },
    "2876": {
      "op": "PUSH32",
      "value": "0x56616C696469747920706572696F6420746F6F206C6F6E670000000000000000"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2911": {
      "op": "DUP3"
    },
    "2912": {
      "op": "ADD"
    },
    "2913": {
      "op": "MSTORE"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2916": {
      "op": "ADD"
    },
    "2917": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9472,
        9580
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "2920": {
      "op": "JUMP"
    },
    "2921": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9472,
        9580
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2922": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9608,
        9621
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 13,
      "value": "0xE"
    },
    "2924": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9608,
        9621
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2925": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9598,
        9604
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2926": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9598,
        9621
      ],
      "op": "GT",
      "path": "12"
    },
    "2927": {
      "branch": 130,
      "fn": "RequestManager.createRequest",
      "offset": [
        9598,
        9621
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2928": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9590,
        9655
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBBB"
    },
    "2931": {
      "branch": 130,
      "fn": "RequestManager.createRequest",
      "offset": [
        9590,
        9655
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2932": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9590,
        9655
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2934": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9590,
        9655
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2935": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2941": {
      "op": "SHL"
    },
    "2942": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9590,
        9655
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2943": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9590,
        9655
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2946": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9590,
        9655
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2948": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9590,
        9655
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2949": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9590,
        9655
      ],
      "op": "ADD",
      "path": "12"
    },
    "2950": {
      "op": "MSTORE"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2955": {
      "op": "DUP3"
    },
    "2956": {
      "op": "ADD"
    },
    "2957": {
      "op": "MSTORE"
    },
    "2958": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473207472616E73666572206C696D6974000000"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2993": {
      "op": "DUP3"
    },
    "2994": {
      "op": "ADD"
    },
    "2995": {
      "op": "MSTORE"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2998": {
      "op": "ADD"
    },
    "2999": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9590,
        9655
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "3002": {
      "op": "JUMP"
    },
    "3003": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9590,
        9655
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3004": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9688,
        9706
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3005": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9666,
        9678
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3007": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9734,
        9747
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBC7"
    },
    "3010": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9740,
        9746
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3011": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9734,
        9739
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B04"
    },
    "3014": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9734,
        9747
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3015": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9734,
        9747
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3016": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9718,
        9747
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3017": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9718,
        9747
      ],
      "op": "POP",
      "path": "12"
    },
    "3018": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9757,
        9776
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3020": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9779,
        9798
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBD4"
    },
    "3023": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9791,
        9797
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3024": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9779,
        9790
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1309"
    },
    "3027": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9779,
        9798
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3028": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9779,
        9798
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3029": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9757,
        9798
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3030": {
      "op": "POP"
    },
    "3031": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9808,
        9832
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3033": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9757,
        9798
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3034": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9835,
        9849
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBE3"
    },
    "3037": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9844,
        9849
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3038": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9835,
        9841
      ],
      "op": "DUP10",
      "path": "12"
    },
    "3039": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9835,
        9849
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "3042": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9835,
        9849
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3043": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9835,
        9849
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3044": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9835,
        9863
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBED"
    },
    "3047": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9835,
        9863
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3048": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9835,
        9863
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3049": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9835,
        9863
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "3052": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9835,
        9863
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3053": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9835,
        9863
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3054": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 14,
      "value": "0x40"
    },
    "3056": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3057": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3064": {
      "op": "SHL"
    },
    "3065": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3066": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3067": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9911,
        9921
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3068": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3070": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3071": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "ADD",
      "path": "12"
    },
    "3072": {
      "op": "MSTORE"
    },
    "3073": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9931,
        9935
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3076": {
      "op": "DUP3"
    },
    "3077": {
      "op": "ADD"
    },
    "3078": {
      "op": "MSTORE"
    },
    "3079": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9808,
        9863
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3080": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9808,
        9863
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3081": {
      "op": "POP"
    },
    "3082": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9808,
        9863
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3083": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9808,
        9863
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3090": {
      "op": "SHL"
    },
    "3091": {
      "op": "SUB"
    },
    "3092": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9910
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3093": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9910
      ],
      "op": "AND",
      "path": "12"
    },
    "3094": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9910
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3095": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9910
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xDD62ED3E"
    },
    "3100": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9910
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3103": {
      "op": "ADD"
    },
    "3104": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3106": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3108": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3109": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3110": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3111": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "SUB",
      "path": "12"
    },
    "3112": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3113": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3114": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "GAS",
      "path": "12"
    },
    "3115": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "3116": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3117": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3118": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3119": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC3C"
    },
    "3122": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3123": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3124": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3126": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3127": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "3128": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3129": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3131": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3132": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3133": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "POP",
      "path": "12"
    },
    "3134": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "POP",
      "path": "12"
    },
    "3135": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "POP",
      "path": "12"
    },
    "3136": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "POP",
      "path": "12"
    },
    "3137": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3139": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3140": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3141": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "3143": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "NOT",
      "path": "12"
    },
    "3144": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "3146": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3147": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "ADD",
      "path": "12"
    },
    "3148": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "AND",
      "path": "12"
    },
    "3149": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3150": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "ADD",
      "path": "12"
    },
    "3151": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3152": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3154": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3155": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "POP",
      "path": "12"
    },
    "3156": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3157": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "ADD",
      "path": "12"
    },
    "3158": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3159": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC60"
    },
    "3162": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3163": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3164": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x250A"
    },
    "3167": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9895,
        9937
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3168": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9937
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3169": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9957
      ],
      "op": "LT",
      "path": "12"
    },
    "3170": {
      "branch": 131,
      "fn": "RequestManager.createRequest",
      "offset": [
        9895,
        9957
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3171": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9874,
        10005
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCA7"
    },
    "3174": {
      "branch": 131,
      "fn": "RequestManager.createRequest",
      "offset": [
        9874,
        10005
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3175": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9874,
        10005
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3177": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9874,
        10005
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3178": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3184": {
      "op": "SHL"
    },
    "3185": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9874,
        10005
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3186": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9874,
        10005
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3189": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9874,
        10005
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3191": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9874,
        10005
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3192": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9874,
        10005
      ],
      "op": "ADD",
      "path": "12"
    },
    "3193": {
      "op": "MSTORE"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3198": {
      "op": "DUP3"
    },
    "3199": {
      "op": "ADD"
    },
    "3200": {
      "op": "MSTORE"
    },
    "3201": {
      "op": "PUSH22",
      "value": "0x496E73756666696369656E7420616C6C6F77616E6365"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3226": {
      "op": "SHL"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3229": {
      "op": "DUP3"
    },
    "3230": {
      "op": "ADD"
    },
    "3231": {
      "op": "MSTORE"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3234": {
      "op": "ADD"
    },
    "3235": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9874,
        10005
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "3238": {
      "op": "JUMP"
    },
    "3239": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9874,
        10005
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3240": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10034,
        10035
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 15,
      "value": "0x1"
    },
    "3242": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10030
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "3244": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10030
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3246": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3247": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3248": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3249": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCBA"
    },
    "3252": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3253": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3254": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "3257": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10016,
        10035
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3258": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3259": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3260": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "POP",
      "path": "12"
    },
    "3261": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "POP",
      "path": "12"
    },
    "3262": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3263": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3264": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3265": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10016,
        10035
      ],
      "op": "POP",
      "path": "12"
    },
    "3266": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10045,
        10071
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3268": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10074,
        10082
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "3270": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10074,
        10098
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3272": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10083,
        10097
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "3274": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10083,
        10097
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3275": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10074,
        10098
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3276": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10074,
        10098
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3277": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10074,
        10098
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3279": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10074,
        10098
      ],
      "op": "ADD",
      "path": "12"
    },
    "3280": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10074,
        10098
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3281": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10074,
        10098
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3282": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10074,
        10098
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3283": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10074,
        10098
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3285": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10074,
        10098
      ],
      "op": "ADD",
      "path": "12"
    },
    "3286": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10074,
        10098
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3288": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10074,
        10098
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3289": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10045,
        10098
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3290": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10045,
        10098
      ],
      "op": "POP",
      "path": "12"
    },
    "3291": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10128,
        10138
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 16
    },
    "3292": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10118
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3293": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10125
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3295": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10125
      ],
      "op": "ADD",
      "path": "12"
    },
    "3296": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10125
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3298": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "3301": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "EXP",
      "path": "12"
    },
    "3302": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3303": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3304": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3311": {
      "op": "SHL"
    },
    "3312": {
      "op": "SUB"
    },
    "3313": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "MUL",
      "path": "12"
    },
    "3314": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "NOT",
      "path": "12"
    },
    "3315": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "AND",
      "path": "12"
    },
    "3316": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3317": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "op": "SUB"
    },
    "3326": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "AND",
      "path": "12"
    },
    "3327": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "MUL",
      "path": "12"
    },
    "3328": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "OR",
      "path": "12"
    },
    "3329": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3330": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3331": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10108,
        10138
      ],
      "op": "POP",
      "path": "12"
    },
    "3332": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10180,
        10198
      ],
      "op": "DUP11",
      "path": "12",
      "statement": 17
    },
    "3333": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10158
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3334": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10177
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3336": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10177
      ],
      "op": "ADD",
      "path": "12"
    },
    "3337": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10177
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3339": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "3342": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "EXP",
      "path": "12"
    },
    "3343": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3344": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3345": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3352": {
      "op": "SHL"
    },
    "3353": {
      "op": "SUB"
    },
    "3354": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "MUL",
      "path": "12"
    },
    "3355": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "NOT",
      "path": "12"
    },
    "3356": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "AND",
      "path": "12"
    },
    "3357": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3358": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3365": {
      "op": "SHL"
    },
    "3366": {
      "op": "SUB"
    },
    "3367": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "AND",
      "path": "12"
    },
    "3368": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "MUL",
      "path": "12"
    },
    "3369": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "OR",
      "path": "12"
    },
    "3370": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3371": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3372": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10148,
        10198
      ],
      "op": "POP",
      "path": "12"
    },
    "3373": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10235,
        10248
      ],
      "op": "DUP12",
      "path": "12",
      "statement": 18
    },
    "3374": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10208,
        10218
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3375": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10208,
        10232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "3377": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10208,
        10232
      ],
      "op": "ADD",
      "path": "12"
    },
    "3378": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10208,
        10248
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3379": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10208,
        10248
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3380": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10208,
        10248
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3381": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10208,
        10248
      ],
      "op": "POP",
      "path": "12"
    },
    "3382": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10290,
        10308
      ],
      "op": "DUP10",
      "path": "12",
      "statement": 19
    },
    "3383": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10268
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3384": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10287
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "3386": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10287
      ],
      "op": "ADD",
      "path": "12"
    },
    "3387": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10287
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3389": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "3392": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "EXP",
      "path": "12"
    },
    "3393": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3394": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3395": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3402": {
      "op": "SHL"
    },
    "3403": {
      "op": "SUB"
    },
    "3404": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "MUL",
      "path": "12"
    },
    "3405": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "NOT",
      "path": "12"
    },
    "3406": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "AND",
      "path": "12"
    },
    "3407": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3408": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3415": {
      "op": "SHL"
    },
    "3416": {
      "op": "SUB"
    },
    "3417": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "AND",
      "path": "12"
    },
    "3418": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "MUL",
      "path": "12"
    },
    "3419": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "OR",
      "path": "12"
    },
    "3420": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3421": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3422": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10258,
        10308
      ],
      "op": "POP",
      "path": "12"
    },
    "3423": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10345,
        10358
      ],
      "op": "DUP9",
      "path": "12",
      "statement": 20
    },
    "3424": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10328
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3425": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10342
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3427": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10342
      ],
      "op": "ADD",
      "path": "12"
    },
    "3428": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10342
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3430": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "3433": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "EXP",
      "path": "12"
    },
    "3434": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3435": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3436": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3443": {
      "op": "SHL"
    },
    "3444": {
      "op": "SUB"
    },
    "3445": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "MUL",
      "path": "12"
    },
    "3446": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "NOT",
      "path": "12"
    },
    "3447": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "AND",
      "path": "12"
    },
    "3448": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3449": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3456": {
      "op": "SHL"
    },
    "3457": {
      "op": "SUB"
    },
    "3458": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "AND",
      "path": "12"
    },
    "3459": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "MUL",
      "path": "12"
    },
    "3460": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "OR",
      "path": "12"
    },
    "3461": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3462": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3463": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10318,
        10358
      ],
      "op": "POP",
      "path": "12"
    },
    "3464": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10388,
        10394
      ],
      "op": "DUP8",
      "path": "12",
      "statement": 21
    },
    "3465": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10368,
        10378
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3466": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10368,
        10385
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "3468": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10368,
        10385
      ],
      "op": "ADD",
      "path": "12"
    },
    "3469": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10368,
        10394
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3470": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10368,
        10394
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3471": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10368,
        10394
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3472": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10368,
        10394
      ],
      "op": "POP",
      "path": "12"
    },
    "3473": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 22,
      "value": "0x40"
    },
    "3475": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3476": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3477": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3479": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "ADD",
      "path": "12"
    },
    "3480": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3482": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3483": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3484": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10459,
        10460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3492": {
      "op": "SHL"
    },
    "3493": {
      "op": "SUB"
    },
    "3494": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "AND",
      "path": "12"
    },
    "3495": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3496": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3497": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3499": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "ADD",
      "path": "12"
    },
    "3500": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10471,
        10472
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3502": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10463,
        10473
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3503": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10463,
        10473
      ],
      "op": "SHL",
      "path": "12"
    },
    "3504": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3505": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3506": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10430,
        10474
      ],
      "op": "POP",
      "path": "12"
    },
    "3507": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10414
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3508": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "3510": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10427
      ],
      "op": "ADD",
      "path": "12"
    },
    "3511": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3513": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3514": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "ADD",
      "path": "12"
    },
    "3515": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3516": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3517": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3519": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "ADD",
      "path": "12"
    },
    "3520": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3522": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "3525": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "EXP",
      "path": "12"
    },
    "3526": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3527": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3528": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3535": {
      "op": "SHL"
    },
    "3536": {
      "op": "SUB"
    },
    "3537": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "MUL",
      "path": "12"
    },
    "3538": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "NOT",
      "path": "12"
    },
    "3539": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "AND",
      "path": "12"
    },
    "3540": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3541": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3548": {
      "op": "SHL"
    },
    "3549": {
      "op": "SUB"
    },
    "3550": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "AND",
      "path": "12"
    },
    "3551": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "MUL",
      "path": "12"
    },
    "3552": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "OR",
      "path": "12"
    },
    "3553": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3554": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3555": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "POP",
      "path": "12"
    },
    "3556": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3558": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3559": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "ADD",
      "path": "12"
    },
    "3560": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3561": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3562": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3564": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "ADD",
      "path": "12"
    },
    "3565": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3566": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3567": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "POP",
      "path": "12"
    },
    "3568": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10404,
        10474
      ],
      "op": "POP",
      "path": "12"
    },
    "3569": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10526,
        10540
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 23
    },
    "3570": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10508,
        10523
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "3571": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10508,
        10540
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDFC"
    },
    "3574": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10508,
        10540
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3575": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10508,
        10540
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3576": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10508,
        10540
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "3579": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10508,
        10540
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3580": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10508,
        10540
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3581": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10484,
        10505
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "3583": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10484,
        10505
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3584": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10484,
        10505
      ],
      "op": "ADD",
      "path": "12"
    },
    "3585": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10484,
        10540
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3586": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10484,
        10540
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3587": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10484,
        10540
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3588": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10550,
        10566
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 24,
      "value": "0xA"
    },
    "3590": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10550,
        10566
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3591": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10550,
        10566
      ],
      "op": "ADD",
      "path": "12"
    },
    "3592": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10550,
        10574
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3593": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10550,
        10574
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3594": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10550,
        10574
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3595": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10584,
        10606
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 25,
      "value": "0xB"
    },
    "3597": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10584,
        10606
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3598": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10584,
        10606
      ],
      "op": "ADD",
      "path": "12"
    },
    "3599": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10584,
        10620
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3600": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10584,
        10620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3601": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10584,
        10620
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3602": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10664,
        10678
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 26,
      "value": "0x5"
    },
    "3604": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10664,
        10678
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3605": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10636,
        10861
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3607": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10636,
        10861
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3608": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10636,
        10861
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3609": {
      "op": "SWAP2"
    },
    "3610": {
      "op": "DUP3"
    },
    "3611": {
      "op": "MSTORE"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3614": {
      "op": "DUP3"
    },
    "3615": {
      "op": "ADD"
    },
    "3616": {
      "op": "DUP16"
    },
    "3617": {
      "op": "SWAP1"
    },
    "3618": {
      "op": "MSTORE"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3625": {
      "op": "SHL"
    },
    "3626": {
      "op": "SUB"
    },
    "3627": {
      "op": "DUP15"
    },
    "3628": {
      "op": "DUP2"
    },
    "3629": {
      "op": "AND"
    },
    "3630": {
      "op": "DUP4"
    },
    "3631": {
      "op": "DUP4"
    },
    "3632": {
      "op": "ADD"
    },
    "3633": {
      "op": "MSTORE"
    },
    "3634": {
      "op": "DUP14"
    },
    "3635": {
      "op": "DUP2"
    },
    "3636": {
      "op": "AND"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3639": {
      "op": "DUP5"
    },
    "3640": {
      "op": "ADD"
    },
    "3641": {
      "op": "MSTORE"
    },
    "3642": {
      "op": "DUP13"
    },
    "3643": {
      "op": "AND"
    },
    "3644": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3646": {
      "op": "DUP4"
    },
    "3647": {
      "op": "ADD"
    },
    "3648": {
      "op": "MSTORE"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3651": {
      "op": "DUP3"
    },
    "3652": {
      "op": "ADD"
    },
    "3653": {
      "op": "DUP12"
    },
    "3654": {
      "op": "SWAP1"
    },
    "3655": {
      "op": "MSTORE"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3658": {
      "op": "DUP3"
    },
    "3659": {
      "op": "ADD"
    },
    "3660": {
      "op": "SWAP3"
    },
    "3661": {
      "op": "SWAP1"
    },
    "3662": {
      "op": "SWAP3"
    },
    "3663": {
      "op": "MSTORE"
    },
    "3664": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10636,
        10861
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3665": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10636,
        10861
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3666": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10636,
        10861
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x18A412D0656B9A5C9263A134F66A34DA33CAD7C3690971601F9963ADE588E701"
    },
    "3699": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10636,
        10861
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3700": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10636,
        10861
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3701": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10636,
        10861
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3702": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10636,
        10861
      ],
      "op": "SUB",
      "path": "12"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3705": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10636,
        10861
      ],
      "op": "ADD",
      "path": "12"
    },
    "3706": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10636,
        10861
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3707": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10636,
        10861
      ],
      "op": "LOG1",
      "path": "12"
    },
    "3708": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10872,
        10939
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 27,
      "value": "0xE90"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3717": {
      "op": "SHL"
    },
    "3718": {
      "op": "SUB"
    },
    "3719": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10872,
        10894
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3720": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10872,
        10894
      ],
      "op": "AND",
      "path": "12"
    },
    "3721": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10895,
        10905
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3722": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10915,
        10919
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "3723": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10922,
        10938
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3724": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10872,
        10894
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2021"
    },
    "3727": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10872,
        10939
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3728": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10872,
        10939
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3729": {
      "op": "POP"
    },
    "3730": {
      "op": "POP"
    },
    "3731": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10957,
        10971
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 28,
      "value": "0x5"
    },
    "3733": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10957,
        10971
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3734": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10957,
        10971
      ],
      "op": "SWAP11",
      "path": "12"
    },
    "3735": {
      "fn": "RequestManager.createRequest",
      "offset": [
        8914,
        10978
      ],
      "op": "SWAP10",
      "path": "12"
    },
    "3736": {
      "op": "POP"
    },
    "3737": {
      "op": "POP"
    },
    "3738": {
      "op": "POP"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "op": "POP"
    },
    "3742": {
      "op": "POP"
    },
    "3743": {
      "op": "POP"
    },
    "3744": {
      "op": "POP"
    },
    "3745": {
      "op": "POP"
    },
    "3746": {
      "fn": "RequestManager.createRequest",
      "jump": "o",
      "offset": [
        8914,
        10978
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3747": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3748": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3750": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3757": {
      "op": "SHL"
    },
    "3758": {
      "op": "SUB"
    },
    "3759": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3760": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 29
    },
    "3761": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3762": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xECD"
    },
    "3765": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3766": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3768": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3769": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3775": {
      "op": "SHL"
    },
    "3776": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3777": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3778": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3780": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3781": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "3784": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3785": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2523"
    },
    "3788": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3789": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3790": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0xED7"
    },
    "3793": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3795": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x208C"
    },
    "3798": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3799": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3800": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3801": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        23889,
        24145
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3802": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3804": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3811": {
      "op": "SHL"
    },
    "3812": {
      "op": "SUB"
    },
    "3813": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3814": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3815": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3816": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF03"
    },
    "3819": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3820": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3822": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3823": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3829": {
      "op": "SHL"
    },
    "3830": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3831": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3832": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3834": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3835": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "3838": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3839": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2523"
    },
    "3842": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3843": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3844": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24040,
        24054
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 31,
      "value": "0xD"
    },
    "3846": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24040,
        24074
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3847": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24040,
        24074
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3848": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24040,
        24074
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3849": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24040,
        24074
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3850": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24084,
        24092
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 32,
      "value": "0xC"
    },
    "3852": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24084,
        24106
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3853": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24116,
        24124
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 33,
      "value": "0xB"
    },
    "3855": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24116,
        24138
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3856": {
      "fn": "RequestManager.updateFeeData",
      "jump": "o",
      "offset": [
        23889,
        24145
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3857": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14762,
        16828
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3858": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14857,
        14864
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3859": {
      "offset": [
        7345,
        7357
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "3861": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7345,
        7357
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3862": {
      "offset": [
        7334,
        7341
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3863": {
      "offset": [
        7334,
        7357
      ],
      "op": "GT",
      "path": "12"
    },
    "3864": {
      "branch": 132,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7334,
        7357
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3865": {
      "offset": [
        7334,
        7372
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3866": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7334,
        7372
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3867": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7334,
        7372
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF24"
    },
    "3870": {
      "branch": 132,
      "offset": [
        7334,
        7372
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3871": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7334,
        7372
      ],
      "op": "POP",
      "path": "12"
    },
    "3872": {
      "offset": [
        7371,
        7372
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3874": {
      "offset": [
        7361,
        7368
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3875": {
      "offset": [
        7361,
        7372
      ],
      "op": "GT",
      "path": "12"
    },
    "3876": {
      "offset": [
        7334,
        7372
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3877": {
      "offset": [
        7326,
        7394
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF64"
    },
    "3880": {
      "offset": [
        7326,
        7394
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3881": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7326,
        7394
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3883": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7326,
        7394
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3884": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3890": {
      "op": "SHL"
    },
    "3891": {
      "offset": [
        7326,
        7394
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3892": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7326,
        7394
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3895": {
      "offset": [
        7326,
        7394
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3897": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7326,
        7394
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3898": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        7326,
        7394
      ],
      "op": "ADD",
      "path": "12"
    },
    "3899": {
      "op": "MSTORE"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3904": {
      "op": "DUP3"
    },
    "3905": {
      "op": "ADD"
    },
    "3906": {
      "op": "MSTORE"
    },
    "3907": {
      "op": "PUSH17",
      "value": "0x18DB185A5B5259081B9BDD081D985B1A59"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "3927": {
      "op": "SHL"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3930": {
      "op": "DUP3"
    },
    "3931": {
      "op": "ADD"
    },
    "3932": {
      "op": "MSTORE"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3935": {
      "op": "ADD"
    },
    "3936": {
      "offset": [
        7326,
        7394
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "3939": {
      "op": "JUMP"
    },
    "3940": {
      "offset": [
        7326,
        7394
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3941": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14880,
        14899
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3943": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14902,
        14917
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3944": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14902,
        14917
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3945": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14902,
        14917
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3946": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14902,
        14908
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "3948": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14902,
        14917
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3950": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14902,
        14917
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3951": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14902,
        14917
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3952": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14902,
        14917
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3953": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14902,
        14917
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3955": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14902,
        14917
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3956": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14902,
        14917
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3957": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14902,
        14917
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3958": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14962,
        14977
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3959": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14962,
        14977
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3960": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14953,
        14978
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3961": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14953,
        14978
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3962": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14953,
        14961
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "3964": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14953,
        14978
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3965": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14953,
        14978
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3966": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14953,
        14978
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3967": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14953,
        14978
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3968": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14953,
        14978
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3969": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14953,
        14978
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3970": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15014,
        15031
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 34,
      "value": "0x7"
    },
    "3972": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15014,
        15031
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3973": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15014,
        15031
      ],
      "op": "ADD",
      "path": "12"
    },
    "3974": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15014,
        15031
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3975": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14996,
        15011
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "3976": {
      "branch": 133,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14996,
        15031
      ],
      "op": "LT",
      "path": "12"
    },
    "3977": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14988,
        15049
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFC4"
    },
    "3980": {
      "branch": 133,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14988,
        15049
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3981": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14988,
        15049
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3983": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14988,
        15049
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3990": {
      "op": "SHL"
    },
    "3991": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14988,
        15049
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3992": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14988,
        15049
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3995": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14988,
        15049
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3997": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14988,
        15049
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3998": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14988,
        15049
      ],
      "op": "ADD",
      "path": "12"
    },
    "3999": {
      "op": "MSTORE"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4004": {
      "op": "DUP3"
    },
    "4005": {
      "op": "ADD"
    },
    "4006": {
      "op": "MSTORE"
    },
    "4007": {
      "op": "PUSH13",
      "value": "0x10DB185A5B48195E1C1A5C9959"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "4023": {
      "op": "SHL"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4026": {
      "op": "DUP3"
    },
    "4027": {
      "op": "ADD"
    },
    "4028": {
      "op": "MSTORE"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4031": {
      "op": "ADD"
    },
    "4032": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14988,
        15049
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "4035": {
      "op": "JUMP"
    },
    "4036": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14988,
        15049
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4037": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15139,
        15163
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "4039": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15139,
        15163
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4040": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15196,
        15214
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "4042": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15196,
        15214
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4043": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15196,
        15214
      ],
      "op": "ADD",
      "path": "12"
    },
    "4044": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15196,
        15214
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4045": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15255,
        15281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "4047": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15255,
        15281
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4048": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15255,
        15281
      ],
      "op": "ADD",
      "path": "12"
    },
    "4049": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15255,
        15281
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4050": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15060,
        15077
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4052": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15060,
        15077
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4053": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15060,
        15077
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4054": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15060,
        15077
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4055": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15139,
        15163
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4056": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15139,
        15163
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4057": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15296,
        15331
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4058": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15296,
        15331
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4059": {
      "branch": 134,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15296,
        15331
      ],
      "op": "GT",
      "path": "12"
    },
    "4060": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15292,
        15787
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4061": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15292,
        15787
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1086"
    },
    "4064": {
      "branch": 134,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15292,
        15787
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4065": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15351,
        15371
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4066": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15375,
        15376
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4068": {
      "branch": 135,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15351,
        15376
      ],
      "op": "SUB",
      "path": "12"
    },
    "4069": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15347,
        15468
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1009"
    },
    "4072": {
      "branch": 135,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15347,
        15468
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4073": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15431,
        15452
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 35,
      "value": "0x2"
    },
    "4075": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15431,
        15452
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4076": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15431,
        15452
      ],
      "op": "ADD",
      "path": "12"
    },
    "4077": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15431,
        15452
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4078": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15415,
        15453
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4080": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15415,
        15453
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4081": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15415,
        15453
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4082": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15415,
        15453
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4083": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15415,
        15430
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "4085": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15415,
        15453
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4087": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15415,
        15453
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4088": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15415,
        15453
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4090": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15415,
        15453
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4091": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15415,
        15453
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4092": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15415,
        15453
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4093": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15396,
        15453
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1006"
    },
    "4096": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15396,
        15453
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4097": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15396,
        15453
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4098": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15396,
        15453
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "4101": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15396,
        15453
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4102": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15396,
        15453
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4103": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15396,
        15453
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4104": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15396,
        15453
      ],
      "op": "POP",
      "path": "12"
    },
    "4105": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15347,
        15468
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4106": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15489,
        15502
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 36,
      "value": "0x1"
    },
    "4108": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15489,
        15502
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4109": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15489,
        15502
      ],
      "op": "ADD",
      "path": "12"
    },
    "4110": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15489,
        15502
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4111": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15506,
        15516
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4118": {
      "op": "SHL"
    },
    "4119": {
      "op": "SUB"
    },
    "4120": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15489,
        15502
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4121": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15489,
        15502
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4122": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15489,
        15502
      ],
      "op": "AND",
      "path": "12"
    },
    "4123": {
      "branch": 136,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15489,
        15516
      ],
      "op": "SUB",
      "path": "12"
    },
    "4124": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15481,
        15547
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1067"
    },
    "4127": {
      "branch": 136,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15481,
        15547
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4128": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15481,
        15547
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4130": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15481,
        15547
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4131": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4137": {
      "op": "SHL"
    },
    "4138": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15481,
        15547
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4139": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15481,
        15547
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4142": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15481,
        15547
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4144": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15481,
        15547
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4145": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15481,
        15547
      ],
      "op": "ADD",
      "path": "12"
    },
    "4146": {
      "op": "MSTORE"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4151": {
      "op": "DUP3"
    },
    "4152": {
      "op": "ADD"
    },
    "4153": {
      "op": "MSTORE"
    },
    "4154": {
      "op": "PUSH32",
      "value": "0x43616E6E6F74206368616C6C656E6765206F776E20636C61696D000000000000"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4189": {
      "op": "DUP3"
    },
    "4190": {
      "op": "ADD"
    },
    "4191": {
      "op": "MSTORE"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4194": {
      "op": "ADD"
    },
    "4195": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15481,
        15547
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "4198": {
      "op": "JUMP"
    },
    "4199": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15481,
        15547
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4200": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15573,
        15583
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 37
    },
    "4201": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15573,
        15583
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "4202": {
      "op": "POP"
    },
    "4203": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15608,
        15643
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 38,
      "value": "0x1074"
    },
    "4206": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15623,
        15643
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4207": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15608,
        15620
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4208": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15608,
        15643
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2558"
    },
    "4211": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15608,
        15643
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4212": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15608,
        15643
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4213": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15608,
        15647
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x107F"
    },
    "4216": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15608,
        15647
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4217": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15646,
        15647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4219": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15608,
        15647
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "4222": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15608,
        15647
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4223": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15608,
        15647
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4224": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15597,
        15647
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4225": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15597,
        15647
      ],
      "op": "POP",
      "path": "12"
    },
    "4226": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15292,
        15787
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10B2"
    },
    "4229": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15292,
        15787
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4230": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15292,
        15787
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4231": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15690,
        15703
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 39,
      "value": "0x1"
    },
    "4233": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15690,
        15703
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4234": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15690,
        15703
      ],
      "op": "DUP9",
      "path": "12"
    },
    "4235": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15690,
        15703
      ],
      "op": "ADD",
      "path": "12"
    },
    "4236": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15690,
        15703
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4237": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15766,
        15776
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 40
    },
    "4238": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15766,
        15776
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4245": {
      "op": "SHL"
    },
    "4246": {
      "op": "SUB"
    },
    "4247": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15690,
        15703
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4248": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15690,
        15703
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4249": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15690,
        15703
      ],
      "op": "AND",
      "path": "12"
    },
    "4250": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15690,
        15703
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "4251": {
      "op": "POP"
    },
    "4252": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15728,
        15763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10A5"
    },
    "4255": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15751,
        15763
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4256": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15728,
        15748
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4257": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15728,
        15763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2558"
    },
    "4260": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15728,
        15763
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4261": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15728,
        15763
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4262": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15728,
        15776
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10AF"
    },
    "4265": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15728,
        15776
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4266": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15728,
        15776
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4267": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15728,
        15776
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "4270": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15728,
        15776
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4271": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15728,
        15776
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4272": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15717,
        15776
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4273": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15717,
        15776
      ],
      "op": "POP",
      "path": "12"
    },
    "4274": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15292,
        15787
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4275": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15805,
        15815
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 41
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4282": {
      "op": "SHL"
    },
    "4283": {
      "op": "SUB"
    },
    "4284": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15805,
        15828
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4285": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15805,
        15828
      ],
      "op": "AND",
      "path": "12"
    },
    "4286": {
      "branch": 137,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15805,
        15828
      ],
      "op": "EQ",
      "path": "12"
    },
    "4287": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15797,
        15855
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1103"
    },
    "4290": {
      "branch": 137,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15797,
        15855
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4291": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15797,
        15855
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4293": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15797,
        15855
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4294": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4300": {
      "op": "SHL"
    },
    "4301": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15797,
        15855
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4302": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15797,
        15855
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4305": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15797,
        15855
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4307": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15797,
        15855
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4308": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15797,
        15855
      ],
      "op": "ADD",
      "path": "12"
    },
    "4309": {
      "op": "MSTORE"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4314": {
      "op": "DUP3"
    },
    "4315": {
      "op": "ADD"
    },
    "4316": {
      "op": "MSTORE"
    },
    "4317": {
      "op": "PUSH22",
      "value": "0x139BDD08195B1A59DA589B19481D1BC81BDD5D189A59"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "4342": {
      "op": "SHL"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4345": {
      "op": "DUP3"
    },
    "4346": {
      "op": "ADD"
    },
    "4347": {
      "op": "MSTORE"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15797,
        15855
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "4354": {
      "op": "JUMP"
    },
    "4355": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15797,
        15855
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4356": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15886,
        15894
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 42
    },
    "4357": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15873,
        15882
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4358": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15873,
        15894
      ],
      "op": "LT",
      "path": "12"
    },
    "4359": {
      "branch": 138,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15873,
        15894
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4360": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15865,
        15924
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1153"
    },
    "4363": {
      "branch": 138,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15865,
        15924
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4364": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15865,
        15924
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4366": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15865,
        15924
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4367": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4373": {
      "op": "SHL"
    },
    "4374": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15865,
        15924
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4375": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15865,
        15924
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4378": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15865,
        15924
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4380": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15865,
        15924
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4381": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15865,
        15924
      ],
      "op": "ADD",
      "path": "12"
    },
    "4382": {
      "op": "MSTORE"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4387": {
      "op": "DUP3"
    },
    "4388": {
      "op": "ADD"
    },
    "4389": {
      "op": "MSTORE"
    },
    "4390": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768207374616B652070726F766964656400000000000000"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4425": {
      "op": "DUP3"
    },
    "4426": {
      "op": "ADD"
    },
    "4427": {
      "op": "MSTORE"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4430": {
      "op": "ADD"
    },
    "4431": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15865,
        15924
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "4434": {
      "op": "JUMP"
    },
    "4435": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15865,
        15924
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4436": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15952,
        15965
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4438": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15952,
        15965
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4439": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15952,
        15965
      ],
      "op": "ADD",
      "path": "12"
    },
    "4440": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15952,
        15965
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4447": {
      "op": "SHL"
    },
    "4448": {
      "op": "SUB"
    },
    "4449": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15952,
        15965
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4450": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15952,
        15965
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4451": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15952,
        15965
      ],
      "op": "AND",
      "path": "12"
    },
    "4452": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15939,
        15965
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4453": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15939,
        15965
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4454": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15939,
        15965
      ],
      "op": "AND",
      "path": "12"
    },
    "4455": {
      "branch": 139,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15939,
        15965
      ],
      "op": "SUB",
      "path": "12"
    },
    "4456": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15935,
        16202
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x118A"
    },
    "4459": {
      "branch": 139,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15935,
        16202
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4460": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16003,
        16012
      ],
      "op": "CALLVALUE",
      "path": "12",
      "statement": 43
    },
    "4461": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        15986
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4462": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        15999
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "4464": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        15999
      ],
      "op": "ADD",
      "path": "12"
    },
    "4465": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        15999
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4467": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        16012
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4468": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        16012
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4469": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        16012
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4470": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        16012
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x117F"
    },
    "4473": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        16012
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4474": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        16012
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4475": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        16012
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "4478": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15981,
        16012
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4479": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        16012
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4480": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        16012
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4481": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        16012
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4482": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15981,
        16012
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4483": {
      "op": "POP"
    },
    "4484": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15935,
        16202
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11E2"
    },
    "4487": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15935,
        16202
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4488": {
      "op": "POP"
    },
    "4489": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15935,
        16202
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4490": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15935,
        16202
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4491": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16063
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 44,
      "value": "0x4"
    },
    "4493": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16063
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4494": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16063
      ],
      "op": "ADD",
      "path": "12"
    },
    "4495": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16076
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4496": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16076
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4503": {
      "op": "SHL"
    },
    "4504": {
      "op": "SUB"
    },
    "4505": {
      "op": "NOT"
    },
    "4506": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16076
      ],
      "op": "AND",
      "path": "12"
    },
    "4507": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16066,
        16076
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4508": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16076
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4509": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16076
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4510": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16076
      ],
      "op": "OR",
      "path": "12"
    },
    "4511": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16076
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4512": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16076
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4513": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16076
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4514": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16063
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4516": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16125
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 45
    },
    "4517": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16125
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4518": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16125
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4519": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16113
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "4521": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16113
      ],
      "op": "DUP9",
      "path": "12"
    },
    "4522": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16113
      ],
      "op": "ADD",
      "path": "12"
    },
    "4523": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16125
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4525": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16125
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4526": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16125
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4528": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16125
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4529": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16125
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4530": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16138
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4531": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16138
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4532": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16129,
        16138
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4533": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16129,
        16138
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4534": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16043,
        16063
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4535": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16138
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11C1"
    },
    "4538": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16138
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4539": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16129,
        16138
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4540": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16129,
        16138
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4541": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16138
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "4544": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16090,
        16138
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4545": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16138
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4546": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16138
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4547": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16138
      ],
      "op": "POP",
      "path": "12"
    },
    "4548": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16138
      ],
      "op": "POP",
      "path": "12"
    },
    "4549": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16138
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4550": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16138
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4551": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16138
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4552": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16138
      ],
      "op": "POP",
      "path": "12"
    },
    "4553": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16182,
        16191
      ],
      "op": "CALLVALUE",
      "path": "12",
      "statement": 46
    },
    "4554": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16157
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4555": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16178
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "4557": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16178
      ],
      "op": "ADD",
      "path": "12"
    },
    "4558": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16178
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4560": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16191
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4561": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16191
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4562": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16191
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4563": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16191
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11DC"
    },
    "4566": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16191
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4567": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16191
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4568": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16191
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "4571": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16152,
        16191
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4572": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16191
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4573": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16191
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4574": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16191
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4575": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16152,
        16191
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4576": {
      "op": "POP"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15935,
        16202
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4579": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16254,
        16271
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 47,
      "value": "0x7"
    },
    "4581": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16254,
        16271
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4582": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16254,
        16271
      ],
      "op": "ADD",
      "path": "12"
    },
    "4583": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16254,
        16271
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4584": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16232,
        16328
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11FA"
    },
    "4587": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16232,
        16328
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4588": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16318
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11F5"
    },
    "4591": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16303,
        16318
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4592": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16300
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "4593": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16318
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "4596": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16285,
        16318
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4597": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16318
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4598": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16232,
        16240
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x20DC"
    },
    "4601": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16232,
        16328
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4602": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16232,
        16328
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4603": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16212,
        16229
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "4605": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16212,
        16229
      ],
      "op": "DUP9",
      "path": "12"
    },
    "4606": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16212,
        16229
      ],
      "op": "ADD",
      "path": "12"
    },
    "4607": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16212,
        16328
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4608": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16385,
        16409
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "4610": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16385,
        16409
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4611": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16338,
        16364
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4613": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16338,
        16364
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4614": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16367,
        16409
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x120F"
    },
    "4617": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16367,
        16409
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4618": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16367,
        16382
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "4619": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16367,
        16409
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "4622": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16367,
        16409
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4623": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16367,
        16409
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4624": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16338,
        16409
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4625": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16338,
        16409
      ],
      "op": "POP",
      "path": "12"
    },
    "4626": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16461,
        16479
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 48
    },
    "4627": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16440,
        16445
      ],
      "op": "DUP9",
      "path": "12"
    },
    "4628": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16440,
        16457
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "4630": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16440,
        16457
      ],
      "op": "ADD",
      "path": "12"
    },
    "4631": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16440,
        16457
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4632": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16440,
        16479
      ],
      "op": "LT",
      "path": "12"
    },
    "4633": {
      "branch": 140,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16440,
        16479
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4634": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16419,
        16546
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1277"
    },
    "4637": {
      "branch": 140,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16419,
        16546
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4638": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16419,
        16546
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4640": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16419,
        16546
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4641": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4647": {
      "op": "SHL"
    },
    "4648": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16419,
        16546
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4649": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16419,
        16546
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4652": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16419,
        16546
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4654": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16419,
        16546
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4655": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16419,
        16546
      ],
      "op": "ADD",
      "path": "12"
    },
    "4656": {
      "op": "MSTORE"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4661": {
      "op": "DUP3"
    },
    "4662": {
      "op": "ADD"
    },
    "4663": {
      "op": "MSTORE"
    },
    "4664": {
      "op": "PUSH32",
      "value": "0x436C61696D207465726D696E6174696F6E20646964206E6F7420696E63726561"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4699": {
      "op": "DUP3"
    },
    "4700": {
      "op": "ADD"
    },
    "4701": {
      "op": "MSTORE"
    },
    "4702": {
      "op": "PUSH9",
      "value": "0xE6CA40CADCDEEACED"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "4714": {
      "op": "SHL"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4717": {
      "op": "DUP3"
    },
    "4718": {
      "op": "ADD"
    },
    "4719": {
      "op": "MSTORE"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4722": {
      "op": "ADD"
    },
    "4723": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16419,
        16546
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "4726": {
      "op": "JUMP"
    },
    "4727": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16419,
        16546
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4728": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16585,
        16590
      ],
      "op": "DUP8",
      "path": "12",
      "statement": 49
    },
    "4729": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16585,
        16600
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4731": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16585,
        16600
      ],
      "op": "ADD",
      "path": "12"
    },
    "4732": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16585,
        16600
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4733": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x29FD2DF293BA511E44CA47212C915137020231ED3AC0EE7BD02A7A655275AD37"
    },
    "4766": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16614,
        16621
      ],
      "op": "DUP12",
      "path": "12"
    },
    "4767": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16635,
        16640
      ],
      "op": "DUP11",
      "path": "12"
    },
    "4768": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16635,
        16648
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4770": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16635,
        16648
      ],
      "op": "ADD",
      "path": "12"
    },
    "4771": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16635,
        16648
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4773": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16635,
        16648
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4774": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16635,
        16648
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4775": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16635,
        16648
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4776": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16635,
        16648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "4779": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16635,
        16648
      ],
      "op": "EXP",
      "path": "12"
    },
    "4780": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16635,
        16648
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4781": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16635,
        16648
      ],
      "op": "DIV",
      "path": "12"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4788": {
      "op": "SHL"
    },
    "4789": {
      "op": "SUB"
    },
    "4790": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16635,
        16648
      ],
      "op": "AND",
      "path": "12"
    },
    "4791": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16662,
        16667
      ],
      "op": "DUP12",
      "path": "12"
    },
    "4792": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16662,
        16680
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "4794": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16662,
        16680
      ],
      "op": "ADD",
      "path": "12"
    },
    "4795": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16662,
        16680
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4796": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16694,
        16699
      ],
      "op": "DUP13",
      "path": "12"
    },
    "4797": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16694,
        16714
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4799": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16694,
        16714
      ],
      "op": "ADD",
      "path": "12"
    },
    "4800": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16694,
        16714
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4802": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16694,
        16714
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4803": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16694,
        16714
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4804": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16694,
        16714
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4805": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16694,
        16714
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "4808": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16694,
        16714
      ],
      "op": "EXP",
      "path": "12"
    },
    "4809": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16694,
        16714
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4810": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16694,
        16714
      ],
      "op": "DIV",
      "path": "12"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4817": {
      "op": "SHL"
    },
    "4818": {
      "op": "SUB"
    },
    "4819": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16694,
        16714
      ],
      "op": "AND",
      "path": "12"
    },
    "4820": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16728,
        16733
      ],
      "op": "DUP14",
      "path": "12"
    },
    "4821": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16728,
        16754
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "4823": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16728,
        16754
      ],
      "op": "ADD",
      "path": "12"
    },
    "4824": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16728,
        16754
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4825": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16768,
        16773
      ],
      "op": "DUP15",
      "path": "12"
    },
    "4826": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16768,
        16785
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "4828": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16768,
        16785
      ],
      "op": "ADD",
      "path": "12"
    },
    "4829": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16768,
        16785
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4830": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16799,
        16804
      ],
      "op": "DUP16",
      "path": "12"
    },
    "4831": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16799,
        16811
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "4833": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16799,
        16811
      ],
      "op": "ADD",
      "path": "12"
    },
    "4834": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16799,
        16811
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4835": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4837": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4838": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12F5"
    },
    "4841": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "4842": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "4843": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "4844": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "4845": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4846": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4847": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4848": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4849": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x256F"
    },
    "4852": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16562,
        16821
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4853": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4854": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4856": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4857": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4858": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4859": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "SUB",
      "path": "12"
    },
    "4860": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4861": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16562,
        16821
      ],
      "op": "LOG2",
      "path": "12"
    },
    "4862": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14870,
        16828
      ],
      "op": "POP",
      "path": "12"
    },
    "4863": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14870,
        16828
      ],
      "op": "POP",
      "path": "12"
    },
    "4864": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14870,
        16828
      ],
      "op": "POP",
      "path": "12"
    },
    "4865": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14870,
        16828
      ],
      "op": "POP",
      "path": "12"
    },
    "4866": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14870,
        16828
      ],
      "op": "POP",
      "path": "12"
    },
    "4867": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14870,
        16828
      ],
      "op": "POP",
      "path": "12"
    },
    "4868": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14870,
        16828
      ],
      "op": "POP",
      "path": "12"
    },
    "4869": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14870,
        16828
      ],
      "op": "POP",
      "path": "12"
    },
    "4870": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14762,
        16828
      ],
      "op": "POP",
      "path": "12"
    },
    "4871": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        14762,
        16828
      ],
      "op": "POP",
      "path": "12"
    },
    "4872": {
      "fn": "RequestManager.challengeClaim",
      "jump": "o",
      "offset": [
        14762,
        16828
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4873": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4874": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6601,
        6608
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4876": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6655,
        6664
      ],
      "op": "PUSH3",
      "path": "12",
      "statement": 50,
      "value": "0xF4240"
    },
    "4880": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6637,
        6651
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "4882": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6637,
        6651
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4883": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6628,
        6634
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4884": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6628,
        6651
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x131D"
    },
    "4887": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6628,
        6651
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4888": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6628,
        6651
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4889": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6628,
        6651
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25AE"
    },
    "4892": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        6628,
        6651
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4893": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6628,
        6651
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4894": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6627,
        6664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1327"
    },
    "4897": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6627,
        6664
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4898": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6627,
        6664
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4899": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6627,
        6664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25CD"
    },
    "4902": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        6627,
        6664
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4903": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6627,
        6664
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4904": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6620,
        6664
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4905": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6543,
        6671
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4906": {
      "op": "POP"
    },
    "4907": {
      "op": "POP"
    },
    "4908": {
      "fn": "RequestManager.protocolFee",
      "jump": "o",
      "offset": [
        6543,
        6671
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4909": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12283,
        13564
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4910": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12424,
        12431
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4912": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12396,
        12405
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4913": {
      "offset": [
        7128,
        7142
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "4915": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7128,
        7142
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4916": {
      "offset": [
        7115,
        7124
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4917": {
      "offset": [
        7115,
        7142
      ],
      "op": "GT",
      "path": "12"
    },
    "4918": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7115,
        7142
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4919": {
      "offset": [
        7115,
        7159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4920": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7115,
        7159
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4921": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7115,
        7159
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1342"
    },
    "4924": {
      "offset": [
        7115,
        7159
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4925": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7115,
        7159
      ],
      "op": "POP",
      "path": "12"
    },
    "4926": {
      "offset": [
        7158,
        7159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4928": {
      "offset": [
        7146,
        7155
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4929": {
      "offset": [
        7146,
        7159
      ],
      "op": "GT",
      "path": "12"
    },
    "4930": {
      "offset": [
        7115,
        7159
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4931": {
      "offset": [
        7094,
        7204
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1384"
    },
    "4934": {
      "offset": [
        7094,
        7204
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4935": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7094,
        7204
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4937": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7094,
        7204
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4944": {
      "op": "SHL"
    },
    "4945": {
      "offset": [
        7094,
        7204
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4946": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7094,
        7204
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4949": {
      "offset": [
        7094,
        7204
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4951": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7094,
        7204
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4952": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7094,
        7204
      ],
      "op": "ADD",
      "path": "12"
    },
    "4953": {
      "op": "MSTORE"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4958": {
      "op": "DUP3"
    },
    "4959": {
      "op": "ADD"
    },
    "4960": {
      "op": "MSTORE"
    },
    "4961": {
      "op": "PUSH19",
      "value": "0x1C995C5D595CDD1259081B9BDD081D985B1A59"
    },
    "4981": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "4983": {
      "op": "SHL"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4986": {
      "op": "DUP3"
    },
    "4987": {
      "op": "ADD"
    },
    "4988": {
      "op": "MSTORE"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4991": {
      "op": "ADD"
    },
    "4992": {
      "offset": [
        7094,
        7204
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "4995": {
      "op": "JUMP"
    },
    "4996": {
      "offset": [
        7094,
        7204
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4997": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12447,
        12470
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4999": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12473,
        12492
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5000": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12473,
        12492
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5001": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12473,
        12492
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5002": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12473,
        12481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "5004": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12473,
        12492
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5006": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12473,
        12492
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5007": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12473,
        12492
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5008": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12473,
        12492
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5009": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12473,
        12492
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5011": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12473,
        12492
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5012": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12473,
        12492
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5013": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12473,
        12492
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5014": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12529,
        12547
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 51
    },
    "5015": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12529,
        12547
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5016": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12529,
        12547
      ],
      "op": "ADD",
      "path": "12"
    },
    "5017": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12529,
        12547
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5018": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12511,
        12526
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "5019": {
      "branch": 141,
      "fn": "RequestManager.claimRequest",
      "offset": [
        12511,
        12547
      ],
      "op": "LT",
      "path": "12"
    },
    "5020": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12503,
        12567
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13D9"
    },
    "5023": {
      "branch": 141,
      "fn": "RequestManager.claimRequest",
      "offset": [
        12503,
        12567
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5024": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12503,
        12567
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5026": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12503,
        12567
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5027": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5033": {
      "op": "SHL"
    },
    "5034": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12503,
        12567
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5035": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12503,
        12567
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5038": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12503,
        12567
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5040": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12503,
        12567
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5041": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12503,
        12567
      ],
      "op": "ADD",
      "path": "12"
    },
    "5042": {
      "op": "MSTORE"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5047": {
      "op": "DUP3"
    },
    "5048": {
      "op": "ADD"
    },
    "5049": {
      "op": "MSTORE"
    },
    "5050": {
      "op": "PUSH15",
      "value": "0x14995C5D595CDD08195E1C1A5C9959"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "5068": {
      "op": "SHL"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5071": {
      "op": "DUP3"
    },
    "5072": {
      "op": "ADD"
    },
    "5073": {
      "op": "MSTORE"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5076": {
      "op": "ADD"
    },
    "5077": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12503,
        12567
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "5080": {
      "op": "JUMP"
    },
    "5081": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12503,
        12567
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5082": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12598,
        12618
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 52,
      "value": "0x6"
    },
    "5084": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12598,
        12618
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5085": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12598,
        12618
      ],
      "op": "ADD",
      "path": "12"
    },
    "5086": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12598,
        12625
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5093": {
      "op": "SHL"
    },
    "5094": {
      "op": "SUB"
    },
    "5095": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12598,
        12625
      ],
      "op": "AND",
      "path": "12"
    },
    "5096": {
      "branch": 142,
      "fn": "RequestManager.claimRequest",
      "offset": [
        12598,
        12639
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5097": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12577,
        12690
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1430"
    },
    "5100": {
      "branch": 142,
      "fn": "RequestManager.claimRequest",
      "offset": [
        12577,
        12690
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5101": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12577,
        12690
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5103": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12577,
        12690
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5104": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5110": {
      "op": "SHL"
    },
    "5111": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12577,
        12690
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5112": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12577,
        12690
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5115": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12577,
        12690
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5117": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12577,
        12690
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5118": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12577,
        12690
      ],
      "op": "ADD",
      "path": "12"
    },
    "5119": {
      "op": "MSTORE"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5124": {
      "op": "DUP3"
    },
    "5125": {
      "op": "ADD"
    },
    "5126": {
      "op": "MSTORE"
    },
    "5127": {
      "op": "PUSH25",
      "value": "0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "5155": {
      "op": "SHL"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5158": {
      "op": "DUP3"
    },
    "5159": {
      "op": "ADD"
    },
    "5160": {
      "op": "MSTORE"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5163": {
      "op": "ADD"
    },
    "5164": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12577,
        12690
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "5167": {
      "op": "JUMP"
    },
    "5168": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12577,
        12690
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5169": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12721,
        12731
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 53,
      "value": "0x1"
    },
    "5171": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12721,
        12731
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5172": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12708,
        12717
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "5173": {
      "branch": 143,
      "fn": "RequestManager.claimRequest",
      "offset": [
        12708,
        12731
      ],
      "op": "EQ",
      "path": "12"
    },
    "5174": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12700,
        12756
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1478"
    },
    "5177": {
      "branch": 143,
      "fn": "RequestManager.claimRequest",
      "offset": [
        12700,
        12756
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5178": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12700,
        12756
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5180": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12700,
        12756
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5181": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5187": {
      "op": "SHL"
    },
    "5188": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12700,
        12756
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5189": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12700,
        12756
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5192": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12700,
        12756
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5194": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12700,
        12756
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5195": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12700,
        12756
      ],
      "op": "ADD",
      "path": "12"
    },
    "5196": {
      "op": "MSTORE"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5201": {
      "op": "DUP3"
    },
    "5202": {
      "op": "ADD"
    },
    "5203": {
      "op": "MSTORE"
    },
    "5204": {
      "op": "PUSH20",
      "value": "0x125B9D985B1A59081CDD185AD948185B5BDD5B9D"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "5227": {
      "op": "SHL"
    },
    "5228": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5230": {
      "op": "DUP3"
    },
    "5231": {
      "op": "ADD"
    },
    "5232": {
      "op": "MSTORE"
    },
    "5233": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5235": {
      "op": "ADD"
    },
    "5236": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12700,
        12756
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "5239": {
      "op": "JUMP"
    },
    "5240": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12700,
        12756
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5241": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12774,
        12780
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 54
    },
    "5242": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12766,
        12821
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14BE"
    },
    "5245": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12766,
        12821
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5246": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12766,
        12821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5248": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12766,
        12821
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5255": {
      "op": "SHL"
    },
    "5256": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12766,
        12821
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5257": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12766,
        12821
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5260": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12766,
        12821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5262": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12766,
        12821
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5263": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12766,
        12821
      ],
      "op": "ADD",
      "path": "12"
    },
    "5264": {
      "op": "MSTORE"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5269": {
      "op": "DUP3"
    },
    "5270": {
      "op": "ADD"
    },
    "5271": {
      "op": "MSTORE"
    },
    "5272": {
      "op": "PUSH22",
      "value": "0x46696C6C4964206D757374206E6F742062652030783"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "5297": {
      "op": "SHL"
    },
    "5298": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5300": {
      "op": "DUP3"
    },
    "5301": {
      "op": "ADD"
    },
    "5302": {
      "op": "MSTORE"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5305": {
      "op": "ADD"
    },
    "5306": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12766,
        12821
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "5309": {
      "op": "JUMP"
    },
    "5310": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12766,
        12821
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5311": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12852
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 55,
      "value": "0x8"
    },
    "5313": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12852
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5314": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12852
      ],
      "op": "ADD",
      "path": "12"
    },
    "5315": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5316": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5317": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12856,
        12857
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5319": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12856,
        12857
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5320": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12852
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5321": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12852
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5323": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12852
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5324": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14DF"
    },
    "5327": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5328": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12856,
        12857
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5329": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12856,
        12857
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5336": {
      "op": "SHL"
    },
    "5337": {
      "op": "SUB"
    },
    "5338": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "AND",
      "path": "12"
    },
    "5339": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25EF"
    },
    "5342": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        12832,
        12857
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5343": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5344": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5345": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "POP",
      "path": "12"
    },
    "5346": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "5349": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "EXP",
      "path": "12"
    },
    "5350": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5351": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5352": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5359": {
      "op": "SHL"
    },
    "5360": {
      "op": "SUB"
    },
    "5361": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "MUL",
      "path": "12"
    },
    "5362": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "NOT",
      "path": "12"
    },
    "5363": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "AND",
      "path": "12"
    },
    "5364": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5365": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5372": {
      "op": "SHL"
    },
    "5373": {
      "op": "SUB"
    },
    "5374": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "AND",
      "path": "12"
    },
    "5375": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "MUL",
      "path": "12"
    },
    "5376": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "OR",
      "path": "12"
    },
    "5377": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5378": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5379": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12832,
        12857
      ],
      "op": "POP",
      "path": "12"
    },
    "5380": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12883,
        12884
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 56,
      "value": "0x1"
    },
    "5382": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12867,
        12879
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "5384": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12867,
        12879
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5386": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12867,
        12884
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5387": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12867,
        12884
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5388": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12867,
        12884
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5389": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12867,
        12884
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1516"
    },
    "5392": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12867,
        12884
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5393": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12867,
        12884
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5394": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12867,
        12884
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "5397": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        12867,
        12884
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5398": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12867,
        12884
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5399": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12867,
        12884
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5400": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12867,
        12884
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5401": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12867,
        12884
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5402": {
      "op": "POP"
    },
    "5403": {
      "op": "POP"
    },
    "5404": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12924,
        12936
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "5406": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12924,
        12936
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5407": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12924,
        12936
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5408": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12895,
        12914
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5410": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12917,
        12937
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5411": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12917,
        12937
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5412": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12917,
        12937
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5413": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12917,
        12923
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "5415": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12917,
        12937
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5417": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12917,
        12937
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5418": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12917,
        12937
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5420": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12917,
        12937
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5421": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12917,
        12937
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5422": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12947,
        12974
      ],
      "op": "DUP8",
      "path": "12",
      "statement": 57
    },
    "5423": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12947,
        12974
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5424": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12947,
        12974
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5425": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12984,
        12997
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 58,
      "value": "0x1"
    },
    "5427": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12984,
        12997
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5428": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12984,
        12997
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5429": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12984,
        12997
      ],
      "op": "ADD",
      "path": "12"
    },
    "5430": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12984,
        13010
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5431": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12984,
        13010
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5438": {
      "op": "SHL"
    },
    "5439": {
      "op": "SUB"
    },
    "5440": {
      "op": "NOT"
    },
    "5441": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12984,
        13010
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5442": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12984,
        13010
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5443": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12984,
        13010
      ],
      "op": "AND",
      "path": "12"
    },
    "5444": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13000,
        13010
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5445": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12984,
        13010
      ],
      "op": "OR",
      "path": "12"
    },
    "5446": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12984,
        13010
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5447": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12984,
        13010
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5448": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12984,
        13010
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5449": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13041,
        13051
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 59
    },
    "5450": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13041,
        13051
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5451": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13020,
        13038
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "5453": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13020,
        13038
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5454": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13020,
        13038
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5455": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13020,
        13038
      ],
      "op": "ADD",
      "path": "12"
    },
    "5456": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13020,
        13051
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5457": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13020,
        13051
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5458": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13020,
        13051
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5459": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13020,
        13051
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5460": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13061,
        13081
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 60,
      "value": "0x4"
    },
    "5462": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13061,
        13081
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5463": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13061,
        13081
      ],
      "op": "ADD",
      "path": "12"
    },
    "5464": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13061,
        13094
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5465": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13061,
        13094
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5466": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13061,
        13094
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5467": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13061,
        13094
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5468": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13061,
        13094
      ],
      "op": "AND",
      "path": "12"
    },
    "5469": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13061,
        13094
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5470": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13061,
        13094
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5471": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13061,
        13094
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5472": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13104,
        13130
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 61,
      "value": "0x5"
    },
    "5474": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13104,
        13130
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5475": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13104,
        13130
      ],
      "op": "ADD",
      "path": "12"
    },
    "5476": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13104,
        13134
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5477": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13104,
        13134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5478": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13104,
        13134
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5479": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13144,
        13165
      ],
      "op": "SWAP3",
      "path": "12",
      "statement": 62
    },
    "5480": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13144,
        13165
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5481": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13144,
        13165
      ],
      "op": "ADD",
      "path": "12"
    },
    "5482": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13144,
        13169
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5483": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13144,
        13169
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5484": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13144,
        13169
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5485": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13144,
        13169
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5486": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13217,
        13228
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 63
    },
    "5487": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13217,
        13228
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5488": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13199,
        13228
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1579"
    },
    "5491": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13199,
        13228
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5492": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13199,
        13214
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "5493": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13199,
        13228
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "5496": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13199,
        13228
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5497": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13199,
        13228
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5498": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13179,
        13196
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "5500": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13179,
        13196
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5501": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13179,
        13196
      ],
      "op": "ADD",
      "path": "12"
    },
    "5502": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13179,
        13228
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5503": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13179,
        13228
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5504": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13179,
        13228
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5505": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13238,
        13250
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 64,
      "value": "0x8"
    },
    "5507": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13238,
        13250
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5508": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13238,
        13250
      ],
      "op": "ADD",
      "path": "12"
    },
    "5509": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13238,
        13259
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5510": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13238,
        13259
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5511": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13238,
        13259
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5512": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13321,
        13333
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 65,
      "value": "0x6"
    },
    "5514": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13321,
        13333
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5515": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13347,
        13360
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5517": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13347,
        13360
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5518": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13347,
        13360
      ],
      "op": "ADD",
      "path": "12"
    },
    "5519": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13347,
        13360
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5520": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13374,
        13392
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "5522": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13374,
        13392
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5523": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13374,
        13392
      ],
      "op": "ADD",
      "path": "12"
    },
    "5524": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13374,
        13392
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5525": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13406,
        13426
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5527": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13406,
        13426
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5528": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13406,
        13426
      ],
      "op": "ADD",
      "path": "12"
    },
    "5529": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13406,
        13426
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5530": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13440,
        13466
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "5532": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13440,
        13466
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5533": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13440,
        13466
      ],
      "op": "ADD",
      "path": "12"
    },
    "5534": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13440,
        13466
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5535": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5537": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5538": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13298,
        13307
      ],
      "op": "DUP13",
      "path": "12"
    },
    "5539": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13298,
        13307
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "5540": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x29FD2DF293BA511E44CA47212C915137020231ED3AC0EE7BD02A7A655275AD37"
    },
    "5573": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "5574": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15E6"
    },
    "5577": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "5578": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13321,
        13333
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5579": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13321,
        13333
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5586": {
      "op": "SHL"
    },
    "5587": {
      "op": "SUB"
    },
    "5588": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13347,
        13360
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5589": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13347,
        13360
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5590": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13347,
        13360
      ],
      "op": "AND",
      "path": "12"
    },
    "5591": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13347,
        13360
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "5592": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13374,
        13392
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5593": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13374,
        13392
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5594": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13406,
        13426
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5595": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13406,
        13426
      ],
      "op": "AND",
      "path": "12"
    },
    "5596": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13406,
        13426
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5597": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13440,
        13466
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5598": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13440,
        13466
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5599": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13179,
        13228
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5600": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13253,
        13259
      ],
      "op": "DUP15",
      "path": "12"
    },
    "5601": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13253,
        13259
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5602": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x256F"
    },
    "5605": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13275,
        13527
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5606": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5607": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5609": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5610": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5611": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5612": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "SUB",
      "path": "12"
    },
    "5613": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5614": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13275,
        13527
      ],
      "op": "LOG2",
      "path": "12"
    },
    "5615": {
      "op": "POP"
    },
    "5616": {
      "op": "POP"
    },
    "5617": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13545,
        13557
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 66,
      "value": "0x6"
    },
    "5619": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13545,
        13557
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5620": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13545,
        13557
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5621": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        12283,
        13564
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5622": {
      "op": "POP"
    },
    "5623": {
      "op": "POP"
    },
    "5624": {
      "op": "POP"
    },
    "5625": {
      "op": "POP"
    },
    "5626": {
      "fn": "RequestManager.claimRequest",
      "jump": "o",
      "offset": [
        12283,
        13564
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5627": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6843,
        6966
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5628": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6898,
        6905
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5630": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6940,
        6959
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 67,
      "value": "0x1606"
    },
    "5633": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6952,
        6958
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5634": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6940,
        6951
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1309"
    },
    "5637": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        6940,
        6959
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5638": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6940,
        6959
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5639": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6924,
        6937
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x160F"
    },
    "5642": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6930,
        6936
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5643": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6924,
        6929
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B04"
    },
    "5646": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        6924,
        6937
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5647": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6924,
        6937
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5648": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6924,
        6959
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1327"
    },
    "5651": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6924,
        6959
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5652": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6924,
        6959
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5653": {
      "fn": "RequestManager.totalFee",
      "offset": [
        6924,
        6959
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "5656": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        6924,
        6959
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5657": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5658": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5660": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5667": {
      "op": "SHL"
    },
    "5668": {
      "op": "SUB"
    },
    "5669": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5670": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5671": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5672": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1643"
    },
    "5675": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5676": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5678": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5679": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5685": {
      "op": "SHL"
    },
    "5686": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5687": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5688": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5690": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5691": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "5694": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5695": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2523"
    },
    "5698": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5699": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5706": {
      "op": "SHL"
    },
    "5707": {
      "op": "SUB"
    },
    "5708": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23336,
        23371
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5709": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23336,
        23371
      ],
      "op": "AND",
      "path": "12"
    },
    "5710": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23319,
        23333
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5712": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23336,
        23371
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5713": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23336,
        23371
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5714": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23336,
        23371
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5715": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23336,
        23357
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "5717": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23336,
        23371
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5719": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23336,
        23371
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5720": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23336,
        23371
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5722": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23336,
        23371
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5723": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23336,
        23371
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5724": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23336,
        23371
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5725": {
      "branch": 144,
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23389,
        23399
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 68
    },
    "5726": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23381,
        23424
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16A0"
    },
    "5729": {
      "branch": 144,
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23381,
        23424
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5730": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23381,
        23424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5732": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23381,
        23424
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5739": {
      "op": "SHL"
    },
    "5740": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23381,
        23424
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5741": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23381,
        23424
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5744": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23381,
        23424
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5746": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23381,
        23424
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5747": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23381,
        23424
      ],
      "op": "ADD",
      "path": "12"
    },
    "5748": {
      "op": "MSTORE"
    },
    "5749": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5753": {
      "op": "DUP3"
    },
    "5754": {
      "op": "ADD"
    },
    "5755": {
      "op": "MSTORE"
    },
    "5756": {
      "op": "PUSH20",
      "value": "0x50726F746F636F6C20666565206973207A65726F"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5779": {
      "op": "SHL"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5782": {
      "op": "DUP3"
    },
    "5783": {
      "op": "ADD"
    },
    "5784": {
      "op": "MSTORE"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5787": {
      "op": "ADD"
    },
    "5788": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23381,
        23424
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "5791": {
      "op": "JUMP"
    },
    "5792": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23381,
        23424
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5799": {
      "op": "SHL"
    },
    "5800": {
      "op": "SUB"
    },
    "5801": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23434,
        23469
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 69
    },
    "5802": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23434,
        23469
      ],
      "op": "AND",
      "path": "12"
    },
    "5803": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23472,
        23473
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5805": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23434,
        23469
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5806": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23434,
        23469
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5807": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23434,
        23469
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5808": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23434,
        23455
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "5810": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23434,
        23469
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5812": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23434,
        23469
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5813": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23434,
        23469
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5815": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23434,
        23469
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5816": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23434,
        23469
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5817": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23434,
        23473
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5818": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23456,
        23468
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5819": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23456,
        23468
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5820": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23529,
        23566
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 70,
      "value": "0x16C6"
    },
    "5823": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23529,
        23566
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5824": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23548,
        23557
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5825": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23559,
        23565
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5826": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23529,
        23547
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x20F5"
    },
    "5829": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        23529,
        23566
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5830": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23529,
        23566
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5831": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23309,
        23573
      ],
      "op": "POP",
      "path": "12"
    },
    "5832": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23309,
        23573
      ],
      "op": "POP",
      "path": "12"
    },
    "5833": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "POP",
      "path": "12"
    },
    "5834": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23199,
        23573
      ],
      "op": "POP",
      "path": "12"
    },
    "5835": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "o",
      "offset": [
        23199,
        23573
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5836": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5837": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5839": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5846": {
      "op": "SHL"
    },
    "5847": {
      "op": "SUB"
    },
    "5848": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5849": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5850": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5851": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F6"
    },
    "5854": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5855": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5857": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5858": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5864": {
      "op": "SHL"
    },
    "5865": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5866": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5867": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5869": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5870": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "5873": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5874": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2523"
    },
    "5877": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5878": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5879": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24887,
        24888
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 71,
      "value": "0x0"
    },
    "5881": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24870,
        24884
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5882": {
      "branch": 145,
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24870,
        24888
      ],
      "op": "GT",
      "path": "12"
    },
    "5883": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24862,
        24931
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1755"
    },
    "5886": {
      "branch": 145,
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24862,
        24931
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5887": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24862,
        24931
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5889": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24862,
        24931
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5896": {
      "op": "SHL"
    },
    "5897": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24862,
        24931
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5898": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24862,
        24931
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5901": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24862,
        24931
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5903": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24862,
        24931
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5904": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24862,
        24931
      ],
      "op": "ADD",
      "path": "12"
    },
    "5905": {
      "op": "MSTORE"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5910": {
      "op": "DUP3"
    },
    "5911": {
      "op": "ADD"
    },
    "5912": {
      "op": "MSTORE"
    },
    "5913": {
      "op": "PUSH32",
      "value": "0x46696E616C69747920706572696F64206D757374206265206772656174657220"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5948": {
      "op": "DUP3"
    },
    "5949": {
      "op": "ADD"
    },
    "5950": {
      "op": "MSTORE"
    },
    "5951": {
      "op": "PUSH6",
      "value": "0x7468616E203"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0xD4"
    },
    "5960": {
      "op": "SHL"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5963": {
      "op": "DUP3"
    },
    "5964": {
      "op": "ADD"
    },
    "5965": {
      "op": "MSTORE"
    },
    "5966": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5968": {
      "op": "ADD"
    },
    "5969": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24862,
        24931
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "5972": {
      "op": "JUMP"
    },
    "5973": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24862,
        24931
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5974": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24971
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 72,
      "value": "0x0"
    },
    "5976": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24971
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5977": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24971
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5978": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24971
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5979": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24956
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "5981": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24971
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5983": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24971
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5984": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24971
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5985": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24971
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5986": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24971
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5988": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24971
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5989": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24971
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5990": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24971
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5991": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24971
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5992": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24988
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5993": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24988
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5994": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24941,
        24988
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5995": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25004,
        25056
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 73
    },
    "5996": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25004,
        25056
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5997": {
      "op": "DUP5"
    },
    "5998": {
      "op": "DUP2"
    },
    "5999": {
      "op": "MSTORE"
    },
    "6000": {
      "op": "SWAP1"
    },
    "6001": {
      "op": "DUP2"
    },
    "6002": {
      "op": "ADD"
    },
    "6003": {
      "op": "DUP4"
    },
    "6004": {
      "op": "SWAP1"
    },
    "6005": {
      "op": "MSTORE"
    },
    "6006": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25004,
        25056
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xABA57B48B9F1DFD5747A52ED348A6AB6AA7BAFB0575363A5CB7B62659F727B65"
    },
    "6039": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25004,
        25056
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6040": {
      "op": "ADD"
    },
    "6041": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25004,
        25056
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6043": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25004,
        25056
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6044": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25004,
        25056
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6045": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25004,
        25056
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6046": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25004,
        25056
      ],
      "op": "SUB",
      "path": "12"
    },
    "6047": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25004,
        25056
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6048": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25004,
        25056
      ],
      "op": "LOG1",
      "path": "12"
    },
    "6049": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "POP",
      "path": "12"
    },
    "6050": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        24739,
        25063
      ],
      "op": "POP",
      "path": "12"
    },
    "6051": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "o",
      "offset": [
        24739,
        25063
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6052": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11160,
        11944
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6053": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11251,
        11260
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6054": {
      "offset": [
        7128,
        7142
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "6056": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7128,
        7142
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6057": {
      "offset": [
        7115,
        7124
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6058": {
      "offset": [
        7115,
        7142
      ],
      "op": "GT",
      "path": "12"
    },
    "6059": {
      "branch": 146,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7115,
        7142
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6060": {
      "offset": [
        7115,
        7159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6061": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7115,
        7159
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6062": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7115,
        7159
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17B7"
    },
    "6065": {
      "branch": 146,
      "offset": [
        7115,
        7159
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6066": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7115,
        7159
      ],
      "op": "POP",
      "path": "12"
    },
    "6067": {
      "offset": [
        7158,
        7159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6069": {
      "offset": [
        7146,
        7155
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6070": {
      "offset": [
        7146,
        7159
      ],
      "op": "GT",
      "path": "12"
    },
    "6071": {
      "offset": [
        7115,
        7159
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6072": {
      "offset": [
        7094,
        7204
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17F9"
    },
    "6075": {
      "offset": [
        7094,
        7204
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6076": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7094,
        7204
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6078": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7094,
        7204
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6079": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6085": {
      "op": "SHL"
    },
    "6086": {
      "offset": [
        7094,
        7204
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6087": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7094,
        7204
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6090": {
      "offset": [
        7094,
        7204
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6092": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7094,
        7204
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6093": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7094,
        7204
      ],
      "op": "ADD",
      "path": "12"
    },
    "6094": {
      "op": "MSTORE"
    },
    "6095": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6099": {
      "op": "DUP3"
    },
    "6100": {
      "op": "ADD"
    },
    "6101": {
      "op": "MSTORE"
    },
    "6102": {
      "op": "PUSH19",
      "value": "0x1C995C5D595CDD1259081B9BDD081D985B1A59"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "6124": {
      "op": "SHL"
    },
    "6125": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6127": {
      "op": "DUP3"
    },
    "6128": {
      "op": "ADD"
    },
    "6129": {
      "op": "MSTORE"
    },
    "6130": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6132": {
      "op": "ADD"
    },
    "6133": {
      "offset": [
        7094,
        7204
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "6136": {
      "op": "JUMP"
    },
    "6137": {
      "offset": [
        7094,
        7204
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6138": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11276,
        11299
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6140": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11302,
        11321
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6141": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11302,
        11321
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6142": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11302,
        11321
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6143": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11302,
        11310
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "6145": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11302,
        11321
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6147": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11302,
        11321
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6148": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11302,
        11321
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6150": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11302,
        11321
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6151": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11302,
        11321
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6152": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11353,
        11373
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 74,
      "value": "0x6"
    },
    "6154": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11353,
        11373
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6155": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11353,
        11373
      ],
      "op": "ADD",
      "path": "12"
    },
    "6156": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11353,
        11380
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6163": {
      "op": "SHL"
    },
    "6164": {
      "op": "SUB"
    },
    "6165": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11353,
        11380
      ],
      "op": "AND",
      "path": "12"
    },
    "6166": {
      "branch": 147,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11353,
        11394
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6167": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11332,
        11445
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x185E"
    },
    "6170": {
      "branch": 147,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11332,
        11445
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6171": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11332,
        11445
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6173": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11332,
        11445
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6180": {
      "op": "SHL"
    },
    "6181": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11332,
        11445
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6182": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11332,
        11445
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6185": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11332,
        11445
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6187": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11332,
        11445
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6188": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11332,
        11445
      ],
      "op": "ADD",
      "path": "12"
    },
    "6189": {
      "op": "MSTORE"
    },
    "6190": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6194": {
      "op": "DUP3"
    },
    "6195": {
      "op": "ADD"
    },
    "6196": {
      "op": "MSTORE"
    },
    "6197": {
      "op": "PUSH25",
      "value": "0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7"
    },
    "6223": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "6225": {
      "op": "SHL"
    },
    "6226": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6228": {
      "op": "DUP3"
    },
    "6229": {
      "op": "ADD"
    },
    "6230": {
      "op": "MSTORE"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6233": {
      "op": "ADD"
    },
    "6234": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11332,
        11445
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "6237": {
      "op": "JUMP"
    },
    "6238": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11332,
        11445
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6239": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11495,
        11502
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 75
    },
    "6240": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11495,
        11513
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "6242": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11495,
        11513
      ],
      "op": "ADD",
      "path": "12"
    },
    "6243": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11495,
        11513
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6244": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11476,
        11491
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "6245": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11476,
        11513
      ],
      "op": "LT",
      "path": "12"
    },
    "6246": {
      "branch": 148,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11476,
        11513
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6247": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11455,
        11562
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18B2"
    },
    "6250": {
      "branch": 148,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11455,
        11562
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6251": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11455,
        11562
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6253": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11455,
        11562
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6254": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6260": {
      "op": "SHL"
    },
    "6261": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11455,
        11562
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6262": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11455,
        11562
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6265": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11455,
        11562
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6267": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11455,
        11562
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6268": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11455,
        11562
      ],
      "op": "ADD",
      "path": "12"
    },
    "6269": {
      "op": "MSTORE"
    },
    "6270": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "6272": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6274": {
      "op": "DUP3"
    },
    "6275": {
      "op": "ADD"
    },
    "6276": {
      "op": "MSTORE"
    },
    "6277": {
      "op": "PUSH32",
      "value": "0x52657175657374206E6F74206578706972656420796574000000000000000000"
    },
    "6310": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6312": {
      "op": "DUP3"
    },
    "6313": {
      "op": "ADD"
    },
    "6314": {
      "op": "MSTORE"
    },
    "6315": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6317": {
      "op": "ADD"
    },
    "6318": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11455,
        11562
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "6321": {
      "op": "JUMP"
    },
    "6322": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11455,
        11562
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6323": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11580,
        11600
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 76,
      "value": "0x8"
    },
    "6325": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11580,
        11600
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6326": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11580,
        11600
      ],
      "op": "ADD",
      "path": "12"
    },
    "6327": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11580,
        11600
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6334": {
      "op": "SHL"
    },
    "6335": {
      "op": "SUB"
    },
    "6336": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11580,
        11600
      ],
      "op": "AND",
      "path": "12"
    },
    "6337": {
      "branch": 149,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11580,
        11605
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6338": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11572,
        11631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1905"
    },
    "6341": {
      "branch": 149,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11572,
        11631
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6342": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11572,
        11631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6344": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11572,
        11631
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6345": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6349": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6351": {
      "op": "SHL"
    },
    "6352": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11572,
        11631
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6353": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11572,
        11631
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6356": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11572,
        11631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6358": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11572,
        11631
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6359": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11572,
        11631
      ],
      "op": "ADD",
      "path": "12"
    },
    "6360": {
      "op": "MSTORE"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6365": {
      "op": "DUP3"
    },
    "6366": {
      "op": "ADD"
    },
    "6367": {
      "op": "MSTORE"
    },
    "6368": {
      "op": "PUSH21",
      "value": "0x41637469766520636C61696D732072756E6E696E67"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "6392": {
      "op": "SHL"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6395": {
      "op": "DUP3"
    },
    "6396": {
      "op": "ADD"
    },
    "6397": {
      "op": "MSTORE"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6400": {
      "op": "ADD"
    },
    "6401": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11572,
        11631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "6404": {
      "op": "JUMP"
    },
    "6405": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11572,
        11631
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6406": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11672,
        11686
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 77
    },
    "6407": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11672,
        11686
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6408": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11642,
        11662
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "6410": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11642,
        11662
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6411": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11642,
        11662
      ],
      "op": "ADD",
      "path": "12"
    },
    "6412": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11642,
        11686
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6413": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11642,
        11686
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6420": {
      "op": "SHL"
    },
    "6421": {
      "op": "SUB"
    },
    "6422": {
      "op": "NOT"
    },
    "6423": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11642,
        11686
      ],
      "op": "AND",
      "path": "12"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6430": {
      "op": "SHL"
    },
    "6431": {
      "op": "SUB"
    },
    "6432": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11672,
        11686
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6433": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11672,
        11686
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6434": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11672,
        11686
      ],
      "op": "AND",
      "path": "12"
    },
    "6435": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11642,
        11686
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6436": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11642,
        11686
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6437": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11642,
        11686
      ],
      "op": "OR",
      "path": "12"
    },
    "6438": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11642,
        11686
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6439": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11642,
        11686
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6440": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11702,
        11745
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 78,
      "value": "0x40"
    },
    "6442": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11702,
        11745
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6443": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11702,
        11745
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6444": {
      "op": "DUP6"
    },
    "6445": {
      "op": "DUP2"
    },
    "6446": {
      "op": "MSTORE"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6449": {
      "op": "DUP2"
    },
    "6450": {
      "op": "ADD"
    },
    "6451": {
      "op": "SWAP3"
    },
    "6452": {
      "op": "SWAP1"
    },
    "6453": {
      "op": "SWAP3"
    },
    "6454": {
      "op": "MSTORE"
    },
    "6455": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11702,
        11745
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xA7B86597910AAE75F7D99FEB2F37420CC80D457465FFBA0F8136D722A9F7095A"
    },
    "6488": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11702,
        11745
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6489": {
      "op": "ADD"
    },
    "6490": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11702,
        11745
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6492": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11702,
        11745
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6493": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11702,
        11745
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6494": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11702,
        11745
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6495": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11702,
        11745
      ],
      "op": "SUB",
      "path": "12"
    },
    "6496": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11702,
        11745
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6497": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11702,
        11745
      ],
      "op": "LOG1",
      "path": "12"
    },
    "6498": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11778,
        11804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6500": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11778,
        11804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6501": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11778,
        11804
      ],
      "op": "ADD",
      "path": "12"
    },
    "6502": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11778,
        11804
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6503": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11847,
        11861
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 79
    },
    "6504": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11847,
        11861
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6505": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11908,
        11927
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "6507": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11908,
        11927
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6508": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11908,
        11927
      ],
      "op": "ADD",
      "path": "12"
    },
    "6509": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11908,
        11927
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6510": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11892,
        11905
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "6512": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11892,
        11905
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6513": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11892,
        11905
      ],
      "op": "ADD",
      "path": "12"
    },
    "6514": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11892,
        11905
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6515": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11875,
        11889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "6517": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11875,
        11889
      ],
      "op": "DUP6",
      "path": "12"
    },
    "6518": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11875,
        11889
      ],
      "op": "ADD",
      "path": "12"
    },
    "6519": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11875,
        11889
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6526": {
      "op": "SHL"
    },
    "6527": {
      "op": "SUB"
    },
    "6528": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11778,
        11804
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6529": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11778,
        11804
      ],
      "op": "DUP6",
      "path": "12"
    },
    "6530": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11778,
        11804
      ],
      "op": "AND",
      "path": "12"
    },
    "6531": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11778,
        11804
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6532": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11815,
        11937
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16C6"
    },
    "6535": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11815,
        11937
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6536": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11847,
        11861
      ],
      "op": "AND",
      "path": "12"
    },
    "6537": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11847,
        11861
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6538": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11908,
        11927
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6539": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11875,
        11905
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1993"
    },
    "6542": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11875,
        11905
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6543": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11875,
        11905
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "6546": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        11875,
        11905
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6547": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11875,
        11905
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6548": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11875,
        11927
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x199D"
    },
    "6551": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11875,
        11927
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6552": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11875,
        11927
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6553": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11875,
        11927
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "6556": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        11875,
        11927
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6557": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11875,
        11927
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6564": {
      "op": "SHL"
    },
    "6565": {
      "op": "SUB"
    },
    "6566": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11815,
        11833
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6567": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11815,
        11833
      ],
      "op": "AND",
      "path": "12"
    },
    "6568": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11815,
        11833
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6569": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11815,
        11937
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6570": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11815,
        11833
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x20F5"
    },
    "6573": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        11815,
        11937
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6574": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24352,
        24475
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6575": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6577": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6584": {
      "op": "SHL"
    },
    "6585": {
      "op": "SUB"
    },
    "6586": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6587": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "6588": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6589": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D8"
    },
    "6592": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6593": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6595": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6596": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6602": {
      "op": "SHL"
    },
    "6603": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6604": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6605": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6607": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6608": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "6611": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6612": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2523"
    },
    "6615": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6616": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6617": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24436,
        24449
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 80,
      "value": "0xE"
    },
    "6619": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24436,
        24468
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6620": {
      "fn": "RequestManager.updateTransferLimit",
      "jump": "o",
      "offset": [
        24352,
        24475
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6621": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25373,
        25524
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6622": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6624": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6631": {
      "op": "SHL"
    },
    "6632": {
      "op": "SUB"
    },
    "6633": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6634": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "6635": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6636": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A07"
    },
    "6639": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6640": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6642": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6649": {
      "op": "SHL"
    },
    "6650": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6651": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6652": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6654": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6655": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "6658": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6659": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2523"
    },
    "6662": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6663": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6664": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25439,
        25449
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 81,
      "value": "0x4"
    },
    "6666": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25439,
        25449
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6667": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25439,
        25449
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "6669": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25439,
        25449
      ],
      "op": "AND",
      "path": "12"
    },
    "6670": {
      "branch": 150,
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25439,
        25458
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6671": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25431,
        25490
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A5A"
    },
    "6674": {
      "branch": 150,
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25431,
        25490
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6675": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25431,
        25490
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6677": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25431,
        25490
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6678": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6682": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6684": {
      "op": "SHL"
    },
    "6685": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25431,
        25490
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6686": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25431,
        25490
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6689": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25431,
        25490
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6691": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25431,
        25490
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6692": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25431,
        25490
      ],
      "op": "ADD",
      "path": "12"
    },
    "6693": {
      "op": "MSTORE"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6696": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6698": {
      "op": "DUP3"
    },
    "6699": {
      "op": "ADD"
    },
    "6700": {
      "op": "MSTORE"
    },
    "6701": {
      "op": "PUSH32",
      "value": "0x436F6E747261637420616C726561647920646570726563617465640000000000"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6736": {
      "op": "DUP3"
    },
    "6737": {
      "op": "ADD"
    },
    "6738": {
      "op": "MSTORE"
    },
    "6739": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6741": {
      "op": "ADD"
    },
    "6742": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25431,
        25490
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "6745": {
      "op": "JUMP"
    },
    "6746": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25431,
        25490
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6747": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25500,
        25510
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 82,
      "value": "0x4"
    },
    "6749": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25500,
        25517
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6750": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25500,
        25517
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6753": {
      "op": "NOT"
    },
    "6754": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25500,
        25517
      ],
      "op": "AND",
      "path": "12"
    },
    "6755": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25513,
        25517
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6757": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25500,
        25517
      ],
      "op": "OR",
      "path": "12"
    },
    "6758": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25500,
        25517
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6759": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25500,
        25517
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6760": {
      "fn": "RequestManager.deprecateContract",
      "jump": "o",
      "offset": [
        25373,
        25524
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6761": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6762": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6764": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6771": {
      "op": "SHL"
    },
    "6772": {
      "op": "SUB"
    },
    "6773": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6774": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "6775": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6776": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A93"
    },
    "6779": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6780": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6782": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6783": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6787": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6789": {
      "op": "SHL"
    },
    "6790": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6791": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6792": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6794": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6795": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "6798": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6799": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2523"
    },
    "6802": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6803": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6810": {
      "op": "SHL"
    },
    "6811": {
      "op": "SUB"
    },
    "6812": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 83
    },
    "6813": {
      "branch": 165,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "6814": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF8"
    },
    "6817": {
      "branch": 165,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6818": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6820": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6821": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6825": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6827": {
      "op": "SHL"
    },
    "6828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6829": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6832": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6834": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6835": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "6836": {
      "op": "MSTORE"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6839": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6841": {
      "op": "DUP3"
    },
    "6842": {
      "op": "ADD"
    },
    "6843": {
      "op": "MSTORE"
    },
    "6844": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6879": {
      "op": "DUP3"
    },
    "6880": {
      "op": "ADD"
    },
    "6881": {
      "op": "MSTORE"
    },
    "6882": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6891": {
      "op": "SHL"
    },
    "6892": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6894": {
      "op": "DUP3"
    },
    "6895": {
      "op": "ADD"
    },
    "6896": {
      "op": "MSTORE"
    },
    "6897": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6899": {
      "op": "ADD"
    },
    "6900": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "6903": {
      "op": "JUMP"
    },
    "6904": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 84,
      "value": "0x1B01"
    },
    "6908": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6909": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x208C"
    },
    "6912": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "6915": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6916": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6317,
        6453
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6917": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6369,
        6376
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6919": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6395,
        6446
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 85,
      "value": "0x1327"
    },
    "6922": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6404,
        6412
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "6924": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6404,
        6412
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6925": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6436,
        6445
      ],
      "op": "PUSH3",
      "path": "12",
      "value": "0xF4240"
    },
    "6929": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6424,
        6432
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "6931": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6424,
        6432
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6932": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6415,
        6421
      ],
      "op": "DUP6",
      "path": "12"
    },
    "6933": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6415,
        6432
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B1E"
    },
    "6936": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6415,
        6432
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6937": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6415,
        6432
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6938": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6415,
        6432
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25AE"
    },
    "6941": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        6415,
        6432
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6942": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6415,
        6432
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6943": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6414,
        6445
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11F5"
    },
    "6946": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6414,
        6445
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6947": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6414,
        6445
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6948": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6414,
        6445
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25CD"
    },
    "6951": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        6414,
        6445
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6952": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18651,
        22352
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6953": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18736,
        18743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6955": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18790,
        18805
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6956": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18790,
        18805
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6957": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18790,
        18805
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6958": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18790,
        18796
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "6960": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18790,
        18805
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6962": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18790,
        18805
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6963": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18790,
        18805
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6964": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18790,
        18805
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6965": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18790,
        18805
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6967": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18790,
        18805
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6968": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18790,
        18805
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6969": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18790,
        18805
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6970": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18850,
        18865
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6971": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18850,
        18865
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6972": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18841,
        18866
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6973": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18841,
        18866
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6974": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18841,
        18849
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "6976": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18841,
        18866
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6977": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18841,
        18866
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6978": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18841,
        18866
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6979": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18841,
        18866
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6980": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18841,
        18866
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6981": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18899,
        18917
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "6983": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18899,
        18917
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6984": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18899,
        18917
      ],
      "op": "ADD",
      "path": "12"
    },
    "6985": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18899,
        18917
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6986": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18958,
        18984
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "6988": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18958,
        18984
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6989": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18958,
        18984
      ],
      "op": "ADD",
      "path": "12"
    },
    "6990": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18958,
        18984
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6991": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18736,
        18743
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6992": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18736,
        18743
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "6993": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18790,
        18805
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6994": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18841,
        18866
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6995": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18899,
        18917
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6996": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19039,
        19074
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 86,
      "value": "0x1B5D"
    },
    "6999": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18958,
        18984
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7000": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18899,
        18917
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7001": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19039,
        19074
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "7004": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        19039,
        19074
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7005": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19039,
        19074
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7006": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19015,
        19020
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7007": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19015,
        19036
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "7009": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19015,
        19036
      ],
      "op": "ADD",
      "path": "12"
    },
    "7010": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19015,
        19036
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7011": {
      "branch": 151,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19015,
        19074
      ],
      "op": "LT",
      "path": "12"
    },
    "7012": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18994,
        19123
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BAF"
    },
    "7015": {
      "branch": 151,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18994,
        19123
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7016": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18994,
        19123
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7018": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18994,
        19123
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7025": {
      "op": "SHL"
    },
    "7026": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18994,
        19123
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7027": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18994,
        19123
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7030": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18994,
        19123
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7032": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18994,
        19123
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7033": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18994,
        19123
      ],
      "op": "ADD",
      "path": "12"
    },
    "7034": {
      "op": "MSTORE"
    },
    "7035": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7039": {
      "op": "DUP3"
    },
    "7040": {
      "op": "ADD"
    },
    "7041": {
      "op": "MSTORE"
    },
    "7042": {
      "op": "PUSH32",
      "value": "0x436C61696D20616C72656164792077697468647261776E000000000000000000"
    },
    "7075": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7077": {
      "op": "DUP3"
    },
    "7078": {
      "op": "ADD"
    },
    "7079": {
      "op": "MSTORE"
    },
    "7080": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7082": {
      "op": "ADD"
    },
    "7083": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18994,
        19123
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "7086": {
      "op": "JUMP"
    },
    "7087": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18994,
        19123
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7088": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19199,
        19214
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7089": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19199,
        19214
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7090": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19255,
        19276
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "7092": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19255,
        19276
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7093": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19255,
        19276
      ],
      "op": "ADD",
      "path": "12"
    },
    "7094": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19255,
        19276
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7095": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19290,
        19316
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "7097": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19290,
        19316
      ],
      "op": "DUP6",
      "path": "12"
    },
    "7098": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19290,
        19316
      ],
      "op": "ADD",
      "path": "12"
    },
    "7099": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19290,
        19316
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7100": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19330,
        19351
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7102": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19330,
        19351
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7103": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19330,
        19351
      ],
      "op": "ADD",
      "path": "12"
    },
    "7104": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19330,
        19351
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7105": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19365,
        19379
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "7107": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19365,
        19379
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7108": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19365,
        19379
      ],
      "op": "ADD",
      "path": "12"
    },
    "7109": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19365,
        19379
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7110": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 87,
      "value": "0x40"
    },
    "7112": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7113": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7114": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7116": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7117": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7118": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "ADD",
      "path": "8"
    },
    "7119": {
      "op": "SWAP8"
    },
    "7120": {
      "op": "SWAP1"
    },
    "7121": {
      "op": "SWAP8"
    },
    "7122": {
      "op": "MSTORE"
    },
    "7123": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19228,
        19241
      ],
      "op": "CHAINID",
      "path": "12"
    },
    "7124": {
      "op": "DUP2"
    },
    "7125": {
      "op": "DUP4"
    },
    "7126": {
      "op": "ADD"
    },
    "7127": {
      "op": "MSTORE"
    },
    "7128": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7130": {
      "op": "DUP1"
    },
    "7131": {
      "op": "DUP3"
    },
    "7132": {
      "op": "ADD"
    },
    "7133": {
      "op": "SWAP7"
    },
    "7134": {
      "op": "SWAP1"
    },
    "7135": {
      "op": "SWAP7"
    },
    "7136": {
      "op": "MSTORE"
    },
    "7137": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7150": {
      "op": "NOT"
    },
    "7151": {
      "op": "SWAP5"
    },
    "7152": {
      "op": "DUP7"
    },
    "7153": {
      "op": "SHL"
    },
    "7154": {
      "op": "DUP6"
    },
    "7155": {
      "op": "AND"
    },
    "7156": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7158": {
      "op": "DUP3"
    },
    "7159": {
      "op": "ADD"
    },
    "7160": {
      "op": "MSTORE"
    },
    "7161": {
      "op": "SWAP3"
    },
    "7162": {
      "op": "SWAP1"
    },
    "7163": {
      "op": "SWAP5"
    },
    "7164": {
      "op": "SHL"
    },
    "7165": {
      "op": "SWAP1"
    },
    "7166": {
      "op": "SWAP3"
    },
    "7167": {
      "op": "AND"
    },
    "7168": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "7170": {
      "op": "DUP3"
    },
    "7171": {
      "op": "ADD"
    },
    "7172": {
      "op": "MSTORE"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7175": {
      "op": "DUP1"
    },
    "7176": {
      "op": "DUP3"
    },
    "7177": {
      "op": "ADD"
    },
    "7178": {
      "op": "SWAP3"
    },
    "7179": {
      "op": "SWAP1"
    },
    "7180": {
      "op": "SWAP3"
    },
    "7181": {
      "op": "MSTORE"
    },
    "7182": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7183": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7184": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7185": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7186": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SUB",
      "path": "8"
    },
    "7187": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7188": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7189": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "ADD",
      "path": "8"
    },
    "7190": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7191": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "7194": {
      "op": "ADD"
    },
    "7195": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7196": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7197": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7198": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7199": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7200": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7201": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "ADD",
      "path": "8"
    },
    "7202": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7203": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19400,
        19416
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7205": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19419,
        19506
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C59"
    },
    "7208": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19459,
        19470
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7209": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19484,
        19489
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7210": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19484,
        19496
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "7212": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19484,
        19496
      ],
      "op": "ADD",
      "path": "12"
    },
    "7213": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19484,
        19496
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7214": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 88,
      "value": "0x40"
    },
    "7216": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7217": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7218": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7220": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7221": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7222": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "ADD",
      "path": "8"
    },
    "7223": {
      "op": "SWAP5"
    },
    "7224": {
      "op": "SWAP1"
    },
    "7225": {
      "op": "SWAP5"
    },
    "7226": {
      "op": "MSTORE"
    },
    "7227": {
      "op": "DUP1"
    },
    "7228": {
      "op": "DUP3"
    },
    "7229": {
      "op": "ADD"
    },
    "7230": {
      "op": "SWAP3"
    },
    "7231": {
      "op": "SWAP1"
    },
    "7232": {
      "op": "SWAP3"
    },
    "7233": {
      "op": "MSTORE"
    },
    "7234": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7235": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7236": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7237": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7238": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "SUB",
      "path": "8"
    },
    "7239": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7240": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "ADD",
      "path": "8"
    },
    "7241": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7242": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7245": {
      "op": "SWAP1"
    },
    "7246": {
      "op": "SWAP3"
    },
    "7247": {
      "op": "ADD"
    },
    "7248": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7249": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7250": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7251": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7252": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7253": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "ADD",
      "path": "8"
    },
    "7254": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7255": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7256": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        743,
        936
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7257": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19419,
        19506
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7258": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7260": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7261": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7262": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7263": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7264": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "ADD",
      "path": "12"
    },
    "7265": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7266": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7267": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19593,
        19613
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "7269": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19593,
        19613
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7270": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19593,
        19613
      ],
      "op": "ADD",
      "path": "12"
    },
    "7271": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7278": {
      "op": "SHL"
    },
    "7279": {
      "op": "SUB"
    },
    "7280": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7281": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7282": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "AND",
      "path": "12"
    },
    "7283": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7284": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7285": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "7287": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7288": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "DUP11",
      "path": "12"
    },
    "7289": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "ADD",
      "path": "12"
    },
    "7290": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7291": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7293": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7294": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "ADD",
      "path": "12"
    },
    "7295": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7296": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20096
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7297": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7298": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7299": {
      "op": "PUSH4",
      "value": "0xA64A2271"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7306": {
      "op": "SHL"
    },
    "7307": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7308": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7309": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7311": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7312": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "ADD",
      "path": "12"
    },
    "7313": {
      "op": "DUP8"
    },
    "7314": {
      "op": "SWAP1"
    },
    "7315": {
      "op": "MSTORE"
    },
    "7316": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19400,
        19506
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7317": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19400,
        19506
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7318": {
      "op": "POP"
    },
    "7319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7321": {
      "op": "SWAP4"
    },
    "7322": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7323": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19550,
        19613
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7324": {
      "op": "DUP5"
    },
    "7325": {
      "op": "SWAP3"
    },
    "7326": {
      "op": "DUP4"
    },
    "7327": {
      "op": "SWAP3"
    },
    "7328": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20096
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7329": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20096
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7330": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20096
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7331": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20096
      ],
      "op": "AND",
      "path": "12"
    },
    "7332": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20096
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7333": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20104
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA64A2271"
    },
    "7338": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20104
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7341": {
      "op": "ADD"
    },
    "7342": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7344": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7345": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7346": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7347": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7348": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "SUB",
      "path": "12"
    },
    "7349": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7350": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7351": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "GAS",
      "path": "12"
    },
    "7352": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "7353": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7354": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7355": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7356": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CC9"
    },
    "7359": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7360": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "7361": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7363": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7364": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "7365": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "7366": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7368": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7369": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7370": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "POP",
      "path": "12"
    },
    "7371": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "POP",
      "path": "12"
    },
    "7372": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "POP",
      "path": "12"
    },
    "7373": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "POP",
      "path": "12"
    },
    "7374": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7376": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7377": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "7378": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7380": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "NOT",
      "path": "12"
    },
    "7381": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7383": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7384": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "ADD",
      "path": "12"
    },
    "7385": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "AND",
      "path": "12"
    },
    "7386": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7387": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "ADD",
      "path": "12"
    },
    "7388": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7389": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7391": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7392": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "POP",
      "path": "12"
    },
    "7393": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7394": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "ADD",
      "path": "12"
    },
    "7395": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7396": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CED"
    },
    "7399": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7400": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7401": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x261A"
    },
    "7404": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        20078,
        20139
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7405": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20078,
        20139
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7406": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20043,
        20139
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7407": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20043,
        20139
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7408": {
      "op": "POP"
    },
    "7409": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20043,
        20139
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7410": {
      "op": "POP"
    },
    "7411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7417": {
      "op": "SHL"
    },
    "7418": {
      "op": "SUB"
    },
    "7419": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20154,
        20174
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7420": {
      "branch": 152,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20154,
        20174
      ],
      "op": "AND",
      "path": "12"
    },
    "7421": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20150,
        20262
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D0A"
    },
    "7424": {
      "branch": 152,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20150,
        20262
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7425": {
      "op": "POP"
    },
    "7426": {
      "op": "POP"
    },
    "7427": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20210,
        20229
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 89
    },
    "7428": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20210,
        20229
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7429": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20231,
        20250
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7431": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20231,
        20250
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7432": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20231,
        20250
      ],
      "op": "ADD",
      "path": "12"
    },
    "7433": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20231,
        20250
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7434": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20150,
        20262
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7435": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20294
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "7437": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20294
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7438": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7440": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7441": {
      "op": "PUSH4",
      "value": "0xA751732F"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7448": {
      "op": "SHL"
    },
    "7449": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7450": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7451": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7453": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7454": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "ADD",
      "path": "12"
    },
    "7455": {
      "op": "DUP8"
    },
    "7456": {
      "op": "SWAP1"
    },
    "7457": {
      "op": "MSTORE"
    },
    "7458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7464": {
      "op": "SHL"
    },
    "7465": {
      "op": "SUB"
    },
    "7466": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20294
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7467": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20294
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7468": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20294
      ],
      "op": "AND",
      "path": "12"
    },
    "7469": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20294
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7470": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20312
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA751732F"
    },
    "7475": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20312
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7476": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7478": {
      "op": "ADD"
    },
    "7479": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7481": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7483": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7484": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7485": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7486": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "SUB",
      "path": "12"
    },
    "7487": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7488": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7489": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "GAS",
      "path": "12"
    },
    "7490": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "7491": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7492": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7493": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7494": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D53"
    },
    "7497": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7498": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "7499": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7501": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7502": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "7503": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "7504": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7506": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7507": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7508": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "POP",
      "path": "12"
    },
    "7509": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "POP",
      "path": "12"
    },
    "7510": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "POP",
      "path": "12"
    },
    "7511": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "POP",
      "path": "12"
    },
    "7512": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7514": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7515": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "7516": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7518": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "NOT",
      "path": "12"
    },
    "7519": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7521": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7522": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "ADD",
      "path": "12"
    },
    "7523": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "AND",
      "path": "12"
    },
    "7524": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7525": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "ADD",
      "path": "12"
    },
    "7526": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7527": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7529": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7530": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "POP",
      "path": "12"
    },
    "7531": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7532": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "ADD",
      "path": "12"
    },
    "7533": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7534": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D77"
    },
    "7537": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7538": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7539": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2648"
    },
    "7542": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        20276,
        20322
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7543": {
      "branch": 153,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20276,
        20322
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7544": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20272,
        20822
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7545": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20272,
        20822
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D85"
    },
    "7548": {
      "branch": 153,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20272,
        20822
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7549": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20390,
        20395
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 90,
      "value": "0x0"
    },
    "7551": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20377,
        20395
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7552": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20377,
        20395
      ],
      "op": "POP",
      "path": "12"
    },
    "7553": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20272,
        20822
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E17"
    },
    "7556": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20272,
        20822
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7557": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20272,
        20822
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7564": {
      "op": "SHL"
    },
    "7565": {
      "op": "SUB"
    },
    "7566": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20416,
        20436
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7567": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20416,
        20436
      ],
      "op": "AND",
      "path": "12"
    },
    "7568": {
      "branch": 154,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20416,
        20436
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7569": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20412,
        20822
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1DBD"
    },
    "7572": {
      "branch": 154,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20412,
        20822
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7573": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20520,
        20533
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 91,
      "value": "0x1"
    },
    "7575": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20520,
        20533
      ],
      "op": "DUP11",
      "path": "12"
    },
    "7576": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20520,
        20533
      ],
      "op": "ADD",
      "path": "12"
    },
    "7577": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20520,
        20533
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7584": {
      "op": "SHL"
    },
    "7585": {
      "op": "SUB"
    },
    "7586": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20510,
        20533
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7587": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20510,
        20533
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7588": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20510,
        20533
      ],
      "op": "AND",
      "path": "12"
    },
    "7589": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20520,
        20533
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7590": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20520,
        20533
      ],
      "op": "AND",
      "path": "12"
    },
    "7591": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20510,
        20533
      ],
      "op": "EQ",
      "path": "12"
    },
    "7592": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20510,
        20559
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7593": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20510,
        20559
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7594": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20510,
        20559
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1DB6"
    },
    "7597": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20510,
        20559
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7598": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20510,
        20559
      ],
      "op": "POP",
      "path": "12"
    },
    "7599": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20547,
        20552
      ],
      "op": "DUP10",
      "path": "12"
    },
    "7600": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20547,
        20559
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "7602": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20547,
        20559
      ],
      "op": "ADD",
      "path": "12"
    },
    "7603": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20547,
        20559
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7604": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20537,
        20543
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7605": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20537,
        20559
      ],
      "op": "EQ",
      "path": "12"
    },
    "7606": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20510,
        20559
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7607": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20497,
        20559
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7608": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20497,
        20559
      ],
      "op": "POP",
      "path": "12"
    },
    "7609": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20412,
        20822
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E17"
    },
    "7612": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20412,
        20822
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7613": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20412,
        20822
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7614": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20673,
        20678
      ],
      "op": "DUP10",
      "path": "12",
      "statement": 92
    },
    "7615": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20673,
        20690
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "7617": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20673,
        20690
      ],
      "op": "ADD",
      "path": "12"
    },
    "7618": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20673,
        20690
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7619": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20654,
        20669
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "7620": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20654,
        20690
      ],
      "op": "LT",
      "path": "12"
    },
    "7621": {
      "branch": 155,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20654,
        20690
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7622": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20629,
        20749
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E11"
    },
    "7625": {
      "branch": 155,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20629,
        20749
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7626": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20629,
        20749
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7628": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20629,
        20749
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7629": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7633": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7635": {
      "op": "SHL"
    },
    "7636": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20629,
        20749
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7637": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20629,
        20749
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7640": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20629,
        20749
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7642": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20629,
        20749
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7643": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20629,
        20749
      ],
      "op": "ADD",
      "path": "12"
    },
    "7644": {
      "op": "MSTORE"
    },
    "7645": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7647": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7649": {
      "op": "DUP3"
    },
    "7650": {
      "op": "ADD"
    },
    "7651": {
      "op": "MSTORE"
    },
    "7652": {
      "op": "PUSH32",
      "value": "0x436C61696D20706572696F64206E6F742066696E697368656400000000000000"
    },
    "7685": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7687": {
      "op": "DUP3"
    },
    "7688": {
      "op": "ADD"
    },
    "7689": {
      "op": "MSTORE"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7692": {
      "op": "ADD"
    },
    "7693": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20629,
        20749
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "7696": {
      "op": "JUMP"
    },
    "7697": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20629,
        20749
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7698": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20791,
        20811
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 93
    },
    "7699": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20776,
        20788
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7700": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20776,
        20811
      ],
      "op": "GT",
      "path": "12"
    },
    "7701": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20763,
        20811
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7702": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20763,
        20811
      ],
      "op": "POP",
      "path": "12"
    },
    "7703": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20412,
        20822
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7704": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20886,
        20907
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7706": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20917,
        20938
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7707": {
      "branch": 156,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20953,
        20963
      ],
      "op": "DUP6",
      "path": "12"
    },
    "7708": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20949,
        21726
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7709": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20949,
        21726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E42"
    },
    "7712": {
      "branch": 156,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20949,
        21726
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7713": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21058,
        21093
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 94,
      "value": "0x1E2A"
    },
    "7716": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21073,
        21093
      ],
      "op": "DUP10",
      "path": "12"
    },
    "7717": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21058,
        21070
      ],
      "op": "DUP12",
      "path": "12"
    },
    "7718": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21058,
        21093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "7721": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        21058,
        21093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7722": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21058,
        21093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7723": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21123,
        21136
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 95,
      "value": "0x1"
    },
    "7725": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21123,
        21136
      ],
      "op": "DUP14",
      "path": "12"
    },
    "7726": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21123,
        21136
      ],
      "op": "ADD",
      "path": "12"
    },
    "7727": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21123,
        21136
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7728": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21042,
        21093
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7729": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21042,
        21093
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7730": {
      "op": "POP"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7737": {
      "op": "SHL"
    },
    "7738": {
      "op": "SUB"
    },
    "7739": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21123,
        21136
      ],
      "op": "AND",
      "path": "12"
    },
    "7740": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21123,
        21136
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7741": {
      "op": "POP"
    },
    "7742": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20949,
        21726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1EDB"
    },
    "7745": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20949,
        21726
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7746": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20949,
        21726
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7747": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21157,
        21181
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7748": {
      "branch": 157,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21157,
        21181
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7749": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21153,
        21726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1ECA"
    },
    "7752": {
      "branch": 157,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21153,
        21726
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7753": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21310,
        21320
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 96
    },
    "7754": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21286,
        21321
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7756": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21286,
        21321
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7757": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21286,
        21321
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7758": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21286,
        21321
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7759": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21286,
        21309
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "7761": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21286,
        21309
      ],
      "op": "DUP14",
      "path": "12"
    },
    "7762": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21286,
        21309
      ],
      "op": "ADD",
      "path": "12"
    },
    "7763": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21286,
        21321
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7765": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21286,
        21321
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7766": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21286,
        21321
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7768": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21286,
        21321
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7769": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21286,
        21321
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7770": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21286,
        21321
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7771": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21282,
        21321
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E65"
    },
    "7774": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21282,
        21321
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7775": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21282,
        21283
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "7777": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21282,
        21321
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25AE"
    },
    "7780": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        21282,
        21321
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7781": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21282,
        21321
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7782": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21266,
        21321
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7783": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21266,
        21321
      ],
      "op": "POP",
      "path": "12"
    },
    "7784": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21351,
        21361
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 97
    },
    "7785": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21335,
        21361
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7786": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21335,
        21361
      ],
      "op": "POP",
      "path": "12"
    },
    "7787": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21400,
        21401
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 98,
      "value": "0x0"
    },
    "7789": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21384,
        21397
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7790": {
      "branch": 158,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21384,
        21401
      ],
      "op": "GT",
      "path": "12"
    },
    "7791": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21376,
        21440
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1EC5"
    },
    "7794": {
      "branch": 158,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21376,
        21440
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7795": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21376,
        21440
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7797": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21376,
        21440
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7798": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7802": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7804": {
      "op": "SHL"
    },
    "7805": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21376,
        21440
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7806": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21376,
        21440
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7809": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21376,
        21440
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7811": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21376,
        21440
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7812": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21376,
        21440
      ],
      "op": "ADD",
      "path": "12"
    },
    "7813": {
      "op": "MSTORE"
    },
    "7814": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7818": {
      "op": "DUP3"
    },
    "7819": {
      "op": "ADD"
    },
    "7820": {
      "op": "MSTORE"
    },
    "7821": {
      "op": "PUSH32",
      "value": "0x4368616C6C656E67657220686173206E6F7468696E6720746F20776974686472"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7856": {
      "op": "DUP3"
    },
    "7857": {
      "op": "ADD"
    },
    "7858": {
      "op": "MSTORE"
    },
    "7859": {
      "op": "PUSH2",
      "value": "0x6177"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7864": {
      "op": "SHL"
    },
    "7865": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7867": {
      "op": "DUP3"
    },
    "7868": {
      "op": "ADD"
    },
    "7869": {
      "op": "MSTORE"
    },
    "7870": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7872": {
      "op": "ADD"
    },
    "7873": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21376,
        21440
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "7876": {
      "op": "JUMP"
    },
    "7877": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21376,
        21440
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7878": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21153,
        21726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1EDB"
    },
    "7881": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21153,
        21726
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7882": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21153,
        21726
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7883": {
      "op": "POP"
    },
    "7884": {
      "op": "POP"
    },
    "7885": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7887": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7888": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21666,
        21678
      ],
      "op": "DUP9",
      "path": "12",
      "statement": 99
    },
    "7889": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21666,
        21678
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7896": {
      "op": "SHL"
    },
    "7897": {
      "op": "SUB"
    },
    "7898": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7899": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21153,
        21726
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7900": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22031,
        22051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7902": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22031,
        22051
      ],
      "op": "DUP13",
      "path": "12"
    },
    "7903": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22031,
        22051
      ],
      "op": "ADD",
      "path": "12"
    },
    "7904": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22031,
        22051
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7911": {
      "op": "SHL"
    },
    "7912": {
      "op": "SUB"
    },
    "7913": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22031,
        22051
      ],
      "op": "AND",
      "path": "12"
    },
    "7914": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22017,
        22027
      ],
      "op": "CALLER",
      "path": "12"
    },
    "7915": {
      "branch": 159,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22017,
        22051
      ],
      "op": "SUB",
      "path": "12"
    },
    "7916": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22013,
        22298
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F29"
    },
    "7919": {
      "branch": 159,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22013,
        22298
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7920": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22086,
        22106
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7921": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22071,
        22083
      ],
      "op": "DUP11",
      "path": "12"
    },
    "7922": {
      "branch": 160,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22071,
        22106
      ],
      "op": "GT",
      "path": "12"
    },
    "7923": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22067,
        22288
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7924": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22067,
        22288
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F12"
    },
    "7927": {
      "branch": 160,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22067,
        22288
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7928": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22144,
        22179
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 100,
      "value": "0x1F01"
    },
    "7931": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22159,
        22179
      ],
      "op": "DUP10",
      "path": "12"
    },
    "7932": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22144,
        22156
      ],
      "op": "DUP12",
      "path": "12"
    },
    "7933": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22144,
        22179
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2558"
    },
    "7936": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22144,
        22179
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7937": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22144,
        22179
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7938": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22126,
        22180
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F0B"
    },
    "7941": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22126,
        22180
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7942": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22126,
        22180
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7943": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22126,
        22180
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "7946": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22126,
        22180
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7947": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22126,
        22180
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7948": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22126,
        22180
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7949": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22126,
        22180
      ],
      "op": "POP",
      "path": "12"
    },
    "7950": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22067,
        22288
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F29"
    },
    "7953": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22067,
        22288
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7954": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22067,
        22288
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7955": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22237,
        22272
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 101,
      "value": "0x1F1C"
    },
    "7958": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22260,
        22272
      ],
      "op": "DUP11",
      "path": "12"
    },
    "7959": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22237,
        22257
      ],
      "op": "DUP11",
      "path": "12"
    },
    "7960": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22237,
        22272
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2558"
    },
    "7963": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22237,
        22272
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7964": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22237,
        22272
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7965": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22219,
        22273
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F26"
    },
    "7968": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22219,
        22273
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7969": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22219,
        22273
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7970": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22219,
        22273
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2558"
    },
    "7973": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22219,
        22273
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7974": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22219,
        22273
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7975": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22219,
        22273
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7976": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22219,
        22273
      ],
      "op": "POP",
      "path": "12"
    },
    "7977": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22067,
        22288
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7978": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22316,
        22329
      ],
      "op": "SWAP15",
      "path": "12",
      "statement": 102
    },
    "7979": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22331,
        22344
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7980": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22331,
        22344
      ],
      "op": "SWAP14",
      "path": "12"
    },
    "7981": {
      "op": "POP"
    },
    "7982": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        18651,
        22352
      ],
      "op": "SWAP12",
      "path": "12"
    },
    "7983": {
      "op": "POP"
    },
    "7984": {
      "op": "POP"
    },
    "7985": {
      "op": "POP"
    },
    "7986": {
      "op": "POP"
    },
    "7987": {
      "op": "POP"
    },
    "7988": {
      "op": "POP"
    },
    "7989": {
      "op": "POP"
    },
    "7990": {
      "op": "POP"
    },
    "7991": {
      "op": "POP"
    },
    "7992": {
      "op": "POP"
    },
    "7993": {
      "op": "POP"
    },
    "7994": {
      "op": "POP"
    },
    "7995": {
      "fn": "RequestManager.resolveClaim",
      "jump": "o",
      "offset": [
        18651,
        22352
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7996": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22358,
        22856
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7997": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22477,
        22490
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7999": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22477,
        22490
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8000": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22477,
        22490
      ],
      "op": "ADD",
      "path": "12"
    },
    "8001": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22477,
        22490
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8002": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22522,
        22537
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 103
    },
    "8003": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22522,
        22537
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8004": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22505,
        22547
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8006": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22505,
        22547
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8007": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22505,
        22547
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8008": {
      "op": "SWAP2"
    },
    "8009": {
      "op": "DUP3"
    },
    "8010": {
      "op": "MSTORE"
    },
    "8011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8017": {
      "op": "SHL"
    },
    "8018": {
      "op": "SUB"
    },
    "8019": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22477,
        22490
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8020": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22477,
        22490
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8021": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22477,
        22490
      ],
      "op": "AND",
      "path": "12"
    },
    "8022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8024": {
      "op": "DUP3"
    },
    "8025": {
      "op": "ADD"
    },
    "8026": {
      "op": "DUP2"
    },
    "8027": {
      "op": "SWAP1"
    },
    "8028": {
      "op": "MSTORE"
    },
    "8029": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22477,
        22490
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8030": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22505,
        22547
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xA7B86597910AAE75F7D99FEB2F37420CC80D457465FFBA0F8136D722A9F7095A"
    },
    "8063": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22505,
        22547
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8064": {
      "op": "ADD"
    },
    "8065": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22505,
        22547
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8067": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22505,
        22547
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8068": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22505,
        22547
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8069": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22505,
        22547
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8070": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22505,
        22547
      ],
      "op": "SUB",
      "path": "12"
    },
    "8071": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22505,
        22547
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8072": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22505,
        22547
      ],
      "op": "LOG1",
      "path": "12"
    },
    "8073": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 104,
      "value": "0x40"
    },
    "8075": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8076": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8077": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8078": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8079": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "ADD",
      "path": "12"
    },
    "8080": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8081": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8088": {
      "op": "SHL"
    },
    "8089": {
      "op": "SUB"
    },
    "8090": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8091": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8092": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "AND",
      "path": "12"
    },
    "8093": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8094": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8095": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8096": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22611,
        22623
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8098": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22611,
        22623
      ],
      "op": "DUP7",
      "path": "12"
    },
    "8099": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22611,
        22623
      ],
      "op": "ADD",
      "path": "12"
    },
    "8100": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22611,
        22623
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8101": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8103": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "8104": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8105": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "ADD",
      "path": "12"
    },
    "8106": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8107": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8108": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22581,
        22624
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8109": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22578
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "8111": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22578
      ],
      "op": "DUP9",
      "path": "12"
    },
    "8112": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22578
      ],
      "op": "ADD",
      "path": "12"
    },
    "8113": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8114": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8121": {
      "op": "SHL"
    },
    "8122": {
      "op": "SUB"
    },
    "8123": {
      "op": "NOT"
    },
    "8124": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "AND",
      "path": "12"
    },
    "8125": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8126": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8127": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "OR",
      "path": "12"
    },
    "8128": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8129": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8130": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8131": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "8133": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "DUP8",
      "path": "12"
    },
    "8134": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "ADD",
      "path": "12"
    },
    "8135": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8136": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22688,
        22720
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 105,
      "value": "0xB"
    },
    "8138": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22688,
        22720
      ],
      "op": "DUP7",
      "path": "12"
    },
    "8139": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22688,
        22720
      ],
      "op": "ADD",
      "path": "12"
    },
    "8140": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22688,
        22720
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8141": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22558,
        22624
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8143": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22657,
        22683
      ],
      "op": "DUP8",
      "path": "12"
    },
    "8144": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22657,
        22683
      ],
      "op": "ADD",
      "path": "12"
    },
    "8145": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22657,
        22683
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8146": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22657,
        22683
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8147": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22657,
        22683
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8148": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22657,
        22683
      ],
      "op": "AND",
      "path": "12"
    },
    "8149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8151": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22684
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8152": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22684
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8153": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22684
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8154": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22656
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "8156": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22684
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8157": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22684
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8158": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22684
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8159": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22684
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8160": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22684
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8161": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22684
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8162": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22720
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8163": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22720
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8164": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22684
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8165": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22684
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8166": {
      "op": "SWAP1"
    },
    "8167": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22720
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FF1"
    },
    "8170": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22720
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8171": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22688,
        22720
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8172": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22688,
        22720
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8173": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22720
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "8176": {
      "fn": "RequestManager.withdrawDeposit",
      "jump": "i",
      "offset": [
        22635,
        22720
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8177": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22720
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8178": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22720
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8179": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22720
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8180": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22635,
        22720
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8181": {
      "op": "POP"
    },
    "8182": {
      "op": "POP"
    },
    "8183": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22753,
        22779
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8185": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22753,
        22779
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8186": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22753,
        22779
      ],
      "op": "ADD",
      "path": "12"
    },
    "8187": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22753,
        22779
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8188": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22835,
        22848
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 106,
      "value": "0xA"
    },
    "8190": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22835,
        22848
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8191": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22835,
        22848
      ],
      "op": "ADD",
      "path": "12"
    },
    "8192": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22835,
        22848
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8193": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22818,
        22832
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "8195": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22818,
        22832
      ],
      "op": "DUP6",
      "path": "12"
    },
    "8196": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22818,
        22832
      ],
      "op": "ADD",
      "path": "12"
    },
    "8197": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22818,
        22832
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8204": {
      "op": "SHL"
    },
    "8205": {
      "op": "SUB"
    },
    "8206": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22753,
        22779
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8207": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22753,
        22779
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8208": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22753,
        22779
      ],
      "op": "AND",
      "path": "12"
    },
    "8209": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22753,
        22779
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8210": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22790,
        22849
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16C6"
    },
    "8213": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22790,
        22849
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8214": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22809,
        22816
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8215": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22809,
        22816
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8216": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22818,
        22848
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x199D"
    },
    "8219": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22818,
        22848
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8220": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22835,
        22848
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8221": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22818,
        22848
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "8224": {
      "fn": "RequestManager.withdrawDeposit",
      "jump": "i",
      "offset": [
        22818,
        22848
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8225": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8226": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 107,
      "value": "0x40"
    },
    "8228": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8235": {
      "op": "SHL"
    },
    "8236": {
      "op": "SUB"
    },
    "8237": {
      "op": "DUP1"
    },
    "8238": {
      "op": "DUP6"
    },
    "8239": {
      "op": "AND"
    },
    "8240": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "8242": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "4"
    },
    "8243": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "4"
    },
    "8244": {
      "op": "MSTORE"
    },
    "8245": {
      "op": "DUP4"
    },
    "8246": {
      "op": "AND"
    },
    "8247": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8249": {
      "op": "DUP3"
    },
    "8250": {
      "op": "ADD"
    },
    "8251": {
      "op": "MSTORE"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8254": {
      "op": "DUP2"
    },
    "8255": {
      "op": "ADD"
    },
    "8256": {
      "op": "DUP3"
    },
    "8257": {
      "op": "SWAP1"
    },
    "8258": {
      "op": "MSTORE"
    },
    "8259": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16C6"
    },
    "8262": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8263": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "DUP6",
      "path": "4"
    },
    "8264": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8265": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "8270": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8272": {
      "op": "SHL"
    },
    "8273": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1100,
        1127
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8274": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8276": {
      "op": "ADD"
    },
    "8277": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8278": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "8280": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8281": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8284": {
      "op": "NOT"
    },
    "8285": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8286": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP5",
      "path": "4"
    },
    "8287": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SUB",
      "path": "4"
    },
    "8288": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "4"
    },
    "8289": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8290": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8291": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8292": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8293": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8294": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "8296": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8297": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "4"
    },
    "8298": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8299": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8306": {
      "op": "SHL"
    },
    "8307": {
      "op": "SUB"
    },
    "8308": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "4"
    },
    "8309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8313": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8315": {
      "op": "SHL"
    },
    "8316": {
      "op": "SUB"
    },
    "8317": {
      "op": "NOT"
    },
    "8318": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8319": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "8320": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "4"
    },
    "8321": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "8322": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8323": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "8324": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "OR",
      "path": "4"
    },
    "8325": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8326": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8327": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8328": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1069
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x212A"
    },
    "8331": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8332": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8333": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8335": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8336": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8343": {
      "op": "SHL"
    },
    "8344": {
      "op": "SUB"
    },
    "8345": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 108
    },
    "8346": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8347": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8354": {
      "op": "SHL"
    },
    "8355": {
      "op": "SUB"
    },
    "8356": {
      "op": "NOT"
    },
    "8357": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8358": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "8359": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8360": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "8361": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8362": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8363": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 109,
      "value": "0x40"
    },
    "8365": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8366": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8367": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8368": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8369": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "8370": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8371": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8372": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8373": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "8406": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8407": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8408": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8409": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "8410": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "8411": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8412": {
      "fn": "Math.max",
      "offset": [
        285,
        390
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8413": {
      "fn": "Math.max",
      "offset": [
        343,
        350
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8415": {
      "fn": "Math.max",
      "offset": [
        374,
        375
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 110
    },
    "8416": {
      "fn": "Math.max",
      "offset": [
        369,
        370
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8417": {
      "fn": "Math.max",
      "offset": [
        369,
        375
      ],
      "op": "LT",
      "path": "7"
    },
    "8418": {
      "branch": 164,
      "fn": "Math.max",
      "offset": [
        369,
        375
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8419": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20EC"
    },
    "8422": {
      "branch": 164,
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8423": {
      "fn": "Math.max",
      "offset": [
        382,
        383
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8424": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20EE"
    },
    "8427": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8428": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8429": {
      "fn": "Math.max",
      "offset": [
        378,
        379
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8430": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8431": {
      "fn": "Math.max",
      "offset": [
        362,
        383
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8432": {
      "fn": "Math.max",
      "offset": [
        285,
        390
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8433": {
      "op": "POP"
    },
    "8434": {
      "op": "POP"
    },
    "8435": {
      "op": "POP"
    },
    "8436": {
      "fn": "Math.max",
      "jump": "o",
      "offset": [
        285,
        390
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8437": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8438": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 111,
      "value": "0x40"
    },
    "8440": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8447": {
      "op": "SHL"
    },
    "8448": {
      "op": "SUB"
    },
    "8449": {
      "op": "DUP4"
    },
    "8450": {
      "op": "AND"
    },
    "8451": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "8453": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8454": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "4"
    },
    "8455": {
      "op": "MSTORE"
    },
    "8456": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8458": {
      "op": "DUP2"
    },
    "8459": {
      "op": "ADD"
    },
    "8460": {
      "op": "DUP3"
    },
    "8461": {
      "op": "SWAP1"
    },
    "8462": {
      "op": "MSTORE"
    },
    "8463": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2125"
    },
    "8466": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8467": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "4"
    },
    "8468": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8469": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "8474": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8476": {
      "op": "SHL"
    },
    "8477": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8478": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8480": {
      "op": "ADD"
    },
    "8481": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2055"
    },
    "8484": {
      "op": "JUMP"
    },
    "8485": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8486": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "4"
    },
    "8487": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "4"
    },
    "8488": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "4"
    },
    "8489": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8490": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8491": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "8493": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217F"
    },
    "8496": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8497": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "8499": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8500": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8501": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "8503": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "4"
    },
    "8504": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "8506": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8507": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8508": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "8510": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8511": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8512": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "8514": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "4"
    },
    "8515": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "8548": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8549": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8550": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "4"
    },
    "8551": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "4"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8558": {
      "op": "SHL"
    },
    "8559": {
      "op": "SUB"
    },
    "8560": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "4"
    },
    "8561": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21FC"
    },
    "8564": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8565": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "8566": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8567": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8568": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "8573": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "4"
    },
    "8574": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8575": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8576": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8577": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8578": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8579": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8580": {
      "op": "POP"
    },
    "8581": {
      "branch": 166,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8582": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2125"
    },
    "8585": {
      "branch": 166,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "8586": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 112
    },
    "8587": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8588": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "8590": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "4"
    },
    "8591": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8592": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8593": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8594": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "4"
    },
    "8595": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8596": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x219D"
    },
    "8599": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8600": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8601": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2648"
    },
    "8604": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8605": {
      "branch": 167,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8606": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2125"
    },
    "8609": {
      "branch": 167,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "8610": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "8612": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8613": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8617": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8619": {
      "op": "SHL"
    },
    "8620": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8621": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8624": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "8626": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8627": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "4"
    },
    "8628": {
      "op": "MSTORE"
    },
    "8629": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "8631": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8633": {
      "op": "DUP3"
    },
    "8634": {
      "op": "ADD"
    },
    "8635": {
      "op": "MSTORE"
    },
    "8636": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "8669": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8671": {
      "op": "DUP3"
    },
    "8672": {
      "op": "ADD"
    },
    "8673": {
      "op": "MSTORE"
    },
    "8674": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "8685": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "8687": {
      "op": "SHL"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8690": {
      "op": "DUP3"
    },
    "8691": {
      "op": "ADD"
    },
    "8692": {
      "op": "MSTORE"
    },
    "8693": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8695": {
      "op": "ADD"
    },
    "8696": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7B1"
    },
    "8699": {
      "op": "JUMP"
    },
    "8700": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8701": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "8703": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 113,
      "value": "0x220B"
    },
    "8706": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8707": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8708": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8710": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "5"
    },
    "8711": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2213"
    },
    "8714": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8715": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8716": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "8717": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "8718": {
      "op": "POP"
    },
    "8719": {
      "op": "POP"
    },
    "8720": {
      "op": "POP"
    },
    "8721": {
      "op": "POP"
    },
    "8722": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8723": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8724": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "8726": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 114
    },
    "8727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "8728": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "5"
    },
    "8729": {
      "branch": 161,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8730": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2274"
    },
    "8733": {
      "branch": 161,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8734": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8736": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8737": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8743": {
      "op": "SHL"
    },
    "8744": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8745": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8748": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "8750": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8751": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "5"
    },
    "8752": {
      "op": "MSTORE"
    },
    "8753": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8755": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8757": {
      "op": "DUP3"
    },
    "8758": {
      "op": "ADD"
    },
    "8759": {
      "op": "MSTORE"
    },
    "8760": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8795": {
      "op": "DUP3"
    },
    "8796": {
      "op": "ADD"
    },
    "8797": {
      "op": "MSTORE"
    },
    "8798": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "8805": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "8807": {
      "op": "SHL"
    },
    "8808": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8810": {
      "op": "DUP3"
    },
    "8811": {
      "op": "ADD"
    },
    "8812": {
      "op": "MSTORE"
    },
    "8813": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8815": {
      "op": "ADD"
    },
    "8816": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7B1"
    },
    "8819": {
      "op": "JUMP"
    },
    "8820": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8827": {
      "op": "SHL"
    },
    "8828": {
      "op": "SUB"
    },
    "8829": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 115
    },
    "8830": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "5"
    },
    "8831": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "8832": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 116,
      "value": "0x22CB"
    },
    "8835": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8836": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8838": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8839": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8843": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8845": {
      "op": "SHL"
    },
    "8846": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8847": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8850": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "8852": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8853": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "5"
    },
    "8854": {
      "op": "MSTORE"
    },
    "8855": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "8857": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8859": {
      "op": "DUP3"
    },
    "8860": {
      "op": "ADD"
    },
    "8861": {
      "op": "MSTORE"
    },
    "8862": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "8895": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8897": {
      "op": "DUP3"
    },
    "8898": {
      "op": "ADD"
    },
    "8899": {
      "op": "MSTORE"
    },
    "8900": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8902": {
      "op": "ADD"
    },
    "8903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7B1"
    },
    "8906": {
      "op": "JUMP"
    },
    "8907": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8908": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8910": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8911": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "5"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8918": {
      "op": "SHL"
    },
    "8919": {
      "op": "SUB"
    },
    "8920": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "5"
    },
    "8921": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "5"
    },
    "8922": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "5"
    },
    "8923": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8925": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8926": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22E7"
    },
    "8929": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8930": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8931": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2696"
    },
    "8934": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8935": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8936": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8938": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8940": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8942": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8943": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "5"
    },
    "8944": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8945": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "5"
    },
    "8946": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "5"
    },
    "8947": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "5"
    },
    "8948": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "5"
    },
    "8949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8950": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "8951": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "8952": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "8953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "8954": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8955": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8957": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8958": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "5"
    },
    "8959": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2324"
    },
    "8962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8966": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "8968": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "8970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "5"
    },
    "8971": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "8973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "8974": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "5"
    },
    "8975": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "5"
    },
    "8976": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8977": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "5"
    },
    "8978": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8980": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8981": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "8982": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8984": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "8985": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8987": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8989": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8990": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "5"
    },
    "8991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "8992": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2329"
    },
    "8995": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8996": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8997": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "8999": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9000": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "9001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9002": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "9003": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9004": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "9005": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9006": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "9007": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 117,
      "value": "0x2339"
    },
    "9010": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9011": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9012": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "5"
    },
    "9013": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2344"
    },
    "9016": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9017": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9018": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "9019": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "9020": {
      "op": "POP"
    },
    "9021": {
      "op": "POP"
    },
    "9022": {
      "op": "POP"
    },
    "9023": {
      "op": "POP"
    },
    "9024": {
      "op": "POP"
    },
    "9025": {
      "op": "POP"
    },
    "9026": {
      "op": "POP"
    },
    "9027": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9028": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9029": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "9031": {
      "branch": 162,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9032": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9033": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2353"
    },
    "9036": {
      "branch": 162,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9037": {
      "op": "POP"
    },
    "9038": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 118
    },
    "9039": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20EE"
    },
    "9042": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9043": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9044": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9045": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9046": {
      "branch": 163,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9047": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2363"
    },
    "9050": {
      "branch": 163,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9051": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9052": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9053": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9054": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9055": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9057": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "5"
    },
    "9058": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "5"
    },
    "9059": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9060": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 119
    },
    "9061": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9063": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9064": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9068": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9070": {
      "op": "SHL"
    },
    "9071": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9072": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9073": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9075": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "5"
    },
    "9076": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7B1"
    },
    "9079": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9080": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9081": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26B2"
    },
    "9084": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9085": {
      "op": "JUMPDEST"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9090": {
      "op": "DUP3"
    },
    "9091": {
      "op": "DUP5"
    },
    "9092": {
      "op": "SUB"
    },
    "9093": {
      "op": "SLT"
    },
    "9094": {
      "op": "ISZERO"
    },
    "9095": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "9098": {
      "op": "JUMPI"
    },
    "9099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9101": {
      "op": "DUP1"
    },
    "9102": {
      "op": "REVERT"
    },
    "9103": {
      "op": "JUMPDEST"
    },
    "9104": {
      "op": "POP"
    },
    "9105": {
      "op": "CALLDATALOAD"
    },
    "9106": {
      "op": "SWAP2"
    },
    "9107": {
      "op": "SWAP1"
    },
    "9108": {
      "op": "POP"
    },
    "9109": {
      "jump": "o",
      "op": "JUMP"
    },
    "9110": {
      "op": "JUMPDEST"
    },
    "9111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9117": {
      "op": "SHL"
    },
    "9118": {
      "op": "SUB"
    },
    "9119": {
      "op": "DUP2"
    },
    "9120": {
      "op": "AND"
    },
    "9121": {
      "op": "DUP2"
    },
    "9122": {
      "op": "EQ"
    },
    "9123": {
      "op": "PUSH2",
      "value": "0x1B01"
    },
    "9126": {
      "op": "JUMPI"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9129": {
      "op": "DUP1"
    },
    "9130": {
      "op": "REVERT"
    },
    "9131": {
      "op": "JUMPDEST"
    },
    "9132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9134": {
      "op": "DUP1"
    },
    "9135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9137": {
      "op": "DUP1"
    },
    "9138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9140": {
      "op": "DUP1"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9143": {
      "op": "DUP8"
    },
    "9144": {
      "op": "DUP10"
    },
    "9145": {
      "op": "SUB"
    },
    "9146": {
      "op": "SLT"
    },
    "9147": {
      "op": "ISZERO"
    },
    "9148": {
      "op": "PUSH2",
      "value": "0x23C4"
    },
    "9151": {
      "op": "JUMPI"
    },
    "9152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9154": {
      "op": "DUP1"
    },
    "9155": {
      "op": "REVERT"
    },
    "9156": {
      "op": "JUMPDEST"
    },
    "9157": {
      "op": "DUP7"
    },
    "9158": {
      "op": "CALLDATALOAD"
    },
    "9159": {
      "op": "SWAP6"
    },
    "9160": {
      "op": "POP"
    },
    "9161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9163": {
      "op": "DUP8"
    },
    "9164": {
      "op": "ADD"
    },
    "9165": {
      "op": "CALLDATALOAD"
    },
    "9166": {
      "op": "PUSH2",
      "value": "0x23D6"
    },
    "9169": {
      "op": "DUP2"
    },
    "9170": {
      "op": "PUSH2",
      "value": "0x2396"
    },
    "9173": {
      "jump": "i",
      "op": "JUMP"
    },
    "9174": {
      "op": "JUMPDEST"
    },
    "9175": {
      "op": "SWAP5"
    },
    "9176": {
      "op": "POP"
    },
    "9177": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9179": {
      "op": "DUP8"
    },
    "9180": {
      "op": "ADD"
    },
    "9181": {
      "op": "CALLDATALOAD"
    },
    "9182": {
      "op": "PUSH2",
      "value": "0x23E6"
    },
    "9185": {
      "op": "DUP2"
    },
    "9186": {
      "op": "PUSH2",
      "value": "0x2396"
    },
    "9189": {
      "jump": "i",
      "op": "JUMP"
    },
    "9190": {
      "op": "JUMPDEST"
    },
    "9191": {
      "op": "SWAP4"
    },
    "9192": {
      "op": "POP"
    },
    "9193": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9195": {
      "op": "DUP8"
    },
    "9196": {
      "op": "ADD"
    },
    "9197": {
      "op": "CALLDATALOAD"
    },
    "9198": {
      "op": "PUSH2",
      "value": "0x23F6"
    },
    "9201": {
      "op": "DUP2"
    },
    "9202": {
      "op": "PUSH2",
      "value": "0x2396"
    },
    "9205": {
      "jump": "i",
      "op": "JUMP"
    },
    "9206": {
      "op": "JUMPDEST"
    },
    "9207": {
      "op": "SWAP6"
    },
    "9208": {
      "op": "SWAP9"
    },
    "9209": {
      "op": "SWAP5"
    },
    "9210": {
      "op": "SWAP8"
    },
    "9211": {
      "op": "POP"
    },
    "9212": {
      "op": "SWAP3"
    },
    "9213": {
      "op": "SWAP6"
    },
    "9214": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9216": {
      "op": "DUP2"
    },
    "9217": {
      "op": "ADD"
    },
    "9218": {
      "op": "CALLDATALOAD"
    },
    "9219": {
      "op": "SWAP5"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9222": {
      "op": "SWAP1"
    },
    "9223": {
      "op": "SWAP2"
    },
    "9224": {
      "op": "ADD"
    },
    "9225": {
      "op": "CALLDATALOAD"
    },
    "9226": {
      "op": "SWAP4"
    },
    "9227": {
      "op": "POP"
    },
    "9228": {
      "op": "SWAP2"
    },
    "9229": {
      "op": "POP"
    },
    "9230": {
      "op": "POP"
    },
    "9231": {
      "jump": "o",
      "op": "JUMP"
    },
    "9232": {
      "op": "JUMPDEST"
    },
    "9233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9237": {
      "op": "DUP3"
    },
    "9238": {
      "op": "DUP5"
    },
    "9239": {
      "op": "SUB"
    },
    "9240": {
      "op": "SLT"
    },
    "9241": {
      "op": "ISZERO"
    },
    "9242": {
      "op": "PUSH2",
      "value": "0x2422"
    },
    "9245": {
      "op": "JUMPI"
    },
    "9246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9248": {
      "op": "DUP1"
    },
    "9249": {
      "op": "REVERT"
    },
    "9250": {
      "op": "JUMPDEST"
    },
    "9251": {
      "op": "DUP2"
    },
    "9252": {
      "op": "CALLDATALOAD"
    },
    "9253": {
      "op": "PUSH2",
      "value": "0x20EE"
    },
    "9256": {
      "op": "DUP2"
    },
    "9257": {
      "op": "PUSH2",
      "value": "0x2396"
    },
    "9260": {
      "jump": "i",
      "op": "JUMP"
    },
    "9261": {
      "op": "JUMPDEST"
    },
    "9262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9264": {
      "op": "DUP1"
    },
    "9265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9267": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9269": {
      "op": "DUP5"
    },
    "9270": {
      "op": "DUP7"
    },
    "9271": {
      "op": "SUB"
    },
    "9272": {
      "op": "SLT"
    },
    "9273": {
      "op": "ISZERO"
    },
    "9274": {
      "op": "PUSH2",
      "value": "0x2442"
    },
    "9277": {
      "op": "JUMPI"
    },
    "9278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9280": {
      "op": "DUP1"
    },
    "9281": {
      "op": "REVERT"
    },
    "9282": {
      "op": "JUMPDEST"
    },
    "9283": {
      "op": "POP"
    },
    "9284": {
      "op": "POP"
    },
    "9285": {
      "op": "DUP2"
    },
    "9286": {
      "op": "CALLDATALOAD"
    },
    "9287": {
      "op": "SWAP4"
    },
    "9288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9290": {
      "op": "DUP4"
    },
    "9291": {
      "op": "ADD"
    },
    "9292": {
      "op": "CALLDATALOAD"
    },
    "9293": {
      "op": "SWAP4"
    },
    "9294": {
      "op": "POP"
    },
    "9295": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9297": {
      "op": "SWAP1"
    },
    "9298": {
      "op": "SWAP3"
    },
    "9299": {
      "op": "ADD"
    },
    "9300": {
      "op": "CALLDATALOAD"
    },
    "9301": {
      "op": "SWAP2"
    },
    "9302": {
      "op": "SWAP1"
    },
    "9303": {
      "op": "POP"
    },
    "9304": {
      "jump": "o",
      "op": "JUMP"
    },
    "9305": {
      "op": "JUMPDEST"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9308": {
      "op": "DUP1"
    },
    "9309": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9311": {
      "op": "DUP4"
    },
    "9312": {
      "op": "DUP6"
    },
    "9313": {
      "op": "SUB"
    },
    "9314": {
      "op": "SLT"
    },
    "9315": {
      "op": "ISZERO"
    },
    "9316": {
      "op": "PUSH2",
      "value": "0x246C"
    },
    "9319": {
      "op": "JUMPI"
    },
    "9320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9322": {
      "op": "DUP1"
    },
    "9323": {
      "op": "REVERT"
    },
    "9324": {
      "op": "JUMPDEST"
    },
    "9325": {
      "op": "POP"
    },
    "9326": {
      "op": "POP"
    },
    "9327": {
      "op": "DUP1"
    },
    "9328": {
      "op": "CALLDATALOAD"
    },
    "9329": {
      "op": "SWAP3"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9332": {
      "op": "SWAP1"
    },
    "9333": {
      "op": "SWAP2"
    },
    "9334": {
      "op": "ADD"
    },
    "9335": {
      "op": "CALLDATALOAD"
    },
    "9336": {
      "op": "SWAP2"
    },
    "9337": {
      "op": "POP"
    },
    "9338": {
      "jump": "o",
      "op": "JUMP"
    },
    "9339": {
      "op": "JUMPDEST"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9342": {
      "op": "DUP1"
    },
    "9343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9345": {
      "op": "DUP4"
    },
    "9346": {
      "op": "DUP6"
    },
    "9347": {
      "op": "SUB"
    },
    "9348": {
      "op": "SLT"
    },
    "9349": {
      "op": "ISZERO"
    },
    "9350": {
      "op": "PUSH2",
      "value": "0x248E"
    },
    "9353": {
      "op": "JUMPI"
    },
    "9354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9356": {
      "op": "DUP1"
    },
    "9357": {
      "op": "REVERT"
    },
    "9358": {
      "op": "JUMPDEST"
    },
    "9359": {
      "op": "DUP3"
    },
    "9360": {
      "op": "CALLDATALOAD"
    },
    "9361": {
      "op": "PUSH2",
      "value": "0x2499"
    },
    "9364": {
      "op": "DUP2"
    },
    "9365": {
      "op": "PUSH2",
      "value": "0x2396"
    },
    "9368": {
      "jump": "i",
      "op": "JUMP"
    },
    "9369": {
      "op": "JUMPDEST"
    },
    "9370": {
      "op": "SWAP2"
    },
    "9371": {
      "op": "POP"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9374": {
      "op": "DUP4"
    },
    "9375": {
      "op": "ADD"
    },
    "9376": {
      "op": "CALLDATALOAD"
    },
    "9377": {
      "op": "PUSH2",
      "value": "0x24A9"
    },
    "9380": {
      "op": "DUP2"
    },
    "9381": {
      "op": "PUSH2",
      "value": "0x2396"
    },
    "9384": {
      "jump": "i",
      "op": "JUMP"
    },
    "9385": {
      "op": "JUMPDEST"
    },
    "9386": {
      "op": "DUP1"
    },
    "9387": {
      "op": "SWAP2"
    },
    "9388": {
      "op": "POP"
    },
    "9389": {
      "op": "POP"
    },
    "9390": {
      "op": "SWAP3"
    },
    "9391": {
      "op": "POP"
    },
    "9392": {
      "op": "SWAP3"
    },
    "9393": {
      "op": "SWAP1"
    },
    "9394": {
      "op": "POP"
    },
    "9395": {
      "jump": "o",
      "op": "JUMP"
    },
    "9396": {
      "op": "JUMPDEST"
    },
    "9397": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9402": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9404": {
      "op": "SHL"
    },
    "9405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9407": {
      "op": "MSTORE"
    },
    "9408": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9410": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9412": {
      "op": "MSTORE"
    },
    "9413": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9417": {
      "op": "REVERT"
    },
    "9418": {
      "op": "JUMPDEST"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9425": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9427": {
      "op": "SHL"
    },
    "9428": {
      "op": "SUB"
    },
    "9429": {
      "op": "DUP4"
    },
    "9430": {
      "op": "DUP2"
    },
    "9431": {
      "op": "AND"
    },
    "9432": {
      "op": "SWAP1"
    },
    "9433": {
      "op": "DUP4"
    },
    "9434": {
      "op": "AND"
    },
    "9435": {
      "op": "DUP2"
    },
    "9436": {
      "op": "DUP2"
    },
    "9437": {
      "op": "LT"
    },
    "9438": {
      "op": "ISZERO"
    },
    "9439": {
      "op": "PUSH2",
      "value": "0x24EA"
    },
    "9442": {
      "op": "JUMPI"
    },
    "9443": {
      "op": "PUSH2",
      "value": "0x24EA"
    },
    "9446": {
      "op": "PUSH2",
      "value": "0x24B4"
    },
    "9449": {
      "jump": "i",
      "op": "JUMP"
    },
    "9450": {
      "op": "JUMPDEST"
    },
    "9451": {
      "op": "SUB"
    },
    "9452": {
      "op": "SWAP4"
    },
    "9453": {
      "op": "SWAP3"
    },
    "9454": {
      "op": "POP"
    },
    "9455": {
      "op": "POP"
    },
    "9456": {
      "op": "POP"
    },
    "9457": {
      "jump": "o",
      "op": "JUMP"
    },
    "9458": {
      "op": "JUMPDEST"
    },
    "9459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9461": {
      "op": "DUP3"
    },
    "9462": {
      "op": "NOT"
    },
    "9463": {
      "op": "DUP3"
    },
    "9464": {
      "op": "GT"
    },
    "9465": {
      "op": "ISZERO"
    },
    "9466": {
      "op": "PUSH2",
      "value": "0x2505"
    },
    "9469": {
      "op": "JUMPI"
    },
    "9470": {
      "op": "PUSH2",
      "value": "0x2505"
    },
    "9473": {
      "op": "PUSH2",
      "value": "0x24B4"
    },
    "9476": {
      "jump": "i",
      "op": "JUMP"
    },
    "9477": {
      "op": "JUMPDEST"
    },
    "9478": {
      "op": "POP"
    },
    "9479": {
      "op": "ADD"
    },
    "9480": {
      "op": "SWAP1"
    },
    "9481": {
      "jump": "o",
      "op": "JUMP"
    },
    "9482": {
      "op": "JUMPDEST"
    },
    "9483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9487": {
      "op": "DUP3"
    },
    "9488": {
      "op": "DUP5"
    },
    "9489": {
      "op": "SUB"
    },
    "9490": {
      "op": "SLT"
    },
    "9491": {
      "op": "ISZERO"
    },
    "9492": {
      "op": "PUSH2",
      "value": "0x251C"
    },
    "9495": {
      "op": "JUMPI"
    },
    "9496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9498": {
      "op": "DUP1"
    },
    "9499": {
      "op": "REVERT"
    },
    "9500": {
      "op": "JUMPDEST"
    },
    "9501": {
      "op": "POP"
    },
    "9502": {
      "op": "MLOAD"
    },
    "9503": {
      "op": "SWAP2"
    },
    "9504": {
      "op": "SWAP1"
    },
    "9505": {
      "op": "POP"
    },
    "9506": {
      "jump": "o",
      "op": "JUMP"
    },
    "9507": {
      "op": "JUMPDEST"
    },
    "9508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9510": {
      "op": "DUP1"
    },
    "9511": {
      "op": "DUP3"
    },
    "9512": {
      "op": "MSTORE"
    },
    "9513": {
      "op": "DUP2"
    },
    "9514": {
      "op": "DUP2"
    },
    "9515": {
      "op": "ADD"
    },
    "9516": {
      "op": "MSTORE"
    },
    "9517": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "9550": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9552": {
      "op": "DUP3"
    },
    "9553": {
      "op": "ADD"
    },
    "9554": {
      "op": "MSTORE"
    },
    "9555": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9557": {
      "op": "ADD"
    },
    "9558": {
      "op": "SWAP1"
    },
    "9559": {
      "jump": "o",
      "op": "JUMP"
    },
    "9560": {
      "op": "JUMPDEST"
    },
    "9561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9563": {
      "op": "DUP3"
    },
    "9564": {
      "op": "DUP3"
    },
    "9565": {
      "op": "LT"
    },
    "9566": {
      "op": "ISZERO"
    },
    "9567": {
      "op": "PUSH2",
      "value": "0x256A"
    },
    "9570": {
      "op": "JUMPI"
    },
    "9571": {
      "op": "PUSH2",
      "value": "0x256A"
    },
    "9574": {
      "op": "PUSH2",
      "value": "0x24B4"
    },
    "9577": {
      "jump": "i",
      "op": "JUMP"
    },
    "9578": {
      "op": "JUMPDEST"
    },
    "9579": {
      "op": "POP"
    },
    "9580": {
      "op": "SUB"
    },
    "9581": {
      "op": "SWAP1"
    },
    "9582": {
      "jump": "o",
      "op": "JUMP"
    },
    "9583": {
      "op": "JUMPDEST"
    },
    "9584": {
      "op": "SWAP7"
    },
    "9585": {
      "op": "DUP8"
    },
    "9586": {
      "op": "MSTORE"
    },
    "9587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9593": {
      "op": "SHL"
    },
    "9594": {
      "op": "SUB"
    },
    "9595": {
      "op": "SWAP6"
    },
    "9596": {
      "op": "DUP7"
    },
    "9597": {
      "op": "AND"
    },
    "9598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9600": {
      "op": "DUP9"
    },
    "9601": {
      "op": "ADD"
    },
    "9602": {
      "op": "MSTORE"
    },
    "9603": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9605": {
      "op": "DUP8"
    },
    "9606": {
      "op": "ADD"
    },
    "9607": {
      "op": "SWAP5"
    },
    "9608": {
      "op": "SWAP1"
    },
    "9609": {
      "op": "SWAP5"
    },
    "9610": {
      "op": "MSTORE"
    },
    "9611": {
      "op": "SWAP2"
    },
    "9612": {
      "op": "SWAP1"
    },
    "9613": {
      "op": "SWAP4"
    },
    "9614": {
      "op": "AND"
    },
    "9615": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9617": {
      "op": "DUP6"
    },
    "9618": {
      "op": "ADD"
    },
    "9619": {
      "op": "MSTORE"
    },
    "9620": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9622": {
      "op": "DUP5"
    },
    "9623": {
      "op": "ADD"
    },
    "9624": {
      "op": "SWAP3"
    },
    "9625": {
      "op": "SWAP1"
    },
    "9626": {
      "op": "SWAP3"
    },
    "9627": {
      "op": "MSTORE"
    },
    "9628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9630": {
      "op": "DUP4"
    },
    "9631": {
      "op": "ADD"
    },
    "9632": {
      "op": "SWAP2"
    },
    "9633": {
      "op": "SWAP1"
    },
    "9634": {
      "op": "SWAP2"
    },
    "9635": {
      "op": "MSTORE"
    },
    "9636": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9638": {
      "op": "DUP3"
    },
    "9639": {
      "op": "ADD"
    },
    "9640": {
      "op": "MSTORE"
    },
    "9641": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9643": {
      "op": "ADD"
    },
    "9644": {
      "op": "SWAP1"
    },
    "9645": {
      "jump": "o",
      "op": "JUMP"
    },
    "9646": {
      "op": "JUMPDEST"
    },
    "9647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9649": {
      "op": "DUP2"
    },
    "9650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9652": {
      "op": "NOT"
    },
    "9653": {
      "op": "DIV"
    },
    "9654": {
      "op": "DUP4"
    },
    "9655": {
      "op": "GT"
    },
    "9656": {
      "op": "DUP3"
    },
    "9657": {
      "op": "ISZERO"
    },
    "9658": {
      "op": "ISZERO"
    },
    "9659": {
      "op": "AND"
    },
    "9660": {
      "op": "ISZERO"
    },
    "9661": {
      "op": "PUSH2",
      "value": "0x25C8"
    },
    "9664": {
      "op": "JUMPI"
    },
    "9665": {
      "op": "PUSH2",
      "value": "0x25C8"
    },
    "9668": {
      "op": "PUSH2",
      "value": "0x24B4"
    },
    "9671": {
      "jump": "i",
      "op": "JUMP"
    },
    "9672": {
      "op": "JUMPDEST"
    },
    "9673": {
      "op": "POP"
    },
    "9674": {
      "op": "MUL"
    },
    "9675": {
      "op": "SWAP1"
    },
    "9676": {
      "jump": "o",
      "op": "JUMP"
    },
    "9677": {
      "op": "JUMPDEST"
    },
    "9678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9680": {
      "op": "DUP3"
    },
    "9681": {
      "op": "PUSH2",
      "value": "0x25EA"
    },
    "9684": {
      "op": "JUMPI"
    },
    "9685": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9690": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9692": {
      "op": "SHL"
    },
    "9693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9695": {
      "op": "MSTORE"
    },
    "9696": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9700": {
      "op": "MSTORE"
    },
    "9701": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9705": {
      "op": "REVERT"
    },
    "9706": {
      "op": "JUMPDEST"
    },
    "9707": {
      "op": "POP"
    },
    "9708": {
      "op": "DIV"
    },
    "9709": {
      "op": "SWAP1"
    },
    "9710": {
      "jump": "o",
      "op": "JUMP"
    },
    "9711": {
      "op": "JUMPDEST"
    },
    "9712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9718": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9720": {
      "op": "SHL"
    },
    "9721": {
      "op": "SUB"
    },
    "9722": {
      "op": "DUP3"
    },
    "9723": {
      "op": "DUP2"
    },
    "9724": {
      "op": "AND"
    },
    "9725": {
      "op": "DUP5"
    },
    "9726": {
      "op": "DUP3"
    },
    "9727": {
      "op": "AND"
    },
    "9728": {
      "op": "DUP1"
    },
    "9729": {
      "op": "DUP4"
    },
    "9730": {
      "op": "SUB"
    },
    "9731": {
      "op": "DUP3"
    },
    "9732": {
      "op": "GT"
    },
    "9733": {
      "op": "ISZERO"
    },
    "9734": {
      "op": "PUSH2",
      "value": "0x2611"
    },
    "9737": {
      "op": "JUMPI"
    },
    "9738": {
      "op": "PUSH2",
      "value": "0x2611"
    },
    "9741": {
      "op": "PUSH2",
      "value": "0x24B4"
    },
    "9744": {
      "jump": "i",
      "op": "JUMP"
    },
    "9745": {
      "op": "JUMPDEST"
    },
    "9746": {
      "op": "ADD"
    },
    "9747": {
      "op": "SWAP5"
    },
    "9748": {
      "op": "SWAP4"
    },
    "9749": {
      "op": "POP"
    },
    "9750": {
      "op": "POP"
    },
    "9751": {
      "op": "POP"
    },
    "9752": {
      "op": "POP"
    },
    "9753": {
      "jump": "o",
      "op": "JUMP"
    },
    "9754": {
      "op": "JUMPDEST"
    },
    "9755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9757": {
      "op": "DUP1"
    },
    "9758": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9760": {
      "op": "DUP4"
    },
    "9761": {
      "op": "DUP6"
    },
    "9762": {
      "op": "SUB"
    },
    "9763": {
      "op": "SLT"
    },
    "9764": {
      "op": "ISZERO"
    },
    "9765": {
      "op": "PUSH2",
      "value": "0x262D"
    },
    "9768": {
      "op": "JUMPI"
    },
    "9769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9771": {
      "op": "DUP1"
    },
    "9772": {
      "op": "REVERT"
    },
    "9773": {
      "op": "JUMPDEST"
    },
    "9774": {
      "op": "DUP3"
    },
    "9775": {
      "op": "MLOAD"
    },
    "9776": {
      "op": "PUSH2",
      "value": "0x2638"
    },
    "9779": {
      "op": "DUP2"
    },
    "9780": {
      "op": "PUSH2",
      "value": "0x2396"
    },
    "9783": {
      "jump": "i",
      "op": "JUMP"
    },
    "9784": {
      "op": "JUMPDEST"
    },
    "9785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9787": {
      "op": "SWAP4"
    },
    "9788": {
      "op": "SWAP1"
    },
    "9789": {
      "op": "SWAP4"
    },
    "9790": {
      "op": "ADD"
    },
    "9791": {
      "op": "MLOAD"
    },
    "9792": {
      "op": "SWAP3"
    },
    "9793": {
      "op": "SWAP5"
    },
    "9794": {
      "op": "SWAP3"
    },
    "9795": {
      "op": "SWAP4"
    },
    "9796": {
      "op": "POP"
    },
    "9797": {
      "op": "POP"
    },
    "9798": {
      "op": "POP"
    },
    "9799": {
      "jump": "o",
      "op": "JUMP"
    },
    "9800": {
      "op": "JUMPDEST"
    },
    "9801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9805": {
      "op": "DUP3"
    },
    "9806": {
      "op": "DUP5"
    },
    "9807": {
      "op": "SUB"
    },
    "9808": {
      "op": "SLT"
    },
    "9809": {
      "op": "ISZERO"
    },
    "9810": {
      "op": "PUSH2",
      "value": "0x265A"
    },
    "9813": {
      "op": "JUMPI"
    },
    "9814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9816": {
      "op": "DUP1"
    },
    "9817": {
      "op": "REVERT"
    },
    "9818": {
      "op": "JUMPDEST"
    },
    "9819": {
      "op": "DUP2"
    },
    "9820": {
      "op": "MLOAD"
    },
    "9821": {
      "op": "DUP1"
    },
    "9822": {
      "op": "ISZERO"
    },
    "9823": {
      "op": "ISZERO"
    },
    "9824": {
      "op": "DUP2"
    },
    "9825": {
      "op": "EQ"
    },
    "9826": {
      "op": "PUSH2",
      "value": "0x20EE"
    },
    "9829": {
      "op": "JUMPI"
    },
    "9830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9832": {
      "op": "DUP1"
    },
    "9833": {
      "op": "REVERT"
    },
    "9834": {
      "op": "JUMPDEST"
    },
    "9835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9837": {
      "op": "JUMPDEST"
    },
    "9838": {
      "op": "DUP4"
    },
    "9839": {
      "op": "DUP2"
    },
    "9840": {
      "op": "LT"
    },
    "9841": {
      "op": "ISZERO"
    },
    "9842": {
      "op": "PUSH2",
      "value": "0x2685"
    },
    "9845": {
      "op": "JUMPI"
    },
    "9846": {
      "op": "DUP2"
    },
    "9847": {
      "op": "DUP2"
    },
    "9848": {
      "op": "ADD"
    },
    "9849": {
      "op": "MLOAD"
    },
    "9850": {
      "op": "DUP4"
    },
    "9851": {
      "op": "DUP3"
    },
    "9852": {
      "op": "ADD"
    },
    "9853": {
      "op": "MSTORE"
    },
    "9854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9856": {
      "op": "ADD"
    },
    "9857": {
      "op": "PUSH2",
      "value": "0x266D"
    },
    "9860": {
      "op": "JUMP"
    },
    "9861": {
      "op": "JUMPDEST"
    },
    "9862": {
      "op": "DUP4"
    },
    "9863": {
      "op": "DUP2"
    },
    "9864": {
      "op": "GT"
    },
    "9865": {
      "op": "ISZERO"
    },
    "9866": {
      "op": "PUSH2",
      "value": "0x16C6"
    },
    "9869": {
      "op": "JUMPI"
    },
    "9870": {
      "op": "POP"
    },
    "9871": {
      "op": "POP"
    },
    "9872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9874": {
      "op": "SWAP2"
    },
    "9875": {
      "op": "ADD"
    },
    "9876": {
      "op": "MSTORE"
    },
    "9877": {
      "jump": "o",
      "op": "JUMP"
    },
    "9878": {
      "op": "JUMPDEST"
    },
    "9879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9881": {
      "op": "DUP3"
    },
    "9882": {
      "op": "MLOAD"
    },
    "9883": {
      "op": "PUSH2",
      "value": "0x26A8"
    },
    "9886": {
      "op": "DUP2"
    },
    "9887": {
      "op": "DUP5"
    },
    "9888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9890": {
      "op": "DUP8"
    },
    "9891": {
      "op": "ADD"
    },
    "9892": {
      "op": "PUSH2",
      "value": "0x266A"
    },
    "9895": {
      "jump": "i",
      "op": "JUMP"
    },
    "9896": {
      "op": "JUMPDEST"
    },
    "9897": {
      "op": "SWAP2"
    },
    "9898": {
      "op": "SWAP1"
    },
    "9899": {
      "op": "SWAP2"
    },
    "9900": {
      "op": "ADD"
    },
    "9901": {
      "op": "SWAP3"
    },
    "9902": {
      "op": "SWAP2"
    },
    "9903": {
      "op": "POP"
    },
    "9904": {
      "op": "POP"
    },
    "9905": {
      "jump": "o",
      "op": "JUMP"
    },
    "9906": {
      "op": "JUMPDEST"
    },
    "9907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9909": {
      "op": "DUP2"
    },
    "9910": {
      "op": "MSTORE"
    },
    "9911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9913": {
      "op": "DUP3"
    },
    "9914": {
      "op": "MLOAD"
    },
    "9915": {
      "op": "DUP1"
    },
    "9916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9918": {
      "op": "DUP5"
    },
    "9919": {
      "op": "ADD"
    },
    "9920": {
      "op": "MSTORE"
    },
    "9921": {
      "op": "PUSH2",
      "value": "0x26D1"
    },
    "9924": {
      "op": "DUP2"
    },
    "9925": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9927": {
      "op": "DUP6"
    },
    "9928": {
      "op": "ADD"
    },
    "9929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9931": {
      "op": "DUP8"
    },
    "9932": {
      "op": "ADD"
    },
    "9933": {
      "op": "PUSH2",
      "value": "0x266A"
    },
    "9936": {
      "jump": "i",
      "op": "JUMP"
    },
    "9937": {
      "op": "JUMPDEST"
    },
    "9938": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9940": {
      "op": "ADD"
    },
    "9941": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9943": {
      "op": "NOT"
    },
    "9944": {
      "op": "AND"
    },
    "9945": {
      "op": "SWAP2"
    },
    "9946": {
      "op": "SWAP1"
    },
    "9947": {
      "op": "SWAP2"
    },
    "9948": {
      "op": "ADD"
    },
    "9949": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9951": {
      "op": "ADD"
    },
    "9952": {
      "op": "SWAP3"
    },
    "9953": {
      "op": "SWAP2"
    },
    "9954": {
      "op": "POP"
    },
    "9955": {
      "op": "POP"
    },
    "9956": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7a84b9ca64901270bf3807feb06ac80717fbf6ee",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol\";\n\nimport \"./BeamerUtils.sol\";\nimport \"./ResolutionRegistry.sol\";\n\n/// The request manager.\n///\n/// This contract is responsible for keeping track of transfer requests,\n/// implementing the rules of the challenge game and holding deposited\n/// tokens until they are withdrawn.\n///\n/// It is the only contract that agents need to interact with on the source chain.\ncontract RequestManager is Ownable {\n    using Math for uint256;\n    using SafeERC20 for IERC20;\n\n    // Structs\n    // TODO: check if we can use a smaller type for `targetChainId`, so that the\n    // fields can be packed into one storage slot\n    struct Request {\n        address sender;\n        address sourceTokenAddress;\n        uint256 targetChainId;\n        address targetTokenAddress;\n        address targetAddress;\n        uint256 amount;\n        BeamerUtils.FillInfo withdrawInfo;\n        uint192 activeClaims;\n        uint256 validUntil;\n        uint256 lpFee;\n        uint256 protocolFee;\n    }\n\n    struct Claim {\n        uint256 requestId;\n        address claimer;\n        uint256 claimerStake;\n        mapping(address => uint256) challengersStakes;\n        address lastChallenger;\n        uint256 challengerStakeTotal;\n        uint256 withdrawnAmount;\n        uint256 termination;\n        bytes32 fillId;\n    }\n\n    // Events\n\n    /// Emitted when a new request has been created.\n    ///\n    /// .. seealso:: :sol:func:`createRequest`\n    event RequestCreated(\n        uint256 requestId,\n        uint256 targetChainId,\n        address sourceTokenAddress,\n        address targetTokenAddress,\n        address targetAddress,\n        uint256 amount,\n        uint256 validUntil\n    );\n\n    /// Emitted when the token deposit for request ``requestId`` has been\n    /// transferred to the ``receiver``.\n    ///\n    /// This can happen in two cases:\n    ///\n    ///  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`\n    ///  * a claim related to the request has been resolved successfully in favor of the claimer\n    ///\n    /// .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`\n    event DepositWithdrawn(uint256 requestId, address receiver);\n\n    /// Emitted when a claim or a counter-claim (challenge) has been made.\n    ///\n    /// .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`\n    event ClaimMade(\n        uint256 indexed requestId,\n        uint256 claimId,\n        address claimer,\n        uint256 claimerStake,\n        address lastChallenger,\n        uint256 challengerStakeTotal,\n        uint256 termination,\n        bytes32 fillId\n    );\n\n    /// Emitted when staked native tokens tied to a claim have been withdrawn.\n    ///\n    /// This can only happen when the claim has been resolved and the caller\n    /// of :sol:func:`withdraw` is allowed to withdraw their stake.\n    ///\n    /// .. seealso:: :sol:func:`withdraw`\n    event ClaimStakeWithdrawn(\n        uint256 claimId,\n        uint256 indexed requestId,\n        address claimReceiver\n    );\n\n    event FinalityPeriodUpdated(uint256 targetChainId, uint256 finalityPeriod);\n\n    // Constants\n\n    /// The minimum amount of source chain's native token that the claimer needs to\n    /// provide when making a claim, as well in each round of the challenge game.\n    uint256 public claimStake;\n\n    /// The period for which the claim is valid.\n    uint256 public claimPeriod;\n\n    /// The period by which the termination time of a claim is extended after each\n    /// round of the challenge game. This period should allow enough time for the\n    /// other parties to counter-challenge.\n    ///\n    /// .. note::\n    ///\n    ///    The claim's termination time is extended only if it is less than the\n    ///    extension time.\n    ///\n    /// Note that in the first challenge round, i.e. the round initiated by the first\n    /// challenger, the termination time is extended additionally by the finality\n    /// period of the target chain. This is done to allow for L1 resolution.\n    uint256 public challengePeriodExtension;\n\n    /// The minimum validity period of a request.\n    uint256 public constant MIN_VALIDITY_PERIOD = 5 minutes;\n\n    /// The maximum validity period of a request.\n    uint256 public constant MAX_VALIDITY_PERIOD = 52 weeks;\n\n    // Variables\n\n    /// Indicates whether the contract is deprecated. A deprecated contract\n    /// cannot be used to create new requests.\n    bool public deprecated;\n\n    /// The request counter, used to generate request IDs.\n    uint256 public requestCounter;\n\n    /// The claim counter, used to generate claim IDs.\n    uint256 public claimCounter;\n\n    /// The resolution registry that is used to query for results of L1 resolution.\n    ResolutionRegistry public resolutionRegistry;\n\n    /// Maps target rollup chain IDs to finality periods.\n    /// Finality periods are in seconds.\n    mapping(uint256 => uint256) public finalityPeriods;\n\n    /// Maps request IDs to requests.\n    mapping(uint256 => Request) public requests;\n\n    /// Maps claim IDs to claims.\n    mapping(uint256 => Claim) public claims;\n\n    /// The minimum fee, denominated in transfer token, paid to the liquidity provider.\n    uint256 public minLpFee = 5 ether; // 5e18\n\n    /// Liquidity provider fee percentage, expressed in ppm (parts per million).\n    uint256 public lpFeePPM = 1_000; // 0.1% of the token amount being transferred\n\n    /// Protocol fee percentage, expressed in ppm (parts per million).\n    uint256 public protocolFeePPM = 0; // 0% of the token amount being transferred\n\n    /// The maximum amount of tokens that can be transferred in a single request.\n    uint256 public transferLimit = 10000 ether; // 10000e18\n\n    /// Maps ERC20 token addresses to related token amounts that belong to the protocol.\n    mapping(address => uint256) public collectedProtocolFees;\n\n    /// Compute the liquidy provider fee that needs to be paid for a given transfer amount.\n    function lpFee(uint256 amount) public view returns (uint256) {\n        return Math.max(minLpFee, (amount * lpFeePPM) / 1_000_000);\n    }\n\n    /// Compute the protocol fee that needs to be paid for a given transfer amount.\n    function protocolFee(uint256 amount) public view returns (uint256) {\n        return (amount * protocolFeePPM) / 1_000_000;\n    }\n\n    /// Compute the total fee that needs to be paid for a given transfer amount.\n    /// The total fee is the sum of the liquidity provider fee and the protocol fee.\n    function totalFee(uint256 amount) public view returns (uint256) {\n        return lpFee(amount) + protocolFee(amount);\n    }\n\n    // Modifiers\n\n    /// Check whether a given request ID is valid.\n    modifier validRequestId(uint256 requestId) {\n        require(\n            requestId <= requestCounter && requestId > 0,\n            \"requestId not valid\"\n        );\n        _;\n    }\n\n    /// Check whether a given claim ID is valid.\n    modifier validClaimId(uint256 claimId) {\n        require(claimId <= claimCounter && claimId > 0, \"claimId not valid\");\n        _;\n    }\n\n    /// Constructor.\n    ///\n    /// @param _claimStake Claim stake amount.\n    /// @param _claimPeriod Claim period, in seconds.\n    /// @param _challengePeriodExtension Challenge period extension, in seconds.\n    /// @param _resolutionRegistry Address of the resolution registry.\n    constructor(\n        uint256 _claimStake,\n        uint256 _claimPeriod,\n        uint256 _challengePeriodExtension,\n        address _resolutionRegistry\n    ) {\n        claimStake = _claimStake;\n        claimPeriod = _claimPeriod;\n        challengePeriodExtension = _challengePeriodExtension;\n        resolutionRegistry = ResolutionRegistry(_resolutionRegistry);\n    }\n\n    /// Create a new transfer request.\n    ///\n    /// @param targetChainId ID of the target chain.\n    /// @param sourceTokenAddress Address of the token contract on the source chain.\n    /// @param targetTokenAddress Address of the token contract on the target chain.\n    /// @param targetAddress Recipient address on the target chain.\n    /// @param amount Amount of tokens to transfer. Does not include fees.\n    /// @param validityPeriod The number of seconds the request is to be considered valid.\n    ///                       Once its validity period has elapsed, the request cannot be claimed\n    ///                       anymore and will eventually expire, allowing the request submitter\n    ///                       to withdraw the deposited tokens if there are no active claims.\n    /// @return ID of the newly created request.\n    function createRequest(\n        uint256 targetChainId,\n        address sourceTokenAddress,\n        address targetTokenAddress,\n        address targetAddress,\n        uint256 amount,\n        uint256 validityPeriod\n    ) external returns (uint256) {\n        require(deprecated == false, \"Contract is deprecated\");\n        require(\n            finalityPeriods[targetChainId] != 0,\n            \"Target rollup not supported\"\n        );\n        require(\n            validityPeriod >= MIN_VALIDITY_PERIOD,\n            \"Validity period too short\"\n        );\n        require(\n            validityPeriod <= MAX_VALIDITY_PERIOD,\n            \"Validity period too long\"\n        );\n        require(amount <= transferLimit, \"Amount exceeds transfer limit\");\n\n        IERC20 token = IERC20(sourceTokenAddress);\n\n        uint256 lpFee = lpFee(amount);\n        uint256 protocolFee = protocolFee(amount);\n        uint256 totalTokenAmount = amount + lpFee + protocolFee;\n\n        require(\n            token.allowance(msg.sender, address(this)) >= totalTokenAmount,\n            \"Insufficient allowance\"\n        );\n\n        requestCounter += 1;\n        Request storage newRequest = requests[requestCounter];\n        newRequest.sender = msg.sender;\n        newRequest.sourceTokenAddress = sourceTokenAddress;\n        newRequest.targetChainId = targetChainId;\n        newRequest.targetTokenAddress = targetTokenAddress;\n        newRequest.targetAddress = targetAddress;\n        newRequest.amount = amount;\n        newRequest.withdrawInfo = BeamerUtils.FillInfo(address(0), bytes32(0));\n        newRequest.validUntil = block.timestamp + validityPeriod;\n        newRequest.lpFee = lpFee;\n        newRequest.protocolFee = protocolFee;\n\n        emit RequestCreated(\n            requestCounter,\n            targetChainId,\n            sourceTokenAddress,\n            targetTokenAddress,\n            targetAddress,\n            amount,\n            newRequest.validUntil\n        );\n\n        token.safeTransferFrom(msg.sender, address(this), totalTokenAmount);\n\n        return requestCounter;\n    }\n\n    /// Withdraw funds deposited with an expired request.\n    ///\n    /// No claims must be active for the request.\n    ///\n    /// @param requestId ID of the expired request.\n    function withdrawExpiredRequest(uint256 requestId)\n        external\n        validRequestId(requestId)\n    {\n        Request storage request = requests[requestId];\n\n        require(\n            request.withdrawInfo.filler == address(0),\n            \"Deposit already withdrawn\"\n        );\n        require(\n            block.timestamp >= request.validUntil,\n            \"Request not expired yet\"\n        );\n        require(request.activeClaims == 0, \"Active claims running\");\n\n        request.withdrawInfo.filler = request.sender;\n\n        emit DepositWithdrawn(requestId, request.sender);\n\n        IERC20 token = IERC20(request.sourceTokenAddress);\n        token.safeTransfer(\n            request.sender,\n            request.amount + request.lpFee + request.protocolFee\n        );\n    }\n\n    /// Claim that a request was filled by the caller.\n    ///\n    /// The request must still be valid at call time.\n    /// The caller must provide the ``claimStake`` amount of source rollup's native\n    /// token.\n    ///\n    /// @param requestId ID of the request.\n    /// @param fillId The fill ID.\n    /// @return The claim ID.\n    function claimRequest(uint256 requestId, bytes32 fillId)\n        external\n        payable\n        validRequestId(requestId)\n        returns (uint256)\n    {\n        Request storage request = requests[requestId];\n\n        require(block.timestamp < request.validUntil, \"Request expired\");\n        require(\n            request.withdrawInfo.filler == address(0),\n            \"Deposit already withdrawn\"\n        );\n        require(msg.value == claimStake, \"Invalid stake amount\");\n        require(fillId != bytes32(0), \"FillId must not be 0x0\");\n\n        request.activeClaims += 1;\n        claimCounter += 1;\n\n        Claim storage claim = claims[claimCounter];\n        claim.requestId = requestId;\n        claim.claimer = msg.sender;\n        claim.claimerStake = claimStake;\n        claim.lastChallenger = address(0);\n        claim.challengerStakeTotal = 0;\n        claim.withdrawnAmount = 0;\n        claim.termination = block.timestamp + claimPeriod;\n        claim.fillId = fillId;\n\n        emit ClaimMade(\n            requestId,\n            claimCounter,\n            claim.claimer,\n            claim.claimerStake,\n            claim.lastChallenger,\n            claim.challengerStakeTotal,\n            claim.termination,\n            fillId\n        );\n\n        return claimCounter;\n    }\n\n    /// Challenge an existing claim.\n    ///\n    /// The claim must still be valid at call time.\n    /// This function implements one round of the challenge game.\n    /// The original claimer is allowed to call this function only\n    /// after someone else made a challenge, i.e. every second round.\n    /// However, once the original claimer counter-challenges, anyone\n    /// can join the game and make another challenge.\n    ///\n    /// The caller must provide enough native tokens as their stake.\n    /// For the original claimer, the minimum stake is\n    /// ``challengerStakeTotal - claimerStake + claimStake``.\n    ///\n    /// For challengers, the minimum stake is\n    /// ``claimerStake - challengerStakeTotal + 1``.\n    ///\n    /// An example (time flows downwards, claimStake = 10)::\n    ///\n    ///   claimRequest() by Max [stakes 10]\n    ///   challengeClaim() by Alice [stakes 11]\n    ///   challengeClaim() by Max [stakes 11]\n    ///   challengeClaim() by Bob [stakes 16]\n    ///\n    /// In this example, if Max didn't want to lose the challenge game to\n    /// Alice and Bob, he would have to challenge with a stake of at least 16.\n    ///\n    /// @param claimId The claim ID.\n    function challengeClaim(uint256 claimId)\n        external\n        payable\n        validClaimId(claimId)\n    {\n        Claim storage claim = claims[claimId];\n        Request storage request = requests[claim.requestId];\n        require(block.timestamp < claim.termination, \"Claim expired\");\n\n        address nextActor;\n        uint256 minValue;\n        uint256 periodExtension = challengePeriodExtension;\n        uint256 claimerStake = claim.claimerStake;\n        uint256 challengerStakeTotal = claim.challengerStakeTotal;\n\n        if (claimerStake > challengerStakeTotal) {\n            if (challengerStakeTotal == 0) {\n                periodExtension += finalityPeriods[request.targetChainId];\n            }\n            require(claim.claimer != msg.sender, \"Cannot challenge own claim\");\n            nextActor = msg.sender;\n            minValue = claimerStake - challengerStakeTotal + 1;\n        } else {\n            nextActor = claim.claimer;\n            minValue = challengerStakeTotal - claimerStake + claimStake;\n        }\n\n        require(msg.sender == nextActor, \"Not eligible to outbid\");\n        require(msg.value >= minValue, \"Not enough stake provided\");\n\n        if (nextActor == claim.claimer) {\n            claim.claimerStake += msg.value;\n        } else {\n            claim.lastChallenger = msg.sender;\n            claim.challengersStakes[msg.sender] += msg.value;\n            claim.challengerStakeTotal += msg.value;\n        }\n\n        claim.termination = Math.max(\n            claim.termination,\n            block.timestamp + periodExtension\n        );\n        uint256 minimumTermination = block.timestamp + challengePeriodExtension;\n        require(\n            claim.termination >= minimumTermination,\n            \"Claim termination did not increase enough\"\n        );\n\n        emit ClaimMade(\n            claim.requestId,\n            claimId,\n            claim.claimer,\n            claim.claimerStake,\n            claim.lastChallenger,\n            claim.challengerStakeTotal,\n            claim.termination,\n            claim.fillId\n        );\n    }\n\n    /// Withdraw the deposit that the request submitter left with the contract,\n    /// as well as the staked native tokens associated with the claim.\n    ///\n    /// In case the caller of this function is a challenger that won the game,\n    /// they will only get their staked native tokens plus the reward in the form\n    /// of full (sole challenger) or partial (multiple challengers) amount\n    /// of native tokens staked by the dishonest claimer.\n    ///\n    /// @param claimId The claim ID.\n    /// @return The address of the deposit receiver.\n    function withdraw(uint256 claimId)\n        external\n        validClaimId(claimId)\n        returns (address)\n    {\n        Claim storage claim = claims[claimId];\n        Request storage request = requests[claim.requestId];\n\n        (address claimReceiver, uint256 ethToTransfer) = resolveClaim(claimId);\n\n        if (claim.challengersStakes[claimReceiver] > 0) {\n            //Re-entrancy protection\n            claim.challengersStakes[claimReceiver] = 0;\n        }\n\n        // First time withdraw is called, remove it from active claims\n        if (claim.withdrawnAmount == 0) {\n            request.activeClaims -= 1;\n        }\n        claim.withdrawnAmount += ethToTransfer;\n        require(\n            claim.withdrawnAmount <=\n                claim.claimerStake + claim.challengerStakeTotal,\n            \"Amount to withdraw too large\"\n        );\n\n        (bool sent, ) = claimReceiver.call{value: ethToTransfer}(\"\");\n        require(sent, \"Failed to send Ether\");\n\n        emit ClaimStakeWithdrawn(claimId, claim.requestId, claimReceiver);\n\n        if (\n            request.withdrawInfo.filler == address(0) &&\n            claimReceiver == claim.claimer\n        ) {\n            withdrawDeposit(request, claim);\n        }\n\n        return claimReceiver;\n    }\n\n    function resolveClaim(uint256 claimId)\n        private\n        view\n        returns (address, uint256)\n    {\n        Claim storage claim = claims[claimId];\n        Request storage request = requests[claim.requestId];\n        uint256 claimerStake = claim.claimerStake;\n        uint256 challengerStakeTotal = claim.challengerStakeTotal;\n        require(\n            claim.withdrawnAmount < claimerStake + challengerStakeTotal,\n            \"Claim already withdrawn\"\n        );\n\n        bytes32 requestHash = BeamerUtils.createRequestHash(\n            claim.requestId,\n            block.chainid,\n            request.targetChainId,\n            request.targetTokenAddress,\n            request.targetAddress,\n            request.amount\n        );\n\n        bytes32 fillHash = BeamerUtils.createFillHash(\n            requestHash,\n            claim.fillId\n        );\n\n        bool claimValid = false;\n        BeamerUtils.FillInfo memory withdrawInfo = request.withdrawInfo;\n\n        // Priority list for validity check of claim\n        // Claim is valid if either\n        // 1) ResolutionRegistry entry in fillers, claimer is the filler\n        // 2) ResolutionRegistry entry in invalidFillHashes, claim is invalid\n        // 3) Request.withdrawInfo, the claimer withdrew with an identical claim (same fill id)\n        // 4) Claim properties, claim terminated and claimer has the highest stake\n        (address filler, bytes32 fillId) = resolutionRegistry.fillers(\n            requestHash\n        );\n\n        if (filler == address(0)) {\n            (filler, fillId) = (withdrawInfo.filler, withdrawInfo.fillId);\n        }\n\n        if (resolutionRegistry.invalidFillHashes(fillHash)) {\n            // Claim resolution via 2)\n            claimValid = false;\n        } else if (filler != address(0)) {\n            // Claim resolution via 1) or 3)\n            claimValid = filler == claim.claimer && fillId == claim.fillId;\n        } else {\n            // Claim resolution via 4)\n            require(\n                block.timestamp >= claim.termination,\n                \"Claim period not finished\"\n            );\n            claimValid = claimerStake > challengerStakeTotal;\n        }\n\n        // Calculate withdraw scheme for claim stakes\n        uint256 ethToTransfer;\n        address claimReceiver;\n\n        if (claimValid) {\n            // If claim is valid, all stakes go to the claimer\n            ethToTransfer = claimerStake + challengerStakeTotal;\n            claimReceiver = claim.claimer;\n        } else if (challengerStakeTotal > 0) {\n            // If claim is invalid, partial withdrawal by the sender\n            ethToTransfer = 2 * claim.challengersStakes[msg.sender];\n            claimReceiver = msg.sender;\n\n            require(ethToTransfer > 0, \"Challenger has nothing to withdraw\");\n        } else {\n            // The unlikely event is possible that a false claim has no challenger\n            // If it is known that the claim is false then the claim stake goes to the platform\n            ethToTransfer = claimerStake;\n            claimReceiver = owner();\n        }\n\n        // If the challenger wins and is the last challenger, he gets either\n        // twice his stake plus the excess stake (if the claimer was winning), or\n        // twice his stake minus the difference between the claimer and challenger stakes (if the claimer was losing)\n        if (msg.sender == claim.lastChallenger) {\n            if (claimerStake > challengerStakeTotal) {\n                ethToTransfer += (claimerStake - challengerStakeTotal);\n            } else {\n                ethToTransfer -= (challengerStakeTotal - claimerStake);\n            }\n        }\n\n        return (claimReceiver, ethToTransfer);\n    }\n\n    function withdrawDeposit(Request storage request, Claim storage claim)\n        private\n    {\n        address claimer = claim.claimer;\n        emit DepositWithdrawn(claim.requestId, claimer);\n\n        request.withdrawInfo = BeamerUtils.FillInfo(claimer, claim.fillId);\n\n        collectedProtocolFees[request.sourceTokenAddress] += request\n            .protocolFee;\n\n        IERC20 token = IERC20(request.sourceTokenAddress);\n        token.safeTransfer(claimer, request.amount + request.lpFee);\n    }\n\n    /// Withdraw protocol fees collected by the contract.\n    ///\n    /// Protocol fees are paid in token transferred.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param tokenAddress The address of the token contract.\n    /// @param recipient The address the fees should be sent to.\n    function withdrawProtocolFees(address tokenAddress, address recipient)\n        external\n        onlyOwner\n    {\n        uint256 amount = collectedProtocolFees[tokenAddress];\n        require(amount > 0, \"Protocol fee is zero\");\n        collectedProtocolFees[tokenAddress] = 0;\n\n        IERC20 token = IERC20(tokenAddress);\n        token.safeTransfer(recipient, amount);\n    }\n\n    /// Update fee parameters.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param newProtocolFeePPM The new value for ``protocolFeePPM``.\n    /// @param newLpFeePPM The new value for ``lpFeePPM``.\n    /// @param newMinLpFee The new value for ``minLpFee``.\n    function updateFeeData(\n        uint256 newProtocolFeePPM,\n        uint256 newLpFeePPM,\n        uint256 newMinLpFee\n    ) external onlyOwner {\n        protocolFeePPM = newProtocolFeePPM;\n        lpFeePPM = newLpFeePPM;\n        minLpFee = newMinLpFee;\n    }\n\n    /// Update the transfer amount limit.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param newTransferLimit The new value for ``transferLimit``.\n    function updateTransferLimit(uint256 newTransferLimit) external onlyOwner {\n        transferLimit = newTransferLimit;\n    }\n\n    /// Set the finality period for the given target chain.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param targetChainId The target chain ID.\n    /// @param finalityPeriod Finality period in seconds.\n    function setFinalityPeriod(uint256 targetChainId, uint256 finalityPeriod)\n        external\n        onlyOwner\n    {\n        require(finalityPeriod > 0, \"Finality period must be greater than 0\");\n        finalityPeriods[targetChainId] = finalityPeriod;\n\n        emit FinalityPeriodUpdated(targetChainId, finalityPeriod);\n    }\n\n    /// Mark the contract as deprecated.\n    ///\n    /// Once the contract is deprecated, it cannot be used to create new\n    /// requests anymore. Withdrawing deposited funds and claim stakes\n    /// still works, though.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    function deprecateContract() external onlyOwner {\n        require(deprecated == false, \"Contract already deprecated\");\n        deprecated = true;\n    }\n}\n",
  "sourceMap": "762:24764:12:-:0;;;5588:7;5562:33;;5717:5;5691:31;;5878:1;5846:33;;6043:11;6012:42;;7700:366;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:6;921:18:0;:32::i;:::-;7867:10:12;:24;;;;7901:11;:26;;;;7937:24;:52;7999:18;:60;;-1:-1:-1;;;;;;7999:60:12;-1:-1:-1;;;;;7999:60:12;;;;;;;;;762:24764;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:474:25:-;111:6;119;127;135;188:3;176:9;167:7;163:23;159:33;156:53;;;205:1;202;195:12;156:53;228:16;;284:2;269:18;;263:25;328:2;313:18;;307:25;375:2;360:18;;354:25;228:16;;-1:-1:-1;263:25:25;;-1:-1:-1;307:25:25;-1:-1:-1;;;;;;408:31:25;;398:42;;388:70;;454:1;451;444:12;388:70;14:474;;;;-1:-1:-1;14:474:25;;-1:-1:-1;;14:474:25:o;:::-;762:24764:12;;;;;;",
  "sourcePath": "contracts/contracts/RequestManager.sol",
  "type": "contract"
}