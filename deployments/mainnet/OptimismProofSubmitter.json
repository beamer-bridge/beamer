{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "messenger_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "callers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "l1Resolver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "submitNonFillProof",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "l1Resolver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        }
      ],
      "name": "submitProof",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "fillId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "fillHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct IProofSubmitter.ProofReceipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "15": "contracts/contracts/RestrictedCalls.sol",
    "20": "contracts/contracts/chains/optimism/OptimismProofSubmitter.sol",
    "23": "contracts/interfaces/IMessenger.sol",
    "24": "contracts/interfaces/IProofSubmitter.sol",
    "6": "/home/ivan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "8": "contracts/contracts/BeamerUtils.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/chains/optimism/OptimismProofSubmitter.sol",
    "exportedSymbols": {
      "BeamerUtils": [
        87
      ],
      "Context": [
        4099
      ],
      "CrossDomainRestrictedCalls": [
        192
      ],
      "IMessenger": [
        3063
      ],
      "IProofSubmitter": [
        3401
      ],
      "OptimismProofSubmitter": [
        2710
      ],
      "Ownable": [
        3037
      ],
      "ResolutionRegistry": [
        2168
      ],
      "Resolver": [
        2339
      ],
      "RestrictedCalls": [
        2412
      ]
    },
    "id": 2711,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2587,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:20"
      },
      {
        "absolutePath": "contracts/interfaces/IProofSubmitter.sol",
        "file": "../../../interfaces/IProofSubmitter.sol",
        "id": 2588,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2711,
        "sourceUnit": 3402,
        "src": "58:49:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/BeamerUtils.sol",
        "file": "../../BeamerUtils.sol",
        "id": 2589,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2711,
        "sourceUnit": 88,
        "src": "109:31:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/Resolver.sol",
        "file": "../../Resolver.sol",
        "id": 2590,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2711,
        "sourceUnit": 2340,
        "src": "141:28:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/RestrictedCalls.sol",
        "file": "../../RestrictedCalls.sol",
        "id": 2591,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2711,
        "sourceUnit": 2413,
        "src": "170:35:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2592,
              "name": "IProofSubmitter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3401,
              "src": "242:15:20"
            },
            "id": 2593,
            "nodeType": "InheritanceSpecifier",
            "src": "242:15:20"
          },
          {
            "baseName": {
              "id": 2594,
              "name": "RestrictedCalls",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2412,
              "src": "259:15:20"
            },
            "id": 2595,
            "nodeType": "InheritanceSpecifier",
            "src": "259:15:20"
          }
        ],
        "canonicalName": "OptimismProofSubmitter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2710,
        "linearizedBaseContracts": [
          2710,
          2412,
          3037,
          4099,
          3401
        ],
        "name": "OptimismProofSubmitter",
        "nameLocation": "216:22:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2598,
            "mutability": "mutable",
            "name": "messenger",
            "nameLocation": "300:9:20",
            "nodeType": "VariableDeclaration",
            "scope": 2710,
            "src": "281:28:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMessenger_$3063",
              "typeString": "contract IMessenger"
            },
            "typeName": {
              "id": 2597,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2596,
                "name": "IMessenger",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3063,
                "src": "281:10:20"
              },
              "referencedDeclaration": 3063,
              "src": "281:10:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMessenger_$3063",
                "typeString": "contract IMessenger"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2601,
            "mutability": "constant",
            "name": "MESSAGE_GAS_LIMIT",
            "nameLocation": "339:17:20",
            "nodeType": "VariableDeclaration",
            "scope": 2710,
            "src": "315:53:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 2599,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "315:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "315f3030305f303030",
              "id": 2600,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "359:9:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1_000_000"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2612,
              "nodeType": "Block",
              "src": "407:51:20",
              "statements": [
                {
                  "expression": {
                    "id": 2610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2606,
                      "name": "messenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2598,
                      "src": "417:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMessenger_$3063",
                        "typeString": "contract IMessenger"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2608,
                          "name": "messenger_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2603,
                          "src": "440:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2607,
                        "name": "IMessenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3063,
                        "src": "429:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMessenger_$3063_$",
                          "typeString": "type(contract IMessenger)"
                        }
                      },
                      "id": 2609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "429:22:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMessenger_$3063",
                        "typeString": "contract IMessenger"
                      }
                    },
                    "src": "417:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMessenger_$3063",
                      "typeString": "contract IMessenger"
                    }
                  },
                  "id": 2611,
                  "nodeType": "ExpressionStatement",
                  "src": "417:34:20"
                }
              ]
            },
            "id": 2613,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2603,
                  "mutability": "mutable",
                  "name": "messenger_",
                  "nameLocation": "395:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2613,
                  "src": "387:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "387:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "386:20:20"
            },
            "returnParameters": {
              "id": 2605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "407:0:20"
            },
            "scope": 2710,
            "src": "375:83:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3388
            ],
            "body": {
              "id": 2674,
              "nodeType": "Block",
              "src": "708:435:20",
              "statements": [
                {
                  "assignments": [
                    2634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2634,
                      "mutability": "mutable",
                      "name": "fillId",
                      "nameLocation": "726:6:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 2674,
                      "src": "718:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2633,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "718:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2641,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2636,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "745:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "745:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 2638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "760:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "745:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2635,
                      "name": "blockhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -5,
                      "src": "735:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256) view returns (bytes32)"
                      }
                    },
                    "id": 2640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "735:27:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "718:44:20"
                },
                {
                  "assignments": [
                    2643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2643,
                      "mutability": "mutable",
                      "name": "fillHash",
                      "nameLocation": "780:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 2674,
                      "src": "772:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2642,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "772:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2649,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2646,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2619,
                        "src": "818:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2647,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2634,
                        "src": "831:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2644,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "791:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$87_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 2645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createFillHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "791:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 2648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:47:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "772:66:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2653,
                        "name": "l1Resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2615,
                        "src": "884:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2656,
                              "name": "Resolver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2339,
                              "src": "940:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Resolver_$2339_$",
                                "typeString": "type(contract Resolver)"
                              }
                            },
                            "id": 2657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "resolve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2316,
                            "src": "940:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function Resolver.resolve(bytes32,bytes32,uint256,uint256,address)"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 2658,
                                "name": "requestHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2619,
                                "src": "975:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 2659,
                                "name": "fillId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2634,
                                "src": "988:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2660,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "996:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chainid",
                                "nodeType": "MemberAccess",
                                "src": "996:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2662,
                                "name": "sourceChainId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2617,
                                "src": "1011:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2663,
                                "name": "filler",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2621,
                                "src": "1026:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 2664,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "974:59:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$",
                              "typeString": "tuple(bytes32,bytes32,uint256,uint256,address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function Resolver.resolve(bytes32,bytes32,uint256,uint256,address)"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$",
                              "typeString": "tuple(bytes32,bytes32,uint256,uint256,address)"
                            }
                          ],
                          "expression": {
                            "id": 2654,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "908:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "908:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "908:139:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 2666,
                        "name": "MESSAGE_GAS_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2601,
                        "src": "1061:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 2650,
                        "name": "messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2598,
                        "src": "849:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMessenger_$3063",
                          "typeString": "contract IMessenger"
                        }
                      },
                      "id": 2652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3050,
                      "src": "849:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,bytes memory,uint32) external"
                      }
                    },
                    "id": 2667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:239:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2668,
                  "nodeType": "ExpressionStatement",
                  "src": "849:239:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2670,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2634,
                        "src": "1119:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2671,
                        "name": "fillHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2643,
                        "src": "1127:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2669,
                      "name": "ProofReceipt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3373,
                      "src": "1106:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ProofReceipt_$3373_storage_ptr_$",
                        "typeString": "type(struct IProofSubmitter.ProofReceipt storage pointer)"
                      }
                    },
                    "id": 2672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1106:30:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProofReceipt_$3373_memory_ptr",
                      "typeString": "struct IProofSubmitter.ProofReceipt memory"
                    }
                  },
                  "functionReturnParameters": 2632,
                  "id": 2673,
                  "nodeType": "Return",
                  "src": "1099:37:20"
                }
              ]
            },
            "functionSelector": "f607a7c8",
            "id": 2675,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 2624,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "639:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 2625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "chainid",
                    "nodeType": "MemberAccess",
                    "src": "639:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "expression": {
                      "id": 2626,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "654:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "654:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2628,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2623,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2411,
                  "src": "628:10:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "628:37:20"
              }
            ],
            "name": "submitProof",
            "nameLocation": "473:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2615,
                  "mutability": "mutable",
                  "name": "l1Resolver",
                  "nameLocation": "502:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2675,
                  "src": "494:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2617,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "530:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2675,
                  "src": "522:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2619,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "561:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2675,
                  "src": "553:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2618,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2621,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "590:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2675,
                  "src": "582:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "484:118:20"
            },
            "returnParameters": {
              "id": 2632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2675,
                  "src": "683:19:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ProofReceipt_$3373_memory_ptr",
                    "typeString": "struct IProofSubmitter.ProofReceipt"
                  },
                  "typeName": {
                    "id": 2630,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2629,
                      "name": "ProofReceipt",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3373,
                      "src": "683:12:20"
                    },
                    "referencedDeclaration": 3373,
                    "src": "683:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProofReceipt_$3373_storage_ptr",
                      "typeString": "struct IProofSubmitter.ProofReceipt"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "682:21:20"
            },
            "scope": 2710,
            "src": "464:679:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3400
            ],
            "body": {
              "id": 2708,
              "nodeType": "Block",
              "src": "1304:260:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2689,
                        "name": "l1Resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2677,
                        "src": "1349:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2692,
                              "name": "Resolver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2339,
                              "src": "1405:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Resolver_$2339_$",
                                "typeString": "type(contract Resolver)"
                              }
                            },
                            "id": 2693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "resolve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2316,
                            "src": "1405:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function Resolver.resolve(bytes32,bytes32,uint256,uint256,address)"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 2694,
                                "name": "requestHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2681,
                                "src": "1440:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 2695,
                                "name": "fillId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2683,
                                "src": "1453:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2696,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "1461:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chainid",
                                "nodeType": "MemberAccess",
                                "src": "1461:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2698,
                                "name": "sourceChainId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2679,
                                "src": "1476:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2701,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1499:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2700,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1491:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2699,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1491:7:20",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1491:10:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 2703,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1439:63:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$",
                              "typeString": "tuple(bytes32,bytes32,uint256,uint256,address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function Resolver.resolve(bytes32,bytes32,uint256,uint256,address)"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$",
                              "typeString": "tuple(bytes32,bytes32,uint256,uint256,address)"
                            }
                          ],
                          "expression": {
                            "id": 2690,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1373:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "1373:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1373:143:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 2705,
                        "name": "MESSAGE_GAS_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2601,
                        "src": "1530:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 2686,
                        "name": "messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2598,
                        "src": "1314:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMessenger_$3063",
                          "typeString": "contract IMessenger"
                        }
                      },
                      "id": 2688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3050,
                      "src": "1314:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,bytes memory,uint32) external"
                      }
                    },
                    "id": 2706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:243:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2707,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:243:20"
                }
              ]
            },
            "functionSelector": "7760a2e5",
            "id": 2709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitNonFillProof",
            "nameLocation": "1158:18:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2677,
                  "mutability": "mutable",
                  "name": "l1Resolver",
                  "nameLocation": "1194:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2709,
                  "src": "1186:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2679,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "1222:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2709,
                  "src": "1214:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2681,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "1253:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2709,
                  "src": "1245:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2680,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2683,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "1282:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2709,
                  "src": "1274:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1176:118:20"
            },
            "returnParameters": {
              "id": 2685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1304:0:20"
            },
            "scope": 2710,
            "src": "1149:415:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2711,
        "src": "207:1359:20",
        "usedErrors": []
      }
    ],
    "src": "32:1535:20"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161090938038061090983398101604081905261002f916100ad565b6100383361005d565b600280546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b61081d806100ec6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d7578063ef1556d3146100f2578063f2fde38b14610105578063f607a7c81461011857600080fd5b8063715018a6146100825780637760a2e51461008c5780637936464e1461009f575b600080fd5b61008a610146565b005b61008a61009a366004610634565b610185565b6100c26100ad36600461066d565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6000546040516001600160a01b0390911681526020016100ce565b61008a610100366004610686565b61024b565b61008a6101133660046106b2565b61034c565b61012b6101263660046106d4565b6103e7565b604080518251815260209283015192810192909252016100ce565b6000546001600160a01b031633146101795760405162461bcd60e51b81526004016101709061071a565b60405180910390fd5b61018360006105c8565b565b600254604051602481018490526044810183905246606482015260848101859052600060a48201526001600160a01b0390911690633dbb202b90869060c40160408051601f198184030181529181526020820180516001600160e01b03166314adc78760e31b179052516001600160e01b031960e085901b168152610213929190620f42409060040161074f565b600060405180830381600087803b15801561022d57600080fd5b505af1158015610241573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146102755760405162461bcd60e51b81526004016101709061071a565b600082826040516020016102a592919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f1981840301815291815281516020928301206000818152600190935291205490915060ff161561032c5760405162461bcd60e51b815260206004820152602660248201527f5265737472696374656443616c6c733a2063616c6c657220616c72656164792060448201526565786973747360d01b6064820152608401610170565b6000908152600160208190526040909120805460ff191690911790555050565b6000546001600160a01b031633146103765760405162461bcd60e51b81526004016101709061071a565b6001600160a01b0381166103db5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610170565b6103e4816105c8565b50565b604080518082019091526000808252602082015246336000828260405160200161042d92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f1981840301815291815281516020928301206000818152600190935291205490915060ff166104a45760405162461bcd60e51b815260206004820152601f60248201527f5265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c6572006044820152606401610170565b60006104b16001436107c2565b40905060006104e78883604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600254604051602481018b905260448101859052466064820152608481018c90526001600160a01b038a811660a4830152929350911690633dbb202b908c9060c40160408051601f198184030181529181526020820180516001600160e01b03166314adc78760e31b179052516001600160e01b031960e085901b168152610578929190620f42409060040161074f565b600060405180830381600087803b15801561059257600080fd5b505af11580156105a6573d6000803e3d6000fd5b5050604080518082019091529384525050602082015298975050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461062f57600080fd5b919050565b6000806000806080858703121561064a57600080fd5b61065385610618565b966020860135965060408601359560600135945092505050565b60006020828403121561067f57600080fd5b5035919050565b6000806040838503121561069957600080fd5b823591506106a960208401610618565b90509250929050565b6000602082840312156106c457600080fd5b6106cd82610618565b9392505050565b600080600080608085870312156106ea57600080fd5b6106f385610618565b9350602085013592506040850135915061070f60608601610618565b905092959194509250565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60018060a01b038416815260006020606081840152845180606085015260005b8181101561078b5786810183015185820160800152820161076f565b8181111561079d576000608083870101525b5063ffffffff9490941660408401525050601f91909101601f19160160800192915050565b6000828210156107e257634e487b7160e01b600052601160045260246000fd5b50039056fea264697066735822122020b34e676f81c54675e96337f957790290a502337680d3d3b5826d02daf4abe164736f6c634300080d0033",
  "bytecodeSha1": "d3ed708bf3030968d166ace66d8334263688e82d",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "OptimismProofSubmitter",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "13": [
            2006,
            2028,
            true
          ]
        }
      },
      "15": {
        "OptimismProofSubmitter.submitProof": {
          "15": [
            1406,
            1418,
            true
          ]
        },
        "RestrictedCalls.addCaller": {
          "14": [
            880,
            893,
            true
          ]
        }
      },
      "20": {},
      "23": {},
      "24": {},
      "6": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "11": [
            2378,
            2395
          ],
          "12": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "2": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "6": [
            1998,
            2071
          ],
          "7": [
            2081,
            2109
          ]
        }
      },
      "15": {
        "RestrictedCalls.addCaller": {
          "4": [
            872,
            936
          ],
          "5": [
            946,
            965
          ]
        }
      },
      "20": {
        "OptimismProofSubmitter.submitNonFillProof": {
          "3": [
            1314,
            1557
          ]
        },
        "OptimismProofSubmitter.submitProof": {
          "9": [
            849,
            1088
          ],
          "10": [
            1099,
            1136
          ]
        }
      },
      "23": {},
      "24": {},
      "6": {
        "Context._msgSender": {
          "1": [
            712,
            729
          ]
        }
      },
      "8": {
        "BeamerUtils.createFillHash": {
          "8": [
            874,
            929
          ]
        }
      }
    }
  },
  "dependencies": [
    "BeamerUtils",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "IMessenger",
    "IProofSubmitter",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "RestrictedCalls"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d7578063ef1556d3146100f2578063f2fde38b14610105578063f607a7c81461011857600080fd5b8063715018a6146100825780637760a2e51461008c5780637936464e1461009f575b600080fd5b61008a610146565b005b61008a61009a366004610634565b610185565b6100c26100ad36600461066d565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6000546040516001600160a01b0390911681526020016100ce565b61008a610100366004610686565b61024b565b61008a6101133660046106b2565b61034c565b61012b6101263660046106d4565b6103e7565b604080518251815260209283015192810192909252016100ce565b6000546001600160a01b031633146101795760405162461bcd60e51b81526004016101709061071a565b60405180910390fd5b61018360006105c8565b565b600254604051602481018490526044810183905246606482015260848101859052600060a48201526001600160a01b0390911690633dbb202b90869060c40160408051601f198184030181529181526020820180516001600160e01b03166314adc78760e31b179052516001600160e01b031960e085901b168152610213929190620f42409060040161074f565b600060405180830381600087803b15801561022d57600080fd5b505af1158015610241573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146102755760405162461bcd60e51b81526004016101709061071a565b600082826040516020016102a592919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f1981840301815291815281516020928301206000818152600190935291205490915060ff161561032c5760405162461bcd60e51b815260206004820152602660248201527f5265737472696374656443616c6c733a2063616c6c657220616c72656164792060448201526565786973747360d01b6064820152608401610170565b6000908152600160208190526040909120805460ff191690911790555050565b6000546001600160a01b031633146103765760405162461bcd60e51b81526004016101709061071a565b6001600160a01b0381166103db5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610170565b6103e4816105c8565b50565b604080518082019091526000808252602082015246336000828260405160200161042d92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f1981840301815291815281516020928301206000818152600190935291205490915060ff166104a45760405162461bcd60e51b815260206004820152601f60248201527f5265737472696374656443616c6c733a20756e6b6e6f776e2063616c6c6572006044820152606401610170565b60006104b16001436107c2565b40905060006104e78883604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600254604051602481018b905260448101859052466064820152608481018c90526001600160a01b038a811660a4830152929350911690633dbb202b908c9060c40160408051601f198184030181529181526020820180516001600160e01b03166314adc78760e31b179052516001600160e01b031960e085901b168152610578929190620f42409060040161074f565b600060405180830381600087803b15801561059257600080fd5b505af11580156105a6573d6000803e3d6000fd5b5050604080518082019091529384525050602082015298975050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461062f57600080fd5b919050565b6000806000806080858703121561064a57600080fd5b61065385610618565b966020860135965060408601359560600135945092505050565b60006020828403121561067f57600080fd5b5035919050565b6000806040838503121561069957600080fd5b823591506106a960208401610618565b90509250929050565b6000602082840312156106c457600080fd5b6106cd82610618565b9392505050565b600080600080608085870312156106ea57600080fd5b6106f385610618565b9350602085013592506040850135915061070f60608601610618565b905092959194509250565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60018060a01b038416815260006020606081840152845180606085015260005b8181101561078b5786810183015185820160800152820161076f565b8181111561079d576000608083870101525b5063ffffffff9490941660408401525050601f91909101601f19160160800192915050565b6000828210156107e257634e487b7160e01b600052601160045260246000fd5b50039056fea264697066735822122020b34e676f81c54675e96337f957790290a502337680d3d3b5826d02daf4abe164736f6c634300080d0033",
  "deployedSourceMap": "207:1359:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:0;;;:::i;:::-;;1149:415:20;;;;;;:::i;:::-;;:::i;552:39:15:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;938:14:25;;931:22;913:41;;901:2;886:18;552:39:15;;;;;;;;1036:85:0;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;1111:51:25;;1099:2;1084:18;1036:85:0;965:203:25;722:250:15;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;464:679:20:-;;;;;;:::i;:::-;;:::i;:::-;;;;2249:13:25;;2231:32;;2319:4;2307:17;;;2301:24;2279:20;;;2272:54;;;;2204:18;464:679:20;2025:307:25;1668:101:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1149:415:20:-;1314:9;;1373:143;;;;;2957:25:25;;;2998:18;;;2991:34;;;1461:13:20;3041:18:25;;;3034:34;3084:18;;;3077:34;;;1314:9:20;3127:19:25;;;3120:61;-1:-1:-1;;;;;1314:9:20;;;;:21;;1349:10;;2929:19:25;;1373:143:20;;;-1:-1:-1;;1373:143:20;;;;;;;;;;;;;;-1:-1:-1;;;;;1373:143:20;-1:-1:-1;;;1373:143:20;;;1314:243;-1:-1:-1;;;;;;1373:143:20;1314:243;;;;;;;;;1373:143;359:9;;1314:243;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1149:415;;;;:::o;722:250:15:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;803:11:15::1;844:7;853:6;827:33;;;;;;;;4135:19:25::0;;;4192:2;4188:15;-1:-1:-1;;4184:53:25;4179:2;4170:12;;4163:75;4263:2;4254:12;;3978:294;827:33:15::1;;::::0;;-1:-1:-1;;827:33:15;;::::1;::::0;;;;;;817:44;;827:33:::1;817:44:::0;;::::1;::::0;881:12:::1;::::0;;;:7:::1;:12:::0;;;;;;817:44;;-1:-1:-1;881:12:15::1;;880:13;872:64;;;::::0;-1:-1:-1;;;872:64:15;;4479:2:25;872:64:15::1;::::0;::::1;4461:21:25::0;4518:2;4498:18;;;4491:30;4557:34;4537:18;;;4530:62;-1:-1:-1;;;4608:18:25;;;4601:36;4654:19;;872:64:15::1;4277:402:25::0;872:64:15::1;946:12;::::0;;;961:4:::1;946:12;::::0;;;;;;;:19;;-1:-1:-1;;946:19:15::1;::::0;;::::1;::::0;;-1:-1:-1;;722:250:15:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4886:2:25;1998:73:0::1;::::0;::::1;4868:21:25::0;4925:2;4905:18;;;4898:30;4964:34;4944:18;;;4937:62;-1:-1:-1;;;5015:18:25;;;5008:36;5061:19;;1998:73:0::1;4684:402:25::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;464:679:20:-;-1:-1:-1;;;;;;;;;;;;;;;;;639:13:20;654:10;1329:11:15;1370:7;1379:6;1353:33;;;;;;;;4135:19:25;;;4192:2;4188:15;-1:-1:-1;;4184:53:25;4179:2;4170:12;;4163:75;4263:2;4254:12;;3978:294;1353:33:15;;;;-1:-1:-1;;1353:33:15;;;;;;;;;1343:44;;1353:33;1343:44;;;;1406:12;;;;:7;:12;;;;;;1343:44;;-1:-1:-1;1406:12:15;;1398:56;;;;-1:-1:-1;;;1398:56:15;;5293:2:25;1398:56:15;;;5275:21:25;5332:2;5312:18;;;5305:30;5371:33;5351:18;;;5344:61;5422:18;;1398:56:15;5091:355:25;1398:56:15;718:14:20::1;745:16;760:1;745:12;:16;:::i;:::-;735:27;718:44;;772:16;791:47;818:11;831:6;891:37:8::0;;;;;;;5835:19:25;;;;5870:12;;;5863:28;;;;891:37:8;;;;;;;;;5907:12:25;;;;891:37:8;;881:48;;;;;;743:193;791:47:20::1;849:9;::::0;908:139:::1;::::0;::::1;::::0;::::1;2957:25:25::0;;;2998:18;;;2991:34;;;996:13:20::1;3041:18:25::0;;;3034:34;3084:18;;;3077:34;;;-1:-1:-1;;;;;3148:32:25;;;3127:19;;;3120:61;772:66:20;;-1:-1:-1;849:9:20;::::1;::::0;:21:::1;::::0;884:10;;2929:19:25;;908:139:20::1;::::0;;-1:-1:-1;;908:139:20;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;908:139:20::1;-1:-1:-1::0;;;908:139:20::1;::::0;;849:239;-1:-1:-1;;;;;;908:139:20::1;849:239:::0;;;;;;::::1;::::0;;908:139;359:9:::1;::::0;849:239:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1106:30:20::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;1106:30:20::1;::::0;::::1;::::0;;464:679;-1:-1:-1;;;;;;;;464:679:20:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:173:25:-;82:20;;-1:-1:-1;;;;;131:31:25;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:391::-;278:6;286;294;302;355:3;343:9;334:7;330:23;326:33;323:53;;;372:1;369;362:12;323:53;395:29;414:9;395:29;:::i;:::-;385:39;471:2;456:18;;443:32;;-1:-1:-1;522:2:25;507:18;;494:32;;573:2;558:18;545:32;;-1:-1:-1;192:391:25;-1:-1:-1;;;192:391:25:o;588:180::-;647:6;700:2;688:9;679:7;675:23;671:32;668:52;;;716:1;713;706:12;668:52;-1:-1:-1;739:23:25;;588:180;-1:-1:-1;588:180:25:o;1173:254::-;1241:6;1249;1302:2;1290:9;1281:7;1277:23;1273:32;1270:52;;;1318:1;1315;1308:12;1270:52;1354:9;1341:23;1331:33;;1383:38;1417:2;1406:9;1402:18;1383:38;:::i;:::-;1373:48;;1173:254;;;;;:::o;1432:186::-;1491:6;1544:2;1532:9;1523:7;1519:23;1515:32;1512:52;;;1560:1;1557;1550:12;1512:52;1583:29;1602:9;1583:29;:::i;:::-;1573:39;1432:186;-1:-1:-1;;;1432:186:25:o;1623:397::-;1709:6;1717;1725;1733;1786:3;1774:9;1765:7;1761:23;1757:33;1754:53;;;1803:1;1800;1793:12;1754:53;1826:29;1845:9;1826:29;:::i;:::-;1816:39;;1902:2;1891:9;1887:18;1874:32;1864:42;;1953:2;1942:9;1938:18;1925:32;1915:42;;1976:38;2010:2;1999:9;1995:18;1976:38;:::i;:::-;1966:48;;1623:397;;;;;;;:::o;2337:356::-;2539:2;2521:21;;;2558:18;;;2551:30;2617:34;2612:2;2597:18;;2590:62;2684:2;2669:18;;2337:356::o;3192:781::-;3422:1;3418;3413:3;3409:11;3405:19;3397:6;3393:32;3382:9;3375:51;3356:4;3445:2;3483;3478;3467:9;3463:18;3456:30;3515:6;3509:13;3558:6;3553:2;3542:9;3538:18;3531:34;3583:1;3593:141;3607:6;3604:1;3601:13;3593:141;;;3703:14;;;3699:23;;3693:30;3668:17;;;3687:3;3664:27;3657:67;3622:10;;3593:141;;;3752:6;3749:1;3746:13;3743:92;;;3823:1;3817:3;3808:6;3797:9;3793:22;3789:32;3782:43;3743:92;-1:-1:-1;3955:10:25;3943:23;;;;3938:2;3923:18;;3916:51;-1:-1:-1;;3896:2:25;3875:15;;;;-1:-1:-1;;3871:29:25;3856:45;3903:3;3852:55;;3192:781;-1:-1:-1;;3192:781:25:o;5451:222::-;5491:4;5519:1;5516;5513:8;5510:131;;;5563:10;5558:3;5554:20;5551:1;5544:31;5598:4;5595:1;5588:15;5626:4;5623:1;5616:15;5510:131;-1:-1:-1;5658:9:25;;5451:222::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addCaller(uint256,address)": {
        "notice": "Add a caller for the given chain ID.",
        "params": {
          "caller": "The caller.",
          "chainId": "The chain ID."
        }
      },
      "callers(bytes32)": {
        "notice": "The set of callers, in the form of hashed pairs ``(chainId, address)``."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "submitNonFillProof(address,uint256,bytes32,bytes32)": {
        "notice": "Submit a non-fill proof.",
        "params": {
          "fillId": "The fill ID.",
          "l1Resolver": "The L1 :sol:contract:`Resolver`.",
          "requestHash": "The request hash.",
          "sourceChainId": "The source chain ID."
        }
      },
      "submitProof(address,uint256,bytes32,address)": {
        "notice": "Submit a fill proof.",
        "params": {
          "filler": "The filler.",
          "l1Resolver": "The L1 :sol:contract:`Resolver`.",
          "requestHash": "The request hash.",
          "sourceChainId": "The source chain ID."
        },
        "returns": {
          "_0": "The proof receipt."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    207,
    1566
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xEF1556D3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xF607A7C8 EQ PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x7760A2E5 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x7936464E EQ PUSH2 0x9F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x146 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x634 JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x8A PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH2 0x8A PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x34C JUMP JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x6D4 JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0xCE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x179 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170 SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x183 PUSH1 0x0 PUSH2 0x5C8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE CHAINID PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3DBB202B SWAP1 DUP7 SWAP1 PUSH1 0xC4 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x14ADC787 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x213 SWAP3 SWAP2 SWAP1 PUSH3 0xF4240 SWAP1 PUSH1 0x4 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x241 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x275 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170 SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A5 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x32C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C657220616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x657869737473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170 SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x170 JUMP JUMPDEST PUSH2 0x3E4 DUP2 PUSH2 0x5C8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE CHAINID CALLER PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x42D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B1 PUSH1 0x1 NUMBER PUSH2 0x7C2 JUMP JUMPDEST BLOCKHASH SWAP1 POP PUSH1 0x0 PUSH2 0x4E7 DUP9 DUP4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE CHAINID PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0xA4 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x3DBB202B SWAP1 DUP13 SWAP1 PUSH1 0xC4 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x14ADC787 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x578 SWAP3 SWAP2 SWAP1 PUSH3 0xF4240 SWAP1 PUSH1 0x4 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP4 DUP5 MSTORE POP POP PUSH1 0x20 DUP3 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x653 DUP6 PUSH2 0x618 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x6A9 PUSH1 0x20 DUP5 ADD PUSH2 0x618 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CD DUP3 PUSH2 0x618 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F3 DUP6 PUSH2 0x618 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x70F PUSH1 0x60 DUP7 ADD PUSH2 0x618 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x60 DUP2 DUP5 ADD MSTORE DUP5 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x78B JUMPI DUP7 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0x76F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH4 0xFFFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD PUSH1 0x80 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x7E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xB3 0x4E PUSH8 0x6F81C54675E96337 0xF9 JUMPI PUSH26 0x290A502337680D3D3B5826D02DAF4ABE164736F6C634300080D STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        207,
        1566
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "6": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "REVERT",
      "path": "20"
    },
    "16": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "17": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "POP",
      "path": "20"
    },
    "18": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "21": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "LT",
      "path": "20"
    },
    "22": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "26": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "29": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "SHR",
      "path": "20"
    },
    "32": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "DUP1",
      "path": "20"
    },
    "33": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "GT",
      "path": "20"
    },
    "39": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "43": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "DUP1",
      "path": "20"
    },
    "44": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "EQ",
      "path": "20"
    },
    "50": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD7"
    },
    "53": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "54": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "DUP1",
      "path": "20"
    },
    "55": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xEF1556D3"
    },
    "60": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "EQ",
      "path": "20"
    },
    "61": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF2"
    },
    "64": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "65": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "DUP1",
      "path": "20"
    },
    "66": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "EQ",
      "path": "20"
    },
    "72": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x105"
    },
    "75": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "76": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "DUP1",
      "path": "20"
    },
    "77": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF607A7C8"
    },
    "82": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "EQ",
      "path": "20"
    },
    "83": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x118"
    },
    "86": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "87": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "DUP1",
      "path": "20"
    },
    "90": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "REVERT",
      "path": "20"
    },
    "91": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "92": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "DUP1",
      "path": "20"
    },
    "93": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x715018A6"
    },
    "98": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "EQ",
      "path": "20"
    },
    "99": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "103": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "DUP1",
      "path": "20"
    },
    "104": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7760A2E5"
    },
    "109": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "EQ",
      "path": "20"
    },
    "110": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C"
    },
    "113": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "114": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "DUP1",
      "path": "20"
    },
    "115": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7936464E"
    },
    "120": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "EQ",
      "path": "20"
    },
    "121": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9F"
    },
    "124": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "125": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "126": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "DUP1",
      "path": "20"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        207,
        1566
      ],
      "op": "REVERT",
      "path": "20"
    },
    "130": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "131": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "134": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "137": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "138": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "139": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "140": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1149,
        1564
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "141": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1149,
        1564
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8A"
    },
    "144": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1149,
        1564
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9A"
    },
    "147": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1149,
        1564
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "148": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1149,
        1564
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "150": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1149,
        1564
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x634"
    },
    "153": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "jump": "i",
      "offset": [
        1149,
        1564
      ],
      "op": "JUMP",
      "path": "20"
    },
    "154": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1149,
        1564
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "155": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1149,
        1564
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x185"
    },
    "158": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "jump": "i",
      "offset": [
        1149,
        1564
      ],
      "op": "JUMP",
      "path": "20"
    },
    "159": {
      "offset": [
        552,
        591
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "160": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC2"
    },
    "163": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAD"
    },
    "166": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "167": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "169": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x66D"
    },
    "172": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "jump": "i",
      "offset": [
        552,
        591
      ],
      "op": "JUMP",
      "path": "15"
    },
    "173": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "174": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "176": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "178": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "179": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "181": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "182": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "DUP2",
      "path": "15"
    },
    "183": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "184": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "186": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "187": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "188": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "189": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "191": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "AND",
      "path": "15"
    },
    "192": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "DUP2",
      "path": "15"
    },
    "193": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "JUMP",
      "path": "15"
    },
    "194": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "195": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "197": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "198": {
      "op": "SWAP1"
    },
    "199": {
      "op": "ISZERO"
    },
    "200": {
      "op": "ISZERO"
    },
    "201": {
      "op": "DUP2"
    },
    "202": {
      "op": "MSTORE"
    },
    "203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "205": {
      "op": "ADD"
    },
    "206": {
      "offset": [
        552,
        591
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "207": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "209": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "210": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "DUP1",
      "path": "15"
    },
    "211": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "212": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "SUB",
      "path": "15"
    },
    "213": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "214": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        552,
        591
      ],
      "op": "RETURN",
      "path": "15"
    },
    "215": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "216": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "218": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "219": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "221": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "228": {
      "op": "SHL"
    },
    "229": {
      "op": "SUB"
    },
    "230": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "231": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "232": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "233": {
      "op": "DUP2"
    },
    "234": {
      "op": "MSTORE"
    },
    "235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "237": {
      "op": "ADD"
    },
    "238": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "241": {
      "op": "JUMP"
    },
    "242": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        722,
        972
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "243": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        722,
        972
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8A"
    },
    "246": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        722,
        972
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "249": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        722,
        972
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "250": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        722,
        972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "252": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        722,
        972
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x686"
    },
    "255": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        722,
        972
      ],
      "op": "JUMP",
      "path": "15"
    },
    "256": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        722,
        972
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "257": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        722,
        972
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24B"
    },
    "260": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        722,
        972
      ],
      "op": "JUMP",
      "path": "15"
    },
    "261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "268": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "269": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "271": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B2"
    },
    "274": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "275": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34C"
    },
    "279": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "280": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "281": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12B"
    },
    "284": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x126"
    },
    "287": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "288": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "290": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6D4"
    },
    "293": {
      "fn": "OptimismProofSubmitter.submitProof",
      "jump": "i",
      "offset": [
        464,
        1143
      ],
      "op": "JUMP",
      "path": "20"
    },
    "294": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "295": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E7"
    },
    "298": {
      "fn": "OptimismProofSubmitter.submitProof",
      "jump": "i",
      "offset": [
        464,
        1143
      ],
      "op": "JUMP",
      "path": "20"
    },
    "299": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "300": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "302": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "DUP1",
      "path": "20"
    },
    "303": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "304": {
      "op": "DUP3"
    },
    "305": {
      "op": "MLOAD"
    },
    "306": {
      "op": "DUP2"
    },
    "307": {
      "op": "MSTORE"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "310": {
      "op": "SWAP3"
    },
    "311": {
      "op": "DUP4"
    },
    "312": {
      "op": "ADD"
    },
    "313": {
      "op": "MLOAD"
    },
    "314": {
      "op": "SWAP3"
    },
    "315": {
      "op": "DUP2"
    },
    "316": {
      "op": "ADD"
    },
    "317": {
      "op": "SWAP3"
    },
    "318": {
      "op": "SWAP1"
    },
    "319": {
      "op": "SWAP3"
    },
    "320": {
      "op": "MSTORE"
    },
    "321": {
      "op": "ADD"
    },
    "322": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xCE"
    },
    "325": {
      "op": "JUMP"
    },
    "326": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "327": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "329": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "336": {
      "op": "SHL"
    },
    "337": {
      "op": "SUB"
    },
    "338": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "339": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 1
    },
    "340": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "341": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x179"
    },
    "344": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "345": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "347": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "348": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "352": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "354": {
      "op": "SHL"
    },
    "355": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "356": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "357": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "359": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "360": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "363": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "364": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71A"
    },
    "367": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "368": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "369": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "371": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "372": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "373": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "374": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "375": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "377": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "378": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x183"
    },
    "381": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "383": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C8"
    },
    "386": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "387": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "388": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "389": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1149,
        1564
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "390": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1323
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 3,
      "value": "0x2"
    },
    "392": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1323
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "393": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "395": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "396": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "398": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "DUP2",
      "path": "20"
    },
    "399": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "ADD",
      "path": "20"
    },
    "400": {
      "op": "DUP5"
    },
    "401": {
      "op": "SWAP1"
    },
    "402": {
      "op": "MSTORE"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "405": {
      "op": "DUP2"
    },
    "406": {
      "op": "ADD"
    },
    "407": {
      "op": "DUP4"
    },
    "408": {
      "op": "SWAP1"
    },
    "409": {
      "op": "MSTORE"
    },
    "410": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1461,
        1474
      ],
      "op": "CHAINID",
      "path": "20"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "413": {
      "op": "DUP3"
    },
    "414": {
      "op": "ADD"
    },
    "415": {
      "op": "MSTORE"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "ADD"
    },
    "420": {
      "op": "DUP6"
    },
    "421": {
      "op": "SWAP1"
    },
    "422": {
      "op": "MSTORE"
    },
    "423": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1323
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "425": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "427": {
      "op": "DUP3"
    },
    "428": {
      "op": "ADD"
    },
    "429": {
      "op": "MSTORE"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "436": {
      "op": "SHL"
    },
    "437": {
      "op": "SUB"
    },
    "438": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1323
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "439": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1323
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "440": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1323
      ],
      "op": "AND",
      "path": "20"
    },
    "441": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1323
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "442": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1335
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3DBB202B"
    },
    "447": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1335
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "448": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1349,
        1359
      ],
      "op": "DUP7",
      "path": "20"
    },
    "449": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1349,
        1359
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "450": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "452": {
      "op": "ADD"
    },
    "453": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "455": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "DUP1",
      "path": "20"
    },
    "456": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "459": {
      "op": "NOT"
    },
    "460": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "DUP2",
      "path": "20"
    },
    "461": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "DUP5",
      "path": "20"
    },
    "462": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "SUB",
      "path": "20"
    },
    "463": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "ADD",
      "path": "20"
    },
    "464": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "DUP2",
      "path": "20"
    },
    "465": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "466": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "467": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "DUP2",
      "path": "20"
    },
    "468": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "469": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "471": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "DUP3",
      "path": "20"
    },
    "472": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "ADD",
      "path": "20"
    },
    "473": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "DUP1",
      "path": "20"
    },
    "474": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "479": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "481": {
      "op": "SHL"
    },
    "482": {
      "op": "SUB"
    },
    "483": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "AND",
      "path": "20"
    },
    "484": {
      "op": "PUSH4",
      "value": "0x14ADC787"
    },
    "489": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "491": {
      "op": "SHL"
    },
    "492": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "OR",
      "path": "20"
    },
    "493": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "494": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "495": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "500": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "502": {
      "op": "SHL"
    },
    "503": {
      "op": "SUB"
    },
    "504": {
      "op": "NOT"
    },
    "505": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "507": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "DUP6",
      "path": "20"
    },
    "508": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "509": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "SHL",
      "path": "20"
    },
    "510": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "AND",
      "path": "20"
    },
    "511": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "DUP2",
      "path": "20"
    },
    "512": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "513": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x213"
    },
    "516": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "517": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "518": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1373,
        1516
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "519": {
      "offset": [
        359,
        368
      ],
      "op": "PUSH3",
      "path": "20",
      "value": "0xF4240"
    },
    "523": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        359,
        368
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "524": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "526": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "ADD",
      "path": "20"
    },
    "527": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x74F"
    },
    "530": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "jump": "i",
      "offset": [
        1314,
        1557
      ],
      "op": "JUMP",
      "path": "20"
    },
    "531": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "532": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "534": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "536": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "537": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "DUP1",
      "path": "20"
    },
    "538": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "DUP4",
      "path": "20"
    },
    "539": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "SUB",
      "path": "20"
    },
    "540": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "DUP2",
      "path": "20"
    },
    "541": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "543": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "DUP8",
      "path": "20"
    },
    "544": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "DUP1",
      "path": "20"
    },
    "545": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "546": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "547": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "DUP1",
      "path": "20"
    },
    "548": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "549": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22D"
    },
    "552": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "553": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "555": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "DUP1",
      "path": "20"
    },
    "556": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "REVERT",
      "path": "20"
    },
    "557": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "558": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "POP",
      "path": "20"
    },
    "559": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "GAS",
      "path": "20"
    },
    "560": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "CALL",
      "path": "20"
    },
    "561": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "562": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "DUP1",
      "path": "20"
    },
    "563": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "564": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x241"
    },
    "567": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "568": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "569": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "571": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "DUP1",
      "path": "20"
    },
    "572": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "573": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "574": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "576": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "REVERT",
      "path": "20"
    },
    "577": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "578": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "POP",
      "path": "20"
    },
    "579": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "POP",
      "path": "20"
    },
    "580": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "POP",
      "path": "20"
    },
    "581": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1314,
        1557
      ],
      "op": "POP",
      "path": "20"
    },
    "582": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1149,
        1564
      ],
      "op": "POP",
      "path": "20"
    },
    "583": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1149,
        1564
      ],
      "op": "POP",
      "path": "20"
    },
    "584": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1149,
        1564
      ],
      "op": "POP",
      "path": "20"
    },
    "585": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "offset": [
        1149,
        1564
      ],
      "op": "POP",
      "path": "20"
    },
    "586": {
      "fn": "OptimismProofSubmitter.submitNonFillProof",
      "jump": "o",
      "offset": [
        1149,
        1564
      ],
      "op": "JUMP",
      "path": "20"
    },
    "587": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        722,
        972
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "588": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "590": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "597": {
      "op": "SHL"
    },
    "598": {
      "op": "SUB"
    },
    "599": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "600": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "601": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "602": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275"
    },
    "605": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "606": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "608": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "609": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "617": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "618": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "620": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "621": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "624": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "625": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71A"
    },
    "628": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "629": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "630": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        803,
        814
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "632": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        844,
        851
      ],
      "op": "DUP3",
      "path": "15"
    },
    "633": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        853,
        859
      ],
      "op": "DUP3",
      "path": "15"
    },
    "634": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "636": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "637": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "639": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "ADD",
      "path": "15"
    },
    "640": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A5"
    },
    "643": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "644": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "645": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "646": {
      "op": "SWAP2"
    },
    "647": {
      "op": "DUP3"
    },
    "648": {
      "op": "MSTORE"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "651": {
      "op": "SHL"
    },
    "652": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "665": {
      "op": "NOT"
    },
    "666": {
      "op": "AND"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "669": {
      "op": "DUP3"
    },
    "670": {
      "op": "ADD"
    },
    "671": {
      "op": "MSTORE"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "674": {
      "op": "ADD"
    },
    "675": {
      "op": "SWAP1"
    },
    "676": {
      "op": "JUMP"
    },
    "677": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "678": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "680": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "DUP1",
      "path": "15"
    },
    "681": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "684": {
      "op": "NOT"
    },
    "685": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "DUP2",
      "path": "15"
    },
    "686": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "DUP5",
      "path": "15"
    },
    "687": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "SUB",
      "path": "15"
    },
    "688": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "ADD",
      "path": "15"
    },
    "689": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "DUP2",
      "path": "15"
    },
    "690": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "691": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "692": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "DUP2",
      "path": "15"
    },
    "693": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "694": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        817,
        861
      ],
      "op": "DUP2",
      "path": "15"
    },
    "695": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        817,
        861
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "696": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        827,
        860
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "698": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        817,
        861
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "699": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        817,
        861
      ],
      "op": "DUP4",
      "path": "15"
    },
    "700": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        817,
        861
      ],
      "op": "ADD",
      "path": "15"
    },
    "701": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        817,
        861
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "702": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        881,
        893
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 4,
      "value": "0x0"
    },
    "704": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        881,
        893
      ],
      "op": "DUP2",
      "path": "15"
    },
    "705": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        881,
        893
      ],
      "op": "DUP2",
      "path": "15"
    },
    "706": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        881,
        893
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "707": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        881,
        888
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "709": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        881,
        893
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "710": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        881,
        893
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "711": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        881,
        893
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "712": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        881,
        893
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "713": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        881,
        893
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "714": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        881,
        893
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "715": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        817,
        861
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "716": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        817,
        861
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "717": {
      "op": "POP"
    },
    "718": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        881,
        893
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "720": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        881,
        893
      ],
      "op": "AND",
      "path": "15"
    },
    "721": {
      "branch": 14,
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        880,
        893
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "722": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        872,
        936
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32C"
    },
    "725": {
      "branch": 14,
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        872,
        936
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "726": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        872,
        936
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "728": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        872,
        936
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "729": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "733": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "735": {
      "op": "SHL"
    },
    "736": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        872,
        936
      ],
      "op": "DUP2",
      "path": "15"
    },
    "737": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        872,
        936
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "740": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        872,
        936
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "742": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        872,
        936
      ],
      "op": "DUP3",
      "path": "15"
    },
    "743": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        872,
        936
      ],
      "op": "ADD",
      "path": "15"
    },
    "744": {
      "op": "MSTORE"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "749": {
      "op": "DUP3"
    },
    "750": {
      "op": "ADD"
    },
    "751": {
      "op": "MSTORE"
    },
    "752": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C657220616C726561647920"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "787": {
      "op": "DUP3"
    },
    "788": {
      "op": "ADD"
    },
    "789": {
      "op": "MSTORE"
    },
    "790": {
      "op": "PUSH6",
      "value": "0x657869737473"
    },
    "797": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "799": {
      "op": "SHL"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "802": {
      "op": "DUP3"
    },
    "803": {
      "op": "ADD"
    },
    "804": {
      "op": "MSTORE"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "807": {
      "op": "ADD"
    },
    "808": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        872,
        936
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x170"
    },
    "811": {
      "op": "JUMP"
    },
    "812": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        872,
        936
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "813": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        958
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 5,
      "value": "0x0"
    },
    "815": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        958
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "816": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        958
      ],
      "op": "DUP2",
      "path": "15"
    },
    "817": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        958
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "818": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        961,
        965
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "820": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        958
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "822": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        958
      ],
      "op": "DUP2",
      "path": "15"
    },
    "823": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        958
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "824": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        958
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "825": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        958
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "827": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        958
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "828": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        958
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "829": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        958
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "830": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        965
      ],
      "op": "DUP1",
      "path": "15"
    },
    "831": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        965
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "832": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "834": {
      "op": "NOT"
    },
    "835": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        965
      ],
      "op": "AND",
      "path": "15"
    },
    "836": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        965
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "837": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        965
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "838": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        965
      ],
      "op": "OR",
      "path": "15"
    },
    "839": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        965
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "840": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        946,
        965
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "841": {
      "op": "POP"
    },
    "842": {
      "op": "POP"
    },
    "843": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        722,
        972
      ],
      "op": "JUMP",
      "path": "15"
    },
    "844": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "845": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "847": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "854": {
      "op": "SHL"
    },
    "855": {
      "op": "SUB"
    },
    "856": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "857": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "858": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "859": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x376"
    },
    "862": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "863": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "865": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "866": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "870": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "872": {
      "op": "SHL"
    },
    "873": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "874": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "875": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "877": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "878": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "881": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "882": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71A"
    },
    "885": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "886": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "893": {
      "op": "SHL"
    },
    "894": {
      "op": "SUB"
    },
    "895": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 6
    },
    "896": {
      "branch": 13,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "897": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DB"
    },
    "900": {
      "branch": 13,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "901": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "903": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "910": {
      "op": "SHL"
    },
    "911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "917": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "919": {
      "op": "MSTORE"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "924": {
      "op": "DUP3"
    },
    "925": {
      "op": "ADD"
    },
    "926": {
      "op": "MSTORE"
    },
    "927": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "962": {
      "op": "DUP3"
    },
    "963": {
      "op": "ADD"
    },
    "964": {
      "op": "MSTORE"
    },
    "965": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "972": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "974": {
      "op": "SHL"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "977": {
      "op": "DUP3"
    },
    "978": {
      "op": "ADD"
    },
    "979": {
      "op": "MSTORE"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "982": {
      "op": "ADD"
    },
    "983": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "986": {
      "op": "JUMP"
    },
    "987": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "988": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x3E4"
    },
    "991": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C8"
    },
    "995": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "996": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "997": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "998": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "999": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1002": {
      "op": "DUP1"
    },
    "1003": {
      "op": "MLOAD"
    },
    "1004": {
      "op": "DUP1"
    },
    "1005": {
      "op": "DUP3"
    },
    "1006": {
      "op": "ADD"
    },
    "1007": {
      "op": "SWAP1"
    },
    "1008": {
      "op": "SWAP2"
    },
    "1009": {
      "op": "MSTORE"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1012": {
      "op": "DUP1"
    },
    "1013": {
      "op": "DUP3"
    },
    "1014": {
      "op": "MSTORE"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1017": {
      "op": "DUP3"
    },
    "1018": {
      "op": "ADD"
    },
    "1019": {
      "op": "MSTORE"
    },
    "1020": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        639,
        652
      ],
      "op": "CHAINID",
      "path": "20"
    },
    "1021": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        654,
        664
      ],
      "op": "CALLER",
      "path": "20"
    },
    "1022": {
      "offset": [
        1329,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1024": {
      "offset": [
        1370,
        1377
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1025": {
      "offset": [
        1379,
        1385
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1026": {
      "offset": [
        1353,
        1386
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1028": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1029": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1031": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "ADD",
      "path": "15"
    },
    "1032": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x42D"
    },
    "1035": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1036": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1037": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1038": {
      "op": "SWAP2"
    },
    "1039": {
      "op": "DUP3"
    },
    "1040": {
      "op": "MSTORE"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1043": {
      "op": "SHL"
    },
    "1044": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1057": {
      "op": "NOT"
    },
    "1058": {
      "op": "AND"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1061": {
      "op": "DUP3"
    },
    "1062": {
      "op": "ADD"
    },
    "1063": {
      "op": "MSTORE"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1066": {
      "op": "ADD"
    },
    "1067": {
      "op": "SWAP1"
    },
    "1068": {
      "op": "JUMP"
    },
    "1069": {
      "offset": [
        1353,
        1386
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1070": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1072": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1073": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1076": {
      "op": "NOT"
    },
    "1077": {
      "offset": [
        1353,
        1386
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1078": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1079": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "SUB",
      "path": "15"
    },
    "1080": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "ADD",
      "path": "15"
    },
    "1081": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1082": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1083": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1084": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1085": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1353,
        1386
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1086": {
      "offset": [
        1343,
        1387
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1087": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1343,
        1387
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1088": {
      "offset": [
        1353,
        1386
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1090": {
      "offset": [
        1343,
        1387
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1091": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1343,
        1387
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1092": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1343,
        1387
      ],
      "op": "ADD",
      "path": "15"
    },
    "1093": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1343,
        1387
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1094": {
      "offset": [
        1406,
        1418
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1096": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1406,
        1418
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1097": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1406,
        1418
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1098": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1406,
        1418
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1099": {
      "offset": [
        1406,
        1413
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1101": {
      "offset": [
        1406,
        1418
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1102": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1406,
        1418
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1103": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1406,
        1418
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1104": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1406,
        1418
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1105": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1406,
        1418
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1106": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1406,
        1418
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1107": {
      "offset": [
        1343,
        1387
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1108": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1343,
        1387
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1109": {
      "op": "POP"
    },
    "1110": {
      "offset": [
        1406,
        1418
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1112": {
      "branch": 15,
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1406,
        1418
      ],
      "op": "AND",
      "path": "15"
    },
    "1113": {
      "offset": [
        1398,
        1454
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A4"
    },
    "1116": {
      "branch": 15,
      "offset": [
        1398,
        1454
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1117": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1398,
        1454
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1119": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1398,
        1454
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1120": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1126": {
      "op": "SHL"
    },
    "1127": {
      "offset": [
        1398,
        1454
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1128": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1398,
        1454
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1131": {
      "offset": [
        1398,
        1454
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1133": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1398,
        1454
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1134": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1398,
        1454
      ],
      "op": "ADD",
      "path": "15"
    },
    "1135": {
      "op": "MSTORE"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1140": {
      "op": "DUP3"
    },
    "1141": {
      "op": "ADD"
    },
    "1142": {
      "op": "MSTORE"
    },
    "1143": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A20756E6B6E6F776E2063616C6C657200"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1178": {
      "op": "DUP3"
    },
    "1179": {
      "op": "ADD"
    },
    "1180": {
      "op": "MSTORE"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1183": {
      "op": "ADD"
    },
    "1184": {
      "offset": [
        1398,
        1454
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x170"
    },
    "1187": {
      "op": "JUMP"
    },
    "1188": {
      "offset": [
        1398,
        1454
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1189": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        718,
        732
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1191": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        745,
        761
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4B1"
    },
    "1194": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        760,
        761
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1196": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        745,
        757
      ],
      "op": "NUMBER",
      "path": "20"
    },
    "1197": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        745,
        761
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7C2"
    },
    "1200": {
      "fn": "OptimismProofSubmitter.submitProof",
      "jump": "i",
      "offset": [
        745,
        761
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1201": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        745,
        761
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1202": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        735,
        762
      ],
      "op": "BLOCKHASH",
      "path": "20"
    },
    "1203": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        718,
        762
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1204": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        718,
        762
      ],
      "op": "POP",
      "path": "20"
    },
    "1205": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        788
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1207": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        791,
        838
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4E7"
    },
    "1210": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        818,
        829
      ],
      "op": "DUP9",
      "path": "20"
    },
    "1211": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        831,
        837
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1212": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 8,
      "value": "0x40"
    },
    "1214": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1215": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1216": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1218": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1219": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1220": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "ADD",
      "path": "8"
    },
    "1221": {
      "op": "SWAP5"
    },
    "1222": {
      "op": "SWAP1"
    },
    "1223": {
      "op": "SWAP5"
    },
    "1224": {
      "op": "MSTORE"
    },
    "1225": {
      "op": "DUP1"
    },
    "1226": {
      "op": "DUP3"
    },
    "1227": {
      "op": "ADD"
    },
    "1228": {
      "op": "SWAP3"
    },
    "1229": {
      "op": "SWAP1"
    },
    "1230": {
      "op": "SWAP3"
    },
    "1231": {
      "op": "MSTORE"
    },
    "1232": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1233": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1234": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1235": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1236": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "SUB",
      "path": "8"
    },
    "1237": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1238": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "ADD",
      "path": "8"
    },
    "1239": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1240": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1243": {
      "op": "SWAP1"
    },
    "1244": {
      "op": "SWAP3"
    },
    "1245": {
      "op": "ADD"
    },
    "1246": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1247": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1248": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1249": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1250": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1251": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "ADD",
      "path": "8"
    },
    "1252": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1253": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1254": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        743,
        936
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1255": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        791,
        838
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1256": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        858
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 9,
      "value": "0x2"
    },
    "1258": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        858
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1259": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1261": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1262": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "1264": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1265": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "ADD",
      "path": "20"
    },
    "1266": {
      "op": "DUP12"
    },
    "1267": {
      "op": "SWAP1"
    },
    "1268": {
      "op": "MSTORE"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1271": {
      "op": "DUP2"
    },
    "1272": {
      "op": "ADD"
    },
    "1273": {
      "op": "DUP6"
    },
    "1274": {
      "op": "SWAP1"
    },
    "1275": {
      "op": "MSTORE"
    },
    "1276": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        996,
        1009
      ],
      "op": "CHAINID",
      "path": "20"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1279": {
      "op": "DUP3"
    },
    "1280": {
      "op": "ADD"
    },
    "1281": {
      "op": "MSTORE"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1284": {
      "op": "DUP2"
    },
    "1285": {
      "op": "ADD"
    },
    "1286": {
      "op": "DUP13"
    },
    "1287": {
      "op": "SWAP1"
    },
    "1288": {
      "op": "MSTORE"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1295": {
      "op": "SHL"
    },
    "1296": {
      "op": "SUB"
    },
    "1297": {
      "op": "DUP11"
    },
    "1298": {
      "op": "DUP2"
    },
    "1299": {
      "op": "AND"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1302": {
      "op": "DUP4"
    },
    "1303": {
      "op": "ADD"
    },
    "1304": {
      "op": "MSTORE"
    },
    "1305": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        838
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1306": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        772,
        838
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1307": {
      "op": "POP"
    },
    "1308": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        858
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1309": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        858
      ],
      "op": "AND",
      "path": "20"
    },
    "1310": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        858
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1311": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        870
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3DBB202B"
    },
    "1316": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        870
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1317": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        884,
        894
      ],
      "op": "DUP13",
      "path": "20"
    },
    "1318": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        884,
        894
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "1321": {
      "op": "ADD"
    },
    "1322": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1324": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1325": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1328": {
      "op": "NOT"
    },
    "1329": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1330": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1331": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "SUB",
      "path": "20"
    },
    "1332": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "ADD",
      "path": "20"
    },
    "1333": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1334": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1335": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1336": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1337": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1338": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1340": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1341": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "ADD",
      "path": "20"
    },
    "1342": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1343": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1350": {
      "op": "SHL"
    },
    "1351": {
      "op": "SUB"
    },
    "1352": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "AND",
      "path": "20"
    },
    "1353": {
      "op": "PUSH4",
      "value": "0x14ADC787"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1360": {
      "op": "SHL"
    },
    "1361": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "OR",
      "path": "20"
    },
    "1362": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1363": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1364": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1371": {
      "op": "SHL"
    },
    "1372": {
      "op": "SUB"
    },
    "1373": {
      "op": "NOT"
    },
    "1374": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "1376": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1377": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1378": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "SHL",
      "path": "20"
    },
    "1379": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "AND",
      "path": "20"
    },
    "1380": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1381": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1382": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x578"
    },
    "1385": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1386": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1387": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        908,
        1047
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1388": {
      "offset": [
        359,
        368
      ],
      "op": "PUSH3",
      "path": "20",
      "value": "0xF4240"
    },
    "1392": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        359,
        368
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1393": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1395": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "ADD",
      "path": "20"
    },
    "1396": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x74F"
    },
    "1399": {
      "fn": "OptimismProofSubmitter.submitProof",
      "jump": "i",
      "offset": [
        849,
        1088
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1400": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1401": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1403": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1405": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1406": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1407": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1408": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "SUB",
      "path": "20"
    },
    "1409": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1410": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1412": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "DUP8",
      "path": "20"
    },
    "1413": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1414": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "1415": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1416": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1417": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1418": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x592"
    },
    "1421": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1422": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1424": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1425": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1426": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1427": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "POP",
      "path": "20"
    },
    "1428": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "GAS",
      "path": "20"
    },
    "1429": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "CALL",
      "path": "20"
    },
    "1430": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1431": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1432": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1433": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5A6"
    },
    "1436": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1437": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "1438": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1440": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1441": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "1442": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "1443": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1445": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1446": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        849,
        1088
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "op": "POP"
    },
    "1449": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 10,
      "value": "0x40"
    },
    "1451": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1452": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1453": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1454": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1455": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "ADD",
      "path": "20"
    },
    "1456": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1457": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1458": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1459": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1460": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1461": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1462": {
      "op": "POP"
    },
    "1463": {
      "op": "POP"
    },
    "1464": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1466": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1467": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "ADD",
      "path": "20"
    },
    "1468": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1469": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        1106,
        1136
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "1470": {
      "fn": "OptimismProofSubmitter.submitProof",
      "offset": [
        464,
        1143
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "1471": {
      "op": "POP"
    },
    "1472": {
      "op": "POP"
    },
    "1473": {
      "op": "POP"
    },
    "1474": {
      "op": "POP"
    },
    "1475": {
      "op": "POP"
    },
    "1476": {
      "op": "POP"
    },
    "1477": {
      "op": "POP"
    },
    "1478": {
      "op": "POP"
    },
    "1479": {
      "fn": "OptimismProofSubmitter.submitProof",
      "jump": "o",
      "offset": [
        464,
        1143
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1480": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1481": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1483": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1484": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1491": {
      "op": "SHL"
    },
    "1492": {
      "op": "SUB"
    },
    "1493": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 11
    },
    "1494": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1495": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1502": {
      "op": "SHL"
    },
    "1503": {
      "op": "SUB"
    },
    "1504": {
      "op": "NOT"
    },
    "1505": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1506": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1507": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1508": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "1509": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1510": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1511": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x40"
    },
    "1513": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1514": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1515": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1516": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1517": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "1518": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1519": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1520": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1521": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1554": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1555": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1556": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1557": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1558": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1559": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1560": {
      "op": "JUMPDEST"
    },
    "1561": {
      "op": "DUP1"
    },
    "1562": {
      "op": "CALLDATALOAD"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1569": {
      "op": "SHL"
    },
    "1570": {
      "op": "SUB"
    },
    "1571": {
      "op": "DUP2"
    },
    "1572": {
      "op": "AND"
    },
    "1573": {
      "op": "DUP2"
    },
    "1574": {
      "op": "EQ"
    },
    "1575": {
      "op": "PUSH2",
      "value": "0x62F"
    },
    "1578": {
      "op": "JUMPI"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1581": {
      "op": "DUP1"
    },
    "1582": {
      "op": "REVERT"
    },
    "1583": {
      "op": "JUMPDEST"
    },
    "1584": {
      "op": "SWAP2"
    },
    "1585": {
      "op": "SWAP1"
    },
    "1586": {
      "op": "POP"
    },
    "1587": {
      "jump": "o",
      "op": "JUMP"
    },
    "1588": {
      "op": "JUMPDEST"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1591": {
      "op": "DUP1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1594": {
      "op": "DUP1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1597": {
      "op": "DUP6"
    },
    "1598": {
      "op": "DUP8"
    },
    "1599": {
      "op": "SUB"
    },
    "1600": {
      "op": "SLT"
    },
    "1601": {
      "op": "ISZERO"
    },
    "1602": {
      "op": "PUSH2",
      "value": "0x64A"
    },
    "1605": {
      "op": "JUMPI"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1608": {
      "op": "DUP1"
    },
    "1609": {
      "op": "REVERT"
    },
    "1610": {
      "op": "JUMPDEST"
    },
    "1611": {
      "op": "PUSH2",
      "value": "0x653"
    },
    "1614": {
      "op": "DUP6"
    },
    "1615": {
      "op": "PUSH2",
      "value": "0x618"
    },
    "1618": {
      "jump": "i",
      "op": "JUMP"
    },
    "1619": {
      "op": "JUMPDEST"
    },
    "1620": {
      "op": "SWAP7"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1623": {
      "op": "DUP7"
    },
    "1624": {
      "op": "ADD"
    },
    "1625": {
      "op": "CALLDATALOAD"
    },
    "1626": {
      "op": "SWAP7"
    },
    "1627": {
      "op": "POP"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1630": {
      "op": "DUP7"
    },
    "1631": {
      "op": "ADD"
    },
    "1632": {
      "op": "CALLDATALOAD"
    },
    "1633": {
      "op": "SWAP6"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1636": {
      "op": "ADD"
    },
    "1637": {
      "op": "CALLDATALOAD"
    },
    "1638": {
      "op": "SWAP5"
    },
    "1639": {
      "op": "POP"
    },
    "1640": {
      "op": "SWAP3"
    },
    "1641": {
      "op": "POP"
    },
    "1642": {
      "op": "POP"
    },
    "1643": {
      "op": "POP"
    },
    "1644": {
      "jump": "o",
      "op": "JUMP"
    },
    "1645": {
      "op": "JUMPDEST"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1650": {
      "op": "DUP3"
    },
    "1651": {
      "op": "DUP5"
    },
    "1652": {
      "op": "SUB"
    },
    "1653": {
      "op": "SLT"
    },
    "1654": {
      "op": "ISZERO"
    },
    "1655": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1658": {
      "op": "JUMPI"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1661": {
      "op": "DUP1"
    },
    "1662": {
      "op": "REVERT"
    },
    "1663": {
      "op": "JUMPDEST"
    },
    "1664": {
      "op": "POP"
    },
    "1665": {
      "op": "CALLDATALOAD"
    },
    "1666": {
      "op": "SWAP2"
    },
    "1667": {
      "op": "SWAP1"
    },
    "1668": {
      "op": "POP"
    },
    "1669": {
      "jump": "o",
      "op": "JUMP"
    },
    "1670": {
      "op": "JUMPDEST"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1673": {
      "op": "DUP1"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1676": {
      "op": "DUP4"
    },
    "1677": {
      "op": "DUP6"
    },
    "1678": {
      "op": "SUB"
    },
    "1679": {
      "op": "SLT"
    },
    "1680": {
      "op": "ISZERO"
    },
    "1681": {
      "op": "PUSH2",
      "value": "0x699"
    },
    "1684": {
      "op": "JUMPI"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1687": {
      "op": "DUP1"
    },
    "1688": {
      "op": "REVERT"
    },
    "1689": {
      "op": "JUMPDEST"
    },
    "1690": {
      "op": "DUP3"
    },
    "1691": {
      "op": "CALLDATALOAD"
    },
    "1692": {
      "op": "SWAP2"
    },
    "1693": {
      "op": "POP"
    },
    "1694": {
      "op": "PUSH2",
      "value": "0x6A9"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1699": {
      "op": "DUP5"
    },
    "1700": {
      "op": "ADD"
    },
    "1701": {
      "op": "PUSH2",
      "value": "0x618"
    },
    "1704": {
      "jump": "i",
      "op": "JUMP"
    },
    "1705": {
      "op": "JUMPDEST"
    },
    "1706": {
      "op": "SWAP1"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "op": "SWAP3"
    },
    "1709": {
      "op": "POP"
    },
    "1710": {
      "op": "SWAP3"
    },
    "1711": {
      "op": "SWAP1"
    },
    "1712": {
      "op": "POP"
    },
    "1713": {
      "jump": "o",
      "op": "JUMP"
    },
    "1714": {
      "op": "JUMPDEST"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1719": {
      "op": "DUP3"
    },
    "1720": {
      "op": "DUP5"
    },
    "1721": {
      "op": "SUB"
    },
    "1722": {
      "op": "SLT"
    },
    "1723": {
      "op": "ISZERO"
    },
    "1724": {
      "op": "PUSH2",
      "value": "0x6C4"
    },
    "1727": {
      "op": "JUMPI"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1730": {
      "op": "DUP1"
    },
    "1731": {
      "op": "REVERT"
    },
    "1732": {
      "op": "JUMPDEST"
    },
    "1733": {
      "op": "PUSH2",
      "value": "0x6CD"
    },
    "1736": {
      "op": "DUP3"
    },
    "1737": {
      "op": "PUSH2",
      "value": "0x618"
    },
    "1740": {
      "jump": "i",
      "op": "JUMP"
    },
    "1741": {
      "op": "JUMPDEST"
    },
    "1742": {
      "op": "SWAP4"
    },
    "1743": {
      "op": "SWAP3"
    },
    "1744": {
      "op": "POP"
    },
    "1745": {
      "op": "POP"
    },
    "1746": {
      "op": "POP"
    },
    "1747": {
      "jump": "o",
      "op": "JUMP"
    },
    "1748": {
      "op": "JUMPDEST"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1751": {
      "op": "DUP1"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1754": {
      "op": "DUP1"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1757": {
      "op": "DUP6"
    },
    "1758": {
      "op": "DUP8"
    },
    "1759": {
      "op": "SUB"
    },
    "1760": {
      "op": "SLT"
    },
    "1761": {
      "op": "ISZERO"
    },
    "1762": {
      "op": "PUSH2",
      "value": "0x6EA"
    },
    "1765": {
      "op": "JUMPI"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1768": {
      "op": "DUP1"
    },
    "1769": {
      "op": "REVERT"
    },
    "1770": {
      "op": "JUMPDEST"
    },
    "1771": {
      "op": "PUSH2",
      "value": "0x6F3"
    },
    "1774": {
      "op": "DUP6"
    },
    "1775": {
      "op": "PUSH2",
      "value": "0x618"
    },
    "1778": {
      "jump": "i",
      "op": "JUMP"
    },
    "1779": {
      "op": "JUMPDEST"
    },
    "1780": {
      "op": "SWAP4"
    },
    "1781": {
      "op": "POP"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1784": {
      "op": "DUP6"
    },
    "1785": {
      "op": "ADD"
    },
    "1786": {
      "op": "CALLDATALOAD"
    },
    "1787": {
      "op": "SWAP3"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1791": {
      "op": "DUP6"
    },
    "1792": {
      "op": "ADD"
    },
    "1793": {
      "op": "CALLDATALOAD"
    },
    "1794": {
      "op": "SWAP2"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "op": "PUSH2",
      "value": "0x70F"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1801": {
      "op": "DUP7"
    },
    "1802": {
      "op": "ADD"
    },
    "1803": {
      "op": "PUSH2",
      "value": "0x618"
    },
    "1806": {
      "jump": "i",
      "op": "JUMP"
    },
    "1807": {
      "op": "JUMPDEST"
    },
    "1808": {
      "op": "SWAP1"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "op": "SWAP3"
    },
    "1811": {
      "op": "SWAP6"
    },
    "1812": {
      "op": "SWAP2"
    },
    "1813": {
      "op": "SWAP5"
    },
    "1814": {
      "op": "POP"
    },
    "1815": {
      "op": "SWAP3"
    },
    "1816": {
      "op": "POP"
    },
    "1817": {
      "jump": "o",
      "op": "JUMP"
    },
    "1818": {
      "op": "JUMPDEST"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1821": {
      "op": "DUP1"
    },
    "1822": {
      "op": "DUP3"
    },
    "1823": {
      "op": "MSTORE"
    },
    "1824": {
      "op": "DUP2"
    },
    "1825": {
      "op": "DUP2"
    },
    "1826": {
      "op": "ADD"
    },
    "1827": {
      "op": "MSTORE"
    },
    "1828": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1863": {
      "op": "DUP3"
    },
    "1864": {
      "op": "ADD"
    },
    "1865": {
      "op": "MSTORE"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1868": {
      "op": "ADD"
    },
    "1869": {
      "op": "SWAP1"
    },
    "1870": {
      "jump": "o",
      "op": "JUMP"
    },
    "1871": {
      "op": "JUMPDEST"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "DUP1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1877": {
      "op": "SHL"
    },
    "1878": {
      "op": "SUB"
    },
    "1879": {
      "op": "DUP5"
    },
    "1880": {
      "op": "AND"
    },
    "1881": {
      "op": "DUP2"
    },
    "1882": {
      "op": "MSTORE"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1889": {
      "op": "DUP2"
    },
    "1890": {
      "op": "DUP5"
    },
    "1891": {
      "op": "ADD"
    },
    "1892": {
      "op": "MSTORE"
    },
    "1893": {
      "op": "DUP5"
    },
    "1894": {
      "op": "MLOAD"
    },
    "1895": {
      "op": "DUP1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1898": {
      "op": "DUP6"
    },
    "1899": {
      "op": "ADD"
    },
    "1900": {
      "op": "MSTORE"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1903": {
      "op": "JUMPDEST"
    },
    "1904": {
      "op": "DUP2"
    },
    "1905": {
      "op": "DUP2"
    },
    "1906": {
      "op": "LT"
    },
    "1907": {
      "op": "ISZERO"
    },
    "1908": {
      "op": "PUSH2",
      "value": "0x78B"
    },
    "1911": {
      "op": "JUMPI"
    },
    "1912": {
      "op": "DUP7"
    },
    "1913": {
      "op": "DUP2"
    },
    "1914": {
      "op": "ADD"
    },
    "1915": {
      "op": "DUP4"
    },
    "1916": {
      "op": "ADD"
    },
    "1917": {
      "op": "MLOAD"
    },
    "1918": {
      "op": "DUP6"
    },
    "1919": {
      "op": "DUP3"
    },
    "1920": {
      "op": "ADD"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1923": {
      "op": "ADD"
    },
    "1924": {
      "op": "MSTORE"
    },
    "1925": {
      "op": "DUP3"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "op": "PUSH2",
      "value": "0x76F"
    },
    "1930": {
      "op": "JUMP"
    },
    "1931": {
      "op": "JUMPDEST"
    },
    "1932": {
      "op": "DUP2"
    },
    "1933": {
      "op": "DUP2"
    },
    "1934": {
      "op": "GT"
    },
    "1935": {
      "op": "ISZERO"
    },
    "1936": {
      "op": "PUSH2",
      "value": "0x79D"
    },
    "1939": {
      "op": "JUMPI"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1944": {
      "op": "DUP4"
    },
    "1945": {
      "op": "DUP8"
    },
    "1946": {
      "op": "ADD"
    },
    "1947": {
      "op": "ADD"
    },
    "1948": {
      "op": "MSTORE"
    },
    "1949": {
      "op": "JUMPDEST"
    },
    "1950": {
      "op": "POP"
    },
    "1951": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1956": {
      "op": "SWAP5"
    },
    "1957": {
      "op": "SWAP1"
    },
    "1958": {
      "op": "SWAP5"
    },
    "1959": {
      "op": "AND"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1962": {
      "op": "DUP5"
    },
    "1963": {
      "op": "ADD"
    },
    "1964": {
      "op": "MSTORE"
    },
    "1965": {
      "op": "POP"
    },
    "1966": {
      "op": "POP"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1969": {
      "op": "SWAP2"
    },
    "1970": {
      "op": "SWAP1"
    },
    "1971": {
      "op": "SWAP2"
    },
    "1972": {
      "op": "ADD"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1975": {
      "op": "NOT"
    },
    "1976": {
      "op": "AND"
    },
    "1977": {
      "op": "ADD"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1980": {
      "op": "ADD"
    },
    "1981": {
      "op": "SWAP3"
    },
    "1982": {
      "op": "SWAP2"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "op": "POP"
    },
    "1985": {
      "jump": "o",
      "op": "JUMP"
    },
    "1986": {
      "op": "JUMPDEST"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1989": {
      "op": "DUP3"
    },
    "1990": {
      "op": "DUP3"
    },
    "1991": {
      "op": "LT"
    },
    "1992": {
      "op": "ISZERO"
    },
    "1993": {
      "op": "PUSH2",
      "value": "0x7E2"
    },
    "1996": {
      "op": "JUMPI"
    },
    "1997": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2004": {
      "op": "SHL"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2007": {
      "op": "MSTORE"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2012": {
      "op": "MSTORE"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2017": {
      "op": "REVERT"
    },
    "2018": {
      "op": "JUMPDEST"
    },
    "2019": {
      "op": "POP"
    },
    "2020": {
      "op": "SUB"
    },
    "2021": {
      "op": "SWAP1"
    },
    "2022": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "944a22085669428a4024db2c21dff6eba5712010",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"../../../interfaces/IProofSubmitter.sol\";\n\nimport \"../../BeamerUtils.sol\";\nimport \"../../Resolver.sol\";\nimport \"../../RestrictedCalls.sol\";\n\ncontract OptimismProofSubmitter is IProofSubmitter, RestrictedCalls {\n    IMessenger private messenger;\n    uint32 private constant MESSAGE_GAS_LIMIT = 1_000_000;\n\n    constructor(address messenger_) {\n        messenger = IMessenger(messenger_);\n    }\n\n    function submitProof(\n        address l1Resolver,\n        uint256 sourceChainId,\n        bytes32 requestHash,\n        address filler\n    )\n        external\n        restricted(block.chainid, msg.sender)\n        returns (ProofReceipt memory)\n    {\n        bytes32 fillId = blockhash(block.number - 1);\n        bytes32 fillHash = BeamerUtils.createFillHash(requestHash, fillId);\n\n        messenger.sendMessage(\n            l1Resolver,\n            abi.encodeCall(\n                Resolver.resolve,\n                (requestHash, fillId, block.chainid, sourceChainId, filler)\n            ),\n            MESSAGE_GAS_LIMIT\n        );\n\n        return ProofReceipt(fillId, fillHash);\n    }\n\n    function submitNonFillProof(\n        address l1Resolver,\n        uint256 sourceChainId,\n        bytes32 requestHash,\n        bytes32 fillId\n    ) external {\n        messenger.sendMessage(\n            l1Resolver,\n            abi.encodeCall(\n                Resolver.resolve,\n                (requestHash, fillId, block.chainid, sourceChainId, address(0))\n            ),\n            MESSAGE_GAS_LIMIT\n        );\n    }\n}\n",
  "sourceMap": "207:1359:20:-:0;;;375:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:6;921:18:0;:32::i;:::-;417:9:20;:34;;-1:-1:-1;;;;;;417:34:20;-1:-1:-1;;;;;417:34:20;;;;;;;;;;207:1359;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:25:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:25;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:25:o;:::-;207:1359:20;;;;;;",
  "sourcePath": "contracts/contracts/chains/optimism/OptimismProofSubmitter.sol",
  "type": "contract"
}