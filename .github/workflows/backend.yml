name: Agent CI

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]
    paths-ignore:
      -  'frontend/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_CACHE_DIR: /tmp/.docker-cache

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - uses: ts-graphviz/setup-graphviz@v1

      - name: Cache ~/.local
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/backend.yml', 'poetry.lock') }}

      - uses: Gr1N/setup-poetry@v7

      - name: Cache Python packages
        id: cache-python-packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry/virtualenvs
            ~/.solcx
          key: poetry-1-${{ runner.os }}-${{ hashFiles('.github/workflows/backend.yml', 'poetry.lock') }}


      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
          mkdir -p $DOCKER_CACHE_DIR

      - name: Install dependencies
        run: poetry install
        if: steps.cache-python-packages.outputs.cache-hit != 'true'

      - name: Cache brownie packages
        id: cache-brownie-packages
        uses: actions/cache@v3
        with:
          path: ~/.brownie/packages
          key: ${{ runner.os }}-brownie-${{ hashFiles('brownie-config.yaml') }}

      - name: Install brownie contract libraries
        if: steps.cache-brownie-packages.outputs.cache-hit != 'true'
        run: |
          poetry run brownie pm install OpenZeppelin/openzeppelin-contracts@4.5.0

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.docker-cache
          key: ${{ runner.os }}-docker

      - name: Start local Optimism chain
        run: bash docker/optimism/optimism.sh up
