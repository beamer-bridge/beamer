name: Agent CI

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]
    paths-ignore:
      -  'frontend/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - uses: ts-graphviz/setup-graphviz@v1

      - name: Cache ~/.local
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/ci.yml', 'poetry.lock') }}

      - uses: Gr1N/setup-poetry@v7

      - name: Cache Python packages
        id: cache-python-packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry/virtualenvs
            ~/.solcx
          key: poetry-${{ runner.os }}-${{ hashFiles('.github/workflows/ci.yml', 'poetry.lock') }}

      - name: Install ganache
        run: npm install ganache-cli --global

      - name: Install dependencies
        run: poetry install
        if: steps.cache-python-packages.outputs.cache-hit != 'true'

      - name: Cache brownie packages
        id: cache-brownie-packages
        uses: actions/cache@v3
        with:
          path: ~/.brownie/packages
          key: ${{ runner.os }}-brownie-${{ hashFiles('brownie-config.yaml') }}

      - name: Install brownie contract libraries
        if: steps.cache-brownie-packages.outputs.cache-hit != 'true'
        run: |
          poetry run brownie pm install OpenZeppelin/openzeppelin-contracts@4.5.0

      - name: Build docs
        run: poetry run make docs

      - name: Publish docs
        if: ${{ github.ref_name == 'main' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: ./docs/build/html
          personal_token: ${{ secrets.REPO_ACCESS_TOKEN }}
          external_repository: beamer-bridge/docs
          cname: docs.beamerbridge.com

      - name: Install solhint
        run: npm install solhint --global

      - name: Lint contracts
        run: |
          solhint 'contracts/**/*.sol'

      - name: Lint beamer
        run: poetry run make lint

      - name: Run contract tests
        run: poetry run brownie test -v -G beamer/tests/contracts

      - name: Run agent tests
        run: poetry run brownie test beamer/tests/agent -v -G --cov beamer --cov-report=term

      - name: Load images from cache
        uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: Bring the stack up
        working-directory: docker/optimism/ops
        run: |
          ./scripts/stats.sh &
          docker-compose -f docker-compose.yml -f docker-compose-nobuild.yml up --scale relayer=1 -d

      - name: Wait for the Sequencer node
        working-directory: docker/optimism/ops
        run: ./scripts/wait-for-sequencer.sh

      - name: Run E2E tests
        run: sh ./docker/optimism.sh e2e
