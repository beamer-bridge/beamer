{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l1Resolver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_proofSubmitter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RequestFilled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newLP",
          "type": "address"
        }
      ],
      "name": "addAllowedLP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetReceiverAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "fillRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldLP",
          "type": "address"
        }
      ],
      "name": "removeAllowedLP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/ezdac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
    "14": "interfaces/IProofSubmitter.sol",
    "2": "/Users/ezdac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/IERC20.sol",
    "4": "/Users/ezdac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Context.sol",
    "6": "contracts/FillManager.sol"
  },
  "ast": {
    "absolutePath": "contracts/FillManager.sol",
    "exportedSymbols": {
      "Context": [
        2422
      ],
      "DummyProofSubmitter": [
        23
      ],
      "FillManager": [
        184
      ],
      "IERC20": [
        1711
      ],
      "IProofSubmitter": [
        1727
      ],
      "Ownable": [
        1633
      ]
    },
    "id": 185,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "/Users/ezdac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1712,
        "src": "57:84:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ezdac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1634,
        "src": "142:80:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IProofSubmitter.sol",
        "file": "../interfaces/IProofSubmitter.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1728,
        "src": "223:43:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "IProofSubmitter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1727,
              "src": "300:15:6"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "300:15:6"
          }
        ],
        "canonicalName": "DummyProofSubmitter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 23,
        "linearizedBaseContracts": [
          23,
          1727
        ],
        "name": "DummyProofSubmitter",
        "nameLocation": "277:19:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1726
            ],
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "458:28:6",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "475:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 18,
                  "id": 20,
                  "nodeType": "Return",
                  "src": "468:11:6"
                }
              ]
            },
            "functionSelector": "169d0a6a",
            "id": 22,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitProof",
            "nameLocation": "331:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "l1Resolver",
                  "nameLocation": "351:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "343:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "371:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "363:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "390:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "382:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "eligibleClaimer",
                  "nameLocation": "413:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "405:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "342:87:6"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "448:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "447:6:6"
            },
            "scope": 23,
            "src": "322:164:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 185,
        "src": "268:220:6",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1633,
              "src": "514:7:6"
            },
            "id": 25,
            "nodeType": "InheritanceSpecifier",
            "src": "514:7:6"
          }
        ],
        "canonicalName": "FillManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 184,
        "linearizedBaseContracts": [
          184,
          1633,
          2422
        ],
        "name": "FillManager",
        "nameLocation": "499:11:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 37,
            "name": "RequestFilled",
            "nameLocation": "535:13:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "574:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "558:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "609:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "593:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "648:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "632:34:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "684:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "676:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "676:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "708:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "700:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "548:172:6"
            },
            "src": "529:192:6"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "l1Resolver",
            "nameLocation": "735:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 184,
            "src": "727:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "727:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "proofSubmitter",
            "nameLocation": "767:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 184,
            "src": "751:30:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IProofSubmitter_$1727",
              "typeString": "contract IProofSubmitter"
            },
            "typeName": {
              "id": 41,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40,
                "name": "IProofSubmitter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1727,
                "src": "751:15:6"
              },
              "referencedDeclaration": 1727,
              "src": "751:15:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IProofSubmitter_$1727",
                "typeString": "contract IProofSubmitter"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 46,
            "mutability": "mutable",
            "name": "fills",
            "nameLocation": "813:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 184,
            "src": "788:30:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 45,
              "keyType": {
                "id": 43,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "796:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "788:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 44,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "807:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "allowedLPs",
            "nameLocation": "849:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 184,
            "src": "824:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 49,
              "keyType": {
                "id": 47,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "832:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "824:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 48,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "843:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "928:100:6",
              "statements": [
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "l1Resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "938:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58,
                      "name": "_l1Resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "951:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "938:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "938:24:6"
                },
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61,
                      "name": "proofSubmitter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "972:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IProofSubmitter_$1727",
                        "typeString": "contract IProofSubmitter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 63,
                          "name": "_proofSubmitter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1005:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 62,
                        "name": "IProofSubmitter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1727,
                        "src": "989:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IProofSubmitter_$1727_$",
                          "typeString": "type(contract IProofSubmitter)"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "989:32:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IProofSubmitter_$1727",
                        "typeString": "contract IProofSubmitter"
                      }
                    },
                    "src": "972:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IProofSubmitter_$1727",
                      "typeString": "contract IProofSubmitter"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "972:49:6"
                }
              ]
            },
            "id": 68,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_l1Resolver",
                  "nameLocation": "886:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "878:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_proofSubmitter",
                  "nameLocation": "907:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "899:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:46:6"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "928:0:6"
            },
            "scope": 184,
            "src": "866:162:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "1235:727:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 82,
                          "name": "allowedLPs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "1253:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 85,
                        "indexExpression": {
                          "expression": {
                            "id": 83,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1264:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1264:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1253:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206e6f742077686974656c6973746564",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1277:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37",
                          "typeString": "literal_string \"Sender not whitelisted\""
                        },
                        "value": "Sender not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37",
                          "typeString": "literal_string \"Sender not whitelisted\""
                        }
                      ],
                      "id": 81,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1245:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1245:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "1245:57:6"
                },
                {
                  "assignments": [
                    90
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "mutability": "mutable",
                      "name": "requestHash",
                      "nameLocation": "1320:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 155,
                      "src": "1312:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 89,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1312:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 94,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "1391:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 95,
                            "name": "sourceChainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "1402:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 96,
                            "name": "targetTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "1417:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 97,
                            "name": "targetReceiverAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "1437:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 98,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "1460:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 92,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1357:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1357:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1357:123:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 91,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1334:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1334:156:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1312:178:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1508:19:6",
                        "subExpression": {
                          "baseExpression": {
                            "id": 103,
                            "name": "fills",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "1509:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 105,
                          "indexExpression": {
                            "id": 104,
                            "name": "requestHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "1515:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1509:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c72656164792066696c6c6564",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1529:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f1fdd45b3b51c31df82ed6b4ad08141730b73e5c15da80ef36a62b2e6a9c27f",
                          "typeString": "literal_string \"Already filled\""
                        },
                        "value": "Already filled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f1fdd45b3b51c31df82ed6b4ad08141730b73e5c15da80ef36a62b2e6a9c27f",
                          "typeString": "literal_string \"Already filled\""
                        }
                      ],
                      "id": 102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1500:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1500:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:46:6"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 110,
                        "name": "fills",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1556:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "id": 111,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1562:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1556:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1577:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1556:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1556:25:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 117,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1611:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 118,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1622:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 119,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1637:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 120,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1657:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1657:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 122,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1669:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 116,
                      "name": "RequestFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1597:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address,address,uint256)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1597:79:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "EmitStatement",
                  "src": "1592:84:6"
                },
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "1694:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 155,
                      "src": "1687:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1711",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 126,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 125,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1711,
                          "src": "1687:6:6"
                        },
                        "referencedDeclaration": 1711,
                        "src": "1687:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1711",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 131,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 129,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1709:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 128,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1711,
                      "src": "1702:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1711_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1702:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1711",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1687:41:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 135,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1765:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1765:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 137,
                            "name": "targetReceiverAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "1777:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 138,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "1800:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 133,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "1746:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1711",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1692,
                          "src": "1746:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1746:61:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c6564",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1809:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        },
                        "value": "Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        }
                      ],
                      "id": 132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1738:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1738:89:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:89:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 146,
                            "name": "l1Resolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "1873:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 147,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "1885:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 148,
                            "name": "sourceChainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "1896:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 149,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1911:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1911:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 144,
                            "name": "proofSubmitter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "1846:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IProofSubmitter_$1727",
                              "typeString": "contract IProofSubmitter"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submitProof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1726,
                          "src": "1846:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,uint256,uint256,address) external returns (bool)"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1846:76:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5375626d697474696e672070726f6f662064617461206661696c6564",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1924:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa10e0d7830ed97727b31f476e68911fae4e78de943bf1d83c23a658ad591999",
                          "typeString": "literal_string \"Submitting proof data failed\""
                        },
                        "value": "Submitting proof data failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa10e0d7830ed97727b31f476e68911fae4e78de943bf1d83c23a658ad591999",
                          "typeString": "literal_string \"Submitting proof data failed\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1838:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1838:117:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "1838:117:6"
                }
              ]
            },
            "functionSelector": "efd39926",
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fillRequest",
            "nameLocation": "1043:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "1072:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1064:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1064:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1103:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1095:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "1130:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1122:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "targetReceiverAddress",
                  "nameLocation": "1166:21:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1158:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1158:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1205:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1197:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1054:163:6"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1235:0:6"
            },
            "scope": 184,
            "src": "1034:928:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "2022:41:6",
              "statements": [
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 163,
                        "name": "allowedLPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "2032:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 165,
                      "indexExpression": {
                        "id": 164,
                        "name": "newLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "2043:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2032:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2052:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2032:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2032:24:6"
                }
              ]
            },
            "functionSelector": "1cb2eaf9",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 161,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 160,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1575,
                  "src": "2012:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2012:9:6"
              }
            ],
            "name": "addAllowedLP",
            "nameLocation": "1977:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "newLP",
                  "nameLocation": "1998:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1990:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1989:15:6"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2022:0:6"
            },
            "scope": 184,
            "src": "1968:95:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "2126:41:6",
              "statements": [
                {
                  "expression": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2136:24:6",
                    "subExpression": {
                      "baseExpression": {
                        "id": 177,
                        "name": "allowedLPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "2143:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 179,
                      "indexExpression": {
                        "id": 178,
                        "name": "oldLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "2154:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2143:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "2136:24:6"
                }
              ]
            },
            "functionSelector": "afc4827b",
            "id": 183,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 175,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 174,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1575,
                  "src": "2116:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2116:9:6"
              }
            ],
            "name": "removeAllowedLP",
            "nameLocation": "2078:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "oldLP",
                  "nameLocation": "2102:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "2094:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2094:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2093:15:6"
            },
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2126:0:6"
            },
            "scope": 184,
            "src": "2069:98:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 185,
        "src": "490:1679:6",
        "usedErrors": []
      }
    ],
    "src": "32:2138:6"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516107c73803806107c783398101604081905261002f916100d5565b61003833610069565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055610108565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d057600080fd5b919050565b600080604083850312156100e857600080fd5b6100f1836100b9565b91506100ff602084016100b9565b90509250929050565b6106b0806101176000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631cb2eaf914610067578063715018a61461007c5780638da5cb5b14610084578063afc4827b146100a3578063efd39926146100b6578063f2fde38b146100c9575b600080fd5b61007a6100753660046105b3565b6100dc565b005b61007a610133565b600054604080516001600160a01b039092168252519081900360200190f35b61007a6100b13660046105b3565b610169565b61007a6100c43660046105d5565b6101b4565b61007a6100d73660046105b3565b6104ac565b6000546001600160a01b0316331461010f5760405162461bcd60e51b815260040161010690610623565b60405180910390fd5b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6000546001600160a01b0316331461015d5760405162461bcd60e51b815260040161010690610623565b6101676000610547565b565b6000546001600160a01b031633146101935760405162461bcd60e51b815260040161010690610623565b6001600160a01b03166000908152600460205260409020805460ff19169055565b3360009081526004602052604090205460ff1661020c5760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b6044820152606401610106565b60408051602081018690529081018690526bffffffffffffffffffffffff19606085811b82168184015284901b1660748201526088810182905260009060a80160408051601f1981840301815291815281516020928301206000818152600390935291205490915060ff16156102b55760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e48199a5b1b195960921b6044820152606401610106565b600081815260036020908152604091829020805460ff1916600117905581513381529081018490526001600160a01b03861691889188917f2b0ead5fb26b520d7d2b018ef73d169071011fbb1c3eb49a850b812e080491f3910160405180910390a46040516323b872dd60e01b81523360048201526001600160a01b038481166024830152604482018490528591908216906323b872dd906064016020604051808303816000875af115801561036f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103939190610658565b6103d15760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610106565b600254600154604051630b4e853560e11b81526001600160a01b03918216600482015260248101899052604481018a905233606482015291169063169d0a6a906084016020604051808303816000875af1158015610433573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104579190610658565b6104a35760405162461bcd60e51b815260206004820152601c60248201527f5375626d697474696e672070726f6f662064617461206661696c6564000000006044820152606401610106565b50505050505050565b6000546001600160a01b031633146104d65760405162461bcd60e51b815260040161010690610623565b6001600160a01b03811661053b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610106565b61054481610547565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146105ae57600080fd5b919050565b6000602082840312156105c557600080fd5b6105ce82610597565b9392505050565b600080600080600060a086880312156105ed57600080fd5b853594506020860135935061060460408701610597565b925061061260608701610597565b949793965091946080013592915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561066a57600080fd5b815180151581146105ce57600080fdfea2646970667358221220f54256fae288e12d1fb5fedd8cb7209b6b2dc48cdfb651bab06c2a48ca0e928b64736f6c634300080b0033",
  "bytecodeSha1": "b23766d83195b3500afcbd3af8d3771d46f5fee8",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "FillManager",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "19": [
            2006,
            2028,
            true
          ]
        }
      },
      "14": {},
      "2": {},
      "4": {},
      "6": {
        "FillManager.fillRequest": {
          "15": [
            1253,
            1275,
            true
          ],
          "16": [
            1508,
            1527,
            true
          ],
          "17": [
            1746,
            1807,
            true
          ],
          "18": [
            1846,
            1922,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "13": [
            2378,
            2395
          ],
          "14": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "3": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "11": [
            1998,
            2071
          ],
          "12": [
            2081,
            2109
          ]
        }
      },
      "14": {},
      "2": {},
      "4": {
        "Context._msgSender": {
          "1": [
            712,
            729
          ]
        }
      },
      "6": {
        "FillManager.addAllowedLP": {
          "2": [
            2032,
            2056
          ]
        },
        "FillManager.fillRequest": {
          "5": [
            1245,
            1302
          ],
          "6": [
            1500,
            1546
          ],
          "7": [
            1556,
            1581
          ],
          "8": [
            1592,
            1676
          ],
          "9": [
            1738,
            1827
          ],
          "10": [
            1838,
            1955
          ]
        },
        "FillManager.removeAllowedLP": {
          "4": [
            2136,
            2160
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/IERC20",
    "IProofSubmitter",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c80631cb2eaf914610067578063715018a61461007c5780638da5cb5b14610084578063afc4827b146100a3578063efd39926146100b6578063f2fde38b146100c9575b600080fd5b61007a6100753660046105b3565b6100dc565b005b61007a610133565b600054604080516001600160a01b039092168252519081900360200190f35b61007a6100b13660046105b3565b610169565b61007a6100c43660046105d5565b6101b4565b61007a6100d73660046105b3565b6104ac565b6000546001600160a01b0316331461010f5760405162461bcd60e51b815260040161010690610623565b60405180910390fd5b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6000546001600160a01b0316331461015d5760405162461bcd60e51b815260040161010690610623565b6101676000610547565b565b6000546001600160a01b031633146101935760405162461bcd60e51b815260040161010690610623565b6001600160a01b03166000908152600460205260409020805460ff19169055565b3360009081526004602052604090205460ff1661020c5760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b6044820152606401610106565b60408051602081018690529081018690526bffffffffffffffffffffffff19606085811b82168184015284901b1660748201526088810182905260009060a80160408051601f1981840301815291815281516020928301206000818152600390935291205490915060ff16156102b55760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e48199a5b1b195960921b6044820152606401610106565b600081815260036020908152604091829020805460ff1916600117905581513381529081018490526001600160a01b03861691889188917f2b0ead5fb26b520d7d2b018ef73d169071011fbb1c3eb49a850b812e080491f3910160405180910390a46040516323b872dd60e01b81523360048201526001600160a01b038481166024830152604482018490528591908216906323b872dd906064016020604051808303816000875af115801561036f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103939190610658565b6103d15760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610106565b600254600154604051630b4e853560e11b81526001600160a01b03918216600482015260248101899052604481018a905233606482015291169063169d0a6a906084016020604051808303816000875af1158015610433573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104579190610658565b6104a35760405162461bcd60e51b815260206004820152601c60248201527f5375626d697474696e672070726f6f662064617461206661696c6564000000006044820152606401610106565b50505050505050565b6000546001600160a01b031633146104d65760405162461bcd60e51b815260040161010690610623565b6001600160a01b03811661053b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610106565b61054481610547565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146105ae57600080fd5b919050565b6000602082840312156105c557600080fd5b6105ce82610597565b9392505050565b600080600080600060a086880312156105ed57600080fd5b853594506020860135935061060460408701610597565b925061061260608701610597565b949793965091946080013592915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561066a57600080fd5b815180151581146105ce57600080fdfea2646970667358221220f54256fae288e12d1fb5fedd8cb7209b6b2dc48cdfb651bab06c2a48ca0e928b64736f6c634300080b0033",
  "deployedSourceMap": "490:1679:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1968:95;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;1036:85::-;1082:7;1108:6;1036:85;;;-1:-1:-1;;;;;1108:6:0;;;529:51:15;;1036:85:0;;;;;517:2:15;1036:85:0;;;2069:98:6;;;;;;:::i;:::-;;:::i;1034:928::-;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;1968:95:6:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2032:17:6::1;;::::0;;;:10:::1;:17;::::0;;;;:24;;-1:-1:-1;;2032:24:6::1;2052:4;2032:24;::::0;;1968:95::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2069:98:6:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2143:17:6::1;;::::0;;;:10:::1;:17;::::0;;;;2136:24;;-1:-1:-1;;2136:24:6::1;::::0;;2069:98::o;1034:928::-;1264:10;1253:22;;;;:10;:22;;;;;;;;1245:57;;;;-1:-1:-1;;;1245:57:6;;1625:2:15;1245:57:6;;;1607:21:15;1664:2;1644:18;;;1637:30;-1:-1:-1;;;1683:18:15;;;1676:52;1745:18;;1245:57:6;1423:346:15;1245:57:6;1357:123;;;;;;2015:19:15;;;2050:12;;;2043:28;;;-1:-1:-1;;2159:2:15;2155:15;;;2151:24;;2137:12;;;2130:46;2210:15;;;2206:24;2192:12;;;2185:46;2247:13;;;2240:29;;;1312:19:6;;2285:13:15;;1357:123:6;;;-1:-1:-1;;1357:123:6;;;;;;;;;1334:156;;1357:123;1334:156;;;;1509:18;;;;:5;:18;;;;;;1334:156;;-1:-1:-1;1509:18:6;;1508:19;1500:46;;;;-1:-1:-1;;;1500:46:6;;2511:2:15;1500:46:6;;;2493:21:15;2550:2;2530:18;;;2523:30;-1:-1:-1;;;2569:18:15;;;2562:44;2623:18;;1500:46:6;2309:338:15;1500:46:6;1556:18;;;;:5;:18;;;;;;;;;:25;;-1:-1:-1;;1556:25:6;1577:4;1556:25;;;1597:79;;1657:10;2826:51:15;;2893:18;;;2886:34;;;-1:-1:-1;;;;;1597:79:6;;;1622:13;;1611:9;;1597:79;;2799:18:15;1597:79:6;;;;;;;1746:61;;-1:-1:-1;;;1746:61:6;;1765:10;1746:61;;;3171:34:15;-1:-1:-1;;;;;3241:15:15;;;3221:18;;;3214:43;3273:18;;;3266:34;;;1709:18:6;;1746;;;;;;3106::15;;1746:61:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1738:89;;;;-1:-1:-1;;;1738:89:6;;3795:2:15;1738:89:6;;;3777:21:15;3834:2;3814:18;;;3807:30;-1:-1:-1;;;3853:18:15;;;3846:45;3908:18;;1738:89:6;3593:339:15;1738:89:6;1846:14;;;1873:10;1846:76;;-1:-1:-1;;;1846:76:6;;-1:-1:-1;;;;;1873:10:6;;;1846:76;;;4206:34:15;4256:18;;;4249:34;;;4299:18;;;4292:34;;;1911:10:6;4342:18:15;;;4335:43;1846:14:6;;;:26;;4140:19:15;;1846:76:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1838:117;;;;-1:-1:-1;;;1838:117:6;;4591:2:15;1838:117:6;;;4573:21:15;4630:2;4610:18;;;4603:30;4669;4649:18;;;4642:58;4717:18;;1838:117:6;4389:352:15;1838:117:6;1235:727;;1034:928;;;;;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4948:2:15;1998:73:0::1;::::0;::::1;4930:21:15::0;4987:2;4967:18;;;4960:30;5026:34;5006:18;;;4999:62;-1:-1:-1;;;5077:18:15;;;5070:36;5123:19;;1998:73:0::1;4746:402:15::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:173:15:-;82:20;;-1:-1:-1;;;;;131:31:15;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:15:o;591:466::-;686:6;694;702;710;718;771:3;759:9;750:7;746:23;742:33;739:53;;;788:1;785;778:12;739:53;824:9;811:23;801:33;;881:2;870:9;866:18;853:32;843:42;;904:38;938:2;927:9;923:18;904:38;:::i;:::-;894:48;;961:38;995:2;984:9;980:18;961:38;:::i;:::-;591:466;;;;-1:-1:-1;591:466:15;;1046:3;1031:19;1018:33;;591:466;-1:-1:-1;;591:466:15:o;1062:356::-;1264:2;1246:21;;;1283:18;;;1276:30;1342:34;1337:2;1322:18;;1315:62;1409:2;1394:18;;1062:356::o;3311:277::-;3378:6;3431:2;3419:9;3410:7;3406:23;3402:32;3399:52;;;3447:1;3444;3437:12;3399:52;3479:9;3473:16;3532:5;3525:13;3518:21;3511:5;3508:32;3498:60;;3554:1;3551;3544:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    490,
    2169
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1CB2EAF9 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xAFC4827B EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xEFD39926 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0xDC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x133 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x169 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x167 PUSH1 0x0 PUSH2 0x547 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 DUP2 SHL DUP3 AND DUP2 DUP5 ADD MSTORE DUP5 SWAP1 SHL AND PUSH1 0x74 DUP3 ADD MSTORE PUSH1 0x88 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xA8 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E48199A5B1B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x106 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD CALLER DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 DUP9 SWAP2 DUP9 SWAP2 PUSH32 0x2B0EAD5FB26B520D7D2B018EF73D169071011FBB1C3EB49A850B812E080491F3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE DUP6 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x658 JUMP JUMPDEST PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x106 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB4E8535 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP11 SWAP1 MSTORE CALLER PUSH1 0x64 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x169D0A6A SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x433 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x658 JUMP JUMPDEST PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5375626D697474696E672070726F6F662064617461206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x106 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0x544 DUP2 PUSH2 0x547 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5CE DUP3 PUSH2 0x597 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x604 PUSH1 0x40 DUP8 ADD PUSH2 0x597 JUMP JUMPDEST SWAP3 POP PUSH2 0x612 PUSH1 0x60 DUP8 ADD PUSH2 0x597 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 TIMESTAMP JUMP STATICCALL 0xE2 DUP9 0xE1 0x2D 0x1F 0xB5 INVALID 0xDD DUP13 0xB7 KECCAK256 SWAP12 PUSH12 0x2DC48CDFB651BAB06C2A48CA 0xE SWAP3 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        490,
        2169
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x62"
    },
    "25": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1CB2EAF9"
    },
    "38": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "EQ",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x67"
    },
    "42": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "49": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x84"
    },
    "64": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xAFC4827B"
    },
    "71": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA3"
    },
    "75": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xEFD39926"
    },
    "82": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB6"
    },
    "86": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC9"
    },
    "97": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "DUP1",
      "path": "6"
    },
    "102": {
      "first_revert": true,
      "fn": null,
      "offset": [
        490,
        2169
      ],
      "op": "REVERT",
      "path": "6"
    },
    "103": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1968,
        2063
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "104": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1968,
        2063
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7A"
    },
    "107": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1968,
        2063
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x75"
    },
    "110": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1968,
        2063
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "111": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1968,
        2063
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "113": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1968,
        2063
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B3"
    },
    "116": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        1968,
        2063
      ],
      "op": "JUMP",
      "path": "6"
    },
    "117": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1968,
        2063
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "118": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1968,
        2063
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDC"
    },
    "121": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        1968,
        2063
      ],
      "op": "JUMP",
      "path": "6"
    },
    "122": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1968,
        2063
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "123": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1968,
        2063
      ],
      "op": "STOP",
      "path": "6"
    },
    "124": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "125": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A"
    },
    "128": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133"
    },
    "131": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "132": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "133": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "135": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "136": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "138": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "139": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "146": {
      "op": "SHL"
    },
    "147": {
      "op": "SUB"
    },
    "148": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "149": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "150": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "151": {
      "op": "DUP3"
    },
    "152": {
      "op": "MSTORE"
    },
    "153": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "154": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "155": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP2",
      "path": "0"
    },
    "156": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "157": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "SUB",
      "path": "0"
    },
    "158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "160": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ADD",
      "path": "0"
    },
    "161": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "162": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "RETURN",
      "path": "0"
    },
    "163": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2069,
        2167
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "164": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2069,
        2167
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7A"
    },
    "167": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2069,
        2167
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB1"
    },
    "170": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2069,
        2167
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "171": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2069,
        2167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "173": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2069,
        2167
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B3"
    },
    "176": {
      "fn": "FillManager.removeAllowedLP",
      "jump": "i",
      "offset": [
        2069,
        2167
      ],
      "op": "JUMP",
      "path": "6"
    },
    "177": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2069,
        2167
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "178": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2069,
        2167
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x169"
    },
    "181": {
      "fn": "FillManager.removeAllowedLP",
      "jump": "i",
      "offset": [
        2069,
        2167
      ],
      "op": "JUMP",
      "path": "6"
    },
    "182": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "183": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7A"
    },
    "186": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC4"
    },
    "189": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "190": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "192": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D5"
    },
    "195": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1034,
        1962
      ],
      "op": "JUMP",
      "path": "6"
    },
    "196": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "197": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B4"
    },
    "200": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1034,
        1962
      ],
      "op": "JUMP",
      "path": "6"
    },
    "201": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "202": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A"
    },
    "205": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7"
    },
    "208": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "209": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "211": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B3"
    },
    "214": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AC"
    },
    "219": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "220": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1968,
        2063
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "221": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "223": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "230": {
      "op": "SHL"
    },
    "231": {
      "op": "SUB"
    },
    "232": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "233": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 1
    },
    "234": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "235": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "238": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "239": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "241": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "248": {
      "op": "SHL"
    },
    "249": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "250": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "251": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "253": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "254": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x106"
    },
    "257": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "258": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x623"
    },
    "261": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "262": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "263": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "265": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "266": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "267": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "268": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "269": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "270": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "271": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "278": {
      "op": "SHL"
    },
    "279": {
      "op": "SUB"
    },
    "280": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2049
      ],
      "op": "AND",
      "path": "6",
      "statement": 2
    },
    "281": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "283": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2049
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "284": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2049
      ],
      "op": "DUP2",
      "path": "6"
    },
    "285": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2049
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "286": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2042
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "288": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "290": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2049
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "291": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "293": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2049
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "294": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2049
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "295": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2056
      ],
      "op": "DUP1",
      "path": "6"
    },
    "296": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2056
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "297": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "299": {
      "op": "NOT"
    },
    "300": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2056
      ],
      "op": "AND",
      "path": "6"
    },
    "301": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2052,
        2056
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "303": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2056
      ],
      "op": "OR",
      "path": "6"
    },
    "304": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "305": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        2032,
        2056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "306": {
      "fn": "FillManager.addAllowedLP",
      "jump": "o",
      "offset": [
        1968,
        2063
      ],
      "op": "JUMP",
      "path": "6"
    },
    "307": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "308": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "310": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "317": {
      "op": "SHL"
    },
    "318": {
      "op": "SUB"
    },
    "319": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "320": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "321": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "322": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D"
    },
    "325": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "326": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "328": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "329": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "333": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "335": {
      "op": "SHL"
    },
    "336": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "337": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "338": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "340": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "341": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x106"
    },
    "344": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "345": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x623"
    },
    "348": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "349": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "350": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x167"
    },
    "353": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "355": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x547"
    },
    "358": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "359": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "360": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "361": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2069,
        2167
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "362": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "364": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "371": {
      "op": "SHL"
    },
    "372": {
      "op": "SUB"
    },
    "373": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "374": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "375": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "376": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x193"
    },
    "379": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "380": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "382": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "383": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "387": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "389": {
      "op": "SHL"
    },
    "390": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "391": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "392": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "394": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "395": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x106"
    },
    "398": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "399": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x623"
    },
    "402": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "403": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "410": {
      "op": "SHL"
    },
    "411": {
      "op": "SUB"
    },
    "412": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2143,
        2160
      ],
      "op": "AND",
      "path": "6",
      "statement": 4
    },
    "413": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2143,
        2160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "415": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2143,
        2160
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "416": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2143,
        2160
      ],
      "op": "DUP2",
      "path": "6"
    },
    "417": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2143,
        2160
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "418": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2143,
        2153
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "420": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2143,
        2160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "422": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2143,
        2160
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "423": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2143,
        2160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "425": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2143,
        2160
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "426": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2143,
        2160
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "427": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2136,
        2160
      ],
      "op": "DUP1",
      "path": "6"
    },
    "428": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2136,
        2160
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "429": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "431": {
      "op": "NOT"
    },
    "432": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2136,
        2160
      ],
      "op": "AND",
      "path": "6"
    },
    "433": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2136,
        2160
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "434": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        2136,
        2160
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "435": {
      "fn": "FillManager.removeAllowedLP",
      "jump": "o",
      "offset": [
        2069,
        2167
      ],
      "op": "JUMP",
      "path": "6"
    },
    "436": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "437": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1264,
        1274
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 5
    },
    "438": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1253,
        1275
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "440": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1253,
        1275
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "441": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1253,
        1275
      ],
      "op": "DUP2",
      "path": "6"
    },
    "442": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1253,
        1275
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "443": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1253,
        1263
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "445": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1253,
        1275
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "447": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1253,
        1275
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "448": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1253,
        1275
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "450": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1253,
        1275
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "451": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1253,
        1275
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "452": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1253,
        1275
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "453": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1253,
        1275
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "455": {
      "branch": 15,
      "fn": "FillManager.fillRequest",
      "offset": [
        1253,
        1275
      ],
      "op": "AND",
      "path": "6"
    },
    "456": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1245,
        1302
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20C"
    },
    "459": {
      "branch": 15,
      "fn": "FillManager.fillRequest",
      "offset": [
        1245,
        1302
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "460": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1245,
        1302
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "462": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1245,
        1302
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "463": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "467": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "469": {
      "op": "SHL"
    },
    "470": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1245,
        1302
      ],
      "op": "DUP2",
      "path": "6"
    },
    "471": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1245,
        1302
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "474": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1245,
        1302
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "476": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1245,
        1302
      ],
      "op": "DUP3",
      "path": "6"
    },
    "477": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1245,
        1302
      ],
      "op": "ADD",
      "path": "6"
    },
    "478": {
      "op": "MSTORE"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "483": {
      "op": "DUP3"
    },
    "484": {
      "op": "ADD"
    },
    "485": {
      "op": "MSTORE"
    },
    "486": {
      "op": "PUSH22",
      "value": "0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "511": {
      "op": "SHL"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "514": {
      "op": "DUP3"
    },
    "515": {
      "op": "ADD"
    },
    "516": {
      "op": "MSTORE"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "519": {
      "op": "ADD"
    },
    "520": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1245,
        1302
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x106"
    },
    "523": {
      "op": "JUMP"
    },
    "524": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1245,
        1302
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "525": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "527": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "DUP1",
      "path": "6"
    },
    "528": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "529": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "531": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "DUP2",
      "path": "6"
    },
    "532": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "ADD",
      "path": "6"
    },
    "533": {
      "op": "DUP7"
    },
    "534": {
      "op": "SWAP1"
    },
    "535": {
      "op": "MSTORE"
    },
    "536": {
      "op": "SWAP1"
    },
    "537": {
      "op": "DUP2"
    },
    "538": {
      "op": "ADD"
    },
    "539": {
      "op": "DUP7"
    },
    "540": {
      "op": "SWAP1"
    },
    "541": {
      "op": "MSTORE"
    },
    "542": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "555": {
      "op": "NOT"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "558": {
      "op": "DUP6"
    },
    "559": {
      "op": "DUP2"
    },
    "560": {
      "op": "SHL"
    },
    "561": {
      "op": "DUP3"
    },
    "562": {
      "op": "AND"
    },
    "563": {
      "op": "DUP2"
    },
    "564": {
      "op": "DUP5"
    },
    "565": {
      "op": "ADD"
    },
    "566": {
      "op": "MSTORE"
    },
    "567": {
      "op": "DUP5"
    },
    "568": {
      "op": "SWAP1"
    },
    "569": {
      "op": "SHL"
    },
    "570": {
      "op": "AND"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "573": {
      "op": "DUP3"
    },
    "574": {
      "op": "ADD"
    },
    "575": {
      "op": "MSTORE"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "578": {
      "op": "DUP2"
    },
    "579": {
      "op": "ADD"
    },
    "580": {
      "op": "DUP3"
    },
    "581": {
      "op": "SWAP1"
    },
    "582": {
      "op": "MSTORE"
    },
    "583": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1312,
        1331
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "585": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1312,
        1331
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "586": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "588": {
      "op": "ADD"
    },
    "589": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "591": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "DUP1",
      "path": "6"
    },
    "592": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "595": {
      "op": "NOT"
    },
    "596": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "DUP2",
      "path": "6"
    },
    "597": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "DUP5",
      "path": "6"
    },
    "598": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "SUB",
      "path": "6"
    },
    "599": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "ADD",
      "path": "6"
    },
    "600": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "DUP2",
      "path": "6"
    },
    "601": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "602": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "603": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "DUP2",
      "path": "6"
    },
    "604": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "605": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1334,
        1490
      ],
      "op": "DUP2",
      "path": "6"
    },
    "606": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1334,
        1490
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "607": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1357,
        1480
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "609": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1334,
        1490
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "610": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1334,
        1490
      ],
      "op": "DUP4",
      "path": "6"
    },
    "611": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1334,
        1490
      ],
      "op": "ADD",
      "path": "6"
    },
    "612": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1334,
        1490
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "613": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1509,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x0"
    },
    "615": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1509,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "616": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1509,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "617": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1509,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "618": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1509,
        1514
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "620": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1509,
        1527
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "621": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1509,
        1527
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "622": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1509,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "623": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1509,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "624": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1509,
        1527
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "625": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1509,
        1527
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "626": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1334,
        1490
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "627": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1334,
        1490
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1509,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "631": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1509,
        1527
      ],
      "op": "AND",
      "path": "6"
    },
    "632": {
      "branch": 16,
      "fn": "FillManager.fillRequest",
      "offset": [
        1508,
        1527
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "633": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1500,
        1546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B5"
    },
    "636": {
      "branch": 16,
      "fn": "FillManager.fillRequest",
      "offset": [
        1500,
        1546
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "637": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1500,
        1546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "639": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1500,
        1546
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "640": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "644": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "646": {
      "op": "SHL"
    },
    "647": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1500,
        1546
      ],
      "op": "DUP2",
      "path": "6"
    },
    "648": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1500,
        1546
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "651": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1500,
        1546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "653": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1500,
        1546
      ],
      "op": "DUP3",
      "path": "6"
    },
    "654": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1500,
        1546
      ],
      "op": "ADD",
      "path": "6"
    },
    "655": {
      "op": "MSTORE"
    },
    "656": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "660": {
      "op": "DUP3"
    },
    "661": {
      "op": "ADD"
    },
    "662": {
      "op": "MSTORE"
    },
    "663": {
      "op": "PUSH14",
      "value": "0x105B1C9958591E48199A5B1B1959"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "680": {
      "op": "SHL"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "683": {
      "op": "DUP3"
    },
    "684": {
      "op": "ADD"
    },
    "685": {
      "op": "MSTORE"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "688": {
      "op": "ADD"
    },
    "689": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1500,
        1546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x106"
    },
    "692": {
      "op": "JUMP"
    },
    "693": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1500,
        1546
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "694": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1574
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 7,
      "value": "0x0"
    },
    "696": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1574
      ],
      "op": "DUP2",
      "path": "6"
    },
    "697": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1574
      ],
      "op": "DUP2",
      "path": "6"
    },
    "698": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1574
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "699": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "701": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "703": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1574
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "704": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1574
      ],
      "op": "DUP2",
      "path": "6"
    },
    "705": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1574
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "706": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "708": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1574
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "709": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1574
      ],
      "op": "DUP3",
      "path": "6"
    },
    "710": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1574
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "711": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1574
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "712": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1581
      ],
      "op": "DUP1",
      "path": "6"
    },
    "713": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1581
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "714": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "716": {
      "op": "NOT"
    },
    "717": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1581
      ],
      "op": "AND",
      "path": "6"
    },
    "718": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1577,
        1581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "720": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1581
      ],
      "op": "OR",
      "path": "6"
    },
    "721": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "722": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1556,
        1581
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "723": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 8
    },
    "724": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "725": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1657,
        1667
      ],
      "op": "CALLER",
      "path": "6"
    },
    "726": {
      "op": "DUP2"
    },
    "727": {
      "op": "MSTORE"
    },
    "728": {
      "op": "SWAP1"
    },
    "729": {
      "op": "DUP2"
    },
    "730": {
      "op": "ADD"
    },
    "731": {
      "op": "DUP5"
    },
    "732": {
      "op": "SWAP1"
    },
    "733": {
      "op": "MSTORE"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "740": {
      "op": "SHL"
    },
    "741": {
      "op": "SUB"
    },
    "742": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "DUP7",
      "path": "6"
    },
    "743": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "AND",
      "path": "6"
    },
    "744": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "745": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1622,
        1635
      ],
      "op": "DUP9",
      "path": "6"
    },
    "746": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1622,
        1635
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "747": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1611,
        1620
      ],
      "op": "DUP9",
      "path": "6"
    },
    "748": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1611,
        1620
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "749": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x2B0EAD5FB26B520D7D2B018EF73D169071011FBB1C3EB49A850B812E080491F3"
    },
    "782": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "783": {
      "op": "ADD"
    },
    "784": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "786": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "787": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "DUP1",
      "path": "6"
    },
    "788": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "789": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "SUB",
      "path": "6"
    },
    "790": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "791": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1597,
        1676
      ],
      "op": "LOG4",
      "path": "6"
    },
    "792": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x40"
    },
    "794": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "795": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "DUP2",
      "path": "6"
    },
    "804": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "805": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1765,
        1775
      ],
      "op": "CALLER",
      "path": "6"
    },
    "806": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "808": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "DUP3",
      "path": "6"
    },
    "809": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "ADD",
      "path": "6"
    },
    "810": {
      "op": "MSTORE"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "817": {
      "op": "SHL"
    },
    "818": {
      "op": "SUB"
    },
    "819": {
      "op": "DUP5"
    },
    "820": {
      "op": "DUP2"
    },
    "821": {
      "op": "AND"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "824": {
      "op": "DUP4"
    },
    "825": {
      "op": "ADD"
    },
    "826": {
      "op": "MSTORE"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "829": {
      "op": "DUP3"
    },
    "830": {
      "op": "ADD"
    },
    "831": {
      "op": "DUP5"
    },
    "832": {
      "op": "SWAP1"
    },
    "833": {
      "op": "MSTORE"
    },
    "834": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1709,
        1727
      ],
      "op": "DUP6",
      "path": "6"
    },
    "835": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1709,
        1727
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "836": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1764
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "837": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1764
      ],
      "op": "DUP3",
      "path": "6"
    },
    "838": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1764
      ],
      "op": "AND",
      "path": "6"
    },
    "839": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1764
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "840": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1764
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "845": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1764
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "848": {
      "op": "ADD"
    },
    "849": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "851": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "853": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "854": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "DUP1",
      "path": "6"
    },
    "855": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "DUP4",
      "path": "6"
    },
    "856": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "SUB",
      "path": "6"
    },
    "857": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "DUP2",
      "path": "6"
    },
    "858": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "860": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "DUP8",
      "path": "6"
    },
    "861": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "GAS",
      "path": "6"
    },
    "862": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "CALL",
      "path": "6"
    },
    "863": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "864": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "DUP1",
      "path": "6"
    },
    "865": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "866": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36F"
    },
    "869": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "870": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "871": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "873": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "DUP1",
      "path": "6"
    },
    "874": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "875": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "876": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "878": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "REVERT",
      "path": "6"
    },
    "879": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "880": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "POP",
      "path": "6"
    },
    "881": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "POP",
      "path": "6"
    },
    "882": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "POP",
      "path": "6"
    },
    "883": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "POP",
      "path": "6"
    },
    "884": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "886": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "887": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "888": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "890": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "NOT",
      "path": "6"
    },
    "891": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "893": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "DUP3",
      "path": "6"
    },
    "894": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "ADD",
      "path": "6"
    },
    "895": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "AND",
      "path": "6"
    },
    "896": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "DUP3",
      "path": "6"
    },
    "897": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "ADD",
      "path": "6"
    },
    "898": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "DUP1",
      "path": "6"
    },
    "899": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "901": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "902": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "POP",
      "path": "6"
    },
    "903": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "DUP2",
      "path": "6"
    },
    "904": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "ADD",
      "path": "6"
    },
    "905": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "906": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x393"
    },
    "909": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "910": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "911": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x658"
    },
    "914": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1746,
        1807
      ],
      "op": "JUMP",
      "path": "6"
    },
    "915": {
      "branch": 17,
      "fn": "FillManager.fillRequest",
      "offset": [
        1746,
        1807
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "916": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1738,
        1827
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3D1"
    },
    "919": {
      "branch": 17,
      "fn": "FillManager.fillRequest",
      "offset": [
        1738,
        1827
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "920": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1738,
        1827
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "922": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1738,
        1827
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "923": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1738,
        1827
      ],
      "op": "DUP2",
      "path": "6"
    },
    "931": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1738,
        1827
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "934": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1738,
        1827
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "936": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1738,
        1827
      ],
      "op": "DUP3",
      "path": "6"
    },
    "937": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1738,
        1827
      ],
      "op": "ADD",
      "path": "6"
    },
    "938": {
      "op": "MSTORE"
    },
    "939": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "943": {
      "op": "DUP3"
    },
    "944": {
      "op": "ADD"
    },
    "945": {
      "op": "MSTORE"
    },
    "946": {
      "op": "PUSH15",
      "value": "0x151C985B9CD9995C8819985A5B1959"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "964": {
      "op": "SHL"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "967": {
      "op": "DUP3"
    },
    "968": {
      "op": "ADD"
    },
    "969": {
      "op": "MSTORE"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "972": {
      "op": "ADD"
    },
    "973": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1738,
        1827
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x106"
    },
    "976": {
      "op": "JUMP"
    },
    "977": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1738,
        1827
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "978": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1860
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 10,
      "value": "0x2"
    },
    "980": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1860
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "981": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1860
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "983": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1873,
        1883
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "984": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "986": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "987": {
      "op": "PUSH4",
      "value": "0xB4E8535"
    },
    "992": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "994": {
      "op": "SHL"
    },
    "995": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "DUP2",
      "path": "6"
    },
    "996": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "op": "SUB"
    },
    "1005": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1873,
        1883
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1006": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1873,
        1883
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1007": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1873,
        1883
      ],
      "op": "AND",
      "path": "6"
    },
    "1008": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1010": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1011": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "ADD",
      "path": "6"
    },
    "1012": {
      "op": "MSTORE"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1015": {
      "op": "DUP2"
    },
    "1016": {
      "op": "ADD"
    },
    "1017": {
      "op": "DUP10"
    },
    "1018": {
      "op": "SWAP1"
    },
    "1019": {
      "op": "MSTORE"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1022": {
      "op": "DUP2"
    },
    "1023": {
      "op": "ADD"
    },
    "1024": {
      "op": "DUP11"
    },
    "1025": {
      "op": "SWAP1"
    },
    "1026": {
      "op": "MSTORE"
    },
    "1027": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1911,
        1921
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1030": {
      "op": "DUP3"
    },
    "1031": {
      "op": "ADD"
    },
    "1032": {
      "op": "MSTORE"
    },
    "1033": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1860
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1034": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1860
      ],
      "op": "AND",
      "path": "6"
    },
    "1035": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1860
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1036": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1872
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x169D0A6A"
    },
    "1041": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1872
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1044": {
      "op": "ADD"
    },
    "1045": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1047": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1049": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1050": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1051": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1052": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "SUB",
      "path": "6"
    },
    "1053": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1054": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1056": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1057": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "GAS",
      "path": "6"
    },
    "1058": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "CALL",
      "path": "6"
    },
    "1059": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1060": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1061": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1062": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x433"
    },
    "1065": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1066": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1067": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1069": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1070": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1071": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1072": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1074": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1075": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1076": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "POP",
      "path": "6"
    },
    "1077": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "POP",
      "path": "6"
    },
    "1078": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "POP",
      "path": "6"
    },
    "1079": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "POP",
      "path": "6"
    },
    "1080": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1082": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1083": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1084": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1086": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "NOT",
      "path": "6"
    },
    "1087": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1089": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1090": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "ADD",
      "path": "6"
    },
    "1091": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "AND",
      "path": "6"
    },
    "1092": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1093": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "ADD",
      "path": "6"
    },
    "1094": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1095": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1097": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1098": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "POP",
      "path": "6"
    },
    "1099": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1100": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "ADD",
      "path": "6"
    },
    "1101": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1102": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x457"
    },
    "1105": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1106": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1107": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x658"
    },
    "1110": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1846,
        1922
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1111": {
      "branch": 18,
      "fn": "FillManager.fillRequest",
      "offset": [
        1846,
        1922
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1112": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1838,
        1955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4A3"
    },
    "1115": {
      "branch": 18,
      "fn": "FillManager.fillRequest",
      "offset": [
        1838,
        1955
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1116": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1838,
        1955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1118": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1838,
        1955
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1125": {
      "op": "SHL"
    },
    "1126": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1838,
        1955
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1127": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1838,
        1955
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1130": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1838,
        1955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1132": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1838,
        1955
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1133": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1838,
        1955
      ],
      "op": "ADD",
      "path": "6"
    },
    "1134": {
      "op": "MSTORE"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1139": {
      "op": "DUP3"
    },
    "1140": {
      "op": "ADD"
    },
    "1141": {
      "op": "MSTORE"
    },
    "1142": {
      "op": "PUSH32",
      "value": "0x5375626D697474696E672070726F6F662064617461206661696C656400000000"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1177": {
      "op": "DUP3"
    },
    "1178": {
      "op": "ADD"
    },
    "1179": {
      "op": "MSTORE"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1182": {
      "op": "ADD"
    },
    "1183": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1838,
        1955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x106"
    },
    "1186": {
      "op": "JUMP"
    },
    "1187": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1838,
        1955
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1188": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1235,
        1962
      ],
      "op": "POP",
      "path": "6"
    },
    "1189": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1235,
        1962
      ],
      "op": "POP",
      "path": "6"
    },
    "1190": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "POP",
      "path": "6"
    },
    "1191": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "POP",
      "path": "6"
    },
    "1192": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "POP",
      "path": "6"
    },
    "1193": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "POP",
      "path": "6"
    },
    "1194": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1034,
        1962
      ],
      "op": "POP",
      "path": "6"
    },
    "1195": {
      "fn": "FillManager.fillRequest",
      "jump": "o",
      "offset": [
        1034,
        1962
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1196": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1197": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1199": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1206": {
      "op": "SHL"
    },
    "1207": {
      "op": "SUB"
    },
    "1208": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1209": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1210": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1211": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D6"
    },
    "1214": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1215": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1217": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1218": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1224": {
      "op": "SHL"
    },
    "1225": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1226": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1227": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1229": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1230": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x106"
    },
    "1233": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1234": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x623"
    },
    "1237": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1238": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1245": {
      "op": "SHL"
    },
    "1246": {
      "op": "SUB"
    },
    "1247": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 11
    },
    "1248": {
      "branch": 19,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1249": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53B"
    },
    "1252": {
      "branch": 19,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1255": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1256": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1262": {
      "op": "SHL"
    },
    "1263": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1267": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1269": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1270": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1271": {
      "op": "MSTORE"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1276": {
      "op": "DUP3"
    },
    "1277": {
      "op": "ADD"
    },
    "1278": {
      "op": "MSTORE"
    },
    "1279": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1314": {
      "op": "DUP3"
    },
    "1315": {
      "op": "ADD"
    },
    "1316": {
      "op": "MSTORE"
    },
    "1317": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1326": {
      "op": "SHL"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1329": {
      "op": "DUP3"
    },
    "1330": {
      "op": "ADD"
    },
    "1331": {
      "op": "MSTORE"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1334": {
      "op": "ADD"
    },
    "1335": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x106"
    },
    "1338": {
      "op": "JUMP"
    },
    "1339": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1340": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x544"
    },
    "1343": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1344": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x547"
    },
    "1347": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1348": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1349": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1350": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1351": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1352": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1354": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1355": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1362": {
      "op": "SHL"
    },
    "1363": {
      "op": "SUB"
    },
    "1364": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 13
    },
    "1365": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1366": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1373": {
      "op": "SHL"
    },
    "1374": {
      "op": "SUB"
    },
    "1375": {
      "op": "NOT"
    },
    "1376": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1377": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1378": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1379": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "1380": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1381": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1382": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x40"
    },
    "1384": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1385": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1386": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1387": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1388": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "1389": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1390": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1391": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1392": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1425": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1426": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1427": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1428": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1429": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1430": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1431": {
      "op": "JUMPDEST"
    },
    "1432": {
      "op": "DUP1"
    },
    "1433": {
      "op": "CALLDATALOAD"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1440": {
      "op": "SHL"
    },
    "1441": {
      "op": "SUB"
    },
    "1442": {
      "op": "DUP2"
    },
    "1443": {
      "op": "AND"
    },
    "1444": {
      "op": "DUP2"
    },
    "1445": {
      "op": "EQ"
    },
    "1446": {
      "op": "PUSH2",
      "value": "0x5AE"
    },
    "1449": {
      "op": "JUMPI"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1452": {
      "op": "DUP1"
    },
    "1453": {
      "op": "REVERT"
    },
    "1454": {
      "op": "JUMPDEST"
    },
    "1455": {
      "op": "SWAP2"
    },
    "1456": {
      "op": "SWAP1"
    },
    "1457": {
      "op": "POP"
    },
    "1458": {
      "jump": "o",
      "op": "JUMP"
    },
    "1459": {
      "op": "JUMPDEST"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1464": {
      "op": "DUP3"
    },
    "1465": {
      "op": "DUP5"
    },
    "1466": {
      "op": "SUB"
    },
    "1467": {
      "op": "SLT"
    },
    "1468": {
      "op": "ISZERO"
    },
    "1469": {
      "op": "PUSH2",
      "value": "0x5C5"
    },
    "1472": {
      "op": "JUMPI"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1475": {
      "op": "DUP1"
    },
    "1476": {
      "op": "REVERT"
    },
    "1477": {
      "op": "JUMPDEST"
    },
    "1478": {
      "op": "PUSH2",
      "value": "0x5CE"
    },
    "1481": {
      "op": "DUP3"
    },
    "1482": {
      "op": "PUSH2",
      "value": "0x597"
    },
    "1485": {
      "jump": "i",
      "op": "JUMP"
    },
    "1486": {
      "op": "JUMPDEST"
    },
    "1487": {
      "op": "SWAP4"
    },
    "1488": {
      "op": "SWAP3"
    },
    "1489": {
      "op": "POP"
    },
    "1490": {
      "op": "POP"
    },
    "1491": {
      "op": "POP"
    },
    "1492": {
      "jump": "o",
      "op": "JUMP"
    },
    "1493": {
      "op": "JUMPDEST"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1496": {
      "op": "DUP1"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1499": {
      "op": "DUP1"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1504": {
      "op": "DUP7"
    },
    "1505": {
      "op": "DUP9"
    },
    "1506": {
      "op": "SUB"
    },
    "1507": {
      "op": "SLT"
    },
    "1508": {
      "op": "ISZERO"
    },
    "1509": {
      "op": "PUSH2",
      "value": "0x5ED"
    },
    "1512": {
      "op": "JUMPI"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1515": {
      "op": "DUP1"
    },
    "1516": {
      "op": "REVERT"
    },
    "1517": {
      "op": "JUMPDEST"
    },
    "1518": {
      "op": "DUP6"
    },
    "1519": {
      "op": "CALLDATALOAD"
    },
    "1520": {
      "op": "SWAP5"
    },
    "1521": {
      "op": "POP"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1524": {
      "op": "DUP7"
    },
    "1525": {
      "op": "ADD"
    },
    "1526": {
      "op": "CALLDATALOAD"
    },
    "1527": {
      "op": "SWAP4"
    },
    "1528": {
      "op": "POP"
    },
    "1529": {
      "op": "PUSH2",
      "value": "0x604"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1534": {
      "op": "DUP8"
    },
    "1535": {
      "op": "ADD"
    },
    "1536": {
      "op": "PUSH2",
      "value": "0x597"
    },
    "1539": {
      "jump": "i",
      "op": "JUMP"
    },
    "1540": {
      "op": "JUMPDEST"
    },
    "1541": {
      "op": "SWAP3"
    },
    "1542": {
      "op": "POP"
    },
    "1543": {
      "op": "PUSH2",
      "value": "0x612"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1548": {
      "op": "DUP8"
    },
    "1549": {
      "op": "ADD"
    },
    "1550": {
      "op": "PUSH2",
      "value": "0x597"
    },
    "1553": {
      "jump": "i",
      "op": "JUMP"
    },
    "1554": {
      "op": "JUMPDEST"
    },
    "1555": {
      "op": "SWAP5"
    },
    "1556": {
      "op": "SWAP8"
    },
    "1557": {
      "op": "SWAP4"
    },
    "1558": {
      "op": "SWAP7"
    },
    "1559": {
      "op": "POP"
    },
    "1560": {
      "op": "SWAP2"
    },
    "1561": {
      "op": "SWAP5"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "CALLDATALOAD"
    },
    "1566": {
      "op": "SWAP3"
    },
    "1567": {
      "op": "SWAP2"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "op": "POP"
    },
    "1570": {
      "jump": "o",
      "op": "JUMP"
    },
    "1571": {
      "op": "JUMPDEST"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1574": {
      "op": "DUP1"
    },
    "1575": {
      "op": "DUP3"
    },
    "1576": {
      "op": "MSTORE"
    },
    "1577": {
      "op": "DUP2"
    },
    "1578": {
      "op": "DUP2"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "op": "MSTORE"
    },
    "1581": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1616": {
      "op": "DUP3"
    },
    "1617": {
      "op": "ADD"
    },
    "1618": {
      "op": "MSTORE"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1621": {
      "op": "ADD"
    },
    "1622": {
      "op": "SWAP1"
    },
    "1623": {
      "jump": "o",
      "op": "JUMP"
    },
    "1624": {
      "op": "JUMPDEST"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1629": {
      "op": "DUP3"
    },
    "1630": {
      "op": "DUP5"
    },
    "1631": {
      "op": "SUB"
    },
    "1632": {
      "op": "SLT"
    },
    "1633": {
      "op": "ISZERO"
    },
    "1634": {
      "op": "PUSH2",
      "value": "0x66A"
    },
    "1637": {
      "op": "JUMPI"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1640": {
      "op": "DUP1"
    },
    "1641": {
      "op": "REVERT"
    },
    "1642": {
      "op": "JUMPDEST"
    },
    "1643": {
      "op": "DUP2"
    },
    "1644": {
      "op": "MLOAD"
    },
    "1645": {
      "op": "DUP1"
    },
    "1646": {
      "op": "ISZERO"
    },
    "1647": {
      "op": "ISZERO"
    },
    "1648": {
      "op": "DUP2"
    },
    "1649": {
      "op": "EQ"
    },
    "1650": {
      "op": "PUSH2",
      "value": "0x5CE"
    },
    "1653": {
      "op": "JUMPI"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1656": {
      "op": "DUP1"
    },
    "1657": {
      "op": "REVERT"
    }
  },
  "sha1": "c476a0d7178b963fdf07a38b44d1b22d6f67d2b9",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol\";\nimport \"../interfaces/IProofSubmitter.sol\";\n\ncontract DummyProofSubmitter is IProofSubmitter {\n    function submitProof(address l1Resolver, uint256 requestId, uint256 sourceChainId, address eligibleClaimer) external returns (bool)\n    {\n        return true;\n    }\n}\n\ncontract FillManager is Ownable {\n\n    event RequestFilled(\n        uint256 indexed requestId,\n        uint256 indexed sourceChainId,\n        address indexed targetTokenAddress,\n        address filler,\n        uint256 amount\n    );\n\n    address l1Resolver;\n    IProofSubmitter proofSubmitter;\n\n    mapping(bytes32 => bool) fills;\n    mapping(address => bool) allowedLPs;\n\n    constructor(address _l1Resolver, address _proofSubmitter)\n    {\n        l1Resolver = _l1Resolver;\n        proofSubmitter = IProofSubmitter(_proofSubmitter);\n    }\n\n    function fillRequest(\n        uint256 sourceChainId,\n        uint256 requestId,\n        address targetTokenAddress,\n        address targetReceiverAddress,\n        uint256 amount\n    )\n    external\n    {\n        require(allowedLPs[msg.sender], \"Sender not whitelisted\");\n        bytes32 requestHash = keccak256(\n            abi.encodePacked(\n                requestId, sourceChainId, targetTokenAddress, targetReceiverAddress, amount\n            )\n        );\n        require(!fills[requestHash], \"Already filled\");\n        fills[requestHash] = true;\n\n        emit RequestFilled(requestId, sourceChainId, targetTokenAddress, msg.sender, amount);\n\n        IERC20 token = IERC20(targetTokenAddress);\n        require(token.transferFrom(msg.sender, targetReceiverAddress, amount), \"Transfer failed\");\n\n        require(proofSubmitter.submitProof(l1Resolver, requestId, sourceChainId, msg.sender), \"Submitting proof data failed\");\n    }\n\n    function addAllowedLP(address newLP) public onlyOwner {\n        allowedLPs[newLP] = true;\n    }\n\n    function removeAllowedLP(address oldLP) public onlyOwner {\n        delete allowedLPs[oldLP];\n    }\n}\n",
  "sourceMap": "490:1679:6:-:0;;;866:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;938:10:6;:24;;-1:-1:-1;;;;;938:24:6;;;-1:-1:-1;;;;;;938:24:6;;;;;;;972:14;:49;;;;;;;;;;;490:1679;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:15:-;93:13;;-1:-1:-1;;;;;135:31:15;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;490:1679:6;;;;;;",
  "sourcePath": "contracts/FillManager.sol",
  "type": "contract"
}