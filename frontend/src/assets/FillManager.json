{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l1Resolver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_proofSubmitter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "fillHash",
          "type": "bytes32"
        }
      ],
      "name": "HashInvalidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "LPAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "LPRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RequestFilled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newLP",
          "type": "address"
        }
      ],
      "name": "addAllowedLP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedLPs",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetReceiverAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "fillRequest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "fills",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        }
      ],
      "name": "invalidateFillHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1Resolver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proofSubmitter",
      "outputs": [
        {
          "internalType": "contract IProofSubmitter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldLP",
          "type": "address"
        }
      ],
      "name": "removeAllowedLP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "16": "contracts/interfaces/IProofSubmitter.sol",
    "2": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "4": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "6": "contracts/contracts/BeamerUtils.sol",
    "8": "contracts/contracts/FillManager.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/FillManager.sol",
    "exportedSymbols": {
      "Address": [
        3447
      ],
      "BeamerUtils": [
        2817
      ],
      "Context": [
        3152
      ],
      "FillManager": [
        259
      ],
      "IERC20": [
        2505
      ],
      "IProofSubmitter": [
        2850
      ],
      "Ownable": [
        2427
      ],
      "SafeERC20": [
        2729
      ]
    },
    "id": 260,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:8"
      },
      {
        "absolutePath": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 260,
        "sourceUnit": 2506,
        "src": "58:84:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 260,
        "sourceUnit": 2730,
        "src": "143:93:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/fred/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 260,
        "sourceUnit": 2428,
        "src": "237:80:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IProofSubmitter.sol",
        "file": "../interfaces/IProofSubmitter.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 260,
        "sourceUnit": 2851,
        "src": "318:43:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/BeamerUtils.sol",
        "file": "./BeamerUtils.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 260,
        "sourceUnit": 2818,
        "src": "362:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2427,
              "src": "415:7:8"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "415:7:8"
          }
        ],
        "canonicalName": "FillManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 259,
        "linearizedBaseContracts": [
          259,
          2427,
          3152
        ],
        "name": "FillManager",
        "nameLocation": "400:11:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 12,
            "libraryName": {
              "id": 9,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2729,
              "src": "435:9:8"
            },
            "nodeType": "UsingForDirective",
            "src": "429:27:8",
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2505,
                "src": "449:6:8"
              },
              "referencedDeclaration": 2505,
              "src": "449:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2505",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "anonymous": false,
            "eventSelector": "036973204944f64cc25b32e5318bd0611f917fedcd9cb77a11651723db2c6323",
            "id": 26,
            "name": "RequestFilled",
            "nameLocation": "468:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "507:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "491:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "534:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "526:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "566:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "550:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "605:18:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "589:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "641:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "633:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "665:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "657:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "481:196:8"
            },
            "src": "462:216:8"
          },
          {
            "anonymous": false,
            "eventSelector": "d708c5c6a823a3e0499d43d17cd8f42261ff3e464ebfec0ed0ff56533999e00d",
            "id": 34,
            "name": "HashInvalidated",
            "nameLocation": "690:15:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "731:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "715:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "768:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "752:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fillHash",
                  "nameLocation": "800:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "784:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:109:8"
            },
            "src": "684:131:8"
          },
          {
            "anonymous": false,
            "eventSelector": "c852021e30b95510f55086d8cc9bc5d15d20f2cb411766a7da04804f4ad2fba2",
            "id": 38,
            "name": "LPAdded",
            "nameLocation": "827:7:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lp",
                  "nameLocation": "843:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "835:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "834:12:8"
            },
            "src": "821:26:8"
          },
          {
            "anonymous": false,
            "eventSelector": "1abfc08c9d8e95dc2f77c443843422fe9ef89aafb40a5814f65e9c4f557f1faa",
            "id": 42,
            "name": "LPRemoved",
            "nameLocation": "859:9:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lp",
                  "nameLocation": "877:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "869:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "868:12:8"
            },
            "src": "853:28:8"
          },
          {
            "constant": false,
            "functionSelector": "935beb1a",
            "id": 44,
            "mutability": "mutable",
            "name": "l1Resolver",
            "nameLocation": "902:10:8",
            "nodeType": "VariableDeclaration",
            "scope": 259,
            "src": "887:25:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 43,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "887:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "58753357",
            "id": 47,
            "mutability": "mutable",
            "name": "proofSubmitter",
            "nameLocation": "941:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 259,
            "src": "918:37:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IProofSubmitter_$2850",
              "typeString": "contract IProofSubmitter"
            },
            "typeName": {
              "id": 46,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45,
                "name": "IProofSubmitter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2850,
                "src": "918:15:8"
              },
              "referencedDeclaration": 2850,
              "src": "918:15:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IProofSubmitter_$2850",
                "typeString": "contract IProofSubmitter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20158c44",
            "id": 51,
            "mutability": "mutable",
            "name": "fills",
            "nameLocation": "1062:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 259,
            "src": "1027:40:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
              "typeString": "mapping(bytes32 => bytes32)"
            },
            "typeName": {
              "id": 50,
              "keyType": {
                "id": 48,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1035:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1027:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                "typeString": "mapping(bytes32 => bytes32)"
              },
              "valueType": {
                "id": 49,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1046:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aeea7b",
            "id": 55,
            "mutability": "mutable",
            "name": "allowedLPs",
            "nameLocation": "1105:10:8",
            "nodeType": "VariableDeclaration",
            "scope": 259,
            "src": "1073:42:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 54,
              "keyType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1081:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1073:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 53,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1092:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "1180:100:8",
              "statements": [
                {
                  "expression": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62,
                      "name": "l1Resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1190:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 63,
                      "name": "_l1Resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1203:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1190:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "1190:24:8"
                },
                {
                  "expression": {
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66,
                      "name": "proofSubmitter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "1224:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IProofSubmitter_$2850",
                        "typeString": "contract IProofSubmitter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 68,
                          "name": "_proofSubmitter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "1257:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 67,
                        "name": "IProofSubmitter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2850,
                        "src": "1241:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IProofSubmitter_$2850_$",
                          "typeString": "type(contract IProofSubmitter)"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1241:32:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IProofSubmitter_$2850",
                        "typeString": "contract IProofSubmitter"
                      }
                    },
                    "src": "1224:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IProofSubmitter_$2850",
                      "typeString": "contract IProofSubmitter"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:49:8"
                }
              ]
            },
            "id": 73,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "_l1Resolver",
                  "nameLocation": "1142:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1134:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_proofSubmitter",
                  "nameLocation": "1163:15:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1155:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1133:46:8"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1180:0:8"
            },
            "scope": 259,
            "src": "1122:158:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1497:1022:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 89,
                          "name": "allowedLPs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "1515:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 92,
                        "indexExpression": {
                          "expression": {
                            "id": 90,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1526:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1526:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1515:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206e6f742077686974656c6973746564",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1539:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37",
                          "typeString": "literal_string \"Sender not whitelisted\""
                        },
                        "value": "Sender not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37",
                          "typeString": "literal_string \"Sender not whitelisted\""
                        }
                      ],
                      "id": 88,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1507:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:57:8"
                },
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "mutability": "mutable",
                      "name": "requestHash",
                      "nameLocation": "1582:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "1574:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1574:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 100,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1639:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1662:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 102,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1689:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainid",
                        "nodeType": "MemberAccess",
                        "src": "1689:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 104,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1716:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 105,
                        "name": "targetReceiverAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1748:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 106,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1783:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2817,
                        "src": "1596:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$2817_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createRequestHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2766,
                      "src": "1596:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256,address,address,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:203:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1574:225:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 110,
                            "name": "fills",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "1818:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 112,
                          "indexExpression": {
                            "id": 111,
                            "name": "requestHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1824:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1818:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1848:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1840:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 113,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1840:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1840:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1818:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c72656164792066696c6c6564",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1852:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f1fdd45b3b51c31df82ed6b4ad08141730b73e5c15da80ef36a62b2e6a9c27f",
                          "typeString": "literal_string \"Already filled\""
                        },
                        "value": "Already filled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f1fdd45b3b51c31df82ed6b4ad08141730b73e5c15da80ef36a62b2e6a9c27f",
                          "typeString": "literal_string \"Already filled\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1810:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:59:8"
                },
                {
                  "assignments": [
                    123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "1887:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "1880:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2505",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 122,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 121,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2505,
                          "src": "1880:6:8"
                        },
                        "referencedDeclaration": 2505,
                        "src": "1880:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2505",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 127,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 125,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1902:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 124,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2505,
                      "src": "1895:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2505_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1895:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2505",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1880:41:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 131,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1954:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1954:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 133,
                        "name": "targetReceiverAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1966:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 134,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1989:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 128,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1931:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2505",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2562,
                      "src": "1931:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2505_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2505_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1931:65:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1931:65:8"
                },
                {
                  "assignments": [
                    141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 141,
                      "mutability": "mutable",
                      "name": "proofReceipt",
                      "nameLocation": "2043:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "2007:48:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProofReceipt_$2824_memory_ptr",
                        "typeString": "struct IProofSubmitter.ProofReceipt"
                      },
                      "typeName": {
                        "id": 140,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 139,
                          "name": "IProofSubmitter.ProofReceipt",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2824,
                          "src": "2007:28:8"
                        },
                        "referencedDeclaration": 2824,
                        "src": "2007:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofReceipt_$2824_storage_ptr",
                          "typeString": "struct IProofSubmitter.ProofReceipt"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 150,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 144,
                        "name": "l1Resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2098:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 145,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "2110:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 146,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "2125:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 147,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2138:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2138:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 142,
                        "name": "proofSubmitter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "2058:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IProofSubmitter_$2850",
                          "typeString": "contract IProofSubmitter"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2838,
                      "src": "2058:39:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_address_$returns$_t_struct$_ProofReceipt_$2824_memory_ptr_$",
                        "typeString": "function (address,uint256,bytes32,address) external returns (struct IProofSubmitter.ProofReceipt memory)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2058:91:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProofReceipt_$2824_memory_ptr",
                      "typeString": "struct IProofSubmitter.ProofReceipt memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2007:142:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 152,
                            "name": "proofReceipt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "2167:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProofReceipt_$2824_memory_ptr",
                              "typeString": "struct IProofSubmitter.ProofReceipt memory"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fillId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2821,
                          "src": "2167:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2190:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2167:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5375626d697474696e672070726f6f662064617461206661696c6564",
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2193:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa10e0d7830ed97727b31f476e68911fae4e78de943bf1d83c23a658ad591999",
                          "typeString": "literal_string \"Submitting proof data failed\""
                        },
                        "value": "Submitting proof data failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa10e0d7830ed97727b31f476e68911fae4e78de943bf1d83c23a658ad591999",
                          "typeString": "literal_string \"Submitting proof data failed\""
                        }
                      ],
                      "id": 151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2159:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2159:65:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:65:8"
                },
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 159,
                        "name": "fills",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2235:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 161,
                      "indexExpression": {
                        "id": 160,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "2241:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2235:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 162,
                        "name": "proofReceipt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "2256:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofReceipt_$2824_memory_ptr",
                          "typeString": "struct IProofSubmitter.ProofReceipt memory"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fillHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2823,
                      "src": "2256:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2235:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2235:42:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 167,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "2320:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 168,
                          "name": "proofReceipt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "2343:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProofReceipt_$2824_memory_ptr",
                            "typeString": "struct IProofSubmitter.ProofReceipt memory"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fillId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2821,
                        "src": "2343:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 170,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "2376:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 171,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "2403:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 172,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2435:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2435:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 174,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "2459:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 166,
                      "name": "RequestFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "2293:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,bytes32,uint256,address,address,uint256)"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:182:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "EmitStatement",
                  "src": "2288:187:8"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 177,
                      "name": "proofReceipt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "2493:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProofReceipt_$2824_memory_ptr",
                        "typeString": "struct IProofSubmitter.ProofReceipt memory"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "fillId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2821,
                    "src": "2493:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 87,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "2486:26:8"
                }
              ]
            },
            "functionSelector": "efd39926",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fillRequest",
            "nameLocation": "1295:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1324:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1316:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1316:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "1351:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1343:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "1382:18:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1374:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "targetReceiverAddress",
                  "nameLocation": "1418:21:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1410:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1410:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1457:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1449:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:163:8"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1488:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1487:9:8"
            },
            "scope": 259,
            "src": "1286:1233:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 222,
              "nodeType": "Block",
              "src": "2652:361:8",
              "statements": [
                {
                  "assignments": [
                    191
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 191,
                      "mutability": "mutable",
                      "name": "fillHash",
                      "nameLocation": "2670:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 222,
                      "src": "2662:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 190,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2662:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 197,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 194,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "2708:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 195,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "2721:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 192,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2817,
                        "src": "2681:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$2817_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createFillHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2784,
                      "src": "2681:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2681:47:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2662:66:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 199,
                            "name": "fills",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "2746:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 201,
                          "indexExpression": {
                            "id": 200,
                            "name": "requestHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "2752:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2746:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 202,
                          "name": "fillHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "2768:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2746:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c6c20686173682076616c6964",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2778:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7539ef75054f34447d71418e74bd74a55ef7241911c217aa3e6574f554a9723",
                          "typeString": "literal_string \"Fill hash valid\""
                        },
                        "value": "Fill hash valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7539ef75054f34447d71418e74bd74a55ef7241911c217aa3e6574f554a9723",
                          "typeString": "literal_string \"Fill hash valid\""
                        }
                      ],
                      "id": 198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2738:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2738:58:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 210,
                        "name": "l1Resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2853:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 211,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "2877:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 212,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "2904:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 213,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "2929:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 207,
                        "name": "proofSubmitter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "2806:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IProofSubmitter_$2850",
                          "typeString": "contract IProofSubmitter"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitNonFillProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2849,
                      "src": "2806:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32,bytes32) external"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2806:139:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "2806:139:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 217,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "2976:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 218,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "2989:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 219,
                        "name": "fillHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "2997:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 216,
                      "name": "HashInvalidated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2960:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32,bytes32)"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2960:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "EmitStatement",
                  "src": "2955:51:8"
                }
              ]
            },
            "functionSelector": "983aab33",
            "id": 223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invalidateFillHash",
            "nameLocation": "2534:18:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "2570:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "2562:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2562:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "2599:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "2591:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2591:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "2623:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "2615:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2615:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2552:90:8"
            },
            "returnParameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2652:0:8"
            },
            "scope": 259,
            "src": "2525:488:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "3073:71:8",
              "statements": [
                {
                  "expression": {
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 230,
                        "name": "allowedLPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "3083:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 232,
                      "indexExpression": {
                        "id": 231,
                        "name": "newLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "3094:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3083:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3103:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3083:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "3083:24:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 237,
                        "name": "newLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "3131:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 236,
                      "name": "LPAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "3123:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3123:14:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "EmitStatement",
                  "src": "3118:19:8"
                }
              ]
            },
            "functionSelector": "1cb2eaf9",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 228,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 227,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2369,
                  "src": "3063:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3063:9:8"
              }
            ],
            "name": "addAllowedLP",
            "nameLocation": "3028:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "newLP",
                  "nameLocation": "3049:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "3041:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3041:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3040:15:8"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3073:0:8"
            },
            "scope": 259,
            "src": "3019:125:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "3207:73:8",
              "statements": [
                {
                  "expression": {
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3217:24:8",
                    "subExpression": {
                      "baseExpression": {
                        "id": 248,
                        "name": "allowedLPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "3224:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 250,
                      "indexExpression": {
                        "id": 249,
                        "name": "oldLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "3235:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3224:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "3217:24:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 254,
                        "name": "oldLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "3267:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 253,
                      "name": "LPRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3257:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3257:16:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "EmitStatement",
                  "src": "3252:21:8"
                }
              ]
            },
            "functionSelector": "afc4827b",
            "id": 258,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 246,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 245,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2369,
                  "src": "3197:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3197:9:8"
              }
            ],
            "name": "removeAllowedLP",
            "nameLocation": "3159:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "oldLP",
                  "nameLocation": "3183:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "3175:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3175:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3174:15:8"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3207:0:8"
            },
            "scope": 259,
            "src": "3150:130:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 260,
        "src": "391:2891:8",
        "usedErrors": []
      }
    ],
    "src": "32:3251:8"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610d8d380380610d8d83398101604081905261002f916100d5565b61003833610069565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055610108565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d057600080fd5b919050565b600080604083850312156100e857600080fd5b6100f1836100b9565b91506100ff602084016100b9565b90509250929050565b610c76806101176000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461015c578063935beb1a1461016d578063983aab3314610180578063afc4827b14610193578063efd39926146101a6578063f2fde38b146101b957600080fd5b80631cb2eaf9146100ae57806320158c44146100c357806335aeea7b146100f65780635875335714610129578063715018a614610154575b600080fd5b6100c16100bc366004610a63565b6101cc565b005b6100e36100d1366004610a7e565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b610119610104366004610a63565b60046020526000908152604090205460ff1681565b60405190151581526020016100ed565b60025461013c906001600160a01b031681565b6040516001600160a01b0390911681526020016100ed565b6100c161025a565b6000546001600160a01b031661013c565b60015461013c906001600160a01b031681565b6100c161018e366004610a97565b610290565b6100c16101a1366004610a63565b6103b5565b6100e36101b4366004610ac3565b610430565b6100c16101c7366004610a63565b6106a2565b6000546001600160a01b031633146101ff5760405162461bcd60e51b81526004016101f690610b11565b60405180910390fd5b6001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527fc852021e30b95510f55086d8cc9bc5d15d20f2cb411766a7da04804f4ad2fba291015b60405180910390a150565b6000546001600160a01b031633146102845760405162461bcd60e51b81526004016101f690610b11565b61028e600061073d565b565b60408051602080820186905281830185905282518083038401815260609092018352815191810191909120600086815260039092529190205481900361030a5760405162461bcd60e51b815260206004820152600f60248201526e119a5b1b081a185cda081d985b1a59608a1b60448201526064016101f6565b600254600154604051637760a2e560e01b81526001600160a01b039182166004820152602481018590526044810187905260648101869052911690637760a2e590608401600060405180830381600087803b15801561036857600080fd5b505af115801561037c573d6000803e3d6000fd5b505050508083857fd708c5c6a823a3e0499d43d17cd8f42261ff3e464ebfec0ed0ff56533999e00d60405160405180910390a450505050565b6000546001600160a01b031633146103df5760405162461bcd60e51b81526004016101f690610b11565b6001600160a01b038116600081815260046020908152604091829020805460ff1916905590519182527f1abfc08c9d8e95dc2f77c443843422fe9ef89aafb40a5814f65e9c4f557f1faa910161024f565b3360009081526004602052604081205460ff166104885760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b60448201526064016101f6565b604080516020808201899052818301889052466060808401919091526bffffffffffffffffffffffff1988821b811660808501529087901b16609483015260a88083018690528351808403909101815260c89092019092528051910120600090600081815260036020526040902054909150156105385760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e48199a5b1b195960921b60448201526064016101f6565b8461054e6001600160a01b03821633878761078d565b600254600154604051631ec0f4f960e31b81526001600160a01b039182166004820152602481018a905260448101859052336064820152600092919091169063f607a7c89060840160408051808303816000875af11580156105b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d89190610b46565b805190915060000361062c5760405162461bcd60e51b815260206004820152601c60248201527f5375626d697474696e672070726f6f662064617461206661696c65640000000060448201526064016101f6565b6020818101516000858152600383526040908190209190915582518151908152339281019290925281018690526001600160a01b0388169089908b907f036973204944f64cc25b32e5318bd0611f917fedcd9cb77a11651723db2c63239060600160405180910390a45198975050505050505050565b6000546001600160a01b031633146106cc5760405162461bcd60e51b81526004016101f690610b11565b6001600160a01b0381166107315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f6565b61073a8161073d565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526107e79085906107ed565b50505050565b6000610842826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108c49092919063ffffffff16565b8051909150156108bf57808060200190518101906108609190610ba3565b6108bf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101f6565b505050565b60606108d384846000856108dd565b90505b9392505050565b60608247101561093e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101f6565b6001600160a01b0385163b6109955760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101f6565b600080866001600160a01b031685876040516109b19190610bf1565b60006040518083038185875af1925050503d80600081146109ee576040519150601f19603f3d011682016040523d82523d6000602084013e6109f3565b606091505b5091509150610a03828286610a0e565b979650505050505050565b60608315610a1d5750816108d6565b825115610a2d5782518084602001fd5b8160405162461bcd60e51b81526004016101f69190610c0d565b80356001600160a01b0381168114610a5e57600080fd5b919050565b600060208284031215610a7557600080fd5b6108d682610a47565b600060208284031215610a9057600080fd5b5035919050565b600080600060608486031215610aac57600080fd5b505081359360208301359350604090920135919050565b600080600080600060a08688031215610adb57600080fd5b8535945060208601359350610af260408701610a47565b9250610b0060608701610a47565b949793965091946080013592915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060408284031215610b5857600080fd5b6040516040810181811067ffffffffffffffff82111715610b8957634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b600060208284031215610bb557600080fd5b815180151581146108d657600080fd5b60005b83811015610be0578181015183820152602001610bc8565b838111156107e75750506000910152565b60008251610c03818460208701610bc5565b9190910192915050565b6020815260008251806020840152610c2c816040850160208701610bc5565b601f01601f1916919091016040019291505056fea264697066735822122090a27ac315bcde96d9f04166d7187e789dbf5de4bd6679a680ddc6d4deec639364736f6c634300080d0033",
  "bytecodeSha1": "baad8980f7b7c1299bb65577e23a9452a8ba7786",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "FillManager",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "39": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "16": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "40": [
            3735,
            3756,
            false
          ],
          "41": [
            3819,
            3849,
            true
          ]
        }
      },
      "3": {
        "Address.functionCallWithValue": {
          "36": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "37": [
            7735,
            7742,
            false
          ],
          "38": [
            7876,
            7897,
            false
          ]
        }
      },
      "4": {},
      "6": {},
      "8": {
        "FillManager.fillRequest": {
          "33": [
            1515,
            1537,
            true
          ],
          "34": [
            1818,
            1850,
            true
          ],
          "35": [
            2167,
            2191,
            true
          ]
        },
        "FillManager.invalidateFillHash": {
          "32": [
            2746,
            2776,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "21": [
            2378,
            2395
          ],
          "22": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "4": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "19": [
            1998,
            2071
          ],
          "20": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "16": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "24": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "23": [
            1050,
            1146
          ]
        }
      },
      "3": {
        "Address.functionCall": {
          "25": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "26": [
            5137,
            5218
          ],
          "28": [
            5228,
            5288
          ],
          "29": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "27": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "30": [
            7758,
            7775
          ],
          "31": [
            8202,
            8222
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "1": [
            712,
            729
          ]
        }
      },
      "6": {
        "BeamerUtils.createFillHash": {
          "5": [
            874,
            929
          ]
        },
        "BeamerUtils.createRequestHash": {
          "12": [
            424,
            730
          ]
        }
      },
      "8": {
        "FillManager.addAllowedLP": {
          "2": [
            3083,
            3107
          ],
          "3": [
            3118,
            3137
          ]
        },
        "FillManager.fillRequest": {
          "11": [
            1507,
            1564
          ],
          "13": [
            1810,
            1869
          ],
          "14": [
            1931,
            1996
          ],
          "15": [
            2159,
            2224
          ],
          "16": [
            2235,
            2277
          ],
          "17": [
            2288,
            2475
          ],
          "18": [
            2486,
            2512
          ]
        },
        "FillManager.invalidateFillHash": {
          "6": [
            2738,
            2796
          ],
          "7": [
            2806,
            2945
          ],
          "8": [
            2955,
            3006
          ]
        },
        "FillManager.removeAllowedLP": {
          "9": [
            3217,
            3241
          ],
          "10": [
            3252,
            3273
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "BeamerUtils",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "IProofSubmitter",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461015c578063935beb1a1461016d578063983aab3314610180578063afc4827b14610193578063efd39926146101a6578063f2fde38b146101b957600080fd5b80631cb2eaf9146100ae57806320158c44146100c357806335aeea7b146100f65780635875335714610129578063715018a614610154575b600080fd5b6100c16100bc366004610a63565b6101cc565b005b6100e36100d1366004610a7e565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b610119610104366004610a63565b60046020526000908152604090205460ff1681565b60405190151581526020016100ed565b60025461013c906001600160a01b031681565b6040516001600160a01b0390911681526020016100ed565b6100c161025a565b6000546001600160a01b031661013c565b60015461013c906001600160a01b031681565b6100c161018e366004610a97565b610290565b6100c16101a1366004610a63565b6103b5565b6100e36101b4366004610ac3565b610430565b6100c16101c7366004610a63565b6106a2565b6000546001600160a01b031633146101ff5760405162461bcd60e51b81526004016101f690610b11565b60405180910390fd5b6001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527fc852021e30b95510f55086d8cc9bc5d15d20f2cb411766a7da04804f4ad2fba291015b60405180910390a150565b6000546001600160a01b031633146102845760405162461bcd60e51b81526004016101f690610b11565b61028e600061073d565b565b60408051602080820186905281830185905282518083038401815260609092018352815191810191909120600086815260039092529190205481900361030a5760405162461bcd60e51b815260206004820152600f60248201526e119a5b1b081a185cda081d985b1a59608a1b60448201526064016101f6565b600254600154604051637760a2e560e01b81526001600160a01b039182166004820152602481018590526044810187905260648101869052911690637760a2e590608401600060405180830381600087803b15801561036857600080fd5b505af115801561037c573d6000803e3d6000fd5b505050508083857fd708c5c6a823a3e0499d43d17cd8f42261ff3e464ebfec0ed0ff56533999e00d60405160405180910390a450505050565b6000546001600160a01b031633146103df5760405162461bcd60e51b81526004016101f690610b11565b6001600160a01b038116600081815260046020908152604091829020805460ff1916905590519182527f1abfc08c9d8e95dc2f77c443843422fe9ef89aafb40a5814f65e9c4f557f1faa910161024f565b3360009081526004602052604081205460ff166104885760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b60448201526064016101f6565b604080516020808201899052818301889052466060808401919091526bffffffffffffffffffffffff1988821b811660808501529087901b16609483015260a88083018690528351808403909101815260c89092019092528051910120600090600081815260036020526040902054909150156105385760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e48199a5b1b195960921b60448201526064016101f6565b8461054e6001600160a01b03821633878761078d565b600254600154604051631ec0f4f960e31b81526001600160a01b039182166004820152602481018a905260448101859052336064820152600092919091169063f607a7c89060840160408051808303816000875af11580156105b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d89190610b46565b805190915060000361062c5760405162461bcd60e51b815260206004820152601c60248201527f5375626d697474696e672070726f6f662064617461206661696c65640000000060448201526064016101f6565b6020818101516000858152600383526040908190209190915582518151908152339281019290925281018690526001600160a01b0388169089908b907f036973204944f64cc25b32e5318bd0611f917fedcd9cb77a11651723db2c63239060600160405180910390a45198975050505050505050565b6000546001600160a01b031633146106cc5760405162461bcd60e51b81526004016101f690610b11565b6001600160a01b0381166107315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f6565b61073a8161073d565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526107e79085906107ed565b50505050565b6000610842826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108c49092919063ffffffff16565b8051909150156108bf57808060200190518101906108609190610ba3565b6108bf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101f6565b505050565b60606108d384846000856108dd565b90505b9392505050565b60608247101561093e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101f6565b6001600160a01b0385163b6109955760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101f6565b600080866001600160a01b031685876040516109b19190610bf1565b60006040518083038185875af1925050503d80600081146109ee576040519150601f19603f3d011682016040523d82523d6000602084013e6109f3565b606091505b5091509150610a03828286610a0e565b979650505050505050565b60608315610a1d5750816108d6565b825115610a2d5782518084602001fd5b8160405162461bcd60e51b81526004016101f69190610c0d565b80356001600160a01b0381168114610a5e57600080fd5b919050565b600060208284031215610a7557600080fd5b6108d682610a47565b600060208284031215610a9057600080fd5b5035919050565b600080600060608486031215610aac57600080fd5b505081359360208301359350604090920135919050565b600080600080600060a08688031215610adb57600080fd5b8535945060208601359350610af260408701610a47565b9250610b0060608701610a47565b949793965091946080013592915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060408284031215610b5857600080fd5b6040516040810181811067ffffffffffffffff82111715610b8957634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b600060208284031215610bb557600080fd5b815180151581146108d657600080fd5b60005b83811015610be0578181015183820152602001610bc8565b838111156107e75750506000910152565b60008251610c03818460208701610bc5565b9190910192915050565b6020815260008251806020840152610c2c816040850160208701610bc5565b601f01601f1916919091016040019291505056fea264697066735822122090a27ac315bcde96d9f04166d7187e789dbf5de4bd6679a680ddc6d4deec639364736f6c634300080d0033",
  "deployedSourceMap": "391:2891:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3019:125;;;;;;:::i;:::-;;:::i;:::-;;1027:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;714:25:17;;;702:2;687:18;1027:40:8;;;;;;;;1073:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;915:14:17;;908:22;890:41;;878:2;863:18;1073:42:8;750:187:17;918:37:8;;;;;-1:-1:-1;;;;;918:37:8;;;;;;-1:-1:-1;;;;;1130:32:17;;;1112:51;;1100:2;1085:18;918:37:8;942:227:17;1668:101:0;;;:::i;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;887:25:8;;;;;-1:-1:-1;;;;;887:25:8;;;2525:488;;;;;;:::i;:::-;;:::i;3150:130::-;;;;;;:::i;:::-;;:::i;1286:1233::-;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;3019:125:8:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;3083:17:8;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;;:24;;-1:-1:-1;;3083:24:8::1;3103:4;3083:24;::::0;;3123:14;;1112:51:17;;;3123:14:8::1;::::0;1085:18:17;3123:14:8::1;;;;;;;;3019:125:::0;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2525:488:8:-;891:37:6;;;;;;;6326:19:17;;;6361:12;;;6354:28;;;891:37:6;;;;;;;;;6398:12:17;;;;891:37:6;;881:48;;;;;;;;;-1:-1:-1;2746:18:8;;;:5;:18;;;;;;;:30;;;2738:58;;;;-1:-1:-1;;;2738:58:8;;2737:2:17;2738:58:8;;;2719:21:17;2776:2;2756:18;;;2749:30;-1:-1:-1;;;2795:18:17;;;2788:45;2850:18;;2738:58:8;2535:339:17;2738:58:8;2806:14;;;2853:10;2806:139;;-1:-1:-1;;;2806:139:8;;-1:-1:-1;;;;;2853:10:8;;;2806:139;;;3110:51:17;3177:18;;;3170:34;;;3220:18;;;3213:34;;;3263:18;;;3256:34;;;2806:14:8;;;:33;;3082:19:17;;2806:139:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2997:8;2989:6;2976:11;2960:46;;;;;;;;;;2652:361;2525:488;;;:::o;3150:130::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;3224:17:8;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;;3217:24;;-1:-1:-1;;3217:24:8::1;::::0;;3257:16;;1112:51:17;;;3257:16:8::1;::::0;1085:18:17;3257:16:8::1;942:227:17::0;1286:1233:8;1526:10;1488:7;1515:22;;;:10;:22;;;;;;;;1507:57;;;;-1:-1:-1;;;1507:57:8;;3503:2:17;1507:57:8;;;3485:21:17;3542:2;3522:18;;;3515:30;-1:-1:-1;;;3561:18:17;;;3554:52;3623:18;;1507:57:8;3301:346:17;1507:57:8;470:246:6;;;;;;;6690:19:17;;;6725:12;;;6718:28;;;1689:13:8;6762:12:17;;;;6755:28;;;;-1:-1:-1;;6867:15:17;;;6863:24;;6849:12;;;6842:46;6923:15;;;;6919:24;6904:13;;;6897:47;6960:13;;;;6953:29;;;470:246:6;;;;;;;;;;6998:13:17;;;;470:246:6;;;443:287;;;;;1574:19:8;;1848:1;1818:18;;;:5;:18;;;;;;1574:225;;-1:-1:-1;1818:32:8;1810:59;;;;-1:-1:-1;;;1810:59:8;;3854:2:17;1810:59:8;;;3836:21:17;3893:2;3873:18;;;3866:30;-1:-1:-1;;;3912:18:17;;;3905:44;3966:18;;1810:59:8;3652:338:17;1810:59:8;1902:18;1931:65;-1:-1:-1;;;;;1931:22:8;;1954:10;1966:21;1989:6;1931:22;:65::i;:::-;2058:14;;;2098:10;2058:91;;-1:-1:-1;;;2058:91:8;;-1:-1:-1;;;;;2098:10:8;;;2058:91;;;4264:34:17;4314:18;;;4307:34;;;4357:18;;;4350:34;;;2138:10:8;4400:18:17;;;4393:43;2007:48:8;;2058:14;;;;;:39;;4198:19:17;;2058:91:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2167:19;;2007:142;;-1:-1:-1;2167:19:8;:24;2159:65;;;;-1:-1:-1;;;2159:65:8;;5257:2:17;2159:65:8;;;5239:21:17;5296:2;5276:18;;;5269:30;5335;5315:18;;;5308:58;5383:18;;2159:65:8;5055:352:17;2159:65:8;2256:21;;;;;2235:18;;;;:5;:18;;;;;;;:42;;;;2343:19;;2293:182;;5614:25:17;;;2435:10:8;5655:18:17;;;5648:60;;;;5724:18;;5717:34;;;-1:-1:-1;;;;;2293:182:8;;;2376:13;;2320:9;;2293:182;;5602:2:17;5587:18;2293:182:8;;;;;;;2493:19;;1286:1233;-1:-1:-1;;;;;;;;1286:1233:8:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;5964:2:17;1998:73:0::1;::::0;::::1;5946:21:17::0;6003:2;5983:18;;;5976:30;6042:34;6022:18;;;6015:62;-1:-1:-1;;;6093:18:17;;;6086:36;6139:19;;1998:73:0::1;5762:402:17::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;912:241:2:-;1077:68;;;-1:-1:-1;;;;;7280:15:17;;;1077:68:2;;;7262:34:17;7332:15;;7312:18;;;7305:43;7364:18;;;;7357:34;;;1077:68:2;;;;;;;;;;7197:18:17;;;;1077:68:2;;;;;;;;-1:-1:-1;;;;;1077:68:2;-1:-1:-1;;;1077:68:2;;;1050:96;;1070:5;;1050:19;:96::i;:::-;912:241;;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:2;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:2;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:2;;7886:2:17;3811:85:2;;;7868:21:17;7925:2;7905:18;;;7898:30;7964:34;7944:18;;;7937:62;-1:-1:-1;;;8015:18:17;;;8008:40;8065:19;;3811:85:2;7684:406:17;3811:85:2;3277:636;3207:706;;:::o;3861:223:3:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;8297:2:17;5137:81:3;;;8279:21:17;8336:2;8316:18;;;8309:30;8375:34;8355:18;;;8348:62;-1:-1:-1;;;8426:18:17;;;8419:36;8472:19;;5137:81:3;8095:402:17;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;8704:2:17;5228:60:3;;;8686:21:17;8743:2;8723:18;;;8716:30;8782:31;8762:18;;;8755:59;8831:18;;5228:60:3;8502:353:17;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:3:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:3;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:3;;;;;;;;:::i;14:173:17:-;82:20;;-1:-1:-1;;;;;131:31:17;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:180::-;442:6;495:2;483:9;474:7;470:23;466:32;463:52;;;511:1;508;501:12;463:52;-1:-1:-1;534:23:17;;383:180;-1:-1:-1;383:180:17:o;1382:316::-;1459:6;1467;1475;1528:2;1516:9;1507:7;1503:23;1499:32;1496:52;;;1544:1;1541;1534:12;1496:52;-1:-1:-1;;1567:23:17;;;1637:2;1622:18;;1609:32;;-1:-1:-1;1688:2:17;1673:18;;;1660:32;;1382:316;-1:-1:-1;1382:316:17:o;1703:466::-;1798:6;1806;1814;1822;1830;1883:3;1871:9;1862:7;1858:23;1854:33;1851:53;;;1900:1;1897;1890:12;1851:53;1936:9;1923:23;1913:33;;1993:2;1982:9;1978:18;1965:32;1955:42;;2016:38;2050:2;2039:9;2035:18;2016:38;:::i;:::-;2006:48;;2073:38;2107:2;2096:9;2092:18;2073:38;:::i;:::-;1703:466;;;;-1:-1:-1;1703:466:17;;2158:3;2143:19;2130:33;;1703:466;-1:-1:-1;;1703:466:17:o;2174:356::-;2376:2;2358:21;;;2395:18;;;2388:30;2454:34;2449:2;2434:18;;2427:62;2521:2;2506:18;;2174:356::o;4447:603::-;4547:6;4600:2;4588:9;4579:7;4575:23;4571:32;4568:52;;;4616:1;4613;4606:12;4568:52;4649:2;4643:9;4691:2;4683:6;4679:15;4760:6;4748:10;4745:22;4724:18;4712:10;4709:34;4706:62;4703:185;;;4810:10;4805:3;4801:20;4798:1;4791:31;4845:4;4842:1;4835:15;4873:4;4870:1;4863:15;4703:185;4904:2;4897:22;4943:16;;4928:32;;5014:2;4999:18;;;4993:25;4976:15;;;4969:50;;;;-1:-1:-1;4935:6:17;4447:603;-1:-1:-1;4447:603:17:o;7402:277::-;7469:6;7522:2;7510:9;7501:7;7497:23;7493:32;7490:52;;;7538:1;7535;7528:12;7490:52;7570:9;7564:16;7623:5;7616:13;7609:21;7602:5;7599:32;7589:60;;7645:1;7642;7635:12;8860:258;8932:1;8942:113;8956:6;8953:1;8950:13;8942:113;;;9032:11;;;9026:18;9013:11;;;9006:39;8978:2;8971:10;8942:113;;;9073:6;9070:1;9067:13;9064:48;;;-1:-1:-1;;9108:1:17;9090:16;;9083:27;8860:258::o;9123:274::-;9252:3;9290:6;9284:13;9306:53;9352:6;9347:3;9340:4;9332:6;9328:17;9306:53;:::i;:::-;9375:16;;;;;9123:274;-1:-1:-1;;9123:274:17:o;9402:383::-;9551:2;9540:9;9533:21;9514:4;9583:6;9577:13;9626:6;9621:2;9610:9;9606:18;9599:34;9642:66;9701:6;9696:2;9685:9;9681:18;9676:2;9668:6;9664:15;9642:66;:::i;:::-;9769:2;9748:15;-1:-1:-1;;9744:29:17;9729:45;;;;9776:2;9725:54;;9402:383;-1:-1:-1;;9402:383:17:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    391,
    3282
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x935BEB1A EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x983AAB33 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xAFC4827B EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xEFD39926 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1CB2EAF9 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x20158C44 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x35AEEA7B EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x58753357 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x154 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE3 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x13C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x13C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6 SWAP1 PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xC852021E30B95510F55086D8CC9BC5D15D20F2CB411766A7DA04804F4AD2FBA2 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6 SWAP1 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x28E PUSH1 0x0 PUSH2 0x73D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD DUP4 MSTORE DUP2 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 SUB PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x119A5B1B081A185CDA081D985B1A59 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7760A2E5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x7760A2E5 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP4 DUP6 PUSH32 0xD708C5C6A823A3E0499D43D17CD8F42261FF3E464EBFEC0ED0FF56533999E00D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6 SWAP1 PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1ABFC08C9D8E95DC2F77C443843422FE9EF89AAFB40A5814F65E9C4F557F1FAA SWAP2 ADD PUSH2 0x24F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE DUP2 DUP4 ADD DUP9 SWAP1 MSTORE CHAINID PUSH1 0x60 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP9 DUP3 SHL DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP8 SWAP1 SHL AND PUSH1 0x94 DUP4 ADD MSTORE PUSH1 0xA8 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC8 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E48199A5B1B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F6 JUMP JUMPDEST DUP5 PUSH2 0x54E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP8 DUP8 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1EC0F4F9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE CALLER PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xF607A7C8 SWAP1 PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0xB46 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SUB PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5375626D697474696E672070726F6F662064617461206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 DUP4 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP3 MLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 DUP10 SWAP1 DUP12 SWAP1 PUSH32 0x36973204944F64CC25B32E5318BD0611F917FEDCD9CB77A11651723DB2C6323 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 MLOAD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6 SWAP1 PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F6 JUMP JUMPDEST PUSH2 0x73A DUP2 PUSH2 0x73D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x7E7 SWAP1 DUP6 SWAP1 PUSH2 0x7ED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x842 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8C4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x8BF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x860 SWAP2 SWAP1 PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8D3 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9EE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xA03 DUP3 DUP3 DUP7 PUSH2 0xA0E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xA1D JUMPI POP DUP2 PUSH2 0x8D6 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xA2D JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xC0D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D6 DUP3 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0xAF2 PUSH1 0x40 DUP8 ADD PUSH2 0xA47 JUMP JUMPDEST SWAP3 POP PUSH2 0xB00 PUSH1 0x60 DUP8 ADD PUSH2 0xA47 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBE0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBC8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x7E7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xC03 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xBC5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xC2C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 LOG2 PUSH27 0xC315BCDE96D9F04166D7187E789DBF5DE4BD6679A680DDC6D4DEEC PUSH4 0x9364736F PUSH13 0x634300080D0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        391,
        3282
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "REVERT",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "POP",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "LT",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "29": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "SHR",
      "path": "8"
    },
    "32": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "33": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "GT",
      "path": "8"
    },
    "39": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "43": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "44": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "EQ",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15C"
    },
    "53": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "54": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "55": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x935BEB1A"
    },
    "60": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "EQ",
      "path": "8"
    },
    "61": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16D"
    },
    "64": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "66": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x983AAB33"
    },
    "71": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "EQ",
      "path": "8"
    },
    "72": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x180"
    },
    "75": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "76": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xAFC4827B"
    },
    "82": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "EQ",
      "path": "8"
    },
    "83": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x193"
    },
    "86": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "87": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "88": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xEFD39926"
    },
    "93": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "EQ",
      "path": "8"
    },
    "94": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A6"
    },
    "97": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "98": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "99": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "EQ",
      "path": "8"
    },
    "105": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B9"
    },
    "108": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "109": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "112": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "REVERT",
      "path": "8"
    },
    "113": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "114": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "115": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x1CB2EAF9"
    },
    "120": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "EQ",
      "path": "8"
    },
    "121": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "126": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x20158C44"
    },
    "131": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "EQ",
      "path": "8"
    },
    "132": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC3"
    },
    "135": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "136": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "137": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x35AEEA7B"
    },
    "142": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "EQ",
      "path": "8"
    },
    "143": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF6"
    },
    "146": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "147": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "148": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x58753357"
    },
    "153": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "EQ",
      "path": "8"
    },
    "154": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x129"
    },
    "157": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "158": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "159": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "164": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "EQ",
      "path": "8"
    },
    "165": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x154"
    },
    "168": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "169": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "170": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "DUP1",
      "path": "8"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        391,
        3282
      ],
      "op": "REVERT",
      "path": "8"
    },
    "174": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3019,
        3144
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "175": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3019,
        3144
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC1"
    },
    "178": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3019,
        3144
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBC"
    },
    "181": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3019,
        3144
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "182": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3019,
        3144
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "184": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3019,
        3144
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA63"
    },
    "187": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        3019,
        3144
      ],
      "op": "JUMP",
      "path": "8"
    },
    "188": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3019,
        3144
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "189": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3019,
        3144
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CC"
    },
    "192": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        3019,
        3144
      ],
      "op": "JUMP",
      "path": "8"
    },
    "193": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3019,
        3144
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "194": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3019,
        3144
      ],
      "op": "STOP",
      "path": "8"
    },
    "195": {
      "offset": [
        1027,
        1067
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "196": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE3"
    },
    "199": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD1"
    },
    "202": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "203": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "205": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA7E"
    },
    "208": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        1027,
        1067
      ],
      "op": "JUMP",
      "path": "8"
    },
    "209": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "210": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "212": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "214": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "215": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "217": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "218": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "DUP2",
      "path": "8"
    },
    "219": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "220": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "222": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "223": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "224": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "225": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "DUP2",
      "path": "8"
    },
    "226": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "JUMP",
      "path": "8"
    },
    "227": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "228": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "230": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "231": {
      "op": "SWAP1"
    },
    "232": {
      "op": "DUP2"
    },
    "233": {
      "op": "MSTORE"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "236": {
      "op": "ADD"
    },
    "237": {
      "offset": [
        1027,
        1067
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "238": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "240": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "241": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "DUP1",
      "path": "8"
    },
    "242": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "243": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "SUB",
      "path": "8"
    },
    "244": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "245": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "RETURN",
      "path": "8"
    },
    "246": {
      "offset": [
        1073,
        1115
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "247": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x119"
    },
    "250": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x104"
    },
    "253": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "254": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "256": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA63"
    },
    "259": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        1073,
        1115
      ],
      "op": "JUMP",
      "path": "8"
    },
    "260": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "261": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "263": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "265": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "266": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "268": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "269": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "DUP2",
      "path": "8"
    },
    "270": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "271": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "273": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "274": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "275": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "276": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "278": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "AND",
      "path": "8"
    },
    "279": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "DUP2",
      "path": "8"
    },
    "280": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "JUMP",
      "path": "8"
    },
    "281": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "282": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "284": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "285": {
      "op": "SWAP1"
    },
    "286": {
      "op": "ISZERO"
    },
    "287": {
      "op": "ISZERO"
    },
    "288": {
      "op": "DUP2"
    },
    "289": {
      "op": "MSTORE"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "292": {
      "op": "ADD"
    },
    "293": {
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xED"
    },
    "296": {
      "op": "JUMP"
    },
    "297": {
      "offset": [
        918,
        955
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "298": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "300": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "301": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13C"
    },
    "304": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "311": {
      "op": "SHL"
    },
    "312": {
      "op": "SUB"
    },
    "313": {
      "offset": [
        918,
        955
      ],
      "op": "AND",
      "path": "8"
    },
    "314": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "DUP2",
      "path": "8"
    },
    "315": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "JUMP",
      "path": "8"
    },
    "316": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "317": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "319": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "326": {
      "op": "SHL"
    },
    "327": {
      "op": "SUB"
    },
    "328": {
      "op": "SWAP1"
    },
    "329": {
      "op": "SWAP2"
    },
    "330": {
      "op": "AND"
    },
    "331": {
      "op": "DUP2"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "335": {
      "op": "ADD"
    },
    "336": {
      "offset": [
        918,
        955
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xED"
    },
    "339": {
      "op": "JUMP"
    },
    "340": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "341": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "344": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A"
    },
    "347": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "348": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "349": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "351": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "358": {
      "op": "SHL"
    },
    "359": {
      "op": "SUB"
    },
    "360": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "361": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C"
    },
    "364": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "365": {
      "offset": [
        887,
        912
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "366": {
      "fn": "Ownable.owner",
      "offset": [
        887,
        912
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "368": {
      "fn": "Ownable.owner",
      "offset": [
        887,
        912
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "369": {
      "fn": "Ownable.owner",
      "offset": [
        887,
        912
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13C"
    },
    "372": {
      "fn": "Ownable.owner",
      "offset": [
        887,
        912
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "379": {
      "op": "SHL"
    },
    "380": {
      "op": "SUB"
    },
    "381": {
      "offset": [
        887,
        912
      ],
      "op": "AND",
      "path": "8"
    },
    "382": {
      "fn": "Ownable.owner",
      "offset": [
        887,
        912
      ],
      "op": "DUP2",
      "path": "8"
    },
    "383": {
      "fn": "Ownable.owner",
      "offset": [
        887,
        912
      ],
      "op": "JUMP",
      "path": "8"
    },
    "384": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2525,
        3013
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "385": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2525,
        3013
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC1"
    },
    "388": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2525,
        3013
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18E"
    },
    "391": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2525,
        3013
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "392": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2525,
        3013
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "394": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2525,
        3013
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA97"
    },
    "397": {
      "fn": "FillManager.invalidateFillHash",
      "jump": "i",
      "offset": [
        2525,
        3013
      ],
      "op": "JUMP",
      "path": "8"
    },
    "398": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2525,
        3013
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "399": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2525,
        3013
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x290"
    },
    "402": {
      "fn": "FillManager.invalidateFillHash",
      "jump": "i",
      "offset": [
        2525,
        3013
      ],
      "op": "JUMP",
      "path": "8"
    },
    "403": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3150,
        3280
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "404": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3150,
        3280
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC1"
    },
    "407": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3150,
        3280
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A1"
    },
    "410": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3150,
        3280
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "411": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3150,
        3280
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "413": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3150,
        3280
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA63"
    },
    "416": {
      "fn": "FillManager.removeAllowedLP",
      "jump": "i",
      "offset": [
        3150,
        3280
      ],
      "op": "JUMP",
      "path": "8"
    },
    "417": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3150,
        3280
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "418": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3150,
        3280
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3B5"
    },
    "421": {
      "fn": "FillManager.removeAllowedLP",
      "jump": "i",
      "offset": [
        3150,
        3280
      ],
      "op": "JUMP",
      "path": "8"
    },
    "422": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2519
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "423": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2519
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE3"
    },
    "426": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2519
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B4"
    },
    "429": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2519
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "430": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2519
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "432": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2519
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAC3"
    },
    "435": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1286,
        2519
      ],
      "op": "JUMP",
      "path": "8"
    },
    "436": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2519
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "437": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2519
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x430"
    },
    "440": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1286,
        2519
      ],
      "op": "JUMP",
      "path": "8"
    },
    "441": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "442": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "445": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C7"
    },
    "448": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "451": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA63"
    },
    "454": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "455": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A2"
    },
    "459": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "460": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3019,
        3144
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "461": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "463": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "470": {
      "op": "SHL"
    },
    "471": {
      "op": "SUB"
    },
    "472": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "473": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 1
    },
    "474": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "475": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "478": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "479": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "481": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "482": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "486": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "488": {
      "op": "SHL"
    },
    "489": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "490": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "491": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "493": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "494": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F6"
    },
    "497": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "498": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB11"
    },
    "501": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "502": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "503": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "505": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "506": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "507": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "508": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "509": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "510": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "511": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "518": {
      "op": "SHL"
    },
    "519": {
      "op": "SUB"
    },
    "520": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 2
    },
    "521": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "AND",
      "path": "8"
    },
    "522": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "524": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "DUP2",
      "path": "8"
    },
    "525": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "DUP2",
      "path": "8"
    },
    "526": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "527": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3093
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "529": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "531": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "532": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "DUP2",
      "path": "8"
    },
    "533": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "534": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "536": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "537": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "DUP3",
      "path": "8"
    },
    "538": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "539": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3100
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "540": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3107
      ],
      "op": "DUP1",
      "path": "8"
    },
    "541": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3107
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "542": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "544": {
      "op": "NOT"
    },
    "545": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3107
      ],
      "op": "AND",
      "path": "8"
    },
    "546": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3103,
        3107
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "548": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3107
      ],
      "op": "OR",
      "path": "8"
    },
    "549": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3107
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "550": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3083,
        3107
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "551": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3123,
        3137
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 3
    },
    "552": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3123,
        3137
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "553": {
      "op": "SWAP2"
    },
    "554": {
      "op": "DUP3"
    },
    "555": {
      "op": "MSTORE"
    },
    "556": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3123,
        3137
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xC852021E30B95510F55086D8CC9BC5D15D20F2CB411766A7DA04804F4AD2FBA2"
    },
    "589": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3123,
        3137
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "590": {
      "op": "ADD"
    },
    "591": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3123,
        3137
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "592": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3123,
        3137
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "594": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3123,
        3137
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "595": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3123,
        3137
      ],
      "op": "DUP1",
      "path": "8"
    },
    "596": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3123,
        3137
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "597": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3123,
        3137
      ],
      "op": "SUB",
      "path": "8"
    },
    "598": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3123,
        3137
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "599": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3123,
        3137
      ],
      "op": "LOG1",
      "path": "8"
    },
    "600": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3019,
        3144
      ],
      "op": "POP",
      "path": "8"
    },
    "601": {
      "fn": "FillManager.addAllowedLP",
      "jump": "o",
      "offset": [
        3019,
        3144
      ],
      "op": "JUMP",
      "path": "8"
    },
    "602": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "603": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "605": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "612": {
      "op": "SHL"
    },
    "613": {
      "op": "SUB"
    },
    "614": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "615": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "616": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "617": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "620": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "621": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "623": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "624": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "628": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "630": {
      "op": "SHL"
    },
    "631": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "632": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "633": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "635": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "636": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F6"
    },
    "639": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "640": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB11"
    },
    "643": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "644": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "645": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x28E"
    },
    "648": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "650": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73D"
    },
    "653": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "654": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "655": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "656": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2525,
        3013
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "657": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x40"
    },
    "659": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "6"
    },
    "660": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "661": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "663": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "6"
    },
    "664": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP3",
      "path": "6"
    },
    "665": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "ADD",
      "path": "6"
    },
    "666": {
      "op": "DUP7"
    },
    "667": {
      "op": "SWAP1"
    },
    "668": {
      "op": "MSTORE"
    },
    "669": {
      "op": "DUP2"
    },
    "670": {
      "op": "DUP4"
    },
    "671": {
      "op": "ADD"
    },
    "672": {
      "op": "DUP6"
    },
    "673": {
      "op": "SWAP1"
    },
    "674": {
      "op": "MSTORE"
    },
    "675": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP3",
      "path": "6"
    },
    "676": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "677": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "6"
    },
    "678": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP4",
      "path": "6"
    },
    "679": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "SUB",
      "path": "6"
    },
    "680": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP5",
      "path": "6"
    },
    "681": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "ADD",
      "path": "6"
    },
    "682": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "683": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "686": {
      "op": "SWAP1"
    },
    "687": {
      "op": "SWAP3"
    },
    "688": {
      "op": "ADD"
    },
    "689": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "DUP4",
      "path": "6"
    },
    "690": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        891,
        928
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "691": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "DUP2",
      "path": "6"
    },
    "692": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "693": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "694": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "DUP2",
      "path": "6"
    },
    "695": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "ADD",
      "path": "6"
    },
    "696": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "697": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "698": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "699": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        881,
        929
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "702": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2764
      ],
      "op": "DUP7",
      "path": "8",
      "statement": 6
    },
    "703": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2764
      ],
      "op": "DUP2",
      "path": "8"
    },
    "704": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2764
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "705": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2751
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "707": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2764
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "708": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2764
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "709": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2764
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "710": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2764
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "711": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2764
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "712": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2764
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "713": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2764
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "714": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2776
      ],
      "op": "DUP2",
      "path": "8"
    },
    "715": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2776
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "716": {
      "branch": 32,
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2746,
        2776
      ],
      "op": "SUB",
      "path": "8"
    },
    "717": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2738,
        2796
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30A"
    },
    "720": {
      "branch": 32,
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2738,
        2796
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "721": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2738,
        2796
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "723": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2738,
        2796
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "724": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "730": {
      "op": "SHL"
    },
    "731": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2738,
        2796
      ],
      "op": "DUP2",
      "path": "8"
    },
    "732": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2738,
        2796
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "735": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2738,
        2796
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "737": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2738,
        2796
      ],
      "op": "DUP3",
      "path": "8"
    },
    "738": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2738,
        2796
      ],
      "op": "ADD",
      "path": "8"
    },
    "739": {
      "op": "MSTORE"
    },
    "740": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "744": {
      "op": "DUP3"
    },
    "745": {
      "op": "ADD"
    },
    "746": {
      "op": "MSTORE"
    },
    "747": {
      "op": "PUSH15",
      "value": "0x119A5B1B081A185CDA081D985B1A59"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "765": {
      "op": "SHL"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "768": {
      "op": "DUP3"
    },
    "769": {
      "op": "ADD"
    },
    "770": {
      "op": "MSTORE"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "773": {
      "op": "ADD"
    },
    "774": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2738,
        2796
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F6"
    },
    "777": {
      "op": "JUMP"
    },
    "778": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2738,
        2796
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "779": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2820
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 7,
      "value": "0x2"
    },
    "781": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2820
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "782": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2820
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "784": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2853,
        2863
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "785": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "787": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "788": {
      "op": "PUSH4",
      "value": "0x7760A2E5"
    },
    "793": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "795": {
      "op": "SHL"
    },
    "796": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "DUP2",
      "path": "8"
    },
    "797": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "op": "SUB"
    },
    "806": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2853,
        2863
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "807": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2853,
        2863
      ],
      "op": "DUP3",
      "path": "8"
    },
    "808": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2853,
        2863
      ],
      "op": "AND",
      "path": "8"
    },
    "809": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "811": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "DUP3",
      "path": "8"
    },
    "812": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "ADD",
      "path": "8"
    },
    "813": {
      "op": "MSTORE"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "816": {
      "op": "DUP2"
    },
    "817": {
      "op": "ADD"
    },
    "818": {
      "op": "DUP6"
    },
    "819": {
      "op": "SWAP1"
    },
    "820": {
      "op": "MSTORE"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "823": {
      "op": "DUP2"
    },
    "824": {
      "op": "ADD"
    },
    "825": {
      "op": "DUP8"
    },
    "826": {
      "op": "SWAP1"
    },
    "827": {
      "op": "MSTORE"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "830": {
      "op": "DUP2"
    },
    "831": {
      "op": "ADD"
    },
    "832": {
      "op": "DUP7"
    },
    "833": {
      "op": "SWAP1"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2820
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "836": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2820
      ],
      "op": "AND",
      "path": "8"
    },
    "837": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2820
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "838": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2839
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x7760A2E5"
    },
    "843": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2839
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "846": {
      "op": "ADD"
    },
    "847": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "849": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "851": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "852": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "DUP1",
      "path": "8"
    },
    "853": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "DUP4",
      "path": "8"
    },
    "854": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "SUB",
      "path": "8"
    },
    "855": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "DUP2",
      "path": "8"
    },
    "856": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "858": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "DUP8",
      "path": "8"
    },
    "859": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "DUP1",
      "path": "8"
    },
    "860": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "861": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "862": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "DUP1",
      "path": "8"
    },
    "863": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "864": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x368"
    },
    "867": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "868": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "870": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "DUP1",
      "path": "8"
    },
    "871": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "REVERT",
      "path": "8"
    },
    "872": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "873": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "POP",
      "path": "8"
    },
    "874": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "GAS",
      "path": "8"
    },
    "875": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "CALL",
      "path": "8"
    },
    "876": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "877": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "DUP1",
      "path": "8"
    },
    "878": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "879": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x37C"
    },
    "882": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "883": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "884": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "886": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "DUP1",
      "path": "8"
    },
    "887": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "888": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "889": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "891": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "REVERT",
      "path": "8"
    },
    "892": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "893": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "POP",
      "path": "8"
    },
    "894": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "POP",
      "path": "8"
    },
    "895": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "POP",
      "path": "8"
    },
    "896": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2806,
        2945
      ],
      "op": "POP",
      "path": "8"
    },
    "897": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2997,
        3005
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 8
    },
    "898": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2989,
        2995
      ],
      "op": "DUP4",
      "path": "8"
    },
    "899": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2976,
        2987
      ],
      "op": "DUP6",
      "path": "8"
    },
    "900": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2960,
        3006
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xD708C5C6A823A3E0499D43D17CD8F42261FF3E464EBFEC0ED0FF56533999E00D"
    },
    "933": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2960,
        3006
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "935": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2960,
        3006
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "936": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2960,
        3006
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "938": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2960,
        3006
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "939": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2960,
        3006
      ],
      "op": "DUP1",
      "path": "8"
    },
    "940": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2960,
        3006
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "941": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2960,
        3006
      ],
      "op": "SUB",
      "path": "8"
    },
    "942": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2960,
        3006
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "943": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2960,
        3006
      ],
      "op": "LOG4",
      "path": "8"
    },
    "944": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2652,
        3013
      ],
      "op": "POP",
      "path": "8"
    },
    "945": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2525,
        3013
      ],
      "op": "POP",
      "path": "8"
    },
    "946": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2525,
        3013
      ],
      "op": "POP",
      "path": "8"
    },
    "947": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2525,
        3013
      ],
      "op": "POP",
      "path": "8"
    },
    "948": {
      "fn": "FillManager.invalidateFillHash",
      "jump": "o",
      "offset": [
        2525,
        3013
      ],
      "op": "JUMP",
      "path": "8"
    },
    "949": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3150,
        3280
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "950": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "952": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "959": {
      "op": "SHL"
    },
    "960": {
      "op": "SUB"
    },
    "961": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "962": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "963": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "964": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DF"
    },
    "967": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "968": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "970": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "971": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "975": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "977": {
      "op": "SHL"
    },
    "978": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "979": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "980": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "982": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "983": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F6"
    },
    "986": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "987": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB11"
    },
    "990": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "991": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "998": {
      "op": "SHL"
    },
    "999": {
      "op": "SUB"
    },
    "1000": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 9
    },
    "1001": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "AND",
      "path": "8"
    },
    "1002": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1004": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1005": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1006": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1007": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3234
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1009": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1011": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1012": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1013": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1014": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1016": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1017": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1018": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1019": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3224,
        3241
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1020": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3217,
        3241
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1021": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3217,
        3241
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1024": {
      "op": "NOT"
    },
    "1025": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3217,
        3241
      ],
      "op": "AND",
      "path": "8"
    },
    "1026": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3217,
        3241
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1027": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3217,
        3241
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1028": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3257,
        3273
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 10
    },
    "1029": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3257,
        3273
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1030": {
      "op": "SWAP2"
    },
    "1031": {
      "op": "DUP3"
    },
    "1032": {
      "op": "MSTORE"
    },
    "1033": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3257,
        3273
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x1ABFC08C9D8E95DC2F77C443843422FE9EF89AAFB40A5814F65E9C4F557F1FAA"
    },
    "1066": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3257,
        3273
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1067": {
      "op": "ADD"
    },
    "1068": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3257,
        3273
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24F"
    },
    "1071": {
      "op": "JUMP"
    },
    "1072": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2519
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1073": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1526,
        1536
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 11
    },
    "1074": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1488,
        1495
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1076": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1077": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1078": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1079": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1525
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1081": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1083": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1084": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1086": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1087": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1088": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1089": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1091": {
      "branch": 33,
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "AND",
      "path": "8"
    },
    "1092": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x488"
    },
    "1095": {
      "branch": 33,
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1096": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1098": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1099": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1105": {
      "op": "SHL"
    },
    "1106": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1107": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1110": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1112": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1113": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "ADD",
      "path": "8"
    },
    "1114": {
      "op": "MSTORE"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1119": {
      "op": "DUP3"
    },
    "1120": {
      "op": "ADD"
    },
    "1121": {
      "op": "MSTORE"
    },
    "1122": {
      "op": "PUSH22",
      "value": "0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "1147": {
      "op": "SHL"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1150": {
      "op": "DUP3"
    },
    "1151": {
      "op": "ADD"
    },
    "1152": {
      "op": "MSTORE"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1155": {
      "op": "ADD"
    },
    "1156": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F6"
    },
    "1159": {
      "op": "JUMP"
    },
    "1160": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1161": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x40"
    },
    "1163": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1164": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1165": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1167": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1168": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1169": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "ADD",
      "path": "6"
    },
    "1170": {
      "op": "DUP10"
    },
    "1171": {
      "op": "SWAP1"
    },
    "1172": {
      "op": "MSTORE"
    },
    "1173": {
      "op": "DUP2"
    },
    "1174": {
      "op": "DUP4"
    },
    "1175": {
      "op": "ADD"
    },
    "1176": {
      "op": "DUP9"
    },
    "1177": {
      "op": "SWAP1"
    },
    "1178": {
      "op": "MSTORE"
    },
    "1179": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1689,
        1702
      ],
      "op": "CHAINID",
      "path": "8"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1182": {
      "op": "DUP1"
    },
    "1183": {
      "op": "DUP5"
    },
    "1184": {
      "op": "ADD"
    },
    "1185": {
      "op": "SWAP2"
    },
    "1186": {
      "op": "SWAP1"
    },
    "1187": {
      "op": "SWAP2"
    },
    "1188": {
      "op": "MSTORE"
    },
    "1189": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1202": {
      "op": "NOT"
    },
    "1203": {
      "op": "DUP9"
    },
    "1204": {
      "op": "DUP3"
    },
    "1205": {
      "op": "SHL"
    },
    "1206": {
      "op": "DUP2"
    },
    "1207": {
      "op": "AND"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1210": {
      "op": "DUP6"
    },
    "1211": {
      "op": "ADD"
    },
    "1212": {
      "op": "MSTORE"
    },
    "1213": {
      "op": "SWAP1"
    },
    "1214": {
      "op": "DUP8"
    },
    "1215": {
      "op": "SWAP1"
    },
    "1216": {
      "op": "SHL"
    },
    "1217": {
      "op": "AND"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "1220": {
      "op": "DUP4"
    },
    "1221": {
      "op": "ADD"
    },
    "1222": {
      "op": "MSTORE"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1225": {
      "op": "DUP1"
    },
    "1226": {
      "op": "DUP4"
    },
    "1227": {
      "op": "ADD"
    },
    "1228": {
      "op": "DUP7"
    },
    "1229": {
      "op": "SWAP1"
    },
    "1230": {
      "op": "MSTORE"
    },
    "1231": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1232": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1233": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1234": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1235": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SUB",
      "path": "6"
    },
    "1236": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1237": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1238": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "ADD",
      "path": "6"
    },
    "1239": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1240": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "1243": {
      "op": "SWAP1"
    },
    "1244": {
      "op": "SWAP3"
    },
    "1245": {
      "op": "ADD"
    },
    "1246": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1247": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1248": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        470,
        716
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1249": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1250": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1251": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1252": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "ADD",
      "path": "6"
    },
    "1253": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        443,
        730
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1254": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1574,
        1593
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1256": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1574,
        1593
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1257": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1848,
        1849
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 13,
      "value": "0x0"
    },
    "1259": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1260": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1261": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1262": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1823
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1264": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1266": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1267": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1269": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1270": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1271": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1272": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1574,
        1799
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1273": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1574,
        1799
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1274": {
      "op": "POP"
    },
    "1275": {
      "branch": 34,
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1850
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1276": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x538"
    },
    "1279": {
      "branch": 34,
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1280": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1282": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1283": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1289": {
      "op": "SHL"
    },
    "1290": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1291": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1294": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1296": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1297": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "ADD",
      "path": "8"
    },
    "1298": {
      "op": "MSTORE"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1303": {
      "op": "DUP3"
    },
    "1304": {
      "op": "ADD"
    },
    "1305": {
      "op": "MSTORE"
    },
    "1306": {
      "op": "PUSH14",
      "value": "0x105B1C9958591E48199A5B1B1959"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1323": {
      "op": "SHL"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1326": {
      "op": "DUP3"
    },
    "1327": {
      "op": "ADD"
    },
    "1328": {
      "op": "MSTORE"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1331": {
      "op": "ADD"
    },
    "1332": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F6"
    },
    "1335": {
      "op": "JUMP"
    },
    "1336": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1337": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1902,
        1920
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1338": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1931,
        1996
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 14,
      "value": "0x54E"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1347": {
      "op": "SHL"
    },
    "1348": {
      "op": "SUB"
    },
    "1349": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1931,
        1953
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1350": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1931,
        1953
      ],
      "op": "AND",
      "path": "8"
    },
    "1351": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1954,
        1964
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1352": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1966,
        1987
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1353": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1989,
        1995
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1354": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1931,
        1953
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x78D"
    },
    "1357": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1931,
        1996
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1358": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1931,
        1996
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1359": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1361": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1362": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1364": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2098,
        2108
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1365": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1367": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1368": {
      "op": "PUSH4",
      "value": "0x1EC0F4F9"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1377": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "op": "SUB"
    },
    "1386": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2098,
        2108
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1387": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2098,
        2108
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1388": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2098,
        2108
      ],
      "op": "AND",
      "path": "8"
    },
    "1389": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1391": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1392": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "ADD",
      "path": "8"
    },
    "1393": {
      "op": "MSTORE"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1396": {
      "op": "DUP2"
    },
    "1397": {
      "op": "ADD"
    },
    "1398": {
      "op": "DUP11"
    },
    "1399": {
      "op": "SWAP1"
    },
    "1400": {
      "op": "MSTORE"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1403": {
      "op": "DUP2"
    },
    "1404": {
      "op": "ADD"
    },
    "1405": {
      "op": "DUP6"
    },
    "1406": {
      "op": "SWAP1"
    },
    "1407": {
      "op": "MSTORE"
    },
    "1408": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2138,
        2148
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1411": {
      "op": "DUP3"
    },
    "1412": {
      "op": "ADD"
    },
    "1413": {
      "op": "MSTORE"
    },
    "1414": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2007,
        2055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1416": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2007,
        2055
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1417": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1418": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1419": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1420": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "AND",
      "path": "8"
    },
    "1421": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1422": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2097
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF607A7C8"
    },
    "1427": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2097
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1430": {
      "op": "ADD"
    },
    "1431": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1433": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1434": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1435": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1436": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1437": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "SUB",
      "path": "8"
    },
    "1438": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1439": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1441": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1442": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "GAS",
      "path": "8"
    },
    "1443": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "CALL",
      "path": "8"
    },
    "1444": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1445": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1446": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1447": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5B4"
    },
    "1450": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1451": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1452": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1454": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1455": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "1456": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1457": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1459": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1460": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1461": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "POP",
      "path": "8"
    },
    "1462": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "POP",
      "path": "8"
    },
    "1463": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "POP",
      "path": "8"
    },
    "1464": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "POP",
      "path": "8"
    },
    "1465": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1467": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1468": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1469": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1471": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "NOT",
      "path": "8"
    },
    "1472": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1474": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1475": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "ADD",
      "path": "8"
    },
    "1476": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "AND",
      "path": "8"
    },
    "1477": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1478": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "ADD",
      "path": "8"
    },
    "1479": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1480": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1482": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1483": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "POP",
      "path": "8"
    },
    "1484": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1485": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "ADD",
      "path": "8"
    },
    "1486": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1487": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5D8"
    },
    "1490": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1491": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1492": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB46"
    },
    "1495": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        2058,
        2149
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1496": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2149
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1497": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2167,
        2186
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 15
    },
    "1498": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2167,
        2186
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1499": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2007,
        2149
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1500": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2007,
        2149
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1501": {
      "op": "POP"
    },
    "1502": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2167,
        2186
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1504": {
      "branch": 35,
      "fn": "FillManager.fillRequest",
      "offset": [
        2167,
        2191
      ],
      "op": "SUB",
      "path": "8"
    },
    "1505": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2159,
        2224
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x62C"
    },
    "1508": {
      "branch": 35,
      "fn": "FillManager.fillRequest",
      "offset": [
        2159,
        2224
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1509": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2159,
        2224
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1511": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2159,
        2224
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1512": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1518": {
      "op": "SHL"
    },
    "1519": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2159,
        2224
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1520": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2159,
        2224
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1523": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2159,
        2224
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1525": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2159,
        2224
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1526": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2159,
        2224
      ],
      "op": "ADD",
      "path": "8"
    },
    "1527": {
      "op": "MSTORE"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1532": {
      "op": "DUP3"
    },
    "1533": {
      "op": "ADD"
    },
    "1534": {
      "op": "MSTORE"
    },
    "1535": {
      "op": "PUSH32",
      "value": "0x5375626D697474696E672070726F6F662064617461206661696C656400000000"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1570": {
      "op": "DUP3"
    },
    "1571": {
      "op": "ADD"
    },
    "1572": {
      "op": "MSTORE"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1575": {
      "op": "ADD"
    },
    "1576": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2159,
        2224
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F6"
    },
    "1579": {
      "op": "JUMP"
    },
    "1580": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2159,
        2224
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1581": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2256,
        2277
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 16,
      "value": "0x20"
    },
    "1583": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2256,
        2277
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1584": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2256,
        2277
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1585": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2256,
        2277
      ],
      "op": "ADD",
      "path": "8"
    },
    "1586": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2256,
        2277
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1587": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2253
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1589": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2253
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1590": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2253
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1591": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2253
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1592": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2240
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1594": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2253
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1595": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2253
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1596": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2253
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1598": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2253
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1599": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2253
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1600": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2253
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1601": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2253
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1602": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2277
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1603": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2277
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1604": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2277
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1605": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2235,
        2277
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1606": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2343,
        2362
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 17
    },
    "1607": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2343,
        2362
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1608": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1609": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1610": {
      "op": "SWAP1"
    },
    "1611": {
      "op": "DUP2"
    },
    "1612": {
      "op": "MSTORE"
    },
    "1613": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2435,
        2445
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1614": {
      "op": "SWAP3"
    },
    "1615": {
      "op": "DUP2"
    },
    "1616": {
      "op": "ADD"
    },
    "1617": {
      "op": "SWAP3"
    },
    "1618": {
      "op": "SWAP1"
    },
    "1619": {
      "op": "SWAP3"
    },
    "1620": {
      "op": "MSTORE"
    },
    "1621": {
      "op": "DUP2"
    },
    "1622": {
      "op": "ADD"
    },
    "1623": {
      "op": "DUP7"
    },
    "1624": {
      "op": "SWAP1"
    },
    "1625": {
      "op": "MSTORE"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1632": {
      "op": "SHL"
    },
    "1633": {
      "op": "SUB"
    },
    "1634": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "DUP9",
      "path": "8"
    },
    "1635": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "AND",
      "path": "8"
    },
    "1636": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1637": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2376,
        2389
      ],
      "op": "DUP10",
      "path": "8"
    },
    "1638": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2376,
        2389
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1639": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2320,
        2329
      ],
      "op": "DUP12",
      "path": "8"
    },
    "1640": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2320,
        2329
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1641": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x36973204944F64CC25B32E5318BD0611F917FEDCD9CB77A11651723DB2C6323"
    },
    "1674": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1677": {
      "op": "ADD"
    },
    "1678": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1680": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1681": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1682": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1683": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "SUB",
      "path": "8"
    },
    "1684": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1685": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2293,
        2475
      ],
      "op": "LOG4",
      "path": "8"
    },
    "1686": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2493,
        2512
      ],
      "op": "MLOAD",
      "path": "8",
      "statement": 18
    },
    "1687": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2493,
        2512
      ],
      "op": "SWAP9",
      "path": "8"
    },
    "1688": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2519
      ],
      "op": "SWAP8",
      "path": "8"
    },
    "1689": {
      "op": "POP"
    },
    "1690": {
      "op": "POP"
    },
    "1691": {
      "op": "POP"
    },
    "1692": {
      "op": "POP"
    },
    "1693": {
      "op": "POP"
    },
    "1694": {
      "op": "POP"
    },
    "1695": {
      "op": "POP"
    },
    "1696": {
      "op": "POP"
    },
    "1697": {
      "fn": "FillManager.fillRequest",
      "jump": "o",
      "offset": [
        1286,
        2519
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1698": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1699": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1701": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1708": {
      "op": "SHL"
    },
    "1709": {
      "op": "SUB"
    },
    "1710": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1711": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1712": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1713": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CC"
    },
    "1716": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1717": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1719": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1720": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1726": {
      "op": "SHL"
    },
    "1727": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1728": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1729": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1731": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1732": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F6"
    },
    "1735": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1736": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB11"
    },
    "1739": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1740": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1747": {
      "op": "SHL"
    },
    "1748": {
      "op": "SUB"
    },
    "1749": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 19
    },
    "1750": {
      "branch": 39,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x731"
    },
    "1754": {
      "branch": 39,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1755": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1757": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1758": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1764": {
      "op": "SHL"
    },
    "1765": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1766": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1769": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1772": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1773": {
      "op": "MSTORE"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1778": {
      "op": "DUP3"
    },
    "1779": {
      "op": "ADD"
    },
    "1780": {
      "op": "MSTORE"
    },
    "1781": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1816": {
      "op": "DUP3"
    },
    "1817": {
      "op": "ADD"
    },
    "1818": {
      "op": "MSTORE"
    },
    "1819": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1831": {
      "op": "DUP3"
    },
    "1832": {
      "op": "ADD"
    },
    "1833": {
      "op": "MSTORE"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1836": {
      "op": "ADD"
    },
    "1837": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F6"
    },
    "1840": {
      "op": "JUMP"
    },
    "1841": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x73A"
    },
    "1845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1846": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73D"
    },
    "1849": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1850": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1851": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1852": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1853": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1854": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1856": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1857": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1864": {
      "op": "SHL"
    },
    "1865": {
      "op": "SUB"
    },
    "1866": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 21
    },
    "1867": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1868": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1875": {
      "op": "SHL"
    },
    "1876": {
      "op": "SUB"
    },
    "1877": {
      "op": "NOT"
    },
    "1878": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1879": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1880": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1881": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "1882": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1883": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1884": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x40"
    },
    "1886": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1887": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1888": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1889": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1890": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "1891": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1892": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1893": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1894": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1927": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1928": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1929": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1930": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1931": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1932": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1933": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1934": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x40"
    },
    "1936": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1937": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "op": "SUB"
    },
    "1946": {
      "op": "DUP6"
    },
    "1947": {
      "op": "DUP2"
    },
    "1948": {
      "op": "AND"
    },
    "1949": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1951": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1952": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "2"
    },
    "1953": {
      "op": "MSTORE"
    },
    "1954": {
      "op": "DUP5"
    },
    "1955": {
      "op": "AND"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1958": {
      "op": "DUP3"
    },
    "1959": {
      "op": "ADD"
    },
    "1960": {
      "op": "MSTORE"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1963": {
      "op": "DUP1"
    },
    "1964": {
      "op": "DUP3"
    },
    "1965": {
      "op": "ADD"
    },
    "1966": {
      "op": "DUP5"
    },
    "1967": {
      "op": "SWAP1"
    },
    "1968": {
      "op": "MSTORE"
    },
    "1969": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1970": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1971": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1972": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1973": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SUB",
      "path": "2"
    },
    "1974": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1975": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1976": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "2"
    },
    "1977": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1978": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1981": {
      "op": "SWAP1"
    },
    "1982": {
      "op": "SWAP2"
    },
    "1983": {
      "op": "ADD"
    },
    "1984": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1985": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1986": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1987": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1989": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1990": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "2"
    },
    "1991": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1992": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1999": {
      "op": "SHL"
    },
    "2000": {
      "op": "SUB"
    },
    "2001": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "2"
    },
    "2002": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2009": {
      "op": "SHL"
    },
    "2010": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "OR",
      "path": "2"
    },
    "2011": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2012": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2013": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E7"
    },
    "2016": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2017": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2018": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2019": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1069
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7ED"
    },
    "2022": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2023": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2024": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "2"
    },
    "2025": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "2"
    },
    "2026": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "2"
    },
    "2027": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "2"
    },
    "2028": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        912,
        1153
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2029": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2030": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2032": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x842"
    },
    "2035": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2036": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2038": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2039": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2040": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2042": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "2043": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2045": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2046": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2047": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2049": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2050": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2051": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2053": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "2054": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "2087": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2088": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2089": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "2"
    },
    "2090": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2097": {
      "op": "SHL"
    },
    "2098": {
      "op": "SUB"
    },
    "2099": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "2"
    },
    "2100": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C4"
    },
    "2103": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2104": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2105": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2106": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2107": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "2112": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "2"
    },
    "2113": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2114": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2115": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2116": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2117": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2118": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2119": {
      "op": "POP"
    },
    "2120": {
      "branch": 40,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2121": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8BF"
    },
    "2124": {
      "branch": 40,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2125": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 24
    },
    "2126": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2127": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2129": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "2130": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2131": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2132": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2133": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "2134": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2135": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x860"
    },
    "2138": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2139": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2140": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBA3"
    },
    "2143": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2144": {
      "branch": 41,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2145": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8BF"
    },
    "2148": {
      "branch": 41,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2149": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2151": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2152": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2158": {
      "op": "SHL"
    },
    "2159": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2160": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2163": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2165": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2166": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "2"
    },
    "2167": {
      "op": "MSTORE"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2172": {
      "op": "DUP3"
    },
    "2173": {
      "op": "ADD"
    },
    "2174": {
      "op": "MSTORE"
    },
    "2175": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2210": {
      "op": "DUP3"
    },
    "2211": {
      "op": "ADD"
    },
    "2212": {
      "op": "MSTORE"
    },
    "2213": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "2226": {
      "op": "SHL"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2229": {
      "op": "DUP3"
    },
    "2230": {
      "op": "ADD"
    },
    "2231": {
      "op": "MSTORE"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2234": {
      "op": "ADD"
    },
    "2235": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F6"
    },
    "2238": {
      "op": "JUMP"
    },
    "2239": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2240": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3277,
        3913
      ],
      "op": "POP",
      "path": "2"
    },
    "2241": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "POP",
      "path": "2"
    },
    "2242": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "POP",
      "path": "2"
    },
    "2243": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "o",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2244": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2245": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2247": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 25,
      "value": "0x8D3"
    },
    "2250": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2251": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2252": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2254": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2255": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8DD"
    },
    "2258": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2259": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2260": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2261": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "POP",
      "path": "3"
    },
    "2262": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2263": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2264": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2265": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "2266": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "2267": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "2268": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2269": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2270": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2272": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 26
    },
    "2273": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "2274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "3"
    },
    "2275": {
      "branch": 36,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2276": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x93E"
    },
    "2279": {
      "branch": 36,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2282": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2283": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2289": {
      "op": "SHL"
    },
    "2290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2291": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2296": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2297": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "3"
    },
    "2298": {
      "op": "MSTORE"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2303": {
      "op": "DUP3"
    },
    "2304": {
      "op": "ADD"
    },
    "2305": {
      "op": "MSTORE"
    },
    "2306": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2341": {
      "op": "DUP3"
    },
    "2342": {
      "op": "ADD"
    },
    "2343": {
      "op": "MSTORE"
    },
    "2344": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2353": {
      "op": "SHL"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2356": {
      "op": "DUP3"
    },
    "2357": {
      "op": "ADD"
    },
    "2358": {
      "op": "MSTORE"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2361": {
      "op": "ADD"
    },
    "2362": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F6"
    },
    "2365": {
      "op": "JUMP"
    },
    "2366": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2373": {
      "op": "SHL"
    },
    "2374": {
      "op": "SUB"
    },
    "2375": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 27
    },
    "2376": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "3"
    },
    "2377": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "2378": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 28,
      "value": "0x995"
    },
    "2381": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2382": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2384": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2391": {
      "op": "SHL"
    },
    "2392": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2393": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2396": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2398": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2399": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "3"
    },
    "2400": {
      "op": "MSTORE"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2405": {
      "op": "DUP3"
    },
    "2406": {
      "op": "ADD"
    },
    "2407": {
      "op": "MSTORE"
    },
    "2408": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2443": {
      "op": "DUP3"
    },
    "2444": {
      "op": "ADD"
    },
    "2445": {
      "op": "MSTORE"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2448": {
      "op": "ADD"
    },
    "2449": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F6"
    },
    "2452": {
      "op": "JUMP"
    },
    "2453": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2454": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2456": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2457": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2464": {
      "op": "SHL"
    },
    "2465": {
      "op": "SUB"
    },
    "2466": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "3"
    },
    "2467": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2468": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2469": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2471": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2472": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B1"
    },
    "2475": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2476": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2477": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF1"
    },
    "2480": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2481": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2482": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2484": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2486": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2487": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2489": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "3"
    },
    "2490": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2491": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2492": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2493": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "3"
    },
    "2494": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "3"
    },
    "2495": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2496": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "2497": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "2498": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "2499": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2500": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2501": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2503": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2504": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "3"
    },
    "2505": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9EE"
    },
    "2508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2509": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2511": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2512": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2513": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "2514": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2516": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "3"
    },
    "2517": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "2519": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "2521": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "3"
    },
    "2522": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2523": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "2524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2526": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2527": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2528": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2529": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2530": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2531": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2533": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2535": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "2537": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2538": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9F3"
    },
    "2541": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2543": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2545": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2546": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "2547": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2548": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "2549": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2550": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "2551": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2552": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "2553": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 29,
      "value": "0xA03"
    },
    "2556": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2557": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2558": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2559": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA0E"
    },
    "2562": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2563": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2564": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "2565": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "2566": {
      "op": "POP"
    },
    "2567": {
      "op": "POP"
    },
    "2568": {
      "op": "POP"
    },
    "2569": {
      "op": "POP"
    },
    "2570": {
      "op": "POP"
    },
    "2571": {
      "op": "POP"
    },
    "2572": {
      "op": "POP"
    },
    "2573": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2574": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2575": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2577": {
      "branch": 37,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2578": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2579": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA1D"
    },
    "2582": {
      "branch": 37,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2583": {
      "op": "POP"
    },
    "2584": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 30
    },
    "2585": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8D6"
    },
    "2588": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2589": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2590": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2591": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2592": {
      "branch": 38,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2593": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2D"
    },
    "2596": {
      "branch": 38,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2597": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2598": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2599": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2600": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2601": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2603": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "3"
    },
    "2604": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2605": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2606": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 31
    },
    "2607": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2609": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2610": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2616": {
      "op": "SHL"
    },
    "2617": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2618": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2619": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2621": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "3"
    },
    "2622": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F6"
    },
    "2625": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2626": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2627": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC0D"
    },
    "2630": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2631": {
      "op": "JUMPDEST"
    },
    "2632": {
      "op": "DUP1"
    },
    "2633": {
      "op": "CALLDATALOAD"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2640": {
      "op": "SHL"
    },
    "2641": {
      "op": "SUB"
    },
    "2642": {
      "op": "DUP2"
    },
    "2643": {
      "op": "AND"
    },
    "2644": {
      "op": "DUP2"
    },
    "2645": {
      "op": "EQ"
    },
    "2646": {
      "op": "PUSH2",
      "value": "0xA5E"
    },
    "2649": {
      "op": "JUMPI"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2652": {
      "op": "DUP1"
    },
    "2653": {
      "op": "REVERT"
    },
    "2654": {
      "op": "JUMPDEST"
    },
    "2655": {
      "op": "SWAP2"
    },
    "2656": {
      "op": "SWAP1"
    },
    "2657": {
      "op": "POP"
    },
    "2658": {
      "jump": "o",
      "op": "JUMP"
    },
    "2659": {
      "op": "JUMPDEST"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2664": {
      "op": "DUP3"
    },
    "2665": {
      "op": "DUP5"
    },
    "2666": {
      "op": "SUB"
    },
    "2667": {
      "op": "SLT"
    },
    "2668": {
      "op": "ISZERO"
    },
    "2669": {
      "op": "PUSH2",
      "value": "0xA75"
    },
    "2672": {
      "op": "JUMPI"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2675": {
      "op": "DUP1"
    },
    "2676": {
      "op": "REVERT"
    },
    "2677": {
      "op": "JUMPDEST"
    },
    "2678": {
      "op": "PUSH2",
      "value": "0x8D6"
    },
    "2681": {
      "op": "DUP3"
    },
    "2682": {
      "op": "PUSH2",
      "value": "0xA47"
    },
    "2685": {
      "jump": "i",
      "op": "JUMP"
    },
    "2686": {
      "op": "JUMPDEST"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2691": {
      "op": "DUP3"
    },
    "2692": {
      "op": "DUP5"
    },
    "2693": {
      "op": "SUB"
    },
    "2694": {
      "op": "SLT"
    },
    "2695": {
      "op": "ISZERO"
    },
    "2696": {
      "op": "PUSH2",
      "value": "0xA90"
    },
    "2699": {
      "op": "JUMPI"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2702": {
      "op": "DUP1"
    },
    "2703": {
      "op": "REVERT"
    },
    "2704": {
      "op": "JUMPDEST"
    },
    "2705": {
      "op": "POP"
    },
    "2706": {
      "op": "CALLDATALOAD"
    },
    "2707": {
      "op": "SWAP2"
    },
    "2708": {
      "op": "SWAP1"
    },
    "2709": {
      "op": "POP"
    },
    "2710": {
      "jump": "o",
      "op": "JUMP"
    },
    "2711": {
      "op": "JUMPDEST"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2714": {
      "op": "DUP1"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2719": {
      "op": "DUP5"
    },
    "2720": {
      "op": "DUP7"
    },
    "2721": {
      "op": "SUB"
    },
    "2722": {
      "op": "SLT"
    },
    "2723": {
      "op": "ISZERO"
    },
    "2724": {
      "op": "PUSH2",
      "value": "0xAAC"
    },
    "2727": {
      "op": "JUMPI"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2730": {
      "op": "DUP1"
    },
    "2731": {
      "op": "REVERT"
    },
    "2732": {
      "op": "JUMPDEST"
    },
    "2733": {
      "op": "POP"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "op": "DUP2"
    },
    "2736": {
      "op": "CALLDATALOAD"
    },
    "2737": {
      "op": "SWAP4"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2740": {
      "op": "DUP4"
    },
    "2741": {
      "op": "ADD"
    },
    "2742": {
      "op": "CALLDATALOAD"
    },
    "2743": {
      "op": "SWAP4"
    },
    "2744": {
      "op": "POP"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2747": {
      "op": "SWAP1"
    },
    "2748": {
      "op": "SWAP3"
    },
    "2749": {
      "op": "ADD"
    },
    "2750": {
      "op": "CALLDATALOAD"
    },
    "2751": {
      "op": "SWAP2"
    },
    "2752": {
      "op": "SWAP1"
    },
    "2753": {
      "op": "POP"
    },
    "2754": {
      "jump": "o",
      "op": "JUMP"
    },
    "2755": {
      "op": "JUMPDEST"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2758": {
      "op": "DUP1"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2761": {
      "op": "DUP1"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2766": {
      "op": "DUP7"
    },
    "2767": {
      "op": "DUP9"
    },
    "2768": {
      "op": "SUB"
    },
    "2769": {
      "op": "SLT"
    },
    "2770": {
      "op": "ISZERO"
    },
    "2771": {
      "op": "PUSH2",
      "value": "0xADB"
    },
    "2774": {
      "op": "JUMPI"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2777": {
      "op": "DUP1"
    },
    "2778": {
      "op": "REVERT"
    },
    "2779": {
      "op": "JUMPDEST"
    },
    "2780": {
      "op": "DUP6"
    },
    "2781": {
      "op": "CALLDATALOAD"
    },
    "2782": {
      "op": "SWAP5"
    },
    "2783": {
      "op": "POP"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2786": {
      "op": "DUP7"
    },
    "2787": {
      "op": "ADD"
    },
    "2788": {
      "op": "CALLDATALOAD"
    },
    "2789": {
      "op": "SWAP4"
    },
    "2790": {
      "op": "POP"
    },
    "2791": {
      "op": "PUSH2",
      "value": "0xAF2"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2796": {
      "op": "DUP8"
    },
    "2797": {
      "op": "ADD"
    },
    "2798": {
      "op": "PUSH2",
      "value": "0xA47"
    },
    "2801": {
      "jump": "i",
      "op": "JUMP"
    },
    "2802": {
      "op": "JUMPDEST"
    },
    "2803": {
      "op": "SWAP3"
    },
    "2804": {
      "op": "POP"
    },
    "2805": {
      "op": "PUSH2",
      "value": "0xB00"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2810": {
      "op": "DUP8"
    },
    "2811": {
      "op": "ADD"
    },
    "2812": {
      "op": "PUSH2",
      "value": "0xA47"
    },
    "2815": {
      "jump": "i",
      "op": "JUMP"
    },
    "2816": {
      "op": "JUMPDEST"
    },
    "2817": {
      "op": "SWAP5"
    },
    "2818": {
      "op": "SWAP8"
    },
    "2819": {
      "op": "SWAP4"
    },
    "2820": {
      "op": "SWAP7"
    },
    "2821": {
      "op": "POP"
    },
    "2822": {
      "op": "SWAP2"
    },
    "2823": {
      "op": "SWAP5"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2826": {
      "op": "ADD"
    },
    "2827": {
      "op": "CALLDATALOAD"
    },
    "2828": {
      "op": "SWAP3"
    },
    "2829": {
      "op": "SWAP2"
    },
    "2830": {
      "op": "POP"
    },
    "2831": {
      "op": "POP"
    },
    "2832": {
      "jump": "o",
      "op": "JUMP"
    },
    "2833": {
      "op": "JUMPDEST"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2836": {
      "op": "DUP1"
    },
    "2837": {
      "op": "DUP3"
    },
    "2838": {
      "op": "MSTORE"
    },
    "2839": {
      "op": "DUP2"
    },
    "2840": {
      "op": "DUP2"
    },
    "2841": {
      "op": "ADD"
    },
    "2842": {
      "op": "MSTORE"
    },
    "2843": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2878": {
      "op": "DUP3"
    },
    "2879": {
      "op": "ADD"
    },
    "2880": {
      "op": "MSTORE"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2883": {
      "op": "ADD"
    },
    "2884": {
      "op": "SWAP1"
    },
    "2885": {
      "jump": "o",
      "op": "JUMP"
    },
    "2886": {
      "op": "JUMPDEST"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2891": {
      "op": "DUP3"
    },
    "2892": {
      "op": "DUP5"
    },
    "2893": {
      "op": "SUB"
    },
    "2894": {
      "op": "SLT"
    },
    "2895": {
      "op": "ISZERO"
    },
    "2896": {
      "op": "PUSH2",
      "value": "0xB58"
    },
    "2899": {
      "op": "JUMPI"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2902": {
      "op": "DUP1"
    },
    "2903": {
      "op": "REVERT"
    },
    "2904": {
      "op": "JUMPDEST"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2907": {
      "op": "MLOAD"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2910": {
      "op": "DUP2"
    },
    "2911": {
      "op": "ADD"
    },
    "2912": {
      "op": "DUP2"
    },
    "2913": {
      "op": "DUP2"
    },
    "2914": {
      "op": "LT"
    },
    "2915": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2924": {
      "op": "DUP3"
    },
    "2925": {
      "op": "GT"
    },
    "2926": {
      "op": "OR"
    },
    "2927": {
      "op": "ISZERO"
    },
    "2928": {
      "op": "PUSH2",
      "value": "0xB89"
    },
    "2931": {
      "op": "JUMPI"
    },
    "2932": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2939": {
      "op": "SHL"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2942": {
      "op": "MSTORE"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2947": {
      "op": "MSTORE"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2952": {
      "op": "REVERT"
    },
    "2953": {
      "op": "JUMPDEST"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2956": {
      "op": "MSTORE"
    },
    "2957": {
      "op": "DUP3"
    },
    "2958": {
      "op": "MLOAD"
    },
    "2959": {
      "op": "DUP2"
    },
    "2960": {
      "op": "MSTORE"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2963": {
      "op": "SWAP3"
    },
    "2964": {
      "op": "DUP4"
    },
    "2965": {
      "op": "ADD"
    },
    "2966": {
      "op": "MLOAD"
    },
    "2967": {
      "op": "SWAP3"
    },
    "2968": {
      "op": "DUP2"
    },
    "2969": {
      "op": "ADD"
    },
    "2970": {
      "op": "SWAP3"
    },
    "2971": {
      "op": "SWAP1"
    },
    "2972": {
      "op": "SWAP3"
    },
    "2973": {
      "op": "MSTORE"
    },
    "2974": {
      "op": "POP"
    },
    "2975": {
      "op": "SWAP2"
    },
    "2976": {
      "op": "SWAP1"
    },
    "2977": {
      "op": "POP"
    },
    "2978": {
      "jump": "o",
      "op": "JUMP"
    },
    "2979": {
      "op": "JUMPDEST"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2984": {
      "op": "DUP3"
    },
    "2985": {
      "op": "DUP5"
    },
    "2986": {
      "op": "SUB"
    },
    "2987": {
      "op": "SLT"
    },
    "2988": {
      "op": "ISZERO"
    },
    "2989": {
      "op": "PUSH2",
      "value": "0xBB5"
    },
    "2992": {
      "op": "JUMPI"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2995": {
      "op": "DUP1"
    },
    "2996": {
      "op": "REVERT"
    },
    "2997": {
      "op": "JUMPDEST"
    },
    "2998": {
      "op": "DUP2"
    },
    "2999": {
      "op": "MLOAD"
    },
    "3000": {
      "op": "DUP1"
    },
    "3001": {
      "op": "ISZERO"
    },
    "3002": {
      "op": "ISZERO"
    },
    "3003": {
      "op": "DUP2"
    },
    "3004": {
      "op": "EQ"
    },
    "3005": {
      "op": "PUSH2",
      "value": "0x8D6"
    },
    "3008": {
      "op": "JUMPI"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3011": {
      "op": "DUP1"
    },
    "3012": {
      "op": "REVERT"
    },
    "3013": {
      "op": "JUMPDEST"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3016": {
      "op": "JUMPDEST"
    },
    "3017": {
      "op": "DUP4"
    },
    "3018": {
      "op": "DUP2"
    },
    "3019": {
      "op": "LT"
    },
    "3020": {
      "op": "ISZERO"
    },
    "3021": {
      "op": "PUSH2",
      "value": "0xBE0"
    },
    "3024": {
      "op": "JUMPI"
    },
    "3025": {
      "op": "DUP2"
    },
    "3026": {
      "op": "DUP2"
    },
    "3027": {
      "op": "ADD"
    },
    "3028": {
      "op": "MLOAD"
    },
    "3029": {
      "op": "DUP4"
    },
    "3030": {
      "op": "DUP3"
    },
    "3031": {
      "op": "ADD"
    },
    "3032": {
      "op": "MSTORE"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3035": {
      "op": "ADD"
    },
    "3036": {
      "op": "PUSH2",
      "value": "0xBC8"
    },
    "3039": {
      "op": "JUMP"
    },
    "3040": {
      "op": "JUMPDEST"
    },
    "3041": {
      "op": "DUP4"
    },
    "3042": {
      "op": "DUP2"
    },
    "3043": {
      "op": "GT"
    },
    "3044": {
      "op": "ISZERO"
    },
    "3045": {
      "op": "PUSH2",
      "value": "0x7E7"
    },
    "3048": {
      "op": "JUMPI"
    },
    "3049": {
      "op": "POP"
    },
    "3050": {
      "op": "POP"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3053": {
      "op": "SWAP2"
    },
    "3054": {
      "op": "ADD"
    },
    "3055": {
      "op": "MSTORE"
    },
    "3056": {
      "jump": "o",
      "op": "JUMP"
    },
    "3057": {
      "op": "JUMPDEST"
    },
    "3058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3060": {
      "op": "DUP3"
    },
    "3061": {
      "op": "MLOAD"
    },
    "3062": {
      "op": "PUSH2",
      "value": "0xC03"
    },
    "3065": {
      "op": "DUP2"
    },
    "3066": {
      "op": "DUP5"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3069": {
      "op": "DUP8"
    },
    "3070": {
      "op": "ADD"
    },
    "3071": {
      "op": "PUSH2",
      "value": "0xBC5"
    },
    "3074": {
      "jump": "i",
      "op": "JUMP"
    },
    "3075": {
      "op": "JUMPDEST"
    },
    "3076": {
      "op": "SWAP2"
    },
    "3077": {
      "op": "SWAP1"
    },
    "3078": {
      "op": "SWAP2"
    },
    "3079": {
      "op": "ADD"
    },
    "3080": {
      "op": "SWAP3"
    },
    "3081": {
      "op": "SWAP2"
    },
    "3082": {
      "op": "POP"
    },
    "3083": {
      "op": "POP"
    },
    "3084": {
      "jump": "o",
      "op": "JUMP"
    },
    "3085": {
      "op": "JUMPDEST"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3088": {
      "op": "DUP2"
    },
    "3089": {
      "op": "MSTORE"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3092": {
      "op": "DUP3"
    },
    "3093": {
      "op": "MLOAD"
    },
    "3094": {
      "op": "DUP1"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3097": {
      "op": "DUP5"
    },
    "3098": {
      "op": "ADD"
    },
    "3099": {
      "op": "MSTORE"
    },
    "3100": {
      "op": "PUSH2",
      "value": "0xC2C"
    },
    "3103": {
      "op": "DUP2"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3106": {
      "op": "DUP6"
    },
    "3107": {
      "op": "ADD"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3110": {
      "op": "DUP8"
    },
    "3111": {
      "op": "ADD"
    },
    "3112": {
      "op": "PUSH2",
      "value": "0xBC5"
    },
    "3115": {
      "jump": "i",
      "op": "JUMP"
    },
    "3116": {
      "op": "JUMPDEST"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3119": {
      "op": "ADD"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3122": {
      "op": "NOT"
    },
    "3123": {
      "op": "AND"
    },
    "3124": {
      "op": "SWAP2"
    },
    "3125": {
      "op": "SWAP1"
    },
    "3126": {
      "op": "SWAP2"
    },
    "3127": {
      "op": "ADD"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3130": {
      "op": "ADD"
    },
    "3131": {
      "op": "SWAP3"
    },
    "3132": {
      "op": "SWAP2"
    },
    "3133": {
      "op": "POP"
    },
    "3134": {
      "op": "POP"
    },
    "3135": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e37eff9eefa2530a9f3a2682e1c6dcff78b7bc8e",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol\";\nimport \"../interfaces/IProofSubmitter.sol\";\nimport \"./BeamerUtils.sol\";\n\ncontract FillManager is Ownable {\n    using SafeERC20 for IERC20;\n\n    event RequestFilled(\n        uint256 indexed requestId,\n        bytes32 fillId,\n        uint256 indexed sourceChainId,\n        address indexed targetTokenAddress,\n        address filler,\n        uint256 amount\n    );\n\n    event HashInvalidated(\n        bytes32 indexed requestHash,\n        bytes32 indexed fillId,\n        bytes32 indexed fillHash\n    );\n\n    event LPAdded(address lp);\n\n    event LPRemoved(address lp);\n\n    address public l1Resolver;\n    IProofSubmitter public proofSubmitter;\n\n    // mapping from request hash to fill hash of filled requests\n    mapping(bytes32 => bytes32) public fills;\n    mapping(address => bool) public allowedLPs;\n\n    constructor(address _l1Resolver, address _proofSubmitter) {\n        l1Resolver = _l1Resolver;\n        proofSubmitter = IProofSubmitter(_proofSubmitter);\n    }\n\n    function fillRequest(\n        uint256 requestId,\n        uint256 sourceChainId,\n        address targetTokenAddress,\n        address targetReceiverAddress,\n        uint256 amount\n    ) external returns (bytes32) {\n        require(allowedLPs[msg.sender], \"Sender not whitelisted\");\n        bytes32 requestHash = BeamerUtils.createRequestHash(\n            requestId,\n            sourceChainId,\n            block.chainid,\n            targetTokenAddress,\n            targetReceiverAddress,\n            amount\n        );\n\n        require(fills[requestHash] == bytes32(0), \"Already filled\");\n\n        IERC20 token = IERC20(targetTokenAddress);\n        token.safeTransferFrom(msg.sender, targetReceiverAddress, amount);\n\n        IProofSubmitter.ProofReceipt memory proofReceipt = proofSubmitter\n            .submitProof(l1Resolver, sourceChainId, requestHash, msg.sender);\n        require(proofReceipt.fillId != 0, \"Submitting proof data failed\");\n\n        fills[requestHash] = proofReceipt.fillHash;\n\n        emit RequestFilled(\n            requestId,\n            proofReceipt.fillId,\n            sourceChainId,\n            targetTokenAddress,\n            msg.sender,\n            amount\n        );\n\n        return proofReceipt.fillId;\n    }\n\n    function invalidateFillHash(\n        bytes32 requestHash,\n        bytes32 fillId,\n        uint256 sourceChainId\n    ) external {\n        bytes32 fillHash = BeamerUtils.createFillHash(requestHash, fillId);\n        require(fills[requestHash] != fillHash, \"Fill hash valid\");\n        proofSubmitter.submitNonFillProof(\n            l1Resolver,\n            sourceChainId,\n            requestHash,\n            fillId\n        );\n        emit HashInvalidated(requestHash, fillId, fillHash);\n    }\n\n    function addAllowedLP(address newLP) public onlyOwner {\n        allowedLPs[newLP] = true;\n\n        emit LPAdded(newLP);\n    }\n\n    function removeAllowedLP(address oldLP) public onlyOwner {\n        delete allowedLPs[oldLP];\n\n        emit LPRemoved(oldLP);\n    }\n}\n",
  "sourceMap": "391:2891:8:-:0;;;1122:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;1190:10:8;:24;;-1:-1:-1;;;;;1190:24:8;;;-1:-1:-1;;;;;;1190:24:8;;;;;;;1224:14;:49;;;;;;;;;;;391:2891;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:17:-;93:13;;-1:-1:-1;;;;;135:31:17;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;391:2891:8;;;;;;",
  "sourcePath": "contracts/contracts/FillManager.sol",
  "type": "contract"
}