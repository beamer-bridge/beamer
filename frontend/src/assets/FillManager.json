{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l1Resolver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_proofSubmitter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "fillHash",
          "type": "bytes32"
        }
      ],
      "name": "HashInvalidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "LPAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "LPRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RequestFilled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newLP",
          "type": "address"
        }
      ],
      "name": "addAllowedLP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedLPs",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetReceiverAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "fillRequest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "fills",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "requestHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        }
      ],
      "name": "invalidateFillHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1Resolver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proofSubmitter",
      "outputs": [
        {
          "internalType": "contract IProofSubmitter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldLP",
          "type": "address"
        }
      ],
      "name": "removeAllowedLP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/manuel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "10": "contracts/FillManager.sol",
    "2": "/home/manuel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "20": "interfaces/IProofSubmitter.sol",
    "4": "/home/manuel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "5": "/home/manuel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "6": "/home/manuel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "8": "contracts/BeamerUtils.sol"
  },
  "ast": {
    "absolutePath": "contracts/FillManager.sol",
    "exportedSymbols": {
      "Address": [
        3906
      ],
      "BeamerUtils": [
        82
      ],
      "Context": [
        3611
      ],
      "FillManager": [
        423
      ],
      "IERC20": [
        2654
      ],
      "IProofSubmitter": [
        2913
      ],
      "Ownable": [
        2537
      ],
      "SafeERC20": [
        2878
      ]
    },
    "id": 424,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 162,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:10"
      },
      {
        "absolutePath": "/home/manuel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "id": 163,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 424,
        "sourceUnit": 2655,
        "src": "58:84:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/manuel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 164,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 424,
        "sourceUnit": 2879,
        "src": "143:93:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/manuel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "id": 165,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 424,
        "sourceUnit": 2538,
        "src": "237:80:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IProofSubmitter.sol",
        "file": "../interfaces/IProofSubmitter.sol",
        "id": 166,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 424,
        "sourceUnit": 2914,
        "src": "318:43:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BeamerUtils.sol",
        "file": "./BeamerUtils.sol",
        "id": 167,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 424,
        "sourceUnit": 83,
        "src": "362:27:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 168,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2537,
              "src": "415:7:10"
            },
            "id": 169,
            "nodeType": "InheritanceSpecifier",
            "src": "415:7:10"
          }
        ],
        "canonicalName": "FillManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 423,
        "linearizedBaseContracts": [
          423,
          2537,
          3611
        ],
        "name": "FillManager",
        "nameLocation": "400:11:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 173,
            "libraryName": {
              "id": 170,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2878,
              "src": "435:9:10"
            },
            "nodeType": "UsingForDirective",
            "src": "429:27:10",
            "typeName": {
              "id": 172,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 171,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2654,
                "src": "449:6:10"
              },
              "referencedDeclaration": 2654,
              "src": "449:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2654",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "anonymous": false,
            "eventSelector": "036973204944f64cc25b32e5318bd0611f917fedcd9cb77a11651723db2c6323",
            "id": 187,
            "name": "RequestFilled",
            "nameLocation": "468:13:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "507:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "491:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 177,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "534:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "526:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "566:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "550:29:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "605:18:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "589:34:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "641:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "633:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "665:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "657:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "481:196:10"
            },
            "src": "462:216:10"
          },
          {
            "anonymous": false,
            "eventSelector": "d708c5c6a823a3e0499d43d17cd8f42261ff3e464ebfec0ed0ff56533999e00d",
            "id": 195,
            "name": "HashInvalidated",
            "nameLocation": "690:15:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "731:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "715:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "768:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "752:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fillHash",
                  "nameLocation": "800:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "784:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:109:10"
            },
            "src": "684:131:10"
          },
          {
            "anonymous": false,
            "eventSelector": "c852021e30b95510f55086d8cc9bc5d15d20f2cb411766a7da04804f4ad2fba2",
            "id": 199,
            "name": "LPAdded",
            "nameLocation": "827:7:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lp",
                  "nameLocation": "843:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "835:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "834:12:10"
            },
            "src": "821:26:10"
          },
          {
            "anonymous": false,
            "eventSelector": "1abfc08c9d8e95dc2f77c443843422fe9ef89aafb40a5814f65e9c4f557f1faa",
            "id": 203,
            "name": "LPRemoved",
            "nameLocation": "859:9:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lp",
                  "nameLocation": "877:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "869:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "868:12:10"
            },
            "src": "853:28:10"
          },
          {
            "constant": false,
            "functionSelector": "935beb1a",
            "id": 205,
            "mutability": "mutable",
            "name": "l1Resolver",
            "nameLocation": "902:10:10",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "887:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 204,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "887:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "58753357",
            "id": 208,
            "mutability": "mutable",
            "name": "proofSubmitter",
            "nameLocation": "941:14:10",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "918:37:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IProofSubmitter_$2913",
              "typeString": "contract IProofSubmitter"
            },
            "typeName": {
              "id": 207,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 206,
                "name": "IProofSubmitter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2913,
                "src": "918:15:10"
              },
              "referencedDeclaration": 2913,
              "src": "918:15:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IProofSubmitter_$2913",
                "typeString": "contract IProofSubmitter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20158c44",
            "id": 212,
            "mutability": "mutable",
            "name": "fills",
            "nameLocation": "1062:5:10",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "1027:40:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
              "typeString": "mapping(bytes32 => bytes32)"
            },
            "typeName": {
              "id": 211,
              "keyType": {
                "id": 209,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1035:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1027:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                "typeString": "mapping(bytes32 => bytes32)"
              },
              "valueType": {
                "id": 210,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1046:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aeea7b",
            "id": 216,
            "mutability": "mutable",
            "name": "allowedLPs",
            "nameLocation": "1105:10:10",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "1073:42:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 215,
              "keyType": {
                "id": 213,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1081:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1073:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 214,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1092:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "1180:100:10",
              "statements": [
                {
                  "expression": {
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 223,
                      "name": "l1Resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "1190:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 224,
                      "name": "_l1Resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "1203:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1190:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "1190:24:10"
                },
                {
                  "expression": {
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 227,
                      "name": "proofSubmitter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "1224:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IProofSubmitter_$2913",
                        "typeString": "contract IProofSubmitter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 229,
                          "name": "_proofSubmitter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 220,
                          "src": "1257:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 228,
                        "name": "IProofSubmitter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2913,
                        "src": "1241:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IProofSubmitter_$2913_$",
                          "typeString": "type(contract IProofSubmitter)"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1241:32:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IProofSubmitter_$2913",
                        "typeString": "contract IProofSubmitter"
                      }
                    },
                    "src": "1224:49:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IProofSubmitter_$2913",
                      "typeString": "contract IProofSubmitter"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:49:10"
                }
              ]
            },
            "id": 234,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "_l1Resolver",
                  "nameLocation": "1142:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "1134:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "_proofSubmitter",
                  "nameLocation": "1163:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "1155:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1133:46:10"
            },
            "returnParameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1180:0:10"
            },
            "scope": 423,
            "src": "1122:158:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "1497:1127:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 250,
                          "name": "allowedLPs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 216,
                          "src": "1515:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 253,
                        "indexExpression": {
                          "expression": {
                            "id": 251,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1526:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1526:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1515:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206e6f742077686974656c6973746564",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1539:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37",
                          "typeString": "literal_string \"Sender not whitelisted\""
                        },
                        "value": "Sender not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f99e75415b1b454aa42d5742acc0aa4650deb74a78c4554f7cf35ac8cc3d1f37",
                          "typeString": "literal_string \"Sender not whitelisted\""
                        }
                      ],
                      "id": 249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1507:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:57:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:57:10"
                },
                {
                  "assignments": [
                    258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 258,
                      "mutability": "mutable",
                      "name": "requestHash",
                      "nameLocation": "1582:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "1574:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 257,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1574:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 269,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 261,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "1639:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 262,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "1662:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 263,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1689:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainid",
                        "nodeType": "MemberAccess",
                        "src": "1689:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 265,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "1716:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 266,
                        "name": "targetReceiverAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "1748:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 267,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "1783:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 259,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1596:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$82_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createRequestHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "1596:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256,address,address,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:203:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1574:225:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 271,
                            "name": "fills",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 212,
                            "src": "1818:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 273,
                          "indexExpression": {
                            "id": 272,
                            "name": "requestHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "1824:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1818:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1848:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1840:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 274,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1840:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1840:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1818:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c72656164792066696c6c6564",
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1852:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f1fdd45b3b51c31df82ed6b4ad08141730b73e5c15da80ef36a62b2e6a9c27f",
                          "typeString": "literal_string \"Already filled\""
                        },
                        "value": "Already filled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f1fdd45b3b51c31df82ed6b4ad08141730b73e5c15da80ef36a62b2e6a9c27f",
                          "typeString": "literal_string \"Already filled\""
                        }
                      ],
                      "id": 270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1810:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:59:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:59:10"
                },
                {
                  "assignments": [
                    284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 284,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "1887:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "1880:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2654",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 283,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 282,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2654,
                          "src": "1880:6:10"
                        },
                        "referencedDeclaration": 2654,
                        "src": "1880:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2654",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 288,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 286,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "1902:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 285,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2654,
                      "src": "1895:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2654_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1895:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2654",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1880:41:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 292,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1954:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1954:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 294,
                        "name": "targetReceiverAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "1966:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 295,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "1989:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 289,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "1931:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2654",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2711,
                      "src": "1931:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2654_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2654_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1931:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 297,
                  "nodeType": "ExpressionStatement",
                  "src": "1931:65:10"
                },
                {
                  "assignments": [
                    302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "mutability": "mutable",
                      "name": "proofReceipt",
                      "nameLocation": "2043:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "2007:48:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProofReceipt_$2885_memory_ptr",
                        "typeString": "struct IProofSubmitter.ProofReceipt"
                      },
                      "typeName": {
                        "id": 301,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 300,
                          "name": "IProofSubmitter.ProofReceipt",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2885,
                          "src": "2007:28:10"
                        },
                        "referencedDeclaration": 2885,
                        "src": "2007:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofReceipt_$2885_storage_ptr",
                          "typeString": "struct IProofSubmitter.ProofReceipt"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 312,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 305,
                        "name": "l1Resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "2115:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 306,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "2143:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 307,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "2174:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 308,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "2201:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 309,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2230:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2230:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 303,
                        "name": "proofSubmitter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "2058:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IProofSubmitter_$2913",
                          "typeString": "contract IProofSubmitter"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2901,
                      "src": "2058:39:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$returns$_t_struct$_ProofReceipt_$2885_memory_ptr_$",
                        "typeString": "function (address,uint256,uint256,bytes32,address) external returns (struct IProofSubmitter.ProofReceipt memory)"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2058:196:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProofReceipt_$2885_memory_ptr",
                      "typeString": "struct IProofSubmitter.ProofReceipt memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2007:247:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 314,
                            "name": "proofReceipt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "2272:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProofReceipt_$2885_memory_ptr",
                              "typeString": "struct IProofSubmitter.ProofReceipt memory"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fillId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2882,
                          "src": "2272:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2295:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2272:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5375626d697474696e672070726f6f662064617461206661696c6564",
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2298:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa10e0d7830ed97727b31f476e68911fae4e78de943bf1d83c23a658ad591999",
                          "typeString": "literal_string \"Submitting proof data failed\""
                        },
                        "value": "Submitting proof data failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa10e0d7830ed97727b31f476e68911fae4e78de943bf1d83c23a658ad591999",
                          "typeString": "literal_string \"Submitting proof data failed\""
                        }
                      ],
                      "id": 313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2264:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2264:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "2264:65:10"
                },
                {
                  "expression": {
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 321,
                        "name": "fills",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "2340:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 323,
                      "indexExpression": {
                        "id": 322,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "2346:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2340:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 324,
                        "name": "proofReceipt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "2361:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProofReceipt_$2885_memory_ptr",
                          "typeString": "struct IProofSubmitter.ProofReceipt memory"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fillHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2884,
                      "src": "2361:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2340:42:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "2340:42:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 329,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "2425:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 330,
                          "name": "proofReceipt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 302,
                          "src": "2448:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProofReceipt_$2885_memory_ptr",
                            "typeString": "struct IProofSubmitter.ProofReceipt memory"
                          }
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fillId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2882,
                        "src": "2448:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 332,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "2481:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 333,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "2508:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 334,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2540:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2540:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 336,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "2564:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 328,
                      "name": "RequestFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "2398:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,bytes32,uint256,address,address,uint256)"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:182:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "EmitStatement",
                  "src": "2393:187:10"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 339,
                      "name": "proofReceipt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "2598:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProofReceipt_$2885_memory_ptr",
                        "typeString": "struct IProofSubmitter.ProofReceipt memory"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "fillId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2882,
                    "src": "2598:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 248,
                  "id": 341,
                  "nodeType": "Return",
                  "src": "2591:26:10"
                }
              ]
            },
            "functionSelector": "efd39926",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fillRequest",
            "nameLocation": "1295:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1324:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "1316:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1316:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "1351:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "1343:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "1382:18:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "1374:26:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "targetReceiverAddress",
                  "nameLocation": "1418:21:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "1410:29:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1410:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1457:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "1449:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:163:10"
            },
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "1488:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1487:9:10"
            },
            "scope": 423,
            "src": "1286:1338:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "2784:361:10",
              "statements": [
                {
                  "assignments": [
                    355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 355,
                      "mutability": "mutable",
                      "name": "fillHash",
                      "nameLocation": "2802:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "2794:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 354,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2794:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 361,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 358,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "2840:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 359,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "2853:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 356,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "2813:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$82_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createFillHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49,
                      "src": "2813:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2813:47:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2794:66:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 363,
                            "name": "fills",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 212,
                            "src": "2878:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 365,
                          "indexExpression": {
                            "id": 364,
                            "name": "requestHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "2884:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2878:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 366,
                          "name": "fillHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 355,
                          "src": "2900:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2878:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c6c20686173682076616c6964",
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2910:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7539ef75054f34447d71418e74bd74a55ef7241911c217aa3e6574f554a9723",
                          "typeString": "literal_string \"Fill hash valid\""
                        },
                        "value": "Fill hash valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7539ef75054f34447d71418e74bd74a55ef7241911c217aa3e6574f554a9723",
                          "typeString": "literal_string \"Fill hash valid\""
                        }
                      ],
                      "id": 362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2870:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:58:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "2870:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 374,
                        "name": "l1Resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "2985:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 375,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "3009:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 376,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "3036:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 377,
                        "name": "fillHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3059:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 371,
                        "name": "proofSubmitter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "2938:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IProofSubmitter_$2913",
                          "typeString": "contract IProofSubmitter"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitNonFillProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2912,
                      "src": "2938:33:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes32) external"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2938:139:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "2938:139:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 381,
                        "name": "requestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "3108:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 382,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "3121:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 383,
                        "name": "fillHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3129:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 380,
                      "name": "HashInvalidated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "3092:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32,bytes32)"
                      }
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3092:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 385,
                  "nodeType": "EmitStatement",
                  "src": "3087:51:10"
                }
              ]
            },
            "functionSelector": "16c2fe4b",
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invalidateFillHash",
            "nameLocation": "2639:18:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2675:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "2667:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2667:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "requestHash",
                  "nameLocation": "2702:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "2694:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2694:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 349,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "2731:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "2723:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 348,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2723:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "2755:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "2747:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2657:117:10"
            },
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2784:0:10"
            },
            "scope": 423,
            "src": "2630:515:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "3205:71:10",
              "statements": [
                {
                  "expression": {
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 394,
                        "name": "allowedLPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "3215:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 396,
                      "indexExpression": {
                        "id": 395,
                        "name": "newLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "3226:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3215:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3235:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3215:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "3215:24:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 401,
                        "name": "newLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "3263:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 400,
                      "name": "LPAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "3255:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3255:14:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 403,
                  "nodeType": "EmitStatement",
                  "src": "3250:19:10"
                }
              ]
            },
            "functionSelector": "1cb2eaf9",
            "id": 405,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 392,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 391,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2479,
                  "src": "3195:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3195:9:10"
              }
            ],
            "name": "addAllowedLP",
            "nameLocation": "3160:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "newLP",
                  "nameLocation": "3181:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "3173:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3173:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3172:15:10"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3205:0:10"
            },
            "scope": 423,
            "src": "3151:125:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "3339:73:10",
              "statements": [
                {
                  "expression": {
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3349:24:10",
                    "subExpression": {
                      "baseExpression": {
                        "id": 412,
                        "name": "allowedLPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "3356:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 414,
                      "indexExpression": {
                        "id": 413,
                        "name": "oldLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "3367:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3356:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "3349:24:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 418,
                        "name": "oldLP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "3399:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 417,
                      "name": "LPRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "3389:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3389:16:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "EmitStatement",
                  "src": "3384:21:10"
                }
              ]
            },
            "functionSelector": "afc4827b",
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 409,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2479,
                  "src": "3329:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3329:9:10"
              }
            ],
            "name": "removeAllowedLP",
            "nameLocation": "3291:15:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "mutability": "mutable",
                  "name": "oldLP",
                  "nameLocation": "3315:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "3307:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3307:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3306:15:10"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3339:0:10"
            },
            "scope": 423,
            "src": "3282:130:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 424,
        "src": "391:3023:10",
        "usedErrors": []
      }
    ],
    "src": "32:3383:10"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610d97380380610d9783398101604081905261002f916100d5565b61003833610069565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055610108565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d057600080fd5b919050565b600080604083850312156100e857600080fd5b6100f1836100b9565b91506100ff602084016100b9565b90509250929050565b610c80806101176000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101675780638da5cb5b1461016f578063935beb1a14610180578063afc4827b14610193578063efd39926146101a6578063f2fde38b146101b957600080fd5b806316c2fe4b146100ae5780631cb2eaf9146100c357806320158c44146100d657806335aeea7b14610109578063587533571461013c575b600080fd5b6100c16100bc366004610a4b565b6101cc565b005b6100c16100d1366004610a99565b6102f7565b6100f66100e4366004610ab4565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b61012c610117366004610a99565b60046020526000908152604090205460ff1681565b6040519015158152602001610100565b60025461014f906001600160a01b031681565b6040516001600160a01b039091168152602001610100565b6100c161037c565b6000546001600160a01b031661014f565b60015461014f906001600160a01b031681565b6100c16101a1366004610a99565b6103b2565b6100f66101b4366004610acd565b61042d565b6100c16101c7366004610a99565b6106a6565b60408051602080820186905281830185905282518083038401815260609092018352815191810191909120600086815260039092529190205481900361024b5760405162461bcd60e51b815260206004820152600f60248201526e119a5b1b081a185cda081d985b1a59608a1b60448201526064015b60405180910390fd5b600254600154604051633751683160e21b81526001600160a01b03918216600482015260248101859052604481018890526064810184905291169063dd45a0c490608401600060405180830381600087803b1580156102a957600080fd5b505af11580156102bd573d6000803e3d6000fd5b505050508083857fd708c5c6a823a3e0499d43d17cd8f42261ff3e464ebfec0ed0ff56533999e00d60405160405180910390a45050505050565b6000546001600160a01b031633146103215760405162461bcd60e51b815260040161024290610b1b565b6001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527fc852021e30b95510f55086d8cc9bc5d15d20f2cb411766a7da04804f4ad2fba291015b60405180910390a150565b6000546001600160a01b031633146103a65760405162461bcd60e51b815260040161024290610b1b565b6103b06000610741565b565b6000546001600160a01b031633146103dc5760405162461bcd60e51b815260040161024290610b1b565b6001600160a01b038116600081815260046020908152604091829020805460ff1916905590519182527f1abfc08c9d8e95dc2f77c443843422fe9ef89aafb40a5814f65e9c4f557f1faa9101610371565b3360009081526004602052604081205460ff166104855760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b6044820152606401610242565b604080516020808201899052818301889052466060808401919091526bffffffffffffffffffffffff1988821b811660808501529087901b16609483015260a88083018690528351808403909101815260c89092019092528051910120600090600081815260036020526040902054909150156105355760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e48199a5b1b195960921b6044820152606401610242565b8461054b6001600160a01b038216338787610791565b600254600154604051637e5465d760e01b81526001600160a01b039182166004820152602481018a9052604481018b9052606481018590523360848201526000929190911690637e5465d79060a40160408051808303816000875af11580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dc9190610b50565b80519091506000036106305760405162461bcd60e51b815260206004820152601c60248201527f5375626d697474696e672070726f6f662064617461206661696c6564000000006044820152606401610242565b6020818101516000858152600383526040908190209190915582518151908152339281019290925281018690526001600160a01b0388169089908b907f036973204944f64cc25b32e5318bd0611f917fedcd9cb77a11651723db2c63239060600160405180910390a45198975050505050505050565b6000546001600160a01b031633146106d05760405162461bcd60e51b815260040161024290610b1b565b6001600160a01b0381166107355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610242565b61073e81610741565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526107eb9085906107f1565b50505050565b6000610846826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108c89092919063ffffffff16565b8051909150156108c357808060200190518101906108649190610bad565b6108c35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610242565b505050565b60606108d784846000856108e1565b90505b9392505050565b6060824710156109425760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610242565b6001600160a01b0385163b6109995760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610242565b600080866001600160a01b031685876040516109b59190610bfb565b60006040518083038185875af1925050503d80600081146109f2576040519150601f19603f3d011682016040523d82523d6000602084013e6109f7565b606091505b5091509150610a07828286610a12565b979650505050505050565b60608315610a215750816108da565b825115610a315782518084602001fd5b8160405162461bcd60e51b81526004016102429190610c17565b60008060008060808587031215610a6157600080fd5b5050823594602084013594506040840135936060013592509050565b80356001600160a01b0381168114610a9457600080fd5b919050565b600060208284031215610aab57600080fd5b6108da82610a7d565b600060208284031215610ac657600080fd5b5035919050565b600080600080600060a08688031215610ae557600080fd5b8535945060208601359350610afc60408701610a7d565b9250610b0a60608701610a7d565b949793965091946080013592915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060408284031215610b6257600080fd5b6040516040810181811067ffffffffffffffff82111715610b9357634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b600060208284031215610bbf57600080fd5b815180151581146108da57600080fd5b60005b83811015610bea578181015183820152602001610bd2565b838111156107eb5750506000910152565b60008251610c0d818460208701610bcf565b9190910192915050565b6020815260008251806020840152610c36816040850160208701610bcf565b601f01601f1916919091016040019291505056fea26469706673582212204ced029e33e4703ef95d9ca82fc19ed9baec9e77f3652b3e79ef9b59eb176e7f64736f6c634300080e0033",
  "bytecodeSha1": "84aa939817ddb9bfa657847ce4e9d8da4c3ba96e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "FillManager",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "39": [
            2006,
            2028,
            true
          ]
        }
      },
      "10": {
        "FillManager.fillRequest": {
          "33": [
            1515,
            1537,
            true
          ],
          "34": [
            1818,
            1850,
            true
          ],
          "35": [
            2272,
            2296,
            true
          ]
        },
        "FillManager.invalidateFillHash": {
          "32": [
            2878,
            2908,
            true
          ]
        }
      },
      "2": {},
      "20": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "40": [
            3735,
            3756,
            false
          ],
          "41": [
            3819,
            3849,
            true
          ]
        }
      },
      "5": {
        "Address.functionCallWithValue": {
          "36": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "37": [
            7735,
            7742,
            false
          ],
          "38": [
            7876,
            7897,
            false
          ]
        }
      },
      "6": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "21": [
            2378,
            2395
          ],
          "22": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "8": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "19": [
            1998,
            2071
          ],
          "20": [
            2081,
            2109
          ]
        }
      },
      "10": {
        "FillManager.addAllowedLP": {
          "6": [
            3215,
            3239
          ],
          "7": [
            3250,
            3269
          ]
        },
        "FillManager.fillRequest": {
          "11": [
            1507,
            1564
          ],
          "13": [
            1810,
            1869
          ],
          "14": [
            1931,
            1996
          ],
          "15": [
            2264,
            2329
          ],
          "16": [
            2340,
            2382
          ],
          "17": [
            2393,
            2580
          ],
          "18": [
            2591,
            2617
          ]
        },
        "FillManager.invalidateFillHash": {
          "2": [
            2870,
            2928
          ],
          "3": [
            2938,
            3077
          ],
          "4": [
            3087,
            3138
          ]
        },
        "FillManager.removeAllowedLP": {
          "9": [
            3349,
            3373
          ],
          "10": [
            3384,
            3405
          ]
        }
      },
      "2": {},
      "20": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "24": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "23": [
            1050,
            1146
          ]
        }
      },
      "5": {
        "Address.functionCall": {
          "25": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "26": [
            5137,
            5218
          ],
          "28": [
            5228,
            5288
          ],
          "29": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "27": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "30": [
            7758,
            7775
          ],
          "31": [
            8202,
            8222
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "5": [
            712,
            729
          ]
        }
      },
      "8": {
        "BeamerUtils.createFillHash": {
          "1": [
            797,
            852
          ]
        },
        "BeamerUtils.createRequestHash": {
          "12": [
            347,
            653
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "BeamerUtils",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "IProofSubmitter",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101675780638da5cb5b1461016f578063935beb1a14610180578063afc4827b14610193578063efd39926146101a6578063f2fde38b146101b957600080fd5b806316c2fe4b146100ae5780631cb2eaf9146100c357806320158c44146100d657806335aeea7b14610109578063587533571461013c575b600080fd5b6100c16100bc366004610a4b565b6101cc565b005b6100c16100d1366004610a99565b6102f7565b6100f66100e4366004610ab4565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b61012c610117366004610a99565b60046020526000908152604090205460ff1681565b6040519015158152602001610100565b60025461014f906001600160a01b031681565b6040516001600160a01b039091168152602001610100565b6100c161037c565b6000546001600160a01b031661014f565b60015461014f906001600160a01b031681565b6100c16101a1366004610a99565b6103b2565b6100f66101b4366004610acd565b61042d565b6100c16101c7366004610a99565b6106a6565b60408051602080820186905281830185905282518083038401815260609092018352815191810191909120600086815260039092529190205481900361024b5760405162461bcd60e51b815260206004820152600f60248201526e119a5b1b081a185cda081d985b1a59608a1b60448201526064015b60405180910390fd5b600254600154604051633751683160e21b81526001600160a01b03918216600482015260248101859052604481018890526064810184905291169063dd45a0c490608401600060405180830381600087803b1580156102a957600080fd5b505af11580156102bd573d6000803e3d6000fd5b505050508083857fd708c5c6a823a3e0499d43d17cd8f42261ff3e464ebfec0ed0ff56533999e00d60405160405180910390a45050505050565b6000546001600160a01b031633146103215760405162461bcd60e51b815260040161024290610b1b565b6001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527fc852021e30b95510f55086d8cc9bc5d15d20f2cb411766a7da04804f4ad2fba291015b60405180910390a150565b6000546001600160a01b031633146103a65760405162461bcd60e51b815260040161024290610b1b565b6103b06000610741565b565b6000546001600160a01b031633146103dc5760405162461bcd60e51b815260040161024290610b1b565b6001600160a01b038116600081815260046020908152604091829020805460ff1916905590519182527f1abfc08c9d8e95dc2f77c443843422fe9ef89aafb40a5814f65e9c4f557f1faa9101610371565b3360009081526004602052604081205460ff166104855760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b6044820152606401610242565b604080516020808201899052818301889052466060808401919091526bffffffffffffffffffffffff1988821b811660808501529087901b16609483015260a88083018690528351808403909101815260c89092019092528051910120600090600081815260036020526040902054909150156105355760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e48199a5b1b195960921b6044820152606401610242565b8461054b6001600160a01b038216338787610791565b600254600154604051637e5465d760e01b81526001600160a01b039182166004820152602481018a9052604481018b9052606481018590523360848201526000929190911690637e5465d79060a40160408051808303816000875af11580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dc9190610b50565b80519091506000036106305760405162461bcd60e51b815260206004820152601c60248201527f5375626d697474696e672070726f6f662064617461206661696c6564000000006044820152606401610242565b6020818101516000858152600383526040908190209190915582518151908152339281019290925281018690526001600160a01b0388169089908b907f036973204944f64cc25b32e5318bd0611f917fedcd9cb77a11651723db2c63239060600160405180910390a45198975050505050505050565b6000546001600160a01b031633146106d05760405162461bcd60e51b815260040161024290610b1b565b6001600160a01b0381166107355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610242565b61073e81610741565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526107eb9085906107f1565b50505050565b6000610846826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108c89092919063ffffffff16565b8051909150156108c357808060200190518101906108649190610bad565b6108c35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610242565b505050565b60606108d784846000856108e1565b90505b9392505050565b6060824710156109425760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610242565b6001600160a01b0385163b6109995760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610242565b600080866001600160a01b031685876040516109b59190610bfb565b60006040518083038185875af1925050503d80600081146109f2576040519150601f19603f3d011682016040523d82523d6000602084013e6109f7565b606091505b5091509150610a07828286610a12565b979650505050505050565b60608315610a215750816108da565b825115610a315782518084602001fd5b8160405162461bcd60e51b81526004016102429190610c17565b60008060008060808587031215610a6157600080fd5b5050823594602084013594506040840135936060013592509050565b80356001600160a01b0381168114610a9457600080fd5b919050565b600060208284031215610aab57600080fd5b6108da82610a7d565b600060208284031215610ac657600080fd5b5035919050565b600080600080600060a08688031215610ae557600080fd5b8535945060208601359350610afc60408701610a7d565b9250610b0a60608701610a7d565b949793965091946080013592915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060408284031215610b6257600080fd5b6040516040810181811067ffffffffffffffff82111715610b9357634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b600060208284031215610bbf57600080fd5b815180151581146108da57600080fd5b60005b83811015610bea578181015183820152602001610bd2565b838111156107eb5750506000910152565b60008251610c0d818460208701610bcf565b9190910192915050565b6020815260008251806020840152610c36816040850160208701610bcf565b601f01601f1916919091016040019291505056fea26469706673582212204ced029e33e4703ef95d9ca82fc19ed9baec9e77f3652b3e79ef9b59eb176e7f64736f6c634300080e0033",
  "deployedSourceMap": "391:3023:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2630:515;;;;;;:::i;:::-;;:::i;:::-;;3151:125;;;;;;:::i;:::-;;:::i;1027:40::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1104:25:21;;;1092:2;1077:18;1027:40:10;;;;;;;;1073:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1305:14:21;;1298:22;1280:41;;1268:2;1253:18;1073:42:10;1140:187:21;918:37:10;;;;;-1:-1:-1;;;;;918:37:10;;;;;;-1:-1:-1;;;;;1520:32:21;;;1502:51;;1490:2;1475:18;918:37:10;1332:227:21;1668:101:0;;;:::i;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;887:25:10;;;;;-1:-1:-1;;;;;887:25:10;;;3282:130;;;;;;:::i;:::-;;:::i;1286:1338::-;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;2630:515:10:-;814:37:8;;;;;;;6467:19:21;;;6502:12;;;6495:28;;;814:37:8;;;;;;;;;6539:12:21;;;;814:37:8;;804:48;;;;;;;;;-1:-1:-1;2878:18:10;;;:5;:18;;;;;;;:30;;;2870:58;;;;-1:-1:-1;;;2870:58:10;;2445:2:21;2870:58:10;;;2427:21:21;2484:2;2464:18;;;2457:30;-1:-1:-1;;;2503:18:21;;;2496:45;2558:18;;2870:58:10;;;;;;;;;2938:14;;;2985:10;2938:139;;-1:-1:-1;;;2938:139:10;;-1:-1:-1;;;;;2985:10:10;;;2938:139;;;2818:51:21;2885:18;;;2878:34;;;2928:18;;;2921:34;;;2971:18;;;2964:34;;;2938:14:10;;;:33;;2790:19:21;;2938:139:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3129:8;3121:6;3108:11;3092:46;;;;;;;;;;2784:361;2630:515;;;;:::o;3151:125::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;3215:17:10;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;;:24;;-1:-1:-1;;3215:24:10::1;3235:4;3215:24;::::0;;3255:14;;1502:51:21;;;3255:14:10::1;::::0;1475:18:21;3255:14:10::1;;;;;;;;3151:125:::0;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3282:130:10:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;3356:17:10;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;;3349:24;;-1:-1:-1;;3349:24:10::1;::::0;;3389:16;;1502:51:21;;;3389:16:10::1;::::0;1475:18:21;3389:16:10::1;1332:227:21::0;1286:1338:10;1526:10;1488:7;1515:22;;;:10;:22;;;;;;;;1507:57;;;;-1:-1:-1;;;1507:57:10;;3572:2:21;1507:57:10;;;3554:21:21;3611:2;3591:18;;;3584:30;-1:-1:-1;;;3630:18:21;;;3623:52;3692:18;;1507:57:10;3370:346:21;1507:57:10;393:246:8;;;;;;;6831:19:21;;;6866:12;;;6859:28;;;1689:13:10;6903:12:21;;;;6896:28;;;;-1:-1:-1;;7008:15:21;;;7004:24;;6990:12;;;6983:46;7064:15;;;;7060:24;7045:13;;;7038:47;7101:13;;;;7094:29;;;393:246:8;;;;;;;;;;7139:13:21;;;;393:246:8;;;366:287;;;;;1574:19:10;;1848:1;1818:18;;;:5;:18;;;;;;1574:225;;-1:-1:-1;1818:32:10;1810:59;;;;-1:-1:-1;;;1810:59:10;;3923:2:21;1810:59:10;;;3905:21:21;3962:2;3942:18;;;3935:30;-1:-1:-1;;;3981:18:21;;;3974:44;4035:18;;1810:59:10;3721:338:21;1810:59:10;1902:18;1931:65;-1:-1:-1;;;;;1931:22:10;;1954:10;1966:21;1989:6;1931:22;:65::i;:::-;2058:14;;;2115:10;2058:196;;-1:-1:-1;;;2058:196:10;;-1:-1:-1;;;;;2115:10:10;;;2058:196;;;4361:34:21;4411:18;;;4404:34;;;4454:18;;;4447:34;;;4497:18;;;4490:34;;;2230:10:10;4540:19:21;;;4533:44;2007:48:10;;2058:14;;;;;:39;;4295:19:21;;2058:196:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2272:19;;2007:247;;-1:-1:-1;2272:19:10;:24;2264:65;;;;-1:-1:-1;;;2264:65:10;;5398:2:21;2264:65:10;;;5380:21:21;5437:2;5417:18;;;5410:30;5476;5456:18;;;5449:58;5524:18;;2264:65:10;5196:352:21;2264:65:10;2361:21;;;;;2340:18;;;;:5;:18;;;;;;;:42;;;;2448:19;;2398:182;;5755:25:21;;;2540:10:10;5796:18:21;;;5789:60;;;;5865:18;;5858:34;;;-1:-1:-1;;;;;2398:182:10;;;2481:13;;2425:9;;2398:182;;5743:2:21;5728:18;2398:182:10;;;;;;;2598:19;;1286:1338;-1:-1:-1;;;;;;;;1286:1338:10:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:6;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;6105:2:21;1998:73:0::1;::::0;::::1;6087:21:21::0;6144:2;6124:18;;;6117:30;6183:34;6163:18;;;6156:62;-1:-1:-1;;;6234:18:21;;;6227:36;6280:19;;1998:73:0::1;5903:402:21::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;912:241:4:-;1077:68;;;-1:-1:-1;;;;;7421:15:21;;;1077:68:4;;;7403:34:21;7473:15;;7453:18;;;7446:43;7505:18;;;;7498:34;;;1077:68:4;;;;;;;;;;7338:18:21;;;;1077:68:4;;;;;;;;-1:-1:-1;;;;;1077:68:4;-1:-1:-1;;;1077:68:4;;;1050:96;;1070:5;;1050:19;:96::i;:::-;912:241;;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:4;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:4;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:4;;8027:2:21;3811:85:4;;;8009:21:21;8066:2;8046:18;;;8039:30;8105:34;8085:18;;;8078:62;-1:-1:-1;;;8156:18:21;;;8149:40;8206:19;;3811:85:4;7825:406:21;3811:85:4;3277:636;3207:706;;:::o;3861:223:5:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:5;;8438:2:21;5137:81:5;;;8420:21:21;8477:2;8457:18;;;8450:30;8516:34;8496:18;;;8489:62;-1:-1:-1;;;8567:18:21;;;8560:36;8613:19;;5137:81:5;8236:402:21;5137:81:5;-1:-1:-1;;;;;1465:19:5;;;5228:60;;;;-1:-1:-1;;;5228:60:5;;8845:2:21;5228:60:5;;;8827:21:21;8884:2;8864:18;;;8857:30;8923:31;8903:18;;;8896:59;8972:18;;5228:60:5;8643:353:21;5228:60:5;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:5;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:5:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:5;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:5;;;;;;;;:::i;14:385:21:-;100:6;108;116;124;177:3;165:9;156:7;152:23;148:33;145:53;;;194:1;191;184:12;145:53;-1:-1:-1;;217:23:21;;;287:2;272:18;;259:32;;-1:-1:-1;338:2:21;323:18;;310:32;;389:2;374:18;361:32;;-1:-1:-1;14:385:21;-1:-1:-1;14:385:21:o;404:173::-;472:20;;-1:-1:-1;;;;;521:31:21;;511:42;;501:70;;567:1;564;557:12;501:70;404:173;;;:::o;582:186::-;641:6;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;733:29;752:9;733:29;:::i;773:180::-;832:6;885:2;873:9;864:7;860:23;856:32;853:52;;;901:1;898;891:12;853:52;-1:-1:-1;924:23:21;;773:180;-1:-1:-1;773:180:21:o;1772:466::-;1867:6;1875;1883;1891;1899;1952:3;1940:9;1931:7;1927:23;1923:33;1920:53;;;1969:1;1966;1959:12;1920:53;2005:9;1992:23;1982:33;;2062:2;2051:9;2047:18;2034:32;2024:42;;2085:38;2119:2;2108:9;2104:18;2085:38;:::i;:::-;2075:48;;2142:38;2176:2;2165:9;2161:18;2142:38;:::i;:::-;1772:466;;;;-1:-1:-1;1772:466:21;;2227:3;2212:19;2199:33;;1772:466;-1:-1:-1;;1772:466:21:o;3009:356::-;3211:2;3193:21;;;3230:18;;;3223:30;3289:34;3284:2;3269:18;;3262:62;3356:2;3341:18;;3009:356::o;4588:603::-;4688:6;4741:2;4729:9;4720:7;4716:23;4712:32;4709:52;;;4757:1;4754;4747:12;4709:52;4790:2;4784:9;4832:2;4824:6;4820:15;4901:6;4889:10;4886:22;4865:18;4853:10;4850:34;4847:62;4844:185;;;4951:10;4946:3;4942:20;4939:1;4932:31;4986:4;4983:1;4976:15;5014:4;5011:1;5004:15;4844:185;5045:2;5038:22;5084:16;;5069:32;;5155:2;5140:18;;;5134:25;5117:15;;;5110:50;;;;-1:-1:-1;5076:6:21;4588:603;-1:-1:-1;4588:603:21:o;7543:277::-;7610:6;7663:2;7651:9;7642:7;7638:23;7634:32;7631:52;;;7679:1;7676;7669:12;7631:52;7711:9;7705:16;7764:5;7757:13;7750:21;7743:5;7740:32;7730:60;;7786:1;7783;7776:12;9001:258;9073:1;9083:113;9097:6;9094:1;9091:13;9083:113;;;9173:11;;;9167:18;9154:11;;;9147:39;9119:2;9112:10;9083:113;;;9214:6;9211:1;9208:13;9205:48;;;-1:-1:-1;;9249:1:21;9231:16;;9224:27;9001:258::o;9264:274::-;9393:3;9431:6;9425:13;9447:53;9493:6;9488:3;9481:4;9473:6;9469:17;9447:53;:::i;:::-;9516:16;;;;;9264:274;-1:-1:-1;;9264:274:21:o;9543:383::-;9692:2;9681:9;9674:21;9655:4;9724:6;9718:13;9767:6;9762:2;9751:9;9747:18;9740:34;9783:66;9842:6;9837:2;9826:9;9822:18;9817:2;9809:6;9805:15;9783:66;:::i;:::-;9910:2;9889:15;-1:-1:-1;;9885:29:21;9870:45;;;;9917:2;9866:54;;9543:383;-1:-1:-1;;9543:383:21:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    391,
    3414
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x935BEB1A EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xAFC4827B EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xEFD39926 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16C2FE4B EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x1CB2EAF9 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x20158C44 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x35AEEA7B EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x58753357 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0xF6 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x37C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0xF6 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD DUP4 MSTORE DUP2 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 SUB PUSH2 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x119A5B1B081A185CDA081D985B1A59 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x37516831 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xDD45A0C4 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP4 DUP6 PUSH32 0xD708C5C6A823A3E0499D43D17CD8F42261FF3E464EBFEC0ED0FF56533999E00D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x242 SWAP1 PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xC852021E30B95510F55086D8CC9BC5D15D20F2CB411766A7DA04804F4AD2FBA2 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x242 SWAP1 PUSH2 0xB1B JUMP JUMPDEST PUSH2 0x3B0 PUSH1 0x0 PUSH2 0x741 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x242 SWAP1 PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1ABFC08C9D8E95DC2F77C443843422FE9EF89AAFB40A5814F65E9C4F557F1FAA SWAP2 ADD PUSH2 0x371 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE DUP2 DUP4 ADD DUP9 SWAP1 MSTORE CHAINID PUSH1 0x60 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP9 DUP3 SHL DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP8 SWAP1 SHL AND PUSH1 0x94 DUP4 ADD MSTORE PUSH1 0xA8 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC8 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E48199A5B1B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x242 JUMP JUMPDEST DUP5 PUSH2 0x54B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP8 DUP8 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7E5465D7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP6 SWAP1 MSTORE CALLER PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x7E5465D7 SWAP1 PUSH1 0xA4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0xB50 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SUB PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5375626D697474696E672070726F6F662064617461206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x242 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 DUP4 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP3 MLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 DUP10 SWAP1 DUP12 SWAP1 PUSH32 0x36973204944F64CC25B32E5318BD0611F917FEDCD9CB77A11651723DB2C6323 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 MLOAD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x242 SWAP1 PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x242 JUMP JUMPDEST PUSH2 0x73E DUP2 PUSH2 0x741 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x7EB SWAP1 DUP6 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x846 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8C8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x8C3 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x864 SWAP2 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x242 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8D7 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x8E1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x942 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x242 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x242 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x9B5 SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9F2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xA07 DUP3 DUP3 DUP7 PUSH2 0xA12 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xA21 JUMPI POP DUP2 PUSH2 0x8DA JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xA31 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8DA DUP3 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xAE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0xAFC PUSH1 0x40 DUP8 ADD PUSH2 0xA7D JUMP JUMPDEST SWAP3 POP PUSH2 0xB0A PUSH1 0x60 DUP8 ADD PUSH2 0xA7D JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB93 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBEA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBD2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x7EB JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xC0D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xBCF JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xC36 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xED MUL SWAP15 CALLER 0xE4 PUSH17 0x3EF95D9CA82FC19ED9BAEC9E77F3652B3E PUSH26 0xEF9B59EB176E7F64736F6C634300080E00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        391,
        3414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x715018A6"
    },
    "49": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "EQ",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x167"
    },
    "53": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "EQ",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16F"
    },
    "64": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x935BEB1A"
    },
    "71": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "EQ",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x180"
    },
    "75": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xAFC4827B"
    },
    "82": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x193"
    },
    "86": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xEFD39926"
    },
    "93": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "EQ",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A6"
    },
    "97": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "99": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "EQ",
      "path": "10"
    },
    "105": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B9"
    },
    "108": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "109": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "112": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "REVERT",
      "path": "10"
    },
    "113": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "114": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "115": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x16C2FE4B"
    },
    "120": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "EQ",
      "path": "10"
    },
    "121": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1CB2EAF9"
    },
    "131": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC3"
    },
    "135": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "137": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x20158C44"
    },
    "142": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "EQ",
      "path": "10"
    },
    "143": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD6"
    },
    "146": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "147": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "148": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x35AEEA7B"
    },
    "153": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "EQ",
      "path": "10"
    },
    "154": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x109"
    },
    "157": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "158": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "159": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x58753357"
    },
    "164": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "EQ",
      "path": "10"
    },
    "165": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13C"
    },
    "168": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "169": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "170": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        391,
        3414
      ],
      "op": "REVERT",
      "path": "10"
    },
    "174": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "175": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC1"
    },
    "178": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBC"
    },
    "181": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "182": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "184": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4B"
    },
    "187": {
      "fn": "FillManager.invalidateFillHash",
      "jump": "i",
      "offset": [
        2630,
        3145
      ],
      "op": "JUMP",
      "path": "10"
    },
    "188": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "189": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CC"
    },
    "192": {
      "fn": "FillManager.invalidateFillHash",
      "jump": "i",
      "offset": [
        2630,
        3145
      ],
      "op": "JUMP",
      "path": "10"
    },
    "193": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "194": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "STOP",
      "path": "10"
    },
    "195": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3151,
        3276
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "196": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3151,
        3276
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC1"
    },
    "199": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3151,
        3276
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD1"
    },
    "202": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3151,
        3276
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "203": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3151,
        3276
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "205": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3151,
        3276
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA99"
    },
    "208": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        3151,
        3276
      ],
      "op": "JUMP",
      "path": "10"
    },
    "209": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3151,
        3276
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "210": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3151,
        3276
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F7"
    },
    "213": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        3151,
        3276
      ],
      "op": "JUMP",
      "path": "10"
    },
    "214": {
      "offset": [
        1027,
        1067
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "215": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF6"
    },
    "218": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE4"
    },
    "221": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "222": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "224": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAB4"
    },
    "227": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        1027,
        1067
      ],
      "op": "JUMP",
      "path": "10"
    },
    "228": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "229": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "231": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "233": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "234": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "236": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "237": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "DUP2",
      "path": "10"
    },
    "238": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "239": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "241": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "242": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "243": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "244": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "DUP2",
      "path": "10"
    },
    "245": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "JUMP",
      "path": "10"
    },
    "246": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "247": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "249": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "250": {
      "op": "SWAP1"
    },
    "251": {
      "op": "DUP2"
    },
    "252": {
      "op": "MSTORE"
    },
    "253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "255": {
      "op": "ADD"
    },
    "256": {
      "offset": [
        1027,
        1067
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "257": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "259": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "260": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "DUP1",
      "path": "10"
    },
    "261": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "262": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "SUB",
      "path": "10"
    },
    "263": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "264": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1027,
        1067
      ],
      "op": "RETURN",
      "path": "10"
    },
    "265": {
      "offset": [
        1073,
        1115
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "266": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12C"
    },
    "269": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x117"
    },
    "272": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "273": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "275": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA99"
    },
    "278": {
      "fn": "FillManager.addAllowedLP",
      "jump": "i",
      "offset": [
        1073,
        1115
      ],
      "op": "JUMP",
      "path": "10"
    },
    "279": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "280": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "282": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "284": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "285": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "287": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "288": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "DUP2",
      "path": "10"
    },
    "289": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "290": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "292": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "293": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "294": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "295": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "297": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "AND",
      "path": "10"
    },
    "298": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "DUP2",
      "path": "10"
    },
    "299": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "JUMP",
      "path": "10"
    },
    "300": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "301": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "303": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        1073,
        1115
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "ISZERO"
    },
    "306": {
      "op": "ISZERO"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "offset": [
        918,
        955
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "317": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "319": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "320": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14F"
    },
    "323": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "330": {
      "op": "SHL"
    },
    "331": {
      "op": "SUB"
    },
    "332": {
      "offset": [
        918,
        955
      ],
      "op": "AND",
      "path": "10"
    },
    "333": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "DUP2",
      "path": "10"
    },
    "334": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "JUMP",
      "path": "10"
    },
    "335": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "336": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "338": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        918,
        955
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "345": {
      "op": "SHL"
    },
    "346": {
      "op": "SUB"
    },
    "347": {
      "op": "SWAP1"
    },
    "348": {
      "op": "SWAP2"
    },
    "349": {
      "op": "AND"
    },
    "350": {
      "op": "DUP2"
    },
    "351": {
      "op": "MSTORE"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "354": {
      "op": "ADD"
    },
    "355": {
      "offset": [
        918,
        955
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "358": {
      "op": "JUMP"
    },
    "359": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "360": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "363": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37C"
    },
    "366": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "367": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "368": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "370": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "377": {
      "op": "SHL"
    },
    "378": {
      "op": "SUB"
    },
    "379": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "380": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "383": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "384": {
      "offset": [
        887,
        912
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "385": {
      "fn": "Ownable.owner",
      "offset": [
        887,
        912
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "387": {
      "fn": "Ownable.owner",
      "offset": [
        887,
        912
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "388": {
      "fn": "Ownable.owner",
      "offset": [
        887,
        912
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14F"
    },
    "391": {
      "fn": "Ownable.owner",
      "offset": [
        887,
        912
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "398": {
      "op": "SHL"
    },
    "399": {
      "op": "SUB"
    },
    "400": {
      "offset": [
        887,
        912
      ],
      "op": "AND",
      "path": "10"
    },
    "401": {
      "fn": "Ownable.owner",
      "offset": [
        887,
        912
      ],
      "op": "DUP2",
      "path": "10"
    },
    "402": {
      "fn": "Ownable.owner",
      "offset": [
        887,
        912
      ],
      "op": "JUMP",
      "path": "10"
    },
    "403": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3282,
        3412
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "404": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3282,
        3412
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC1"
    },
    "407": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3282,
        3412
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A1"
    },
    "410": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3282,
        3412
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "411": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3282,
        3412
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "413": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3282,
        3412
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA99"
    },
    "416": {
      "fn": "FillManager.removeAllowedLP",
      "jump": "i",
      "offset": [
        3282,
        3412
      ],
      "op": "JUMP",
      "path": "10"
    },
    "417": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3282,
        3412
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "418": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3282,
        3412
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B2"
    },
    "421": {
      "fn": "FillManager.removeAllowedLP",
      "jump": "i",
      "offset": [
        3282,
        3412
      ],
      "op": "JUMP",
      "path": "10"
    },
    "422": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2624
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "423": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2624
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF6"
    },
    "426": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2624
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B4"
    },
    "429": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2624
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "430": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2624
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "432": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2624
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xACD"
    },
    "435": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1286,
        2624
      ],
      "op": "JUMP",
      "path": "10"
    },
    "436": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2624
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "437": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2624
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x42D"
    },
    "440": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1286,
        2624
      ],
      "op": "JUMP",
      "path": "10"
    },
    "441": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "442": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "445": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C7"
    },
    "448": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "451": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA99"
    },
    "454": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "455": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A6"
    },
    "459": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "460": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "461": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 1,
      "value": "0x40"
    },
    "463": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "DUP1",
      "path": "8"
    },
    "464": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "465": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "467": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "DUP1",
      "path": "8"
    },
    "468": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "DUP3",
      "path": "8"
    },
    "469": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "ADD",
      "path": "8"
    },
    "470": {
      "op": "DUP7"
    },
    "471": {
      "op": "SWAP1"
    },
    "472": {
      "op": "MSTORE"
    },
    "473": {
      "op": "DUP2"
    },
    "474": {
      "op": "DUP4"
    },
    "475": {
      "op": "ADD"
    },
    "476": {
      "op": "DUP6"
    },
    "477": {
      "op": "SWAP1"
    },
    "478": {
      "op": "MSTORE"
    },
    "479": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "DUP3",
      "path": "8"
    },
    "480": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "481": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "DUP1",
      "path": "8"
    },
    "482": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "DUP4",
      "path": "8"
    },
    "483": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "SUB",
      "path": "8"
    },
    "484": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "DUP5",
      "path": "8"
    },
    "485": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "ADD",
      "path": "8"
    },
    "486": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "DUP2",
      "path": "8"
    },
    "487": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "490": {
      "op": "SWAP1"
    },
    "491": {
      "op": "SWAP3"
    },
    "492": {
      "op": "ADD"
    },
    "493": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "DUP4",
      "path": "8"
    },
    "494": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        814,
        851
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "495": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        804,
        852
      ],
      "op": "DUP2",
      "path": "8"
    },
    "496": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        804,
        852
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "497": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        804,
        852
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "498": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        804,
        852
      ],
      "op": "DUP2",
      "path": "8"
    },
    "499": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        804,
        852
      ],
      "op": "ADD",
      "path": "8"
    },
    "500": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        804,
        852
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "501": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        804,
        852
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "502": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        804,
        852
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "503": {
      "fn": "BeamerUtils.createFillHash",
      "offset": [
        804,
        852
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "506": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2896
      ],
      "op": "DUP7",
      "path": "10",
      "statement": 2
    },
    "507": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2896
      ],
      "op": "DUP2",
      "path": "10"
    },
    "508": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2896
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "509": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2883
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "511": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2896
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "512": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2896
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "513": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2896
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "514": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2896
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "515": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2896
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "516": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2896
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "517": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2896
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "518": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2908
      ],
      "op": "DUP2",
      "path": "10"
    },
    "519": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2908
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "520": {
      "branch": 32,
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2878,
        2908
      ],
      "op": "SUB",
      "path": "10"
    },
    "521": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24B"
    },
    "524": {
      "branch": 32,
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "525": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "527": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "528": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "532": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "534": {
      "op": "SHL"
    },
    "535": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "DUP2",
      "path": "10"
    },
    "536": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "539": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "541": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "DUP3",
      "path": "10"
    },
    "542": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "ADD",
      "path": "10"
    },
    "543": {
      "op": "MSTORE"
    },
    "544": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "548": {
      "op": "DUP3"
    },
    "549": {
      "op": "ADD"
    },
    "550": {
      "op": "MSTORE"
    },
    "551": {
      "op": "PUSH15",
      "value": "0x119A5B1B081A185CDA081D985B1A59"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "569": {
      "op": "SHL"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "572": {
      "op": "DUP3"
    },
    "573": {
      "op": "ADD"
    },
    "574": {
      "op": "MSTORE"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "577": {
      "op": "ADD"
    },
    "578": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "579": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "581": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "582": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "DUP1",
      "path": "10"
    },
    "583": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "584": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "SUB",
      "path": "10"
    },
    "585": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "586": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "10"
    },
    "587": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2870,
        2928
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "588": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        2952
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 3,
      "value": "0x2"
    },
    "590": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        2952
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "591": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        2952
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "593": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2985,
        2995
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "594": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "596": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "597": {
      "op": "PUSH4",
      "value": "0x37516831"
    },
    "602": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "604": {
      "op": "SHL"
    },
    "605": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "DUP2",
      "path": "10"
    },
    "606": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "613": {
      "op": "SHL"
    },
    "614": {
      "op": "SUB"
    },
    "615": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2985,
        2995
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "616": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2985,
        2995
      ],
      "op": "DUP3",
      "path": "10"
    },
    "617": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2985,
        2995
      ],
      "op": "AND",
      "path": "10"
    },
    "618": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "620": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "DUP3",
      "path": "10"
    },
    "621": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "ADD",
      "path": "10"
    },
    "622": {
      "op": "MSTORE"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "625": {
      "op": "DUP2"
    },
    "626": {
      "op": "ADD"
    },
    "627": {
      "op": "DUP6"
    },
    "628": {
      "op": "SWAP1"
    },
    "629": {
      "op": "MSTORE"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "632": {
      "op": "DUP2"
    },
    "633": {
      "op": "ADD"
    },
    "634": {
      "op": "DUP9"
    },
    "635": {
      "op": "SWAP1"
    },
    "636": {
      "op": "MSTORE"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "639": {
      "op": "DUP2"
    },
    "640": {
      "op": "ADD"
    },
    "641": {
      "op": "DUP5"
    },
    "642": {
      "op": "SWAP1"
    },
    "643": {
      "op": "MSTORE"
    },
    "644": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        2952
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "645": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        2952
      ],
      "op": "AND",
      "path": "10"
    },
    "646": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        2952
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "647": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        2971
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDD45A0C4"
    },
    "652": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        2971
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "655": {
      "op": "ADD"
    },
    "656": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "658": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "660": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "661": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "DUP1",
      "path": "10"
    },
    "662": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "DUP4",
      "path": "10"
    },
    "663": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "SUB",
      "path": "10"
    },
    "664": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "DUP2",
      "path": "10"
    },
    "665": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "667": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "DUP8",
      "path": "10"
    },
    "668": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "DUP1",
      "path": "10"
    },
    "669": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "670": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "671": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "DUP1",
      "path": "10"
    },
    "672": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "673": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A9"
    },
    "676": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "677": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "679": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "DUP1",
      "path": "10"
    },
    "680": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "REVERT",
      "path": "10"
    },
    "681": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "682": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "POP",
      "path": "10"
    },
    "683": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "GAS",
      "path": "10"
    },
    "684": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "CALL",
      "path": "10"
    },
    "685": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "686": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "DUP1",
      "path": "10"
    },
    "687": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "688": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2BD"
    },
    "691": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "692": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "693": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "695": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "DUP1",
      "path": "10"
    },
    "696": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "697": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "698": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "700": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "REVERT",
      "path": "10"
    },
    "701": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "702": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "POP",
      "path": "10"
    },
    "703": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "POP",
      "path": "10"
    },
    "704": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "POP",
      "path": "10"
    },
    "705": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2938,
        3077
      ],
      "op": "POP",
      "path": "10"
    },
    "706": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        3129,
        3137
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 4
    },
    "707": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        3121,
        3127
      ],
      "op": "DUP4",
      "path": "10"
    },
    "708": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        3108,
        3119
      ],
      "op": "DUP6",
      "path": "10"
    },
    "709": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        3092,
        3138
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xD708C5C6A823A3E0499D43D17CD8F42261FF3E464EBFEC0ED0FF56533999E00D"
    },
    "742": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        3092,
        3138
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "744": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        3092,
        3138
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "745": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        3092,
        3138
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "747": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        3092,
        3138
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "748": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        3092,
        3138
      ],
      "op": "DUP1",
      "path": "10"
    },
    "749": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        3092,
        3138
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "750": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        3092,
        3138
      ],
      "op": "SUB",
      "path": "10"
    },
    "751": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        3092,
        3138
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "752": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        3092,
        3138
      ],
      "op": "LOG4",
      "path": "10"
    },
    "753": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2784,
        3145
      ],
      "op": "POP",
      "path": "10"
    },
    "754": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "POP",
      "path": "10"
    },
    "755": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "POP",
      "path": "10"
    },
    "756": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "POP",
      "path": "10"
    },
    "757": {
      "fn": "FillManager.invalidateFillHash",
      "offset": [
        2630,
        3145
      ],
      "op": "POP",
      "path": "10"
    },
    "758": {
      "fn": "FillManager.invalidateFillHash",
      "jump": "o",
      "offset": [
        2630,
        3145
      ],
      "op": "JUMP",
      "path": "10"
    },
    "759": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3151,
        3276
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "760": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "762": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "769": {
      "op": "SHL"
    },
    "770": {
      "op": "SUB"
    },
    "771": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "772": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 5
    },
    "773": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "774": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x321"
    },
    "777": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "778": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "780": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "787": {
      "op": "SHL"
    },
    "788": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "789": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "790": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "792": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "793": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x242"
    },
    "796": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "797": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1B"
    },
    "800": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "801": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "808": {
      "op": "SHL"
    },
    "809": {
      "op": "SUB"
    },
    "810": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 6
    },
    "811": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "AND",
      "path": "10"
    },
    "812": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "814": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "DUP2",
      "path": "10"
    },
    "815": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "DUP2",
      "path": "10"
    },
    "816": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "817": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3225
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "819": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "821": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "822": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "DUP2",
      "path": "10"
    },
    "823": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "824": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "826": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "827": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "DUP3",
      "path": "10"
    },
    "828": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "829": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3232
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "830": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3239
      ],
      "op": "DUP1",
      "path": "10"
    },
    "831": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3239
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "832": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "834": {
      "op": "NOT"
    },
    "835": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3239
      ],
      "op": "AND",
      "path": "10"
    },
    "836": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3235,
        3239
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "838": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3239
      ],
      "op": "OR",
      "path": "10"
    },
    "839": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3239
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "840": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3215,
        3239
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "841": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3255,
        3269
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 7
    },
    "842": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3255,
        3269
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "843": {
      "op": "SWAP2"
    },
    "844": {
      "op": "DUP3"
    },
    "845": {
      "op": "MSTORE"
    },
    "846": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3255,
        3269
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xC852021E30B95510F55086D8CC9BC5D15D20F2CB411766A7DA04804F4AD2FBA2"
    },
    "879": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3255,
        3269
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "880": {
      "op": "ADD"
    },
    "881": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3255,
        3269
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "882": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3255,
        3269
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "884": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3255,
        3269
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "885": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3255,
        3269
      ],
      "op": "DUP1",
      "path": "10"
    },
    "886": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3255,
        3269
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "887": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3255,
        3269
      ],
      "op": "SUB",
      "path": "10"
    },
    "888": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3255,
        3269
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "889": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3255,
        3269
      ],
      "op": "LOG1",
      "path": "10"
    },
    "890": {
      "fn": "FillManager.addAllowedLP",
      "offset": [
        3151,
        3276
      ],
      "op": "POP",
      "path": "10"
    },
    "891": {
      "fn": "FillManager.addAllowedLP",
      "jump": "o",
      "offset": [
        3151,
        3276
      ],
      "op": "JUMP",
      "path": "10"
    },
    "892": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "893": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "895": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "902": {
      "op": "SHL"
    },
    "903": {
      "op": "SUB"
    },
    "904": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "905": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "906": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "907": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A6"
    },
    "910": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "911": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "913": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "920": {
      "op": "SHL"
    },
    "921": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "922": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "923": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "925": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "926": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x242"
    },
    "929": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "930": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1B"
    },
    "933": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "934": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "935": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x3B0"
    },
    "938": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "940": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x741"
    },
    "943": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "944": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "945": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "946": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3282,
        3412
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "947": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "949": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "956": {
      "op": "SHL"
    },
    "957": {
      "op": "SUB"
    },
    "958": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "959": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "960": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "961": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DC"
    },
    "964": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "965": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "967": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "968": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "972": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "974": {
      "op": "SHL"
    },
    "975": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "976": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "977": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "979": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "980": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x242"
    },
    "983": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "984": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1B"
    },
    "987": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "988": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "SUB"
    },
    "997": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 9
    },
    "998": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "AND",
      "path": "10"
    },
    "999": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1001": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1002": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1003": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1004": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3366
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1006": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1008": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1009": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1010": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1011": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1013": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1014": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1015": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1016": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3356,
        3373
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1017": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3349,
        3373
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1018": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3349,
        3373
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1021": {
      "op": "NOT"
    },
    "1022": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3349,
        3373
      ],
      "op": "AND",
      "path": "10"
    },
    "1023": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3349,
        3373
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1024": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3349,
        3373
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1025": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3389,
        3405
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 10
    },
    "1026": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3389,
        3405
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1027": {
      "op": "SWAP2"
    },
    "1028": {
      "op": "DUP3"
    },
    "1029": {
      "op": "MSTORE"
    },
    "1030": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3389,
        3405
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x1ABFC08C9D8E95DC2F77C443843422FE9EF89AAFB40A5814F65E9C4F557F1FAA"
    },
    "1063": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3389,
        3405
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1064": {
      "op": "ADD"
    },
    "1065": {
      "fn": "FillManager.removeAllowedLP",
      "offset": [
        3389,
        3405
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x371"
    },
    "1068": {
      "op": "JUMP"
    },
    "1069": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2624
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1070": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1526,
        1536
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 11
    },
    "1071": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1488,
        1495
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1073": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1074": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1075": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1076": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1525
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1078": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1080": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1081": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1083": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1084": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1085": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1086": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "1088": {
      "branch": 33,
      "fn": "FillManager.fillRequest",
      "offset": [
        1515,
        1537
      ],
      "op": "AND",
      "path": "10"
    },
    "1089": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x485"
    },
    "1092": {
      "branch": 33,
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1093": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1095": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1102": {
      "op": "SHL"
    },
    "1103": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1104": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1107": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1109": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1110": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "ADD",
      "path": "10"
    },
    "1111": {
      "op": "MSTORE"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1116": {
      "op": "DUP3"
    },
    "1117": {
      "op": "ADD"
    },
    "1118": {
      "op": "MSTORE"
    },
    "1119": {
      "op": "PUSH22",
      "value": "0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1147": {
      "op": "DUP3"
    },
    "1148": {
      "op": "ADD"
    },
    "1149": {
      "op": "MSTORE"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1152": {
      "op": "ADD"
    },
    "1153": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x242"
    },
    "1156": {
      "op": "JUMP"
    },
    "1157": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1507,
        1564
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1158": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 12,
      "value": "0x40"
    },
    "1160": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1161": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1162": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1164": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1165": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1166": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "ADD",
      "path": "8"
    },
    "1167": {
      "op": "DUP10"
    },
    "1168": {
      "op": "SWAP1"
    },
    "1169": {
      "op": "MSTORE"
    },
    "1170": {
      "op": "DUP2"
    },
    "1171": {
      "op": "DUP4"
    },
    "1172": {
      "op": "ADD"
    },
    "1173": {
      "op": "DUP9"
    },
    "1174": {
      "op": "SWAP1"
    },
    "1175": {
      "op": "MSTORE"
    },
    "1176": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1689,
        1702
      ],
      "op": "CHAINID",
      "path": "10"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1179": {
      "op": "DUP1"
    },
    "1180": {
      "op": "DUP5"
    },
    "1181": {
      "op": "ADD"
    },
    "1182": {
      "op": "SWAP2"
    },
    "1183": {
      "op": "SWAP1"
    },
    "1184": {
      "op": "SWAP2"
    },
    "1185": {
      "op": "MSTORE"
    },
    "1186": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1199": {
      "op": "NOT"
    },
    "1200": {
      "op": "DUP9"
    },
    "1201": {
      "op": "DUP3"
    },
    "1202": {
      "op": "SHL"
    },
    "1203": {
      "op": "DUP2"
    },
    "1204": {
      "op": "AND"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1207": {
      "op": "DUP6"
    },
    "1208": {
      "op": "ADD"
    },
    "1209": {
      "op": "MSTORE"
    },
    "1210": {
      "op": "SWAP1"
    },
    "1211": {
      "op": "DUP8"
    },
    "1212": {
      "op": "SWAP1"
    },
    "1213": {
      "op": "SHL"
    },
    "1214": {
      "op": "AND"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "1217": {
      "op": "DUP4"
    },
    "1218": {
      "op": "ADD"
    },
    "1219": {
      "op": "MSTORE"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1222": {
      "op": "DUP1"
    },
    "1223": {
      "op": "DUP4"
    },
    "1224": {
      "op": "ADD"
    },
    "1225": {
      "op": "DUP7"
    },
    "1226": {
      "op": "SWAP1"
    },
    "1227": {
      "op": "MSTORE"
    },
    "1228": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1229": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1230": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1231": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1232": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "SUB",
      "path": "8"
    },
    "1233": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1234": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1235": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "ADD",
      "path": "8"
    },
    "1236": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1237": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "1240": {
      "op": "SWAP1"
    },
    "1241": {
      "op": "SWAP3"
    },
    "1242": {
      "op": "ADD"
    },
    "1243": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1244": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1245": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        393,
        639
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1246": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        366,
        653
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1247": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        366,
        653
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1248": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        366,
        653
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1249": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        366,
        653
      ],
      "op": "ADD",
      "path": "8"
    },
    "1250": {
      "fn": "BeamerUtils.createRequestHash",
      "offset": [
        366,
        653
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1251": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1574,
        1593
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1253": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1574,
        1593
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1254": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1848,
        1849
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 13,
      "value": "0x0"
    },
    "1256": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1257": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1258": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1259": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1823
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1261": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1263": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1264": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1266": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1267": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1268": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1836
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1269": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1574,
        1799
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1270": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1574,
        1799
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1271": {
      "op": "POP"
    },
    "1272": {
      "branch": 34,
      "fn": "FillManager.fillRequest",
      "offset": [
        1818,
        1850
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1273": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x535"
    },
    "1276": {
      "branch": 34,
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1277": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1279": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1286": {
      "op": "SHL"
    },
    "1287": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1288": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1291": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1293": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1294": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "ADD",
      "path": "10"
    },
    "1295": {
      "op": "MSTORE"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1300": {
      "op": "DUP3"
    },
    "1301": {
      "op": "ADD"
    },
    "1302": {
      "op": "MSTORE"
    },
    "1303": {
      "op": "PUSH14",
      "value": "0x105B1C9958591E48199A5B1B1959"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1320": {
      "op": "SHL"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1323": {
      "op": "DUP3"
    },
    "1324": {
      "op": "ADD"
    },
    "1325": {
      "op": "MSTORE"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1328": {
      "op": "ADD"
    },
    "1329": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x242"
    },
    "1332": {
      "op": "JUMP"
    },
    "1333": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1810,
        1869
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1334": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1902,
        1920
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1335": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1931,
        1996
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 14,
      "value": "0x54B"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1344": {
      "op": "SHL"
    },
    "1345": {
      "op": "SUB"
    },
    "1346": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1931,
        1953
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1347": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1931,
        1953
      ],
      "op": "AND",
      "path": "10"
    },
    "1348": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1954,
        1964
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1349": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1966,
        1987
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1350": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1989,
        1995
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1351": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1931,
        1953
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x791"
    },
    "1354": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        1931,
        1996
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1355": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1931,
        1996
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1356": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1358": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1359": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1361": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2115,
        2125
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1362": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1364": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1365": {
      "op": "PUSH4",
      "value": "0x7E5465D7"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1372": {
      "op": "SHL"
    },
    "1373": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1374": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1381": {
      "op": "SHL"
    },
    "1382": {
      "op": "SUB"
    },
    "1383": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2115,
        2125
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1384": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2115,
        2125
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1385": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2115,
        2125
      ],
      "op": "AND",
      "path": "10"
    },
    "1386": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1388": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1389": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "ADD",
      "path": "10"
    },
    "1390": {
      "op": "MSTORE"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1393": {
      "op": "DUP2"
    },
    "1394": {
      "op": "ADD"
    },
    "1395": {
      "op": "DUP11"
    },
    "1396": {
      "op": "SWAP1"
    },
    "1397": {
      "op": "MSTORE"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1400": {
      "op": "DUP2"
    },
    "1401": {
      "op": "ADD"
    },
    "1402": {
      "op": "DUP12"
    },
    "1403": {
      "op": "SWAP1"
    },
    "1404": {
      "op": "MSTORE"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1407": {
      "op": "DUP2"
    },
    "1408": {
      "op": "ADD"
    },
    "1409": {
      "op": "DUP6"
    },
    "1410": {
      "op": "SWAP1"
    },
    "1411": {
      "op": "MSTORE"
    },
    "1412": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2230,
        2240
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1415": {
      "op": "DUP3"
    },
    "1416": {
      "op": "ADD"
    },
    "1417": {
      "op": "MSTORE"
    },
    "1418": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2007,
        2055
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1420": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2007,
        2055
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1421": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1422": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1423": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1424": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "AND",
      "path": "10"
    },
    "1425": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2072
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1426": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2097
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7E5465D7"
    },
    "1431": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2097
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1434": {
      "op": "ADD"
    },
    "1435": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1437": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1438": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1439": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1440": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1441": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "SUB",
      "path": "10"
    },
    "1442": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1443": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1445": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1446": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "GAS",
      "path": "10"
    },
    "1447": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "CALL",
      "path": "10"
    },
    "1448": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1449": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1450": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1451": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5B8"
    },
    "1454": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1455": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1456": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1458": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1459": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1460": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1461": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1463": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1464": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1465": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "POP",
      "path": "10"
    },
    "1466": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "POP",
      "path": "10"
    },
    "1467": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "POP",
      "path": "10"
    },
    "1468": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "POP",
      "path": "10"
    },
    "1469": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1471": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1472": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1473": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1475": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "NOT",
      "path": "10"
    },
    "1476": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1478": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1479": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "ADD",
      "path": "10"
    },
    "1480": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "AND",
      "path": "10"
    },
    "1481": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1482": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "ADD",
      "path": "10"
    },
    "1483": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1484": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1486": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1487": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "POP",
      "path": "10"
    },
    "1488": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1489": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "ADD",
      "path": "10"
    },
    "1490": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1491": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5DC"
    },
    "1494": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1495": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1496": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB50"
    },
    "1499": {
      "fn": "FillManager.fillRequest",
      "jump": "i",
      "offset": [
        2058,
        2254
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1500": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2058,
        2254
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1501": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2272,
        2291
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 15
    },
    "1502": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2272,
        2291
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1503": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2007,
        2254
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1504": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2007,
        2254
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1505": {
      "op": "POP"
    },
    "1506": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2272,
        2291
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1508": {
      "branch": 35,
      "fn": "FillManager.fillRequest",
      "offset": [
        2272,
        2296
      ],
      "op": "SUB",
      "path": "10"
    },
    "1509": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2264,
        2329
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x630"
    },
    "1512": {
      "branch": 35,
      "fn": "FillManager.fillRequest",
      "offset": [
        2264,
        2329
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1513": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2264,
        2329
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1515": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2264,
        2329
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2264,
        2329
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1524": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2264,
        2329
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1527": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2264,
        2329
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1529": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2264,
        2329
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1530": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2264,
        2329
      ],
      "op": "ADD",
      "path": "10"
    },
    "1531": {
      "op": "MSTORE"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1536": {
      "op": "DUP3"
    },
    "1537": {
      "op": "ADD"
    },
    "1538": {
      "op": "MSTORE"
    },
    "1539": {
      "op": "PUSH32",
      "value": "0x5375626D697474696E672070726F6F662064617461206661696C656400000000"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1574": {
      "op": "DUP3"
    },
    "1575": {
      "op": "ADD"
    },
    "1576": {
      "op": "MSTORE"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2264,
        2329
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x242"
    },
    "1583": {
      "op": "JUMP"
    },
    "1584": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2264,
        2329
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1585": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2361,
        2382
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 16,
      "value": "0x20"
    },
    "1587": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2361,
        2382
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1588": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2361,
        2382
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1589": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2361,
        2382
      ],
      "op": "ADD",
      "path": "10"
    },
    "1590": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2361,
        2382
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1591": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1593": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2358
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1594": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2358
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1595": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2358
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1596": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2345
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1598": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2358
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1599": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2358
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1600": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1602": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2358
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1603": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2358
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1604": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2358
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1605": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2358
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1606": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2382
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1607": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2382
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1608": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2382
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1609": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2340,
        2382
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1610": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2448,
        2467
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 17
    },
    "1611": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2448,
        2467
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1612": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1613": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1614": {
      "op": "SWAP1"
    },
    "1615": {
      "op": "DUP2"
    },
    "1616": {
      "op": "MSTORE"
    },
    "1617": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2540,
        2550
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1618": {
      "op": "SWAP3"
    },
    "1619": {
      "op": "DUP2"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "op": "SWAP3"
    },
    "1622": {
      "op": "SWAP1"
    },
    "1623": {
      "op": "SWAP3"
    },
    "1624": {
      "op": "MSTORE"
    },
    "1625": {
      "op": "DUP2"
    },
    "1626": {
      "op": "ADD"
    },
    "1627": {
      "op": "DUP7"
    },
    "1628": {
      "op": "SWAP1"
    },
    "1629": {
      "op": "MSTORE"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1636": {
      "op": "SHL"
    },
    "1637": {
      "op": "SUB"
    },
    "1638": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "DUP9",
      "path": "10"
    },
    "1639": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "AND",
      "path": "10"
    },
    "1640": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1641": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2481,
        2494
      ],
      "op": "DUP10",
      "path": "10"
    },
    "1642": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2481,
        2494
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1643": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2425,
        2434
      ],
      "op": "DUP12",
      "path": "10"
    },
    "1644": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2425,
        2434
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1645": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x36973204944F64CC25B32E5318BD0611F917FEDCD9CB77A11651723DB2C6323"
    },
    "1678": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1681": {
      "op": "ADD"
    },
    "1682": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1684": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1685": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1686": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1687": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "SUB",
      "path": "10"
    },
    "1688": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1689": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2398,
        2580
      ],
      "op": "LOG4",
      "path": "10"
    },
    "1690": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2598,
        2617
      ],
      "op": "MLOAD",
      "path": "10",
      "statement": 18
    },
    "1691": {
      "fn": "FillManager.fillRequest",
      "offset": [
        2598,
        2617
      ],
      "op": "SWAP9",
      "path": "10"
    },
    "1692": {
      "fn": "FillManager.fillRequest",
      "offset": [
        1286,
        2624
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "1693": {
      "op": "POP"
    },
    "1694": {
      "op": "POP"
    },
    "1695": {
      "op": "POP"
    },
    "1696": {
      "op": "POP"
    },
    "1697": {
      "op": "POP"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "op": "POP"
    },
    "1701": {
      "fn": "FillManager.fillRequest",
      "jump": "o",
      "offset": [
        1286,
        2624
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1702": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1703": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1705": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1712": {
      "op": "SHL"
    },
    "1713": {
      "op": "SUB"
    },
    "1714": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1715": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1716": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1717": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D0"
    },
    "1720": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1721": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1723": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1724": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1730": {
      "op": "SHL"
    },
    "1731": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1732": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1733": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1735": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1736": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x242"
    },
    "1739": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1740": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1B"
    },
    "1743": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1744": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1751": {
      "op": "SHL"
    },
    "1752": {
      "op": "SUB"
    },
    "1753": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 19
    },
    "1754": {
      "branch": 39,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1755": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x735"
    },
    "1758": {
      "branch": 39,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1759": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1761": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1762": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1768": {
      "op": "SHL"
    },
    "1769": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1773": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1776": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1777": {
      "op": "MSTORE"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1782": {
      "op": "DUP3"
    },
    "1783": {
      "op": "ADD"
    },
    "1784": {
      "op": "MSTORE"
    },
    "1785": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1820": {
      "op": "DUP3"
    },
    "1821": {
      "op": "ADD"
    },
    "1822": {
      "op": "MSTORE"
    },
    "1823": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1832": {
      "op": "SHL"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1835": {
      "op": "DUP3"
    },
    "1836": {
      "op": "ADD"
    },
    "1837": {
      "op": "MSTORE"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1840": {
      "op": "ADD"
    },
    "1841": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x242"
    },
    "1844": {
      "op": "JUMP"
    },
    "1845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1846": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x73E"
    },
    "1849": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1850": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x741"
    },
    "1853": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1854": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1855": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1856": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1857": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1858": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1860": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1861": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1868": {
      "op": "SHL"
    },
    "1869": {
      "op": "SUB"
    },
    "1870": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 21
    },
    "1871": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1872": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1879": {
      "op": "SHL"
    },
    "1880": {
      "op": "SUB"
    },
    "1881": {
      "op": "NOT"
    },
    "1882": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1883": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1884": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1885": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "1886": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1887": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1888": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x40"
    },
    "1890": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1891": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1892": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1893": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1894": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "1895": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1896": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1897": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1898": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1931": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1932": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1933": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1934": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1935": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1936": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1937": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1938": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 23,
      "value": "0x40"
    },
    "1940": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1941": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1948": {
      "op": "SHL"
    },
    "1949": {
      "op": "SUB"
    },
    "1950": {
      "op": "DUP6"
    },
    "1951": {
      "op": "DUP2"
    },
    "1952": {
      "op": "AND"
    },
    "1953": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "1955": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1956": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "4"
    },
    "1957": {
      "op": "MSTORE"
    },
    "1958": {
      "op": "DUP5"
    },
    "1959": {
      "op": "AND"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1962": {
      "op": "DUP3"
    },
    "1963": {
      "op": "ADD"
    },
    "1964": {
      "op": "MSTORE"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1967": {
      "op": "DUP1"
    },
    "1968": {
      "op": "DUP3"
    },
    "1969": {
      "op": "ADD"
    },
    "1970": {
      "op": "DUP5"
    },
    "1971": {
      "op": "SWAP1"
    },
    "1972": {
      "op": "MSTORE"
    },
    "1973": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1974": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1975": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1976": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1977": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SUB",
      "path": "4"
    },
    "1978": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1979": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1980": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "4"
    },
    "1981": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1982": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1985": {
      "op": "SWAP1"
    },
    "1986": {
      "op": "SWAP2"
    },
    "1987": {
      "op": "ADD"
    },
    "1988": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1989": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1990": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1991": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1993": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1994": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "4"
    },
    "1995": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1996": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2003": {
      "op": "SHL"
    },
    "2004": {
      "op": "SUB"
    },
    "2005": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "4"
    },
    "2006": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2013": {
      "op": "SHL"
    },
    "2014": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "OR",
      "path": "4"
    },
    "2015": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2016": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2017": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7EB"
    },
    "2020": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2021": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2022": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2023": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1069
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7F1"
    },
    "2026": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2027": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2028": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "4"
    },
    "2029": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "4"
    },
    "2030": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "4"
    },
    "2031": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "4"
    },
    "2032": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        912,
        1153
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2033": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2034": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2036": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x846"
    },
    "2039": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2040": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2042": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2043": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2044": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2046": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "4"
    },
    "2047": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2049": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2050": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2051": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2053": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2054": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2055": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2057": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "4"
    },
    "2058": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "2091": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2092": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2093": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "4"
    },
    "2094": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2101": {
      "op": "SHL"
    },
    "2102": {
      "op": "SUB"
    },
    "2103": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "4"
    },
    "2104": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8C8"
    },
    "2107": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2108": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2109": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2110": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2111": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "2116": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "4"
    },
    "2117": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2118": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2119": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2120": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2121": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2122": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2123": {
      "op": "POP"
    },
    "2124": {
      "branch": 40,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2125": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8C3"
    },
    "2128": {
      "branch": 40,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2129": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 24
    },
    "2130": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2131": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2133": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "4"
    },
    "2134": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2135": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2136": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2137": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "4"
    },
    "2138": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2139": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x864"
    },
    "2142": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2143": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2144": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBAD"
    },
    "2147": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2148": {
      "branch": 41,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2149": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8C3"
    },
    "2152": {
      "branch": 41,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2153": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2155": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2156": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2162": {
      "op": "SHL"
    },
    "2163": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2164": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2167": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2169": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2170": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "4"
    },
    "2171": {
      "op": "MSTORE"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2176": {
      "op": "DUP3"
    },
    "2177": {
      "op": "ADD"
    },
    "2178": {
      "op": "MSTORE"
    },
    "2179": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2214": {
      "op": "DUP3"
    },
    "2215": {
      "op": "ADD"
    },
    "2216": {
      "op": "MSTORE"
    },
    "2217": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "2230": {
      "op": "SHL"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2233": {
      "op": "DUP3"
    },
    "2234": {
      "op": "ADD"
    },
    "2235": {
      "op": "MSTORE"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2238": {
      "op": "ADD"
    },
    "2239": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x242"
    },
    "2242": {
      "op": "JUMP"
    },
    "2243": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2244": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3277,
        3913
      ],
      "op": "POP",
      "path": "4"
    },
    "2245": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "POP",
      "path": "4"
    },
    "2246": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "POP",
      "path": "4"
    },
    "2247": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "o",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2248": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2249": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2251": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 25,
      "value": "0x8D7"
    },
    "2254": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2255": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2256": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2258": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2259": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E1"
    },
    "2262": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2263": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2264": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2265": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "POP",
      "path": "5"
    },
    "2266": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2267": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2268": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2269": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "5"
    },
    "2270": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "5"
    },
    "2271": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "5"
    },
    "2272": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2273": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2276": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 26
    },
    "2277": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "2278": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "5"
    },
    "2279": {
      "branch": 36,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x942"
    },
    "2283": {
      "branch": 36,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2284": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2286": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2287": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2293": {
      "op": "SHL"
    },
    "2294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2295": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2300": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2301": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "5"
    },
    "2302": {
      "op": "MSTORE"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2307": {
      "op": "DUP3"
    },
    "2308": {
      "op": "ADD"
    },
    "2309": {
      "op": "MSTORE"
    },
    "2310": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2345": {
      "op": "DUP3"
    },
    "2346": {
      "op": "ADD"
    },
    "2347": {
      "op": "MSTORE"
    },
    "2348": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2357": {
      "op": "SHL"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2360": {
      "op": "DUP3"
    },
    "2361": {
      "op": "ADD"
    },
    "2362": {
      "op": "MSTORE"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2365": {
      "op": "ADD"
    },
    "2366": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x242"
    },
    "2369": {
      "op": "JUMP"
    },
    "2370": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2377": {
      "op": "SHL"
    },
    "2378": {
      "op": "SUB"
    },
    "2379": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 27
    },
    "2380": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "5"
    },
    "2381": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "2382": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 28,
      "value": "0x999"
    },
    "2385": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2386": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2388": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2389": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2395": {
      "op": "SHL"
    },
    "2396": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2397": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2400": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2402": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2403": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "5"
    },
    "2404": {
      "op": "MSTORE"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2409": {
      "op": "DUP3"
    },
    "2410": {
      "op": "ADD"
    },
    "2411": {
      "op": "MSTORE"
    },
    "2412": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2447": {
      "op": "DUP3"
    },
    "2448": {
      "op": "ADD"
    },
    "2449": {
      "op": "MSTORE"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2452": {
      "op": "ADD"
    },
    "2453": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x242"
    },
    "2456": {
      "op": "JUMP"
    },
    "2457": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2458": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2460": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2461": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2468": {
      "op": "SHL"
    },
    "2469": {
      "op": "SUB"
    },
    "2470": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "5"
    },
    "2471": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2472": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2473": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2475": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2476": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9B5"
    },
    "2479": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2480": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2481": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBFB"
    },
    "2484": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2485": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2486": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2490": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2491": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2492": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2493": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "5"
    },
    "2494": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2495": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2496": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2497": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "5"
    },
    "2498": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "5"
    },
    "2499": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2500": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2501": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2502": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2503": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2504": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2505": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2507": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "5"
    },
    "2509": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9F2"
    },
    "2512": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2513": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2515": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2516": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2517": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2518": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "5"
    },
    "2521": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "2523": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "5"
    },
    "2525": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "5"
    },
    "2526": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2527": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "5"
    },
    "2528": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2530": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2531": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2532": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2533": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2534": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2535": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2537": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2539": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2540": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "5"
    },
    "2541": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9F7"
    },
    "2545": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2546": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2547": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2549": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2550": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2551": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2552": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2553": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2554": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2555": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2556": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "5"
    },
    "2557": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 29,
      "value": "0xA07"
    },
    "2560": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2561": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2562": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2563": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA12"
    },
    "2566": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2567": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2568": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "2569": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "2570": {
      "op": "POP"
    },
    "2571": {
      "op": "POP"
    },
    "2572": {
      "op": "POP"
    },
    "2573": {
      "op": "POP"
    },
    "2574": {
      "op": "POP"
    },
    "2575": {
      "op": "POP"
    },
    "2576": {
      "op": "POP"
    },
    "2577": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2578": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2579": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2581": {
      "branch": 37,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2582": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2583": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA21"
    },
    "2586": {
      "branch": 37,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2587": {
      "op": "POP"
    },
    "2588": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 30
    },
    "2589": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8DA"
    },
    "2592": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2593": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2594": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2595": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2596": {
      "branch": 38,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2597": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA31"
    },
    "2600": {
      "branch": 38,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2601": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2602": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2603": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2604": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2605": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2607": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "5"
    },
    "2608": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2609": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2610": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 31
    },
    "2611": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2613": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2614": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2620": {
      "op": "SHL"
    },
    "2621": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2622": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2623": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2625": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "5"
    },
    "2626": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x242"
    },
    "2629": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2630": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2631": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC17"
    },
    "2634": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2635": {
      "op": "JUMPDEST"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2638": {
      "op": "DUP1"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2641": {
      "op": "DUP1"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2644": {
      "op": "DUP6"
    },
    "2645": {
      "op": "DUP8"
    },
    "2646": {
      "op": "SUB"
    },
    "2647": {
      "op": "SLT"
    },
    "2648": {
      "op": "ISZERO"
    },
    "2649": {
      "op": "PUSH2",
      "value": "0xA61"
    },
    "2652": {
      "op": "JUMPI"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2655": {
      "op": "DUP1"
    },
    "2656": {
      "op": "REVERT"
    },
    "2657": {
      "op": "JUMPDEST"
    },
    "2658": {
      "op": "POP"
    },
    "2659": {
      "op": "POP"
    },
    "2660": {
      "op": "DUP3"
    },
    "2661": {
      "op": "CALLDATALOAD"
    },
    "2662": {
      "op": "SWAP5"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2665": {
      "op": "DUP5"
    },
    "2666": {
      "op": "ADD"
    },
    "2667": {
      "op": "CALLDATALOAD"
    },
    "2668": {
      "op": "SWAP5"
    },
    "2669": {
      "op": "POP"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2672": {
      "op": "DUP5"
    },
    "2673": {
      "op": "ADD"
    },
    "2674": {
      "op": "CALLDATALOAD"
    },
    "2675": {
      "op": "SWAP4"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2678": {
      "op": "ADD"
    },
    "2679": {
      "op": "CALLDATALOAD"
    },
    "2680": {
      "op": "SWAP3"
    },
    "2681": {
      "op": "POP"
    },
    "2682": {
      "op": "SWAP1"
    },
    "2683": {
      "op": "POP"
    },
    "2684": {
      "jump": "o",
      "op": "JUMP"
    },
    "2685": {
      "op": "JUMPDEST"
    },
    "2686": {
      "op": "DUP1"
    },
    "2687": {
      "op": "CALLDATALOAD"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2694": {
      "op": "SHL"
    },
    "2695": {
      "op": "SUB"
    },
    "2696": {
      "op": "DUP2"
    },
    "2697": {
      "op": "AND"
    },
    "2698": {
      "op": "DUP2"
    },
    "2699": {
      "op": "EQ"
    },
    "2700": {
      "op": "PUSH2",
      "value": "0xA94"
    },
    "2703": {
      "op": "JUMPI"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2706": {
      "op": "DUP1"
    },
    "2707": {
      "op": "REVERT"
    },
    "2708": {
      "op": "JUMPDEST"
    },
    "2709": {
      "op": "SWAP2"
    },
    "2710": {
      "op": "SWAP1"
    },
    "2711": {
      "op": "POP"
    },
    "2712": {
      "jump": "o",
      "op": "JUMP"
    },
    "2713": {
      "op": "JUMPDEST"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2718": {
      "op": "DUP3"
    },
    "2719": {
      "op": "DUP5"
    },
    "2720": {
      "op": "SUB"
    },
    "2721": {
      "op": "SLT"
    },
    "2722": {
      "op": "ISZERO"
    },
    "2723": {
      "op": "PUSH2",
      "value": "0xAAB"
    },
    "2726": {
      "op": "JUMPI"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2729": {
      "op": "DUP1"
    },
    "2730": {
      "op": "REVERT"
    },
    "2731": {
      "op": "JUMPDEST"
    },
    "2732": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2735": {
      "op": "DUP3"
    },
    "2736": {
      "op": "PUSH2",
      "value": "0xA7D"
    },
    "2739": {
      "jump": "i",
      "op": "JUMP"
    },
    "2740": {
      "op": "JUMPDEST"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2745": {
      "op": "DUP3"
    },
    "2746": {
      "op": "DUP5"
    },
    "2747": {
      "op": "SUB"
    },
    "2748": {
      "op": "SLT"
    },
    "2749": {
      "op": "ISZERO"
    },
    "2750": {
      "op": "PUSH2",
      "value": "0xAC6"
    },
    "2753": {
      "op": "JUMPI"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2756": {
      "op": "DUP1"
    },
    "2757": {
      "op": "REVERT"
    },
    "2758": {
      "op": "JUMPDEST"
    },
    "2759": {
      "op": "POP"
    },
    "2760": {
      "op": "CALLDATALOAD"
    },
    "2761": {
      "op": "SWAP2"
    },
    "2762": {
      "op": "SWAP1"
    },
    "2763": {
      "op": "POP"
    },
    "2764": {
      "jump": "o",
      "op": "JUMP"
    },
    "2765": {
      "op": "JUMPDEST"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2768": {
      "op": "DUP1"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2771": {
      "op": "DUP1"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2776": {
      "op": "DUP7"
    },
    "2777": {
      "op": "DUP9"
    },
    "2778": {
      "op": "SUB"
    },
    "2779": {
      "op": "SLT"
    },
    "2780": {
      "op": "ISZERO"
    },
    "2781": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "2784": {
      "op": "JUMPI"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2787": {
      "op": "DUP1"
    },
    "2788": {
      "op": "REVERT"
    },
    "2789": {
      "op": "JUMPDEST"
    },
    "2790": {
      "op": "DUP6"
    },
    "2791": {
      "op": "CALLDATALOAD"
    },
    "2792": {
      "op": "SWAP5"
    },
    "2793": {
      "op": "POP"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2796": {
      "op": "DUP7"
    },
    "2797": {
      "op": "ADD"
    },
    "2798": {
      "op": "CALLDATALOAD"
    },
    "2799": {
      "op": "SWAP4"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "op": "PUSH2",
      "value": "0xAFC"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2806": {
      "op": "DUP8"
    },
    "2807": {
      "op": "ADD"
    },
    "2808": {
      "op": "PUSH2",
      "value": "0xA7D"
    },
    "2811": {
      "jump": "i",
      "op": "JUMP"
    },
    "2812": {
      "op": "JUMPDEST"
    },
    "2813": {
      "op": "SWAP3"
    },
    "2814": {
      "op": "POP"
    },
    "2815": {
      "op": "PUSH2",
      "value": "0xB0A"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2820": {
      "op": "DUP8"
    },
    "2821": {
      "op": "ADD"
    },
    "2822": {
      "op": "PUSH2",
      "value": "0xA7D"
    },
    "2825": {
      "jump": "i",
      "op": "JUMP"
    },
    "2826": {
      "op": "JUMPDEST"
    },
    "2827": {
      "op": "SWAP5"
    },
    "2828": {
      "op": "SWAP8"
    },
    "2829": {
      "op": "SWAP4"
    },
    "2830": {
      "op": "SWAP7"
    },
    "2831": {
      "op": "POP"
    },
    "2832": {
      "op": "SWAP2"
    },
    "2833": {
      "op": "SWAP5"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2836": {
      "op": "ADD"
    },
    "2837": {
      "op": "CALLDATALOAD"
    },
    "2838": {
      "op": "SWAP3"
    },
    "2839": {
      "op": "SWAP2"
    },
    "2840": {
      "op": "POP"
    },
    "2841": {
      "op": "POP"
    },
    "2842": {
      "jump": "o",
      "op": "JUMP"
    },
    "2843": {
      "op": "JUMPDEST"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2846": {
      "op": "DUP1"
    },
    "2847": {
      "op": "DUP3"
    },
    "2848": {
      "op": "MSTORE"
    },
    "2849": {
      "op": "DUP2"
    },
    "2850": {
      "op": "DUP2"
    },
    "2851": {
      "op": "ADD"
    },
    "2852": {
      "op": "MSTORE"
    },
    "2853": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2888": {
      "op": "DUP3"
    },
    "2889": {
      "op": "ADD"
    },
    "2890": {
      "op": "MSTORE"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2893": {
      "op": "ADD"
    },
    "2894": {
      "op": "SWAP1"
    },
    "2895": {
      "jump": "o",
      "op": "JUMP"
    },
    "2896": {
      "op": "JUMPDEST"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2901": {
      "op": "DUP3"
    },
    "2902": {
      "op": "DUP5"
    },
    "2903": {
      "op": "SUB"
    },
    "2904": {
      "op": "SLT"
    },
    "2905": {
      "op": "ISZERO"
    },
    "2906": {
      "op": "PUSH2",
      "value": "0xB62"
    },
    "2909": {
      "op": "JUMPI"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2912": {
      "op": "DUP1"
    },
    "2913": {
      "op": "REVERT"
    },
    "2914": {
      "op": "JUMPDEST"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2917": {
      "op": "MLOAD"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2920": {
      "op": "DUP2"
    },
    "2921": {
      "op": "ADD"
    },
    "2922": {
      "op": "DUP2"
    },
    "2923": {
      "op": "DUP2"
    },
    "2924": {
      "op": "LT"
    },
    "2925": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2934": {
      "op": "DUP3"
    },
    "2935": {
      "op": "GT"
    },
    "2936": {
      "op": "OR"
    },
    "2937": {
      "op": "ISZERO"
    },
    "2938": {
      "op": "PUSH2",
      "value": "0xB93"
    },
    "2941": {
      "op": "JUMPI"
    },
    "2942": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2949": {
      "op": "SHL"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2952": {
      "op": "MSTORE"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2957": {
      "op": "MSTORE"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2962": {
      "op": "REVERT"
    },
    "2963": {
      "op": "JUMPDEST"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2966": {
      "op": "MSTORE"
    },
    "2967": {
      "op": "DUP3"
    },
    "2968": {
      "op": "MLOAD"
    },
    "2969": {
      "op": "DUP2"
    },
    "2970": {
      "op": "MSTORE"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2973": {
      "op": "SWAP3"
    },
    "2974": {
      "op": "DUP4"
    },
    "2975": {
      "op": "ADD"
    },
    "2976": {
      "op": "MLOAD"
    },
    "2977": {
      "op": "SWAP3"
    },
    "2978": {
      "op": "DUP2"
    },
    "2979": {
      "op": "ADD"
    },
    "2980": {
      "op": "SWAP3"
    },
    "2981": {
      "op": "SWAP1"
    },
    "2982": {
      "op": "SWAP3"
    },
    "2983": {
      "op": "MSTORE"
    },
    "2984": {
      "op": "POP"
    },
    "2985": {
      "op": "SWAP2"
    },
    "2986": {
      "op": "SWAP1"
    },
    "2987": {
      "op": "POP"
    },
    "2988": {
      "jump": "o",
      "op": "JUMP"
    },
    "2989": {
      "op": "JUMPDEST"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2994": {
      "op": "DUP3"
    },
    "2995": {
      "op": "DUP5"
    },
    "2996": {
      "op": "SUB"
    },
    "2997": {
      "op": "SLT"
    },
    "2998": {
      "op": "ISZERO"
    },
    "2999": {
      "op": "PUSH2",
      "value": "0xBBF"
    },
    "3002": {
      "op": "JUMPI"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3005": {
      "op": "DUP1"
    },
    "3006": {
      "op": "REVERT"
    },
    "3007": {
      "op": "JUMPDEST"
    },
    "3008": {
      "op": "DUP2"
    },
    "3009": {
      "op": "MLOAD"
    },
    "3010": {
      "op": "DUP1"
    },
    "3011": {
      "op": "ISZERO"
    },
    "3012": {
      "op": "ISZERO"
    },
    "3013": {
      "op": "DUP2"
    },
    "3014": {
      "op": "EQ"
    },
    "3015": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "3018": {
      "op": "JUMPI"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3021": {
      "op": "DUP1"
    },
    "3022": {
      "op": "REVERT"
    },
    "3023": {
      "op": "JUMPDEST"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3026": {
      "op": "JUMPDEST"
    },
    "3027": {
      "op": "DUP4"
    },
    "3028": {
      "op": "DUP2"
    },
    "3029": {
      "op": "LT"
    },
    "3030": {
      "op": "ISZERO"
    },
    "3031": {
      "op": "PUSH2",
      "value": "0xBEA"
    },
    "3034": {
      "op": "JUMPI"
    },
    "3035": {
      "op": "DUP2"
    },
    "3036": {
      "op": "DUP2"
    },
    "3037": {
      "op": "ADD"
    },
    "3038": {
      "op": "MLOAD"
    },
    "3039": {
      "op": "DUP4"
    },
    "3040": {
      "op": "DUP3"
    },
    "3041": {
      "op": "ADD"
    },
    "3042": {
      "op": "MSTORE"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3045": {
      "op": "ADD"
    },
    "3046": {
      "op": "PUSH2",
      "value": "0xBD2"
    },
    "3049": {
      "op": "JUMP"
    },
    "3050": {
      "op": "JUMPDEST"
    },
    "3051": {
      "op": "DUP4"
    },
    "3052": {
      "op": "DUP2"
    },
    "3053": {
      "op": "GT"
    },
    "3054": {
      "op": "ISZERO"
    },
    "3055": {
      "op": "PUSH2",
      "value": "0x7EB"
    },
    "3058": {
      "op": "JUMPI"
    },
    "3059": {
      "op": "POP"
    },
    "3060": {
      "op": "POP"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3063": {
      "op": "SWAP2"
    },
    "3064": {
      "op": "ADD"
    },
    "3065": {
      "op": "MSTORE"
    },
    "3066": {
      "jump": "o",
      "op": "JUMP"
    },
    "3067": {
      "op": "JUMPDEST"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3070": {
      "op": "DUP3"
    },
    "3071": {
      "op": "MLOAD"
    },
    "3072": {
      "op": "PUSH2",
      "value": "0xC0D"
    },
    "3075": {
      "op": "DUP2"
    },
    "3076": {
      "op": "DUP5"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3079": {
      "op": "DUP8"
    },
    "3080": {
      "op": "ADD"
    },
    "3081": {
      "op": "PUSH2",
      "value": "0xBCF"
    },
    "3084": {
      "jump": "i",
      "op": "JUMP"
    },
    "3085": {
      "op": "JUMPDEST"
    },
    "3086": {
      "op": "SWAP2"
    },
    "3087": {
      "op": "SWAP1"
    },
    "3088": {
      "op": "SWAP2"
    },
    "3089": {
      "op": "ADD"
    },
    "3090": {
      "op": "SWAP3"
    },
    "3091": {
      "op": "SWAP2"
    },
    "3092": {
      "op": "POP"
    },
    "3093": {
      "op": "POP"
    },
    "3094": {
      "jump": "o",
      "op": "JUMP"
    },
    "3095": {
      "op": "JUMPDEST"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3098": {
      "op": "DUP2"
    },
    "3099": {
      "op": "MSTORE"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3102": {
      "op": "DUP3"
    },
    "3103": {
      "op": "MLOAD"
    },
    "3104": {
      "op": "DUP1"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3107": {
      "op": "DUP5"
    },
    "3108": {
      "op": "ADD"
    },
    "3109": {
      "op": "MSTORE"
    },
    "3110": {
      "op": "PUSH2",
      "value": "0xC36"
    },
    "3113": {
      "op": "DUP2"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3116": {
      "op": "DUP6"
    },
    "3117": {
      "op": "ADD"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3120": {
      "op": "DUP8"
    },
    "3121": {
      "op": "ADD"
    },
    "3122": {
      "op": "PUSH2",
      "value": "0xBCF"
    },
    "3125": {
      "jump": "i",
      "op": "JUMP"
    },
    "3126": {
      "op": "JUMPDEST"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3129": {
      "op": "ADD"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3132": {
      "op": "NOT"
    },
    "3133": {
      "op": "AND"
    },
    "3134": {
      "op": "SWAP2"
    },
    "3135": {
      "op": "SWAP1"
    },
    "3136": {
      "op": "SWAP2"
    },
    "3137": {
      "op": "ADD"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3140": {
      "op": "ADD"
    },
    "3141": {
      "op": "SWAP3"
    },
    "3142": {
      "op": "SWAP2"
    },
    "3143": {
      "op": "POP"
    },
    "3144": {
      "op": "POP"
    },
    "3145": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "246451a97f03ef239e2698adc7f46f592ca54318",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol\";\nimport \"../interfaces/IProofSubmitter.sol\";\nimport \"./BeamerUtils.sol\";\n\ncontract FillManager is Ownable {\n    using SafeERC20 for IERC20;\n\n    event RequestFilled(\n        uint256 indexed requestId,\n        bytes32 fillId,\n        uint256 indexed sourceChainId,\n        address indexed targetTokenAddress,\n        address filler,\n        uint256 amount\n    );\n\n    event HashInvalidated(\n        bytes32 indexed requestHash,\n        bytes32 indexed fillId,\n        bytes32 indexed fillHash\n    );\n\n    event LPAdded(address lp);\n\n    event LPRemoved(address lp);\n\n    address public l1Resolver;\n    IProofSubmitter public proofSubmitter;\n\n    // mapping from request hash to fill hash of filled requests\n    mapping(bytes32 => bytes32) public fills;\n    mapping(address => bool) public allowedLPs;\n\n    constructor(address _l1Resolver, address _proofSubmitter) {\n        l1Resolver = _l1Resolver;\n        proofSubmitter = IProofSubmitter(_proofSubmitter);\n    }\n\n    function fillRequest(\n        uint256 requestId,\n        uint256 sourceChainId,\n        address targetTokenAddress,\n        address targetReceiverAddress,\n        uint256 amount\n    ) external returns (bytes32) {\n        require(allowedLPs[msg.sender], \"Sender not whitelisted\");\n        bytes32 requestHash = BeamerUtils.createRequestHash(\n            requestId,\n            sourceChainId,\n            block.chainid,\n            targetTokenAddress,\n            targetReceiverAddress,\n            amount\n        );\n\n        require(fills[requestHash] == bytes32(0), \"Already filled\");\n\n        IERC20 token = IERC20(targetTokenAddress);\n        token.safeTransferFrom(msg.sender, targetReceiverAddress, amount);\n\n        IProofSubmitter.ProofReceipt memory proofReceipt = proofSubmitter\n            .submitProof(\n                l1Resolver,\n                sourceChainId,\n                requestId,\n                requestHash,\n                msg.sender\n            );\n        require(proofReceipt.fillId != 0, \"Submitting proof data failed\");\n\n        fills[requestHash] = proofReceipt.fillHash;\n\n        emit RequestFilled(\n            requestId,\n            proofReceipt.fillId,\n            sourceChainId,\n            targetTokenAddress,\n            msg.sender,\n            amount\n        );\n\n        return proofReceipt.fillId;\n    }\n\n    function invalidateFillHash(\n        uint256 requestId,\n        bytes32 requestHash,\n        bytes32 fillId,\n        uint256 sourceChainId\n    ) external {\n        bytes32 fillHash = BeamerUtils.createFillHash(requestHash, fillId);\n        require(fills[requestHash] != fillHash, \"Fill hash valid\");\n        proofSubmitter.submitNonFillProof(\n            l1Resolver,\n            sourceChainId,\n            requestId,\n            fillHash\n        );\n        emit HashInvalidated(requestHash, fillId, fillHash);\n    }\n\n    function addAllowedLP(address newLP) public onlyOwner {\n        allowedLPs[newLP] = true;\n\n        emit LPAdded(newLP);\n    }\n\n    function removeAllowedLP(address oldLP) public onlyOwner {\n        delete allowedLPs[oldLP];\n\n        emit LPRemoved(oldLP);\n    }\n}\n",
  "sourceMap": "391:3023:10:-:0;;;1122:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:6;921:18:0;:32::i;:::-;1190:10:10;:24;;-1:-1:-1;;;;;1190:24:10;;;-1:-1:-1;;;;;;1190:24:10;;;;;;;1224:14;:49;;;;;;;;;;;391:3023;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:21:-;93:13;;-1:-1:-1;;;;;135:31:21;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;391:3023:10;;;;;;",
  "sourcePath": "contracts/FillManager.sol",
  "type": "contract"
}