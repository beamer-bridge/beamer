{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_claimStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_claimPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_challengePeriodExtension",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimerStake",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lastChallenger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "challengerStakeTotal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "termination",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "ClaimMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimReceiver",
          "type": "address"
        }
      ],
      "name": "ClaimStakeWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "DepositWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "FillInvalidatedResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "finalityPeriod",
          "type": "uint256"
        }
      ],
      "name": "FinalityPeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "LpAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "LpRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "validUntil",
          "type": "uint256"
        }
      ],
      "name": "RequestCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "RequestResolved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CLAIM_ID_WITHDRAWN_EXPIRED",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VALIDITY_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VALIDITY_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newLp",
          "type": "address"
        }
      ],
      "name": "addAllowedLp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callerChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedLps",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "callers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "challengeClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengePeriodExtension",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "claimRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claimerStake",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lastChallenger",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "challengerStakeTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawnAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "termination",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collectedProtocolFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validityPeriod",
          "type": "uint256"
        }
      ],
      "name": "createRequest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deprecateContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deprecated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "finalityPeriods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "resolutionChainId",
          "type": "uint256"
        }
      ],
      "name": "invalidateFill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "isInvalidFill",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpFeePPM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minLpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeePPM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldLp",
          "type": "address"
        }
      ],
      "name": "removeAllowedLp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "requests",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validUntil",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lpFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "uint192",
          "name": "activeClaims",
          "type": "uint192"
        },
        {
          "internalType": "uint256",
          "name": "withdrawClaimId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "resolutionChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        }
      ],
      "name": "resolveRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "finalityPeriod",
          "type": "uint256"
        }
      ],
      "name": "setFinalityPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "totalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProtocolFeePPM",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newLpFeePPM",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newMinLpFee",
          "type": "uint256"
        }
      ],
      "name": "updateFeeData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newTransferLimit",
          "type": "uint256"
        }
      ],
      "name": "updateTransferLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "withdrawExpiredRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawProtocolFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/legape/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/access/Ownable.sol",
    "15": "contracts/contracts/BeamerUtils.sol",
    "17": "contracts/contracts/LpWhitelist.sol",
    "19": "contracts/contracts/RequestManager.sol",
    "2": "/home/legape/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/IERC20.sol",
    "21": "contracts/contracts/RestrictedCalls.sol",
    "4": "/home/legape/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
    "5": "/home/legape/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/utils/SafeERC20.sol",
    "6": "/home/legape/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Address.sol",
    "7": "/home/legape/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Context.sol",
    "8": "/home/legape/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/Math.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/RequestManager.sol",
    "exportedSymbols": {
      "Address": [
        5251
      ],
      "BeamerUtils": [
        32
      ],
      "Context": [
        4920
      ],
      "IERC20": [
        3038
      ],
      "IERC20Permit": [
        4956
      ],
      "IMessenger": [
        3341
      ],
      "LpWhitelist": [
        364
      ],
      "Math": [
        4431
      ],
      "Ownable": [
        2960
      ],
      "RequestManager": [
        2009
      ],
      "RestrictedCalls": [
        2332
      ],
      "SafeERC20": [
        3319
      ]
    },
    "id": 2010,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 401,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:19"
      },
      {
        "absolutePath": "/home/legape/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/IERC20.sol",
        "id": 402,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2010,
        "sourceUnit": 3039,
        "src": "58:84:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/legape/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 403,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2010,
        "sourceUnit": 3320,
        "src": "143:93:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/legape/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/Math.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/Math.sol",
        "id": 404,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2010,
        "sourceUnit": 4432,
        "src": "237:81:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/legape/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/access/Ownable.sol",
        "id": 405,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2010,
        "sourceUnit": 2961,
        "src": "319:80:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/BeamerUtils.sol",
        "file": "./BeamerUtils.sol",
        "id": 406,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2010,
        "sourceUnit": 33,
        "src": "401:27:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/RestrictedCalls.sol",
        "file": "./RestrictedCalls.sol",
        "id": 407,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2010,
        "sourceUnit": 2333,
        "src": "429:31:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/LpWhitelist.sol",
        "file": "./LpWhitelist.sol",
        "id": 408,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2010,
        "sourceUnit": 365,
        "src": "461:27:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 410,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2960,
              "src": "1084:7:19"
            },
            "id": 411,
            "nodeType": "InheritanceSpecifier",
            "src": "1084:7:19"
          },
          {
            "baseName": {
              "id": 412,
              "name": "LpWhitelist",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 364,
              "src": "1093:11:19"
            },
            "id": 413,
            "nodeType": "InheritanceSpecifier",
            "src": "1093:11:19"
          },
          {
            "baseName": {
              "id": 414,
              "name": "RestrictedCalls",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2332,
              "src": "1106:15:19"
            },
            "id": 415,
            "nodeType": "InheritanceSpecifier",
            "src": "1106:15:19"
          }
        ],
        "canonicalName": "RequestManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 409,
          "nodeType": "StructuredDocumentation",
          "src": "490:567:19",
          "text": "The request manager.\n This contract is responsible for keeping track of transfer requests,\n implementing the rules of the challenge game and holding deposited\n tokens until they are withdrawn.\n The information passed by L1 resolution will be stored with the respective requests.\n It is the only contract that agents need to interact with on the source chain.\n .. note::\n   The functions resolveRequest and invalidateFill can only be called by\n   the :sol:contract:`Resolver` contract, via a chain-dependent messenger contract."
        },
        "fullyImplemented": true,
        "id": 2009,
        "linearizedBaseContracts": [
          2009,
          2332,
          364,
          2960,
          4920
        ],
        "name": "RequestManager",
        "nameLocation": "1066:14:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 418,
            "libraryName": {
              "id": 416,
              "name": "Math",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4431,
              "src": "1134:4:19"
            },
            "nodeType": "UsingForDirective",
            "src": "1128:23:19",
            "typeName": {
              "id": 417,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1143:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "global": false,
            "id": 422,
            "libraryName": {
              "id": 419,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3319,
              "src": "1162:9:19"
            },
            "nodeType": "UsingForDirective",
            "src": "1156:27:19",
            "typeName": {
              "id": 421,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 420,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3038,
                "src": "1176:6:19"
              },
              "referencedDeclaration": 3038,
              "src": "1176:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3038",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "RequestManager.Request",
            "id": 449,
            "members": [
              {
                "constant": false,
                "id": 424,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "1368:6:19",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "1360:14:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 423,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1360:7:19",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 426,
                "mutability": "mutable",
                "name": "sourceTokenAddress",
                "nameLocation": "1392:18:19",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "1384:26:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 425,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1384:7:19",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 428,
                "mutability": "mutable",
                "name": "targetChainId",
                "nameLocation": "1428:13:19",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "1420:21:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 427,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1420:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 430,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1459:6:19",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "1451:14:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 429,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1451:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 432,
                "mutability": "mutable",
                "name": "validUntil",
                "nameLocation": "1483:10:19",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "1475:18:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 431,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1475:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 434,
                "mutability": "mutable",
                "name": "lpFee",
                "nameLocation": "1511:5:19",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "1503:13:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 433,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1503:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 436,
                "mutability": "mutable",
                "name": "protocolFee",
                "nameLocation": "1534:11:19",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "1526:19:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 435,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1526:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 438,
                "mutability": "mutable",
                "name": "activeClaims",
                "nameLocation": "1563:12:19",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "1555:20:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint192",
                  "typeString": "uint192"
                },
                "typeName": {
                  "id": 437,
                  "name": "uint192",
                  "nodeType": "ElementaryTypeName",
                  "src": "1555:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint192",
                    "typeString": "uint192"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 440,
                "mutability": "mutable",
                "name": "withdrawClaimId",
                "nameLocation": "1593:15:19",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "1585:23:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 439,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1585:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 442,
                "mutability": "mutable",
                "name": "filler",
                "nameLocation": "1626:6:19",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "1618:14:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 441,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1618:7:19",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 444,
                "mutability": "mutable",
                "name": "fillId",
                "nameLocation": "1650:6:19",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "1642:14:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 443,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1642:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 448,
                "mutability": "mutable",
                "name": "invalidFillIds",
                "nameLocation": "1691:14:19",
                "nodeType": "VariableDeclaration",
                "scope": 449,
                "src": "1666:39:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "typeName": {
                  "id": 447,
                  "keyType": {
                    "id": 445,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1666:24:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "valueType": {
                    "id": 446,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Request",
            "nameLocation": "1342:7:19",
            "nodeType": "StructDefinition",
            "scope": 2009,
            "src": "1335:377:19",
            "visibility": "public"
          },
          {
            "canonicalName": "RequestManager.Claim",
            "id": 470,
            "members": [
              {
                "constant": false,
                "id": 451,
                "mutability": "mutable",
                "name": "requestId",
                "nameLocation": "1749:9:19",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "1741:17:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 450,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1741:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 453,
                "mutability": "mutable",
                "name": "claimer",
                "nameLocation": "1776:7:19",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "1768:15:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 452,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1768:7:19",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 455,
                "mutability": "mutable",
                "name": "claimerStake",
                "nameLocation": "1801:12:19",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "1793:20:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 454,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1793:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 459,
                "mutability": "mutable",
                "name": "challengersStakes",
                "nameLocation": "1851:17:19",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "1823:45:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 458,
                  "keyType": {
                    "id": 456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1831:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1823:27:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1842:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 461,
                "mutability": "mutable",
                "name": "lastChallenger",
                "nameLocation": "1886:14:19",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "1878:22:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 460,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1878:7:19",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 463,
                "mutability": "mutable",
                "name": "challengerStakeTotal",
                "nameLocation": "1918:20:19",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "1910:28:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 462,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1910:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 465,
                "mutability": "mutable",
                "name": "withdrawnAmount",
                "nameLocation": "1956:15:19",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "1948:23:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 464,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1948:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 467,
                "mutability": "mutable",
                "name": "termination",
                "nameLocation": "1989:11:19",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "1981:19:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 466,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1981:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 469,
                "mutability": "mutable",
                "name": "fillId",
                "nameLocation": "2018:6:19",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "2010:14:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 468,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2010:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nameLocation": "1725:5:19",
            "nodeType": "StructDefinition",
            "scope": 2009,
            "src": "1718:313:19",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 471,
              "nodeType": "StructuredDocumentation",
              "src": "2052:103:19",
              "text": "Emitted when a new request has been created.\n .. seealso:: :sol:func:`createRequest`"
            },
            "eventSelector": "f852fa5288e6bd150237cec1f415e191d8232b72067c0520011180d7ea00ba8c",
            "id": 489,
            "name": "RequestCreated",
            "nameLocation": "2166:14:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 473,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2206:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "2190:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 475,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "2233:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "2225:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 477,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceTokenAddress",
                  "nameLocation": "2264:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "2256:26:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2256:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 479,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "2300:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "2292:26:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2292:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 481,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "2336:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "2328:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2328:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 483,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2367:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "2359:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2359:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 485,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2391:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "2383:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2383:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 487,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "2414:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "2406:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2406:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2180:250:19"
            },
            "src": "2160:271:19"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 490,
              "nodeType": "StructuredDocumentation",
              "src": "2437:445:19",
              "text": "Emitted when the token deposit for request ``requestId`` has been\n transferred to the ``receiver``.\n This can happen in two cases:\n  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`\n  * a claim related to the request has been resolved successfully in favor of the claimer\n .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`"
            },
            "eventSelector": "ab63a14c4aaba38366fd39116091672bb44520328ee870be35a51e573296e565",
            "id": 496,
            "name": "DepositWithdrawn",
            "nameLocation": "2893:16:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 492,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2918:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "2910:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 491,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2910:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 494,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2937:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "2929:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2929:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2909:37:19"
            },
            "src": "2887:60:19"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 497,
              "nodeType": "StructuredDocumentation",
              "src": "2953:151:19",
              "text": "Emitted when a claim or a counter-claim (challenge) has been made.\n .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`"
            },
            "eventSelector": "a317459aaaff5501ec6d0dcfc26440565beaf33dc2ba0f68b7273a50322c215d",
            "id": 515,
            "name": "ClaimMade",
            "nameLocation": "3115:9:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3150:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "3134:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3134:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 501,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "3177:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "3169:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3169:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 503,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "3202:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "3194:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3194:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 505,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimerStake",
                  "nameLocation": "3227:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "3219:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3219:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 507,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastChallenger",
                  "nameLocation": "3257:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "3249:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3249:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 509,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "challengerStakeTotal",
                  "nameLocation": "3289:20:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "3281:28:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3281:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 511,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "termination",
                  "nameLocation": "3327:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "3319:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3319:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 513,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "3356:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "3348:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3348:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3124:244:19"
            },
            "src": "3109:260:19"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 516,
              "nodeType": "StructuredDocumentation",
              "src": "3375:277:19",
              "text": "Emitted when staked native tokens tied to a claim have been withdrawn.\n This can only happen when the claim has been resolved and the caller\n of :sol:func:`withdraw` is allowed to withdraw their stake.\n .. seealso:: :sol:func:`withdraw`"
            },
            "eventSelector": "a5d98efe63b5c32fd1a0e4d189473a6e9538a04f05da85b3cd50c5915087decf",
            "id": 524,
            "name": "ClaimStakeWithdrawn",
            "nameLocation": "3663:19:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 518,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "3700:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 524,
                  "src": "3692:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3692:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 520,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3733:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 524,
                  "src": "3717:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3717:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 522,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimReceiver",
                  "nameLocation": "3760:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 524,
                  "src": "3752:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3752:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3682:97:19"
            },
            "src": "3657:123:19"
          },
          {
            "anonymous": false,
            "eventSelector": "aba57b48b9f1dfd5747a52ed348a6ab6aa7bafb0575363a5cb7b62659f727b65",
            "id": 530,
            "name": "FinalityPeriodUpdated",
            "nameLocation": "3792:21:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "3822:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "3814:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3814:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 528,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "finalityPeriod",
                  "nameLocation": "3845:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "3837:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3837:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3813:47:19"
            },
            "src": "3786:75:19"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 531,
              "nodeType": "StructuredDocumentation",
              "src": "3867:119:19",
              "text": "Emitted when a request has been resolved via L1 resolution.\n .. seealso:: :sol:func:`resolveRequest`"
            },
            "eventSelector": "b32d3c8b5539b0cc3050d5b75e9dad8eca8744a0892259bda27fdb51b9956736",
            "id": 539,
            "name": "RequestResolved",
            "nameLocation": "3997:15:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 533,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "4021:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "4013:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4013:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 535,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "4040:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "4032:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4032:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 537,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "4056:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "4048:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4048:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4012:51:19"
            },
            "src": "3991:73:19"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 540,
              "nodeType": "StructuredDocumentation",
              "src": "4070:111:19",
              "text": "Emitted when an invalidated fill has been resolved.\n .. seealso:: :sol:func:`invalidateFill`"
            },
            "eventSelector": "5571b83c623961fb42d39ce6d6d2092153ace66c008e2dc2472ec6d2e8fad045",
            "id": 546,
            "name": "FillInvalidatedResolved",
            "nameLocation": "4192:23:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 542,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "4224:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "4216:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4216:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 544,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "4243:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "4235:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4235:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4215:35:19"
            },
            "src": "4186:65:19"
          },
          {
            "constant": false,
            "documentation": {
              "id": 547,
              "nodeType": "StructuredDocumentation",
              "src": "4275:161:19",
              "text": "The minimum amount of source chain's native token that the claimer needs to\n provide when making a claim, as well in each round of the challenge game."
            },
            "functionSelector": "eb321173",
            "id": 549,
            "mutability": "mutable",
            "name": "claimStake",
            "nameLocation": "4456:10:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "4441:25:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 548,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4441:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 550,
              "nodeType": "StructuredDocumentation",
              "src": "4473:44:19",
              "text": "The period for which the claim is valid."
            },
            "functionSelector": "7dc2cd98",
            "id": 552,
            "mutability": "mutable",
            "name": "claimPeriod",
            "nameLocation": "4537:11:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "4522:26:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 551,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4522:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 553,
              "nodeType": "StructuredDocumentation",
              "src": "4555:598:19",
              "text": "The period by which the termination time of a claim is extended after each\n round of the challenge game. This period should allow enough time for the\n other parties to counter-challenge.\n .. note::\n    The claim's termination time is extended only if it is less than the\n    extension time.\n Note that in the first challenge round, i.e. the round initiated by the first\n challenger, the termination time is extended additionally by the finality\n period of the target chain. This is done to allow for L1 resolution."
            },
            "functionSelector": "1d18adc5",
            "id": 555,
            "mutability": "mutable",
            "name": "challengePeriodExtension",
            "nameLocation": "5173:24:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "5158:39:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 554,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5158:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 556,
              "nodeType": "StructuredDocumentation",
              "src": "5204:45:19",
              "text": "The minimum validity period of a request."
            },
            "functionSelector": "1489f8d2",
            "id": 559,
            "mutability": "constant",
            "name": "MIN_VALIDITY_PERIOD",
            "nameLocation": "5278:19:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "5254:55:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 557,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5254:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 558,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5300:9:19",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_300_by_1",
                "typeString": "int_const 300"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 560,
              "nodeType": "StructuredDocumentation",
              "src": "5316:45:19",
              "text": "The maximum validity period of a request."
            },
            "functionSelector": "96171d05",
            "id": 563,
            "mutability": "constant",
            "name": "MAX_VALIDITY_PERIOD",
            "nameLocation": "5390:19:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "5366:56:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 561,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5366:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 562,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5412:10:19",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1800_by_1",
                "typeString": "int_const 1800"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 564,
              "nodeType": "StructuredDocumentation",
              "src": "5429:93:19",
              "text": "withdrawClaimId is set to this value when an expired request gets withdrawn by the sender"
            },
            "functionSelector": "ea628898",
            "id": 571,
            "mutability": "constant",
            "name": "CLAIM_ID_WITHDRAWN_EXPIRED",
            "nameLocation": "5551:26:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "5527:70:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 565,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5527:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "5585:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    },
                    "typeName": {
                      "id": 567,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5585:7:19",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    }
                  ],
                  "id": 566,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "5580:4:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 569,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "5580:13:19",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                  "typeString": "type(uint256)"
                }
              },
              "id": 570,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "5580:17:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 572,
              "nodeType": "StructuredDocumentation",
              "src": "5622:118:19",
              "text": "Indicates whether the contract is deprecated. A deprecated contract\n cannot be used to create new requests."
            },
            "functionSelector": "0e136b19",
            "id": 574,
            "mutability": "mutable",
            "name": "deprecated",
            "nameLocation": "5757:10:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "5745:22:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 573,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "5745:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 575,
              "nodeType": "StructuredDocumentation",
              "src": "5774:163:19",
              "text": "A counter used to generate request and claim IDs.\n The variable holds the most recently used nonce and must\n be incremented to get the next nonce"
            },
            "functionSelector": "adb610a3",
            "id": 577,
            "mutability": "mutable",
            "name": "currentNonce",
            "nameLocation": "5957:12:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "5942:27:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 576,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5942:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 578,
              "nodeType": "StructuredDocumentation",
              "src": "5976:94:19",
              "text": "Maps target rollup chain IDs to finality periods.\n Finality periods are in seconds."
            },
            "functionSelector": "2f92f009",
            "id": 582,
            "mutability": "mutable",
            "name": "finalityPeriods",
            "nameLocation": "6110:15:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "6075:50:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 581,
              "keyType": {
                "id": 579,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6083:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "6075:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 580,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6094:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 583,
              "nodeType": "StructuredDocumentation",
              "src": "6132:33:19",
              "text": "Maps request IDs to requests."
            },
            "functionSelector": "9d866985",
            "id": 588,
            "mutability": "mutable",
            "name": "requests",
            "nameLocation": "6205:8:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "6170:43:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$449_storage_$",
              "typeString": "mapping(bytes32 => struct RequestManager.Request)"
            },
            "typeName": {
              "id": 587,
              "keyType": {
                "id": 584,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "6178:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "6170:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$449_storage_$",
                "typeString": "mapping(bytes32 => struct RequestManager.Request)"
              },
              "valueType": {
                "id": 586,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 585,
                  "name": "Request",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 449,
                  "src": "6189:7:19"
                },
                "referencedDeclaration": 449,
                "src": "6189:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                  "typeString": "struct RequestManager.Request"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 589,
              "nodeType": "StructuredDocumentation",
              "src": "6220:29:19",
              "text": "Maps claim IDs to claims."
            },
            "functionSelector": "a888c2cd",
            "id": 594,
            "mutability": "mutable",
            "name": "claims",
            "nameLocation": "6287:6:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "6254:39:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$470_storage_$",
              "typeString": "mapping(uint256 => struct RequestManager.Claim)"
            },
            "typeName": {
              "id": 593,
              "keyType": {
                "id": 590,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6262:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "6254:25:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$470_storage_$",
                "typeString": "mapping(uint256 => struct RequestManager.Claim)"
              },
              "valueType": {
                "id": 592,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 591,
                  "name": "Claim",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 470,
                  "src": "6273:5:19"
                },
                "referencedDeclaration": 470,
                "src": "6273:5:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                  "typeString": "struct RequestManager.Claim"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 595,
              "nodeType": "StructuredDocumentation",
              "src": "6300:83:19",
              "text": "The minimum fee, denominated in transfer token, paid to the liquidity provider."
            },
            "functionSelector": "5d5aa11b",
            "id": 598,
            "mutability": "mutable",
            "name": "minLpFee",
            "nameLocation": "6403:8:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "6388:33:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 596,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6388:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 597,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6414:7:19",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000000000000000000_by_1",
                "typeString": "int_const 5000000000000000000"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 599,
              "nodeType": "StructuredDocumentation",
              "src": "6436:76:19",
              "text": "Liquidity provider fee percentage, expressed in ppm (parts per million)."
            },
            "functionSelector": "e2653eeb",
            "id": 602,
            "mutability": "mutable",
            "name": "lpFeePPM",
            "nameLocation": "6532:8:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "6517:31:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 600,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6517:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "315f303030",
              "id": 601,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6543:5:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1_000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 603,
              "nodeType": "StructuredDocumentation",
              "src": "6601:66:19",
              "text": "Protocol fee percentage, expressed in ppm (parts per million)."
            },
            "functionSelector": "e7aad5c4",
            "id": 606,
            "mutability": "mutable",
            "name": "protocolFeePPM",
            "nameLocation": "6687:14:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "6672:33:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 604,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6672:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 605,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6704:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 607,
              "nodeType": "StructuredDocumentation",
              "src": "6756:77:19",
              "text": "The maximum amount of tokens that can be transferred in a single request."
            },
            "functionSelector": "f9432517",
            "id": 610,
            "mutability": "mutable",
            "name": "transferLimit",
            "nameLocation": "6853:13:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "6838:42:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 608,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6838:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 609,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6869:11:19",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 611,
              "nodeType": "StructuredDocumentation",
              "src": "6899:84:19",
              "text": "Maps ERC20 token addresses to related token amounts that belong to the protocol."
            },
            "functionSelector": "6bc6c8d1",
            "id": 615,
            "mutability": "mutable",
            "name": "collectedProtocolFees",
            "nameLocation": "7023:21:19",
            "nodeType": "VariableDeclaration",
            "scope": 2009,
            "src": "6988:56:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 614,
              "keyType": {
                "id": 612,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "6996:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "6988:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 613,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7007:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 634,
              "nodeType": "Block",
              "src": "7204:75:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 625,
                        "name": "minLpFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "7230:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 626,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 618,
                                "src": "7241:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 627,
                                "name": "lpFeePPM",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 602,
                                "src": "7250:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7241:17:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 629,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7240:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "315f3030305f303030",
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7262:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1_000_000"
                        },
                        "src": "7240:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 623,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4431,
                        "src": "7221:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$4431_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3952,
                      "src": "7221:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7221:51:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 622,
                  "id": 633,
                  "nodeType": "Return",
                  "src": "7214:58:19"
                }
              ]
            },
            "documentation": {
              "id": 616,
              "nodeType": "StructuredDocumentation",
              "src": "7051:87:19",
              "text": "Compute the liquidy provider fee that needs to be paid for a given transfer amount."
            },
            "functionSelector": "f7d64cec",
            "id": 635,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lpFee",
            "nameLocation": "7152:5:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7166:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "7158:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7158:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7157:16:19"
            },
            "returnParameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "7195:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7195:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7194:9:19"
            },
            "scope": 2009,
            "src": "7143:136:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 650,
              "nodeType": "Block",
              "src": "7436:61:19",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 643,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "7454:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 644,
                            "name": "protocolFeePPM",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "7463:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7454:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 646,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7453:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "315f3030305f303030",
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7481:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1_000_000"
                    },
                    "src": "7453:37:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 642,
                  "id": 649,
                  "nodeType": "Return",
                  "src": "7446:44:19"
                }
              ]
            },
            "documentation": {
              "id": 636,
              "nodeType": "StructuredDocumentation",
              "src": "7285:79:19",
              "text": "Compute the protocol fee that needs to be paid for a given transfer amount."
            },
            "functionSelector": "a032b5f4",
            "id": 651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "protocolFee",
            "nameLocation": "7378:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7398:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "7390:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7390:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7389:16:19"
            },
            "returnParameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "7427:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7427:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7426:9:19"
            },
            "scope": 2009,
            "src": "7369:128:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "7733:59:19",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 660,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 654,
                          "src": "7756:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 659,
                        "name": "lpFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "7750:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7750:13:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 663,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 654,
                          "src": "7778:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 662,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "7766:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7766:19:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7750:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 658,
                  "id": 666,
                  "nodeType": "Return",
                  "src": "7743:42:19"
                }
              ]
            },
            "documentation": {
              "id": 652,
              "nodeType": "StructuredDocumentation",
              "src": "7503:161:19",
              "text": "Compute the total fee that needs to be paid for a given transfer amount.\n The total fee is the sum of the liquidity provider fee and the protocol fee."
            },
            "functionSelector": "cea74edf",
            "id": 668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalFee",
            "nameLocation": "7678:8:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7695:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "7687:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7687:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7686:16:19"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "7724:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7724:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7723:9:19"
            },
            "scope": 2009,
            "src": "7669:123:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 687,
              "nodeType": "Block",
              "src": "7910:134:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 674,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "7941:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$449_storage_$",
                                "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                              }
                            },
                            "id": 676,
                            "indexExpression": {
                              "id": 675,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 671,
                              "src": "7950:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7941:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$449_storage",
                              "typeString": "struct RequestManager.Request storage ref"
                            }
                          },
                          "id": 677,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 424,
                          "src": "7941:26:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7979:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7971:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 678,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7971:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7971:10:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7941:40:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726571756573744964206e6f742076616c6964",
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7995:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bb782a5a1857b463ef883d3e4b99e9751b0d5423347851634a49140c150f705",
                          "typeString": "literal_string \"requestId not valid\""
                        },
                        "value": "requestId not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bb782a5a1857b463ef883d3e4b99e9751b0d5423347851634a49140c150f705",
                          "typeString": "literal_string \"requestId not valid\""
                        }
                      ],
                      "id": 673,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7920:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7920:106:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 685,
                  "nodeType": "ExpressionStatement",
                  "src": "7920:106:19"
                },
                {
                  "id": 686,
                  "nodeType": "PlaceholderStatement",
                  "src": "8036:1:19"
                }
              ]
            },
            "documentation": {
              "id": 669,
              "nodeType": "StructuredDocumentation",
              "src": "7816:46:19",
              "text": "Check whether a given request ID is valid."
            },
            "id": 688,
            "name": "validRequestId",
            "nameLocation": "7876:14:19",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "7899:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "7891:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7891:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7890:19:19"
            },
            "src": "7867:177:19",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 707,
              "nodeType": "Block",
              "src": "8138:95:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 694,
                              "name": "claims",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 594,
                              "src": "8156:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$470_storage_$",
                                "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                              }
                            },
                            "id": 696,
                            "indexExpression": {
                              "id": 695,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 691,
                              "src": "8163:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8156:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$470_storage",
                              "typeString": "struct RequestManager.Claim storage ref"
                            }
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 453,
                          "src": "8156:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8191:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8183:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 698,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8183:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8183:10:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8156:37:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636c61696d4964206e6f742076616c6964",
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8195:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76ef4b9559047f48ccd368349bc1d95713392442f579fe3d262d71404d1dcff",
                          "typeString": "literal_string \"claimId not valid\""
                        },
                        "value": "claimId not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f76ef4b9559047f48ccd368349bc1d95713392442f579fe3d262d71404d1dcff",
                          "typeString": "literal_string \"claimId not valid\""
                        }
                      ],
                      "id": 693,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8148:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8148:67:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "8148:67:19"
                },
                {
                  "id": 706,
                  "nodeType": "PlaceholderStatement",
                  "src": "8225:1:19"
                }
              ]
            },
            "documentation": {
              "id": 689,
              "nodeType": "StructuredDocumentation",
              "src": "8050:44:19",
              "text": "Check whether a given claim ID is valid."
            },
            "id": 708,
            "name": "validClaimId",
            "nameLocation": "8108:12:19",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "8129:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "8121:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8121:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8120:17:19"
            },
            "src": "8099:134:19",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "8570:139:19",
              "statements": [
                {
                  "expression": {
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 718,
                      "name": "claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "8580:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 719,
                      "name": "_claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 711,
                      "src": "8593:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8580:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "8580:24:19"
                },
                {
                  "expression": {
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 722,
                      "name": "claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 552,
                      "src": "8614:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 723,
                      "name": "_claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 713,
                      "src": "8628:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8614:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "8614:26:19"
                },
                {
                  "expression": {
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 726,
                      "name": "challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "8650:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 727,
                      "name": "_challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "8677:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8650:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "8650:52:19"
                }
              ]
            },
            "documentation": {
              "id": 709,
              "nodeType": "StructuredDocumentation",
              "src": "8239:206:19",
              "text": "Constructor.\n @param _claimStake Claim stake amount.\n @param _claimPeriod Claim period, in seconds.\n @param _challengePeriodExtension Challenge period extension, in seconds."
            },
            "id": 731,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "_claimStake",
                  "nameLocation": "8479:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 731,
                  "src": "8471:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8471:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 713,
                  "mutability": "mutable",
                  "name": "_claimPeriod",
                  "nameLocation": "8508:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 731,
                  "src": "8500:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8500:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "_challengePeriodExtension",
                  "nameLocation": "8538:25:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 731,
                  "src": "8530:33:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8530:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8461:108:19"
            },
            "returnParameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8570:0:19"
            },
            "scope": 2009,
            "src": "8450:259:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 924,
              "nodeType": "Block",
              "src": "9803:1954:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 750,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 574,
                          "src": "9821:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9835:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "9821:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742069732064657072656361746564",
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9842:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_529c15b06099d61815914f4912757faaa0741e9262b36f0004cb178f36fdd9f1",
                          "typeString": "literal_string \"Contract is deprecated\""
                        },
                        "value": "Contract is deprecated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_529c15b06099d61815914f4912757faaa0741e9262b36f0004cb178f36fdd9f1",
                          "typeString": "literal_string \"Contract is deprecated\""
                        }
                      ],
                      "id": 749,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9813:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9813:54:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 755,
                  "nodeType": "ExpressionStatement",
                  "src": "9813:54:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 757,
                            "name": "finalityPeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "9898:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 759,
                          "indexExpression": {
                            "id": 758,
                            "name": "targetChainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "9914:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9898:30:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9932:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9898:35:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54617267657420726f6c6c7570206e6f7420737570706f72746564",
                        "id": 762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9947:29:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce613defff4868c9fbec08ddde530282de33cee8241a08645b008dbc00137e2b",
                          "typeString": "literal_string \"Target rollup not supported\""
                        },
                        "value": "Target rollup not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce613defff4868c9fbec08ddde530282de33cee8241a08645b008dbc00137e2b",
                          "typeString": "literal_string \"Target rollup not supported\""
                        }
                      ],
                      "id": 756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9877:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9877:109:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "9877:109:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 766,
                          "name": "validityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 744,
                          "src": "10017:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 767,
                          "name": "MIN_VALIDITY_PERIOD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "10035:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10017:37:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696469747920706572696f6420746f6f2073686f7274",
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10068:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c45904cb6a178378bb37a9a1c03f015a39361ce913918834ec5a52c283667008",
                          "typeString": "literal_string \"Validity period too short\""
                        },
                        "value": "Validity period too short"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c45904cb6a178378bb37a9a1c03f015a39361ce913918834ec5a52c283667008",
                          "typeString": "literal_string \"Validity period too short\""
                        }
                      ],
                      "id": 765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9996:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9996:109:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 771,
                  "nodeType": "ExpressionStatement",
                  "src": "9996:109:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 773,
                          "name": "validityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 744,
                          "src": "10136:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 774,
                          "name": "MAX_VALIDITY_PERIOD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 563,
                          "src": "10154:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10136:37:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696469747920706572696f6420746f6f206c6f6e67",
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10187:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac933946aa9f1b3cff59a7d1daa9668099cd3b65a18787e4f598bc11cc28194",
                          "typeString": "literal_string \"Validity period too long\""
                        },
                        "value": "Validity period too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac933946aa9f1b3cff59a7d1daa9668099cd3b65a18787e4f598bc11cc28194",
                          "typeString": "literal_string \"Validity period too long\""
                        }
                      ],
                      "id": 772,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10115:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10115:108:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "10115:108:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 780,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "10241:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 781,
                          "name": "transferLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 610,
                          "src": "10251:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10241:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473207472616e73666572206c696d6974",
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10266:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62ea95ea2c2e47e95fdd347a7b56999ecf4d6210b6715ec00b4f5e3d0c9f95d8",
                          "typeString": "literal_string \"Amount exceeds transfer limit\""
                        },
                        "value": "Amount exceeds transfer limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62ea95ea2c2e47e95fdd347a7b56999ecf4d6210b6715ec00b4f5e3d0c9f95d8",
                          "typeString": "literal_string \"Amount exceeds transfer limit\""
                        }
                      ],
                      "id": 779,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10233:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10233:65:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 785,
                  "nodeType": "ExpressionStatement",
                  "src": "10233:65:19"
                },
                {
                  "assignments": [
                    788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 788,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "10316:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 924,
                      "src": "10309:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3038",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 787,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 786,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3038,
                          "src": "10309:6:19"
                        },
                        "referencedDeclaration": 3038,
                        "src": "10309:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3038",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 792,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 790,
                        "name": "sourceTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "10331:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 789,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3038,
                      "src": "10324:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3038_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10324:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3038",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10309:41:19"
                },
                {
                  "assignments": [
                    794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 794,
                      "mutability": "mutable",
                      "name": "lpFeeTokenAmount",
                      "nameLocation": "10369:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 924,
                      "src": "10361:24:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 793,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10361:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 798,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 796,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "10394:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 795,
                      "name": "lpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "10388:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10388:13:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10361:40:19"
                },
                {
                  "assignments": [
                    800
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 800,
                      "mutability": "mutable",
                      "name": "protocolFeeTokenAmount",
                      "nameLocation": "10419:22:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 924,
                      "src": "10411:30:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 799,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10411:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 804,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 802,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "10456:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 801,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "10444:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10444:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10411:52:19"
                },
                {
                  "assignments": [
                    806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 806,
                      "mutability": "mutable",
                      "name": "totalTokenAmount",
                      "nameLocation": "10481:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 924,
                      "src": "10473:24:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 805,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10473:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 812,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 807,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "10500:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 808,
                        "name": "lpFeeTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 794,
                        "src": "10521:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10500:37:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 810,
                      "name": "protocolFeeTokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "10552:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10500:74:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10473:101:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 816,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10622:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10622:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 820,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10642:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RequestManager_$2009",
                                    "typeString": "contract RequestManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RequestManager_$2009",
                                    "typeString": "contract RequestManager"
                                  }
                                ],
                                "id": 819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10634:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 818,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10634:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10634:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 814,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "10606:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3038",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3015,
                            "src": "10606:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10606:42:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 823,
                          "name": "totalTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 806,
                          "src": "10652:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10606:62:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10682:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        },
                        "value": "Insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        }
                      ],
                      "id": 813,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10585:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10585:131:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
                  "src": "10585:131:19"
                },
                {
                  "expression": {
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 828,
                      "name": "currentNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "10727:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10743:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10727:17:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 831,
                  "nodeType": "ExpressionStatement",
                  "src": "10727:17:19"
                },
                {
                  "assignments": [
                    833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 833,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "10762:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 924,
                      "src": "10754:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 832,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10754:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 844,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 836,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "10815:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainid",
                        "nodeType": "MemberAccess",
                        "src": "10815:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 838,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "10842:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 839,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "10869:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 840,
                        "name": "targetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "10901:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 841,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "10928:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 842,
                        "name": "currentNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 577,
                        "src": "10948:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 834,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "10774:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$32_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createRequestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "10774:27:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,address,address,uint256,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10774:196:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10754:216:19"
                },
                {
                  "assignments": [
                    847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 847,
                      "mutability": "mutable",
                      "name": "newRequest",
                      "nameLocation": "10997:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 924,
                      "src": "10981:26:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 846,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 845,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 449,
                          "src": "10981:7:19"
                        },
                        "referencedDeclaration": 449,
                        "src": "10981:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 851,
                  "initialValue": {
                    "baseExpression": {
                      "id": 848,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "11010:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$449_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 850,
                    "indexExpression": {
                      "id": 849,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "11019:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11010:19:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$449_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10981:48:19"
                },
                {
                  "expression": {
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 852,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "11039:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 854,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 424,
                      "src": "11039:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 855,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11059:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11059:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11039:30:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 858,
                  "nodeType": "ExpressionStatement",
                  "src": "11039:30:19"
                },
                {
                  "expression": {
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 859,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "11079:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 861,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sourceTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 426,
                      "src": "11079:29:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 862,
                      "name": "sourceTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 736,
                      "src": "11111:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11079:50:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "11079:50:19"
                },
                {
                  "expression": {
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 865,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "11139:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 867,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetChainId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 428,
                      "src": "11139:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 868,
                      "name": "targetChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 734,
                      "src": "11166:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11139:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "11139:40:19"
                },
                {
                  "expression": {
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 871,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "11189:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 873,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 430,
                      "src": "11189:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 874,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "11209:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11189:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 876,
                  "nodeType": "ExpressionStatement",
                  "src": "11189:26:19"
                },
                {
                  "expression": {
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 877,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "11225:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 879,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "validUntil",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 432,
                      "src": "11225:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 880,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "11249:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "11249:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 882,
                        "name": "validityPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "11267:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11249:32:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11225:56:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "11225:56:19"
                },
                {
                  "expression": {
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 886,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "11291:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 888,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lpFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 434,
                      "src": "11291:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 889,
                      "name": "lpFeeTokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 794,
                      "src": "11310:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11291:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 891,
                  "nodeType": "ExpressionStatement",
                  "src": "11291:35:19"
                },
                {
                  "expression": {
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 892,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "11336:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 894,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protocolFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 436,
                      "src": "11336:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 895,
                      "name": "protocolFeeTokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "11361:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11336:47:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
                  "src": "11336:47:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 899,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "11427:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 900,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "11450:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 901,
                        "name": "sourceTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "11477:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 902,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "11509:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 903,
                        "name": "targetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "11541:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 904,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "11568:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 905,
                        "name": "currentNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 577,
                        "src": "11588:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 906,
                          "name": "newRequest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "11614:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 907,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "validUntil",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 432,
                        "src": "11614:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 898,
                      "name": "RequestCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 489,
                      "src": "11399:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256,address,address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11399:246:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 909,
                  "nodeType": "EmitStatement",
                  "src": "11394:251:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 913,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11679:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11679:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 917,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11699:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RequestManager_$2009",
                              "typeString": "contract RequestManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RequestManager_$2009",
                              "typeString": "contract RequestManager"
                            }
                          ],
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11691:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 915,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11691:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11691:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 919,
                        "name": "totalTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "11706:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 910,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "11656:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3038",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3096,
                      "src": "11656:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3038_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3038_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11656:67:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 921,
                  "nodeType": "ExpressionStatement",
                  "src": "11656:67:19"
                },
                {
                  "expression": {
                    "id": 922,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 833,
                    "src": "11741:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 748,
                  "id": 923,
                  "nodeType": "Return",
                  "src": "11734:16:19"
                }
              ]
            },
            "documentation": {
              "id": 732,
              "nodeType": "StructuredDocumentation",
              "src": "8715:837:19",
              "text": "Create a new transfer request.\n @param targetChainId ID of the target chain.\n @param sourceTokenAddress Address of the token contract on the source chain.\n @param targetTokenAddress Address of the token contract on the target chain.\n @param targetAddress Recipient address on the target chain.\n @param amount Amount of tokens to transfer. Does not include fees.\n @param validityPeriod The number of seconds the request is to be considered valid.\n                       Once its validity period has elapsed, the request cannot be claimed\n                       anymore and will eventually expire, allowing the request submitter\n                       to withdraw the deposited tokens if there are no active claims.\n @return ID of the newly created request."
            },
            "functionSelector": "2f4212b8",
            "id": 925,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "9566:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "9597:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "9589:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9589:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "sourceTokenAddress",
                  "nameLocation": "9628:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "9620:26:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9620:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "9664:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "9656:26:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9656:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 740,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "9700:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "9692:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9692:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9731:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "9723:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9723:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "validityPeriod",
                  "nameLocation": "9755:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "9747:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9747:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9579:196:19"
            },
            "returnParameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "9794:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9794:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9793:9:19"
            },
            "scope": 2009,
            "src": "9557:2200:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1001,
              "nodeType": "Block",
              "src": "12045:639:19",
              "statements": [
                {
                  "assignments": [
                    936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 936,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "12071:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1001,
                      "src": "12055:23:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 935,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 934,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 449,
                          "src": "12055:7:19"
                        },
                        "referencedDeclaration": 449,
                        "src": "12055:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 940,
                  "initialValue": {
                    "baseExpression": {
                      "id": 937,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "12081:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$449_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 939,
                    "indexExpression": {
                      "id": 938,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 928,
                      "src": "12090:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12081:19:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$449_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12055:45:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 942,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 936,
                            "src": "12119:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 943,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawClaimId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 440,
                          "src": "12119:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12146:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12119:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f73697420616c72656164792077697468647261776e",
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12149:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        },
                        "value": "Deposit already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        }
                      ],
                      "id": 941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12111:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12111:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "12111:66:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 950,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12208:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12208:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 952,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 936,
                            "src": "12227:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 432,
                          "src": "12227:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12208:37:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657175657374206e6f74206578706972656420796574",
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12259:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39bdfa9a2d26c13da0c9b6ca3d4e83611affcc397929e29cfb9e09c9d5c42830",
                          "typeString": "literal_string \"Request not expired yet\""
                        },
                        "value": "Request not expired yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39bdfa9a2d26c13da0c9b6ca3d4e83611affcc397929e29cfb9e09c9d5c42830",
                          "typeString": "literal_string \"Request not expired yet\""
                        }
                      ],
                      "id": 949,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12187:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12187:107:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "12187:107:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        },
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 959,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 936,
                            "src": "12312:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "activeClaims",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 438,
                          "src": "12312:20:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12336:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12312:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41637469766520636c61696d732072756e6e696e67",
                        "id": 963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12339:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f03ffa7bffee1c6dfb6edeb3466aa724b633b692eb668560f915ebb9d3a9a8b",
                          "typeString": "literal_string \"Active claims running\""
                        },
                        "value": "Active claims running"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f03ffa7bffee1c6dfb6edeb3466aa724b633b692eb668560f915ebb9d3a9a8b",
                          "typeString": "literal_string \"Active claims running\""
                        }
                      ],
                      "id": 958,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12304:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12304:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 965,
                  "nodeType": "ExpressionStatement",
                  "src": "12304:59:19"
                },
                {
                  "expression": {
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 966,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 936,
                        "src": "12374:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 968,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawClaimId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 440,
                      "src": "12374:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 969,
                      "name": "CLAIM_ID_WITHDRAWN_EXPIRED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "12400:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12374:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "12374:52:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 973,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 928,
                        "src": "12459:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 974,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 936,
                          "src": "12470:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 424,
                        "src": "12470:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 972,
                      "name": "DepositWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 496,
                      "src": "12442:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12442:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 977,
                  "nodeType": "EmitStatement",
                  "src": "12437:48:19"
                },
                {
                  "assignments": [
                    980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 980,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "12503:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1001,
                      "src": "12496:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3038",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 979,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 978,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3038,
                          "src": "12496:6:19"
                        },
                        "referencedDeclaration": 3038,
                        "src": "12496:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3038",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 985,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 982,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 936,
                          "src": "12518:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 983,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 426,
                        "src": "12518:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 981,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3038,
                      "src": "12511:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3038_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12511:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3038",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12496:49:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 989,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 936,
                          "src": "12587:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 424,
                        "src": "12587:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 991,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 936,
                              "src": "12615:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 992,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 430,
                            "src": "12615:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 993,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 936,
                              "src": "12632:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 994,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 434,
                            "src": "12632:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12615:30:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 996,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 936,
                            "src": "12648:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "protocolFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 436,
                          "src": "12648:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12615:52:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 986,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "12555:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3038",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3070,
                      "src": "12555:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3038_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3038_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12555:122:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1000,
                  "nodeType": "ExpressionStatement",
                  "src": "12555:122:19"
                }
              ]
            },
            "documentation": {
              "id": 926,
              "nodeType": "StructuredDocumentation",
              "src": "11763:171:19",
              "text": "Withdraw funds deposited with an expired request.\n No claims must be active for the request.\n @param requestId ID of the expired request."
            },
            "functionSelector": "79650559",
            "id": 1002,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 931,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 928,
                    "src": "12030:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 932,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 930,
                  "name": "validRequestId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 688,
                  "src": "12015:14:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "12015:25:19"
              }
            ],
            "name": "withdrawExpiredRequest",
            "nameLocation": "11948:22:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "11979:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "11971:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11971:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11970:19:19"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12045:0:19"
            },
            "scope": 2009,
            "src": "11939:745:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1149,
              "nodeType": "Block",
              "src": "13199:1080:19",
              "statements": [
                {
                  "assignments": [
                    1019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1019,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "13225:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1149,
                      "src": "13209:23:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1018,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1017,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 449,
                          "src": "13209:7:19"
                        },
                        "referencedDeclaration": 449,
                        "src": "13209:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1023,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1020,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "13235:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$449_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1022,
                    "indexExpression": {
                      "id": 1021,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "13244:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13235:19:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$449_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13209:45:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1025,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13273:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13273:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1027,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "13291:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 432,
                          "src": "13291:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13273:36:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526571756573742065787069726564",
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13311:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9025c283ecf0e47ba79d56362348df0807a1b8d91051901470410464f6fd80f1",
                          "typeString": "literal_string \"Request expired\""
                        },
                        "value": "Request expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9025c283ecf0e47ba79d56362348df0807a1b8d91051901470410464f6fd80f1",
                          "typeString": "literal_string \"Request expired\""
                        }
                      ],
                      "id": 1024,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13265:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13265:64:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1032,
                  "nodeType": "ExpressionStatement",
                  "src": "13265:64:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1034,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "13347:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawClaimId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 440,
                          "src": "13347:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13374:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13347:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f73697420616c72656164792077697468647261776e",
                        "id": 1038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13377:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        },
                        "value": "Deposit already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        }
                      ],
                      "id": 1033,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13339:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13339:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1040,
                  "nodeType": "ExpressionStatement",
                  "src": "13339:66:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1042,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13423:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "13423:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1044,
                          "name": "claimStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 549,
                          "src": "13436:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13423:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374616b6520616d6f756e74",
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13448:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ad3e5bc3e0d5a08a9885d6e44516a7467939c5df8fabf19beccfc02562b99dc",
                          "typeString": "literal_string \"Invalid stake amount\""
                        },
                        "value": "Invalid stake amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ad3e5bc3e0d5a08a9885d6e44516a7467939c5df8fabf19beccfc02562b99dc",
                          "typeString": "literal_string \"Invalid stake amount\""
                        }
                      ],
                      "id": 1041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13415:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13415:56:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "13415:56:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1050,
                          "name": "fillId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "13489:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13507:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13499:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 1051,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "13499:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13499:10:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "13489:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c6c4964206d757374206e6f7420626520307830",
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13511:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_576d47f738afedfa6cd889e052ba048e590239bf0398ab4e36e95ec97dbb5828",
                          "typeString": "literal_string \"FillId must not be 0x0\""
                        },
                        "value": "FillId must not be 0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_576d47f738afedfa6cd889e052ba048e590239bf0398ab4e36e95ec97dbb5828",
                          "typeString": "literal_string \"FillId must not be 0x0\""
                        }
                      ],
                      "id": 1049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13481:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13481:55:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "13481:55:19"
                },
                {
                  "expression": {
                    "id": 1063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1059,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "13547:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1061,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activeClaims",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 438,
                      "src": "13547:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint192",
                        "typeString": "uint192"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13571:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13547:25:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint192",
                      "typeString": "uint192"
                    }
                  },
                  "id": 1064,
                  "nodeType": "ExpressionStatement",
                  "src": "13547:25:19"
                },
                {
                  "expression": {
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1065,
                      "name": "currentNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "13582:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13598:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13582:17:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1068,
                  "nodeType": "ExpressionStatement",
                  "src": "13582:17:19"
                },
                {
                  "assignments": [
                    1071
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1071,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "13624:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1149,
                      "src": "13610:19:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1070,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1069,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 470,
                          "src": "13610:5:19"
                        },
                        "referencedDeclaration": 470,
                        "src": "13610:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1075,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1072,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 594,
                      "src": "13632:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$470_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1074,
                    "indexExpression": {
                      "id": 1073,
                      "name": "currentNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "13639:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13632:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$470_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13610:42:19"
                },
                {
                  "expression": {
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1076,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "13662:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1078,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 451,
                      "src": "13662:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1079,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "13680:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "13662:27:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1081,
                  "nodeType": "ExpressionStatement",
                  "src": "13662:27:19"
                },
                {
                  "expression": {
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1082,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "13699:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1084,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 453,
                      "src": "13699:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1085,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "13715:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "13715:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13699:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1088,
                  "nodeType": "ExpressionStatement",
                  "src": "13699:26:19"
                },
                {
                  "expression": {
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1089,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "13735:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1091,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimerStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "13735:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1092,
                      "name": "claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "13756:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13735:31:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "13735:31:19"
                },
                {
                  "expression": {
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1095,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "13776:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1097,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastChallenger",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 461,
                      "src": "13776:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13807:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13799:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1098,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13799:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13799:10:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13776:33:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "13776:33:19"
                },
                {
                  "expression": {
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1104,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "13819:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "challengerStakeTotal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 463,
                      "src": "13819:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13848:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13819:30:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1109,
                  "nodeType": "ExpressionStatement",
                  "src": "13819:30:19"
                },
                {
                  "expression": {
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1110,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "13859:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawnAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 465,
                      "src": "13859:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13883:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13859:25:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "13859:25:19"
                },
                {
                  "expression": {
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1116,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "13894:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1118,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "termination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 467,
                      "src": "13894:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1119,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "13914:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "13914:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1121,
                        "name": "claimPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "13932:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13914:29:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13894:49:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1124,
                  "nodeType": "ExpressionStatement",
                  "src": "13894:49:19"
                },
                {
                  "expression": {
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1125,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "13953:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fillId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 469,
                      "src": "13953:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1128,
                      "name": "fillId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "13968:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "13953:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1130,
                  "nodeType": "ExpressionStatement",
                  "src": "13953:21:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1132,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "14013:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1133,
                        "name": "currentNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 577,
                        "src": "14036:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1134,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1071,
                          "src": "14062:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 453,
                        "src": "14062:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1136,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1071,
                          "src": "14089:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimerStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 455,
                        "src": "14089:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1138,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1071,
                          "src": "14121:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastChallenger",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 461,
                        "src": "14121:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1140,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1071,
                          "src": "14155:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengerStakeTotal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 463,
                        "src": "14155:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1142,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1071,
                          "src": "14195:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "termination",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 467,
                        "src": "14195:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1144,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1007,
                        "src": "14226:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1131,
                      "name": "ClaimMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "13990:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,uint256,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13990:252:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1146,
                  "nodeType": "EmitStatement",
                  "src": "13985:257:19"
                },
                {
                  "expression": {
                    "id": 1147,
                    "name": "currentNonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 577,
                    "src": "14260:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1016,
                  "id": 1148,
                  "nodeType": "Return",
                  "src": "14253:19:19"
                }
              ]
            },
            "documentation": {
              "id": 1003,
              "nodeType": "StructuredDocumentation",
              "src": "12690:328:19",
              "text": "Claim that a request was filled by the caller.\n The request must still be valid at call time.\n The caller must provide the ``claimStake`` amount of source rollup's native\n token.\n @param requestId ID of the request.\n @param fillId The fill ID.\n @return The claim ID."
            },
            "functionSelector": "743c151a",
            "id": 1150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1010,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1005,
                    "src": "13136:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1011,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1009,
                  "name": "validRequestId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 688,
                  "src": "13121:14:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "13121:25:19"
              },
              {
                "id": 1013,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1012,
                  "name": "onlyWhitelist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 326,
                  "src": "13155:13:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "13155:13:19"
              }
            ],
            "name": "claimRequest",
            "nameLocation": "13032:12:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "13053:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13045:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13045:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1007,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "13072:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13064:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13064:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13044:35:19"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1015,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13186:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13186:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13185:9:19"
            },
            "scope": 2009,
            "src": "13023:1256:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1357,
              "nodeType": "Block",
              "src": "15585:1958:19",
              "statements": [
                {
                  "assignments": [
                    1161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1161,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "15609:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1357,
                      "src": "15595:19:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1160,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1159,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 470,
                          "src": "15595:5:19"
                        },
                        "referencedDeclaration": 470,
                        "src": "15595:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1165,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1162,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 594,
                      "src": "15617:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$470_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1164,
                    "indexExpression": {
                      "id": 1163,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1153,
                      "src": "15624:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15617:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$470_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15595:37:19"
                },
                {
                  "assignments": [
                    1168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1168,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "15658:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1357,
                      "src": "15642:23:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1167,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1166,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 449,
                          "src": "15642:7:19"
                        },
                        "referencedDeclaration": 449,
                        "src": "15642:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1173,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1169,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "15668:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$449_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1172,
                    "indexExpression": {
                      "expression": {
                        "id": 1170,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1161,
                        "src": "15677:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1171,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 451,
                      "src": "15677:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15668:25:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$449_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15642:51:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1175,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "15711:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "15711:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1177,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1161,
                            "src": "15729:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "termination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 467,
                          "src": "15729:17:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15711:35:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d2065787069726564",
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15748:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_798014e7325cea2d102adb3bd5e2a99ef885fb00dba060d9a4f562f3b9926d61",
                          "typeString": "literal_string \"Claim expired\""
                        },
                        "value": "Claim expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_798014e7325cea2d102adb3bd5e2a99ef885fb00dba060d9a4f562f3b9926d61",
                          "typeString": "literal_string \"Claim expired\""
                        }
                      ],
                      "id": 1174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15703:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15703:61:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "15703:61:19"
                },
                {
                  "assignments": [
                    1184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1184,
                      "mutability": "mutable",
                      "name": "nextActor",
                      "nameLocation": "15783:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1357,
                      "src": "15775:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1183,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15775:7:19",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1185,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15775:17:19"
                },
                {
                  "assignments": [
                    1187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1187,
                      "mutability": "mutable",
                      "name": "minValue",
                      "nameLocation": "15810:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1357,
                      "src": "15802:16:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1186,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15802:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1188,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15802:16:19"
                },
                {
                  "assignments": [
                    1190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1190,
                      "mutability": "mutable",
                      "name": "periodExtension",
                      "nameLocation": "15836:15:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1357,
                      "src": "15828:23:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1189,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15828:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1192,
                  "initialValue": {
                    "id": 1191,
                    "name": "challengePeriodExtension",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 555,
                    "src": "15854:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15828:50:19"
                },
                {
                  "assignments": [
                    1194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1194,
                      "mutability": "mutable",
                      "name": "claimerStake",
                      "nameLocation": "15896:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1357,
                      "src": "15888:20:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1193,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15888:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1197,
                  "initialValue": {
                    "expression": {
                      "id": 1195,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1161,
                      "src": "15911:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimerStake",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 455,
                    "src": "15911:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15888:41:19"
                },
                {
                  "assignments": [
                    1199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1199,
                      "mutability": "mutable",
                      "name": "challengerStakeTotal",
                      "nameLocation": "15947:20:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1357,
                      "src": "15939:28:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1198,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15939:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1202,
                  "initialValue": {
                    "expression": {
                      "id": 1200,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1161,
                      "src": "15970:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "challengerStakeTotal",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 463,
                    "src": "15970:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15939:57:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1203,
                      "name": "claimerStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "16011:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1204,
                      "name": "challengerStakeTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "16026:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16011:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1254,
                    "nodeType": "Block",
                    "src": "16379:123:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 1244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1241,
                            "name": "nextActor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1184,
                            "src": "16393:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1242,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1161,
                              "src": "16405:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1243,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 453,
                            "src": "16405:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16393:25:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1245,
                        "nodeType": "ExpressionStatement",
                        "src": "16393:25:19"
                      },
                      {
                        "expression": {
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1246,
                            "name": "minValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "16432:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1247,
                                "name": "challengerStakeTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1199,
                                "src": "16443:20:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1248,
                                "name": "claimerStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1194,
                                "src": "16466:12:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16443:35:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1250,
                              "name": "claimStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 549,
                              "src": "16481:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16443:48:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16432:59:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1253,
                        "nodeType": "ExpressionStatement",
                        "src": "16432:59:19"
                      }
                    ]
                  },
                  "id": 1255,
                  "nodeType": "IfStatement",
                  "src": "16007:495:19",
                  "trueBody": {
                    "id": 1240,
                    "nodeType": "Block",
                    "src": "16048:325:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1206,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "16066:20:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16090:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16066:25:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1217,
                        "nodeType": "IfStatement",
                        "src": "16062:121:19",
                        "trueBody": {
                          "id": 1216,
                          "nodeType": "Block",
                          "src": "16093:90:19",
                          "statements": [
                            {
                              "expression": {
                                "id": 1214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1209,
                                  "name": "periodExtension",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1190,
                                  "src": "16111:15:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1210,
                                    "name": "finalityPeriods",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 582,
                                    "src": "16130:15:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1213,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1211,
                                      "name": "request",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1168,
                                      "src": "16146:7:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                                        "typeString": "struct RequestManager.Request storage pointer"
                                      }
                                    },
                                    "id": 1212,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "targetChainId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 428,
                                    "src": "16146:21:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16130:38:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16111:57:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1215,
                              "nodeType": "ExpressionStatement",
                              "src": "16111:57:19"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1219,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1161,
                                  "src": "16204:5:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                    "typeString": "struct RequestManager.Claim storage pointer"
                                  }
                                },
                                "id": 1220,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "claimer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 453,
                                "src": "16204:13:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1221,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "16221:3:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "16221:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "16204:27:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206368616c6c656e6765206f776e20636c61696d",
                              "id": 1224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16233:28:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_64fb5de882b2bc56d2cbaf6fec54a1e8989ac954bff861bb575a51a0c2e2517c",
                                "typeString": "literal_string \"Cannot challenge own claim\""
                              },
                              "value": "Cannot challenge own claim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_64fb5de882b2bc56d2cbaf6fec54a1e8989ac954bff861bb575a51a0c2e2517c",
                                "typeString": "literal_string \"Cannot challenge own claim\""
                              }
                            ],
                            "id": 1218,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16196:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16196:66:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1226,
                        "nodeType": "ExpressionStatement",
                        "src": "16196:66:19"
                      },
                      {
                        "expression": {
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1227,
                            "name": "nextActor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1184,
                            "src": "16276:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1228,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16288:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16288:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16276:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1231,
                        "nodeType": "ExpressionStatement",
                        "src": "16276:22:19"
                      },
                      {
                        "expression": {
                          "id": 1238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1232,
                            "name": "minValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "16312:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1233,
                                "name": "claimerStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1194,
                                "src": "16323:12:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1234,
                                "name": "challengerStakeTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1199,
                                "src": "16338:20:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16323:35:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16361:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "16323:39:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16312:50:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1239,
                        "nodeType": "ExpressionStatement",
                        "src": "16312:50:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1257,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "16520:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "16520:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1259,
                          "name": "nextActor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "16534:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16520:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656c696769626c6520746f206f7574626964",
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16545:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53e2604a0114b11c1d789e6b14267b95918e9ede3be05afe9cd186cfa90bc222",
                          "typeString": "literal_string \"Not eligible to outbid\""
                        },
                        "value": "Not eligible to outbid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53e2604a0114b11c1d789e6b14267b95918e9ede3be05afe9cd186cfa90bc222",
                          "typeString": "literal_string \"Not eligible to outbid\""
                        }
                      ],
                      "id": 1256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16512:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16512:58:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "16512:58:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1265,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "16588:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "16588:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1267,
                          "name": "minValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1187,
                          "src": "16601:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16588:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207374616b652070726f7669646564",
                        "id": 1269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16611:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                          "typeString": "literal_string \"Not enough stake provided\""
                        },
                        "value": "Not enough stake provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                          "typeString": "literal_string \"Not enough stake provided\""
                        }
                      ],
                      "id": 1264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16580:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16580:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1271,
                  "nodeType": "ExpressionStatement",
                  "src": "16580:59:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1272,
                      "name": "nextActor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1184,
                      "src": "16654:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1273,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1161,
                        "src": "16667:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1274,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 453,
                      "src": "16667:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16654:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1308,
                    "nodeType": "Block",
                    "src": "16744:173:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 1289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1284,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1161,
                              "src": "16758:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1286,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastChallenger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 461,
                            "src": "16758:20:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1287,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16781:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16781:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16758:33:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1290,
                        "nodeType": "ExpressionStatement",
                        "src": "16758:33:19"
                      },
                      {
                        "expression": {
                          "id": 1299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1291,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1161,
                                "src": "16805:5:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                  "typeString": "struct RequestManager.Claim storage pointer"
                                }
                              },
                              "id": 1295,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challengersStakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 459,
                              "src": "16805:23:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1296,
                            "indexExpression": {
                              "expression": {
                                "id": 1293,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16829:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16829:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16805:35:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1297,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16844:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "16844:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16805:48:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1300,
                        "nodeType": "ExpressionStatement",
                        "src": "16805:48:19"
                      },
                      {
                        "expression": {
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1301,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1161,
                              "src": "16867:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1303,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "challengerStakeTotal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 463,
                            "src": "16867:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1304,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16897:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "16897:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16867:39:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1307,
                        "nodeType": "ExpressionStatement",
                        "src": "16867:39:19"
                      }
                    ]
                  },
                  "id": 1309,
                  "nodeType": "IfStatement",
                  "src": "16650:267:19",
                  "trueBody": {
                    "id": 1283,
                    "nodeType": "Block",
                    "src": "16682:56:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 1281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1276,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1161,
                              "src": "16696:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1278,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "claimerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 455,
                            "src": "16696:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1279,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16718:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "16718:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16696:31:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1282,
                        "nodeType": "ExpressionStatement",
                        "src": "16696:31:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1310,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1161,
                        "src": "16927:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1312,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "termination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 467,
                      "src": "16927:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1315,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1161,
                            "src": "16969:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1316,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "termination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 467,
                          "src": "16969:17:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1317,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "17000:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "17000:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1319,
                            "name": "periodExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1190,
                            "src": "17018:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17000:33:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1313,
                          "name": "Math",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4431,
                          "src": "16947:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Math_$4431_$",
                            "typeString": "type(library Math)"
                          }
                        },
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3952,
                        "src": "16947:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16947:96:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16927:116:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1323,
                  "nodeType": "ExpressionStatement",
                  "src": "16927:116:19"
                },
                {
                  "assignments": [
                    1325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1325,
                      "mutability": "mutable",
                      "name": "minimumTermination",
                      "nameLocation": "17061:18:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1357,
                      "src": "17053:26:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1324,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17053:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1330,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1326,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "17082:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "17082:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1328,
                      "name": "challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "17100:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17082:42:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17053:71:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1332,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1161,
                            "src": "17155:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1333,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "termination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 467,
                          "src": "17155:17:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1334,
                          "name": "minimumTermination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1325,
                          "src": "17176:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17155:39:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d207465726d696e6174696f6e20646964206e6f7420696e63726561736520656e6f756768",
                        "id": 1336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17208:43:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_52f68f05681233e159840b61cff71be03c3572a6f365b1b868b9f20d0b66ef2d",
                          "typeString": "literal_string \"Claim termination did not increase enough\""
                        },
                        "value": "Claim termination did not increase enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_52f68f05681233e159840b61cff71be03c3572a6f365b1b868b9f20d0b66ef2d",
                          "typeString": "literal_string \"Claim termination did not increase enough\""
                        }
                      ],
                      "id": 1331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17134:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17134:127:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1338,
                  "nodeType": "ExpressionStatement",
                  "src": "17134:127:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1340,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1161,
                          "src": "17300:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1341,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 451,
                        "src": "17300:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1342,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1153,
                        "src": "17329:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1343,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1161,
                          "src": "17350:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 453,
                        "src": "17350:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1345,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1161,
                          "src": "17377:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimerStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 455,
                        "src": "17377:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1347,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1161,
                          "src": "17409:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1348,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastChallenger",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 461,
                        "src": "17409:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1349,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1161,
                          "src": "17443:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengerStakeTotal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 463,
                        "src": "17443:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1351,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1161,
                          "src": "17483:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "termination",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 467,
                        "src": "17483:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1353,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1161,
                          "src": "17514:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fillId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 469,
                        "src": "17514:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1339,
                      "name": "ClaimMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "17277:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,uint256,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17277:259:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1356,
                  "nodeType": "EmitStatement",
                  "src": "17272:264:19"
                }
              ]
            },
            "documentation": {
              "id": 1151,
              "nodeType": "StructuredDocumentation",
              "src": "14285:1187:19",
              "text": "Challenge an existing claim.\n The claim must still be valid at call time.\n This function implements one round of the challenge game.\n The original claimer is allowed to call this function only\n after someone else made a challenge, i.e. every second round.\n However, once the original claimer counter-challenges, anyone\n can join the game and make another challenge.\n The caller must provide enough native tokens as their stake.\n For the original claimer, the minimum stake is\n ``challengerStakeTotal - claimerStake + claimStake``.\n For challengers, the minimum stake is\n ``claimerStake - challengerStakeTotal + 1``.\n An example (time flows downwards, claimStake = 10)::\n   claimRequest() by Max [stakes 10]\n   challengeClaim() by Alice [stakes 11]\n   challengeClaim() by Max [stakes 11]\n   challengeClaim() by Bob [stakes 16]\n In this example, if Max didn't want to lose the challenge game to\n Alice and Bob, he would have to challenge with a stake of at least 16.\n @param claimId The claim ID."
            },
            "functionSelector": "92c824d8",
            "id": 1358,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1156,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1153,
                    "src": "15572:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1157,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1155,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 708,
                  "src": "15559:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "15559:21:19"
              }
            ],
            "name": "challengeClaim",
            "nameLocation": "15486:14:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1153,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "15509:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1358,
                  "src": "15501:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15501:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15500:17:19"
            },
            "returnParameters": {
              "id": 1158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15585:0:19"
            },
            "scope": 2009,
            "src": "15477:2066:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1477,
              "nodeType": "Block",
              "src": "18212:1103:19",
              "statements": [
                {
                  "assignments": [
                    1371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1371,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "18236:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1477,
                      "src": "18222:19:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1370,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1369,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 470,
                          "src": "18222:5:19"
                        },
                        "referencedDeclaration": 470,
                        "src": "18222:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1375,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1372,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 594,
                      "src": "18244:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$470_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1374,
                    "indexExpression": {
                      "id": 1373,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1361,
                      "src": "18251:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18244:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$470_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18222:37:19"
                },
                {
                  "assignments": [
                    1378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1378,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "18285:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1477,
                      "src": "18269:23:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1377,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1376,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 449,
                          "src": "18269:7:19"
                        },
                        "referencedDeclaration": 449,
                        "src": "18269:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1383,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1379,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "18295:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$449_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1382,
                    "indexExpression": {
                      "expression": {
                        "id": 1380,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1371,
                        "src": "18304:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1381,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 451,
                      "src": "18304:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18295:25:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$449_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18269:51:19"
                },
                {
                  "assignments": [
                    1385,
                    1387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1385,
                      "mutability": "mutable",
                      "name": "claimReceiver",
                      "nameLocation": "18340:13:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1477,
                      "src": "18332:21:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1384,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18332:7:19",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1387,
                      "mutability": "mutable",
                      "name": "ethToTransfer",
                      "nameLocation": "18363:13:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1477,
                      "src": "18355:21:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1386,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18355:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1391,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1389,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "18393:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1388,
                      "name": "resolveClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1697,
                      "src": "18380:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (address,uint256)"
                      }
                    },
                    "id": 1390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18380:21:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18331:70:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 1392,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1371,
                          "src": "18416:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1393,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengersStakes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 459,
                        "src": "18416:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1395,
                      "indexExpression": {
                        "id": 1394,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1385,
                        "src": "18440:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "18416:38:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18457:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18416:42:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1407,
                  "nodeType": "IfStatement",
                  "src": "18412:152:19",
                  "trueBody": {
                    "id": 1406,
                    "nodeType": "Block",
                    "src": "18460:104:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1398,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1371,
                                "src": "18511:5:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                  "typeString": "struct RequestManager.Claim storage pointer"
                                }
                              },
                              "id": 1401,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challengersStakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 459,
                              "src": "18511:23:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1402,
                            "indexExpression": {
                              "id": 1400,
                              "name": "claimReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1385,
                              "src": "18535:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "18511:38:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18552:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "18511:42:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1405,
                        "nodeType": "ExpressionStatement",
                        "src": "18511:42:19"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1408,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1371,
                        "src": "18649:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1409,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawnAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 465,
                      "src": "18649:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18674:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18649:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1419,
                  "nodeType": "IfStatement",
                  "src": "18645:82:19",
                  "trueBody": {
                    "id": 1418,
                    "nodeType": "Block",
                    "src": "18677:50:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 1416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1412,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1378,
                              "src": "18691:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1414,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "activeClaims",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 438,
                            "src": "18691:20:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint192",
                              "typeString": "uint192"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18715:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "18691:25:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          }
                        },
                        "id": 1417,
                        "nodeType": "ExpressionStatement",
                        "src": "18691:25:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1420,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1371,
                        "src": "18736:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1422,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawnAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 465,
                      "src": "18736:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1423,
                      "name": "ethToTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1387,
                      "src": "18761:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18736:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1425,
                  "nodeType": "ExpressionStatement",
                  "src": "18736:38:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1427,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1371,
                            "src": "18805:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1428,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawnAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 465,
                          "src": "18805:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1429,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1371,
                              "src": "18846:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1430,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 455,
                            "src": "18846:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 1431,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1371,
                              "src": "18867:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1432,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "challengerStakeTotal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 463,
                            "src": "18867:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18846:47:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18805:88:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420746f20776974686472617720746f6f206c61726765",
                        "id": 1435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18907:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fbc1cd561c6fdb8c44ffb8537b819c0b098bbbbb6ac5255fbe98d734e5cf1dc0",
                          "typeString": "literal_string \"Amount to withdraw too large\""
                        },
                        "value": "Amount to withdraw too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fbc1cd561c6fdb8c44ffb8537b819c0b098bbbbb6ac5255fbe98d734e5cf1dc0",
                          "typeString": "literal_string \"Amount to withdraw too large\""
                        }
                      ],
                      "id": 1426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18784:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18784:163:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1437,
                  "nodeType": "ExpressionStatement",
                  "src": "18784:163:19"
                },
                {
                  "assignments": [
                    1439,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1439,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "18964:4:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1477,
                      "src": "18959:9:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1438,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "18959:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1446,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19015:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1440,
                          "name": "claimReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1385,
                          "src": "18974:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "18974:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1442,
                          "name": "ethToTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1387,
                          "src": "19000:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "18974:40:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18974:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18958:60:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1448,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "19036:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19042:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19028:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19028:37:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1451,
                  "nodeType": "ExpressionStatement",
                  "src": "19028:37:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1453,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "19101:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1454,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1371,
                          "src": "19110:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 451,
                        "src": "19110:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1456,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1385,
                        "src": "19127:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1452,
                      "name": "ClaimStakeWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "19081:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (uint256,bytes32,address)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19081:60:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1458,
                  "nodeType": "EmitStatement",
                  "src": "19076:65:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1459,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1378,
                          "src": "19156:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1460,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawClaimId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 440,
                        "src": "19156:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19183:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "19156:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1463,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1385,
                        "src": "19188:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 1464,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1371,
                          "src": "19205:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 453,
                        "src": "19205:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "19188:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "19156:62:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1474,
                  "nodeType": "IfStatement",
                  "src": "19152:126:19",
                  "trueBody": {
                    "id": 1473,
                    "nodeType": "Block",
                    "src": "19220:58:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1469,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1378,
                              "src": "19250:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            {
                              "id": 1470,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1361,
                              "src": "19259:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1468,
                            "name": "withdrawDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1757,
                            "src": "19234:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Request_$449_storage_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct RequestManager.Request storage pointer,uint256)"
                            }
                          },
                          "id": 1471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19234:33:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1472,
                        "nodeType": "ExpressionStatement",
                        "src": "19234:33:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1475,
                    "name": "claimReceiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1385,
                    "src": "19295:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1368,
                  "id": 1476,
                  "nodeType": "Return",
                  "src": "19288:20:19"
                }
              ]
            },
            "documentation": {
              "id": 1359,
              "nodeType": "StructuredDocumentation",
              "src": "17549:546:19",
              "text": "Withdraw the deposit that the request submitter left with the contract,\n as well as the staked native tokens associated with the claim.\n In case the caller of this function is a challenger that won the game,\n they will only get their staked native tokens plus the reward in the form\n of full (sole challenger) or partial (multiple challengers) amount\n of native tokens staked by the dishonest claimer.\n @param claimId The claim ID.\n @return The address of the deposit receiver."
            },
            "functionSelector": "2e1a7d4d",
            "id": 1478,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1364,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1361,
                    "src": "18173:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1365,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1363,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 708,
                  "src": "18160:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "18160:21:19"
              }
            ],
            "name": "withdraw",
            "nameLocation": "18109:8:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1361,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "18126:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "18118:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18118:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18117:17:19"
            },
            "returnParameters": {
              "id": 1368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1367,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "18199:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18199:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18198:9:19"
            },
            "scope": 2009,
            "src": "18100:1215:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1696,
              "nodeType": "Block",
              "src": "19428:3233:19",
              "statements": [
                {
                  "assignments": [
                    1489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1489,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "19452:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1696,
                      "src": "19438:19:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1488,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1487,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 470,
                          "src": "19438:5:19"
                        },
                        "referencedDeclaration": 470,
                        "src": "19438:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1493,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1490,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 594,
                      "src": "19460:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$470_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1492,
                    "indexExpression": {
                      "id": 1491,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1480,
                      "src": "19467:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19460:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$470_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19438:37:19"
                },
                {
                  "assignments": [
                    1496
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1496,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "19501:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1696,
                      "src": "19485:23:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1495,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1494,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 449,
                          "src": "19485:7:19"
                        },
                        "referencedDeclaration": 449,
                        "src": "19485:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1501,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1497,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "19511:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$449_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1500,
                    "indexExpression": {
                      "expression": {
                        "id": 1498,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1489,
                        "src": "19520:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1499,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 451,
                      "src": "19520:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19511:25:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$449_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19485:51:19"
                },
                {
                  "assignments": [
                    1503
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1503,
                      "mutability": "mutable",
                      "name": "claimerStake",
                      "nameLocation": "19554:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1696,
                      "src": "19546:20:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1502,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19546:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1506,
                  "initialValue": {
                    "expression": {
                      "id": 1504,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "19569:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimerStake",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 455,
                    "src": "19569:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19546:41:19"
                },
                {
                  "assignments": [
                    1508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1508,
                      "mutability": "mutable",
                      "name": "challengerStakeTotal",
                      "nameLocation": "19605:20:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1696,
                      "src": "19597:28:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1507,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19597:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1511,
                  "initialValue": {
                    "expression": {
                      "id": 1509,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "19628:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1510,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "challengerStakeTotal",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 463,
                    "src": "19628:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19597:57:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1513,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1489,
                            "src": "19685:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1514,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawnAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 465,
                          "src": "19685:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1515,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1503,
                            "src": "19709:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1516,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1508,
                            "src": "19724:20:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19709:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19685:59:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d20616c72656164792077697468647261776e",
                        "id": 1519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19758:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fed46cfba65dedd80d8275fc8dce90ac19cc49eb8cac5fe8e04a827801d5c7ac",
                          "typeString": "literal_string \"Claim already withdrawn\""
                        },
                        "value": "Claim already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fed46cfba65dedd80d8275fc8dce90ac19cc49eb8cac5fe8e04a827801d5c7ac",
                          "typeString": "literal_string \"Claim already withdrawn\""
                        }
                      ],
                      "id": 1512,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19664:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19664:129:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1521,
                  "nodeType": "ExpressionStatement",
                  "src": "19664:129:19"
                },
                {
                  "assignments": [
                    1523
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1523,
                      "mutability": "mutable",
                      "name": "claimValid",
                      "nameLocation": "19809:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1696,
                      "src": "19804:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1522,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19804:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1525,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19822:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19804:23:19"
                },
                {
                  "assignments": [
                    1527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1527,
                      "mutability": "mutable",
                      "name": "filler",
                      "nameLocation": "20265:6:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1696,
                      "src": "20257:14:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1526,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "20257:7:19",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1530,
                  "initialValue": {
                    "expression": {
                      "id": 1528,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1496,
                      "src": "20274:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                        "typeString": "struct RequestManager.Request storage pointer"
                      }
                    },
                    "id": 1529,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "filler",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 442,
                    "src": "20274:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20257:31:19"
                },
                {
                  "assignments": [
                    1532
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1532,
                      "mutability": "mutable",
                      "name": "fillId",
                      "nameLocation": "20306:6:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1696,
                      "src": "20298:14:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1531,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "20298:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1535,
                  "initialValue": {
                    "expression": {
                      "id": 1533,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1496,
                      "src": "20315:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                        "typeString": "struct RequestManager.Request storage pointer"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "fillId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 444,
                    "src": "20315:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20298:31:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1536,
                      "name": "filler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1527,
                      "src": "20344:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20362:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20354:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1537,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20354:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20354:10:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20344:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "baseExpression": {
                        "expression": {
                          "id": 1555,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1496,
                          "src": "20502:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1556,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "invalidFillIds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 448,
                        "src": "20502:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 1558,
                      "indexExpression": {
                        "id": 1557,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1532,
                        "src": "20525:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "20502:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1564,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "20626:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1565,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawClaimId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 440,
                          "src": "20626:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20653:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "20626:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1604,
                        "nodeType": "Block",
                        "src": "20885:246:19",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1594,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1590,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "20963:5:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1591,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "20963:15:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1592,
                                      "name": "claim",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1489,
                                      "src": "20982:5:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                        "typeString": "struct RequestManager.Claim storage pointer"
                                      }
                                    },
                                    "id": 1593,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "termination",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 467,
                                    "src": "20982:17:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "20963:36:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "436c61696d20706572696f64206e6f742066696e6973686564",
                                  "id": 1595,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21017:27:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b8448f60bea41c2365f4846fbc9740459fd6b3e474680edd33ee842ead499b03",
                                    "typeString": "literal_string \"Claim period not finished\""
                                  },
                                  "value": "Claim period not finished"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_b8448f60bea41c2365f4846fbc9740459fd6b3e474680edd33ee842ead499b03",
                                    "typeString": "literal_string \"Claim period not finished\""
                                  }
                                ],
                                "id": 1589,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "20938:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 1596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20938:120:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1597,
                            "nodeType": "ExpressionStatement",
                            "src": "20938:120:19"
                          },
                          {
                            "expression": {
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1598,
                                "name": "claimValid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1523,
                                "src": "21072:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1599,
                                  "name": "claimerStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1503,
                                  "src": "21085:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 1600,
                                  "name": "challengerStakeTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1508,
                                  "src": "21100:20:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21085:35:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "21072:48:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1603,
                            "nodeType": "ExpressionStatement",
                            "src": "21072:48:19"
                          }
                        ]
                      },
                      "id": 1605,
                      "nodeType": "IfStatement",
                      "src": "20622:509:19",
                      "trueBody": {
                        "id": 1588,
                        "nodeType": "Block",
                        "src": "20656:223:19",
                        "statements": [
                          {
                            "expression": {
                              "id": 1586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1568,
                                "name": "claimValid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1523,
                                "src": "20709:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 1576,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1569,
                                      "name": "claim",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1489,
                                      "src": "20738:5:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                        "typeString": "struct RequestManager.Claim storage pointer"
                                      }
                                    },
                                    "id": 1570,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "claimer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 453,
                                    "src": "20738:13:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1571,
                                        "name": "claims",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 594,
                                        "src": "20755:6:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$470_storage_$",
                                          "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                                        }
                                      },
                                      "id": 1574,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 1572,
                                          "name": "request",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1496,
                                          "src": "20762:7:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                                            "typeString": "struct RequestManager.Request storage pointer"
                                          }
                                        },
                                        "id": 1573,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "withdrawClaimId",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 440,
                                        "src": "20762:23:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "20755:31:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$470_storage",
                                        "typeString": "struct RequestManager.Claim storage ref"
                                      }
                                    },
                                    "id": 1575,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "claimer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 453,
                                    "src": "20755:39:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "20738:56:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "id": 1584,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1577,
                                      "name": "claim",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1489,
                                      "src": "20814:5:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                        "typeString": "struct RequestManager.Claim storage pointer"
                                      }
                                    },
                                    "id": 1578,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "fillId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 469,
                                    "src": "20814:12:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1579,
                                        "name": "claims",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 594,
                                        "src": "20830:6:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$470_storage_$",
                                          "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                                        }
                                      },
                                      "id": 1582,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 1580,
                                          "name": "request",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1496,
                                          "src": "20837:7:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                                            "typeString": "struct RequestManager.Request storage pointer"
                                          }
                                        },
                                        "id": 1581,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "withdrawClaimId",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 440,
                                        "src": "20837:23:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "20830:31:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$470_storage",
                                        "typeString": "struct RequestManager.Claim storage ref"
                                      }
                                    },
                                    "id": 1583,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "fillId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 469,
                                    "src": "20830:38:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "src": "20814:54:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "20738:130:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "20709:159:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1587,
                            "nodeType": "ExpressionStatement",
                            "src": "20709:159:19"
                          }
                        ]
                      }
                    },
                    "id": 1606,
                    "nodeType": "IfStatement",
                    "src": "20498:633:19",
                    "trueBody": {
                      "id": 1563,
                      "nodeType": "Block",
                      "src": "20534:82:19",
                      "statements": [
                        {
                          "expression": {
                            "id": 1561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1559,
                              "name": "claimValid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1523,
                              "src": "20587:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "66616c7365",
                              "id": 1560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20600:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "src": "20587:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1562,
                          "nodeType": "ExpressionStatement",
                          "src": "20587:18:19"
                        }
                      ]
                    }
                  },
                  "id": 1607,
                  "nodeType": "IfStatement",
                  "src": "20340:791:19",
                  "trueBody": {
                    "id": 1554,
                    "nodeType": "Block",
                    "src": "20366:126:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 1552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1542,
                            "name": "claimValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1523,
                            "src": "20419:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1543,
                                "name": "filler",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1527,
                                "src": "20432:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1544,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1489,
                                  "src": "20442:5:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                    "typeString": "struct RequestManager.Claim storage pointer"
                                  }
                                },
                                "id": 1545,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "claimer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 453,
                                "src": "20442:13:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "20432:23:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1547,
                                "name": "fillId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1532,
                                "src": "20459:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1548,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1489,
                                  "src": "20469:5:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                    "typeString": "struct RequestManager.Claim storage pointer"
                                  }
                                },
                                "id": 1549,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fillId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 469,
                                "src": "20469:12:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "20459:22:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "20432:49:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "20419:62:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1553,
                        "nodeType": "ExpressionStatement",
                        "src": "20419:62:19"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1609,
                      "mutability": "mutable",
                      "name": "ethToTransfer",
                      "nameLocation": "21203:13:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1696,
                      "src": "21195:21:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1608,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21195:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1610,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21195:21:19"
                },
                {
                  "assignments": [
                    1612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1612,
                      "mutability": "mutable",
                      "name": "claimReceiver",
                      "nameLocation": "21234:13:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1696,
                      "src": "21226:21:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1611,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "21226:7:19",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1613,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21226:21:19"
                },
                {
                  "condition": {
                    "id": 1614,
                    "name": "claimValid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1523,
                    "src": "21262:10:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1627,
                        "name": "challengerStakeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1508,
                        "src": "21466:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21489:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "21466:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1662,
                      "nodeType": "Block",
                      "src": "21766:269:19",
                      "statements": [
                        {
                          "expression": {
                            "id": 1655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1653,
                              "name": "ethToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1609,
                              "src": "21959:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1654,
                              "name": "claimerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1503,
                              "src": "21975:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21959:28:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1656,
                          "nodeType": "ExpressionStatement",
                          "src": "21959:28:19"
                        },
                        {
                          "expression": {
                            "id": 1660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1657,
                              "name": "claimReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1612,
                              "src": "22001:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1658,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2888,
                                "src": "22017:5:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22017:7:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "22001:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1661,
                          "nodeType": "ExpressionStatement",
                          "src": "22001:23:19"
                        }
                      ]
                    },
                    "id": 1663,
                    "nodeType": "IfStatement",
                    "src": "21462:573:19",
                    "trueBody": {
                      "id": 1652,
                      "nodeType": "Block",
                      "src": "21492:268:19",
                      "statements": [
                        {
                          "expression": {
                            "id": 1638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1630,
                              "name": "ethToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1609,
                              "src": "21575:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 1631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21591:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 1632,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1489,
                                    "src": "21595:5:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                      "typeString": "struct RequestManager.Claim storage pointer"
                                    }
                                  },
                                  "id": 1633,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "challengersStakes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 459,
                                  "src": "21595:23:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1636,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1634,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "21619:3:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1635,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "21619:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21595:35:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21591:39:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21575:55:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1639,
                          "nodeType": "ExpressionStatement",
                          "src": "21575:55:19"
                        },
                        {
                          "expression": {
                            "id": 1643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1640,
                              "name": "claimReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1612,
                              "src": "21644:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 1641,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "21660:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "21660:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "21644:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1644,
                          "nodeType": "ExpressionStatement",
                          "src": "21644:26:19"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1646,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1609,
                                  "src": "21693:13:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1647,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21709:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "21693:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4368616c6c656e67657220686173206e6f7468696e6720746f207769746864726177",
                                "id": 1649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21712:36:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_53dcae0c26834ddf9df4522d4ebdb30b7c2bd99b5ce87dd1bca47f3b3a7ab017",
                                  "typeString": "literal_string \"Challenger has nothing to withdraw\""
                                },
                                "value": "Challenger has nothing to withdraw"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_53dcae0c26834ddf9df4522d4ebdb30b7c2bd99b5ce87dd1bca47f3b3a7ab017",
                                  "typeString": "literal_string \"Challenger has nothing to withdraw\""
                                }
                              ],
                              "id": 1645,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "21685:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21685:64:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1651,
                          "nodeType": "ExpressionStatement",
                          "src": "21685:64:19"
                        }
                      ]
                    }
                  },
                  "id": 1664,
                  "nodeType": "IfStatement",
                  "src": "21258:777:19",
                  "trueBody": {
                    "id": 1626,
                    "nodeType": "Block",
                    "src": "21274:182:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 1619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1615,
                            "name": "ethToTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1609,
                            "src": "21351:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1616,
                              "name": "claimerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1503,
                              "src": "21367:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1617,
                              "name": "challengerStakeTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1508,
                              "src": "21382:20:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21367:35:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21351:51:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1620,
                        "nodeType": "ExpressionStatement",
                        "src": "21351:51:19"
                      },
                      {
                        "expression": {
                          "id": 1624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1621,
                            "name": "claimReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1612,
                            "src": "21416:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1622,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1489,
                              "src": "21432:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1623,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 453,
                            "src": "21432:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "21416:29:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1625,
                        "nodeType": "ExpressionStatement",
                        "src": "21416:29:19"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1665,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "22326:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "22326:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1667,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1489,
                        "src": "22340:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1668,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastChallenger",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 461,
                      "src": "22340:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "22326:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1691,
                  "nodeType": "IfStatement",
                  "src": "22322:285:19",
                  "trueBody": {
                    "id": 1690,
                    "nodeType": "Block",
                    "src": "22362:245:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1670,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1503,
                            "src": "22380:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1671,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1508,
                            "src": "22395:20:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22380:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1688,
                          "nodeType": "Block",
                          "src": "22510:87:19",
                          "statements": [
                            {
                              "expression": {
                                "id": 1686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1681,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1609,
                                  "src": "22528:13:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1684,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1682,
                                        "name": "challengerStakeTotal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1508,
                                        "src": "22546:20:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1683,
                                        "name": "claimerStake",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1503,
                                        "src": "22569:12:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "22546:35:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1685,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "22545:37:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22528:54:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1687,
                              "nodeType": "ExpressionStatement",
                              "src": "22528:54:19"
                            }
                          ]
                        },
                        "id": 1689,
                        "nodeType": "IfStatement",
                        "src": "22376:221:19",
                        "trueBody": {
                          "id": 1680,
                          "nodeType": "Block",
                          "src": "22417:87:19",
                          "statements": [
                            {
                              "expression": {
                                "id": 1678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1673,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1609,
                                  "src": "22435:13:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1676,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1674,
                                        "name": "claimerStake",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1503,
                                        "src": "22453:12:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1675,
                                        "name": "challengerStakeTotal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1508,
                                        "src": "22468:20:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "22453:35:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1677,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "22452:37:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22435:54:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1679,
                              "nodeType": "ExpressionStatement",
                              "src": "22435:54:19"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1692,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1612,
                        "src": "22625:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1693,
                        "name": "ethToTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1609,
                        "src": "22640:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1694,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "22624:30:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "functionReturnParameters": 1486,
                  "id": 1695,
                  "nodeType": "Return",
                  "src": "22617:37:19"
                }
              ]
            },
            "id": 1697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resolveClaim",
            "nameLocation": "19330:12:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1480,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "19351:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1697,
                  "src": "19343:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19343:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19342:17:19"
            },
            "returnParameters": {
              "id": 1486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1483,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1697,
                  "src": "19406:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19406:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1485,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1697,
                  "src": "19415:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19415:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19405:18:19"
            },
            "scope": 2009,
            "src": "19321:3340:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1756,
              "nodeType": "Block",
              "src": "22742:421:19",
              "statements": [
                {
                  "assignments": [
                    1707
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1707,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "22766:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1756,
                      "src": "22752:19:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1706,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1705,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 470,
                          "src": "22752:5:19"
                        },
                        "referencedDeclaration": 470,
                        "src": "22752:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1711,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1708,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 594,
                      "src": "22774:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$470_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1710,
                    "indexExpression": {
                      "id": 1709,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1702,
                      "src": "22781:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22774:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$470_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22752:37:19"
                },
                {
                  "assignments": [
                    1713
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1713,
                      "mutability": "mutable",
                      "name": "claimer",
                      "nameLocation": "22807:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1756,
                      "src": "22799:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1712,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "22799:7:19",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1716,
                  "initialValue": {
                    "expression": {
                      "id": 1714,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1707,
                      "src": "22817:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1715,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 453,
                    "src": "22817:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22799:31:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1718,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1707,
                          "src": "22862:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$470_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1719,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 451,
                        "src": "22862:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1720,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "22879:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1717,
                      "name": "DepositWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 496,
                      "src": "22845:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22845:42:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1722,
                  "nodeType": "EmitStatement",
                  "src": "22840:47:19"
                },
                {
                  "expression": {
                    "id": 1727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1723,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1700,
                        "src": "22898:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1725,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawClaimId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 440,
                      "src": "22898:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1726,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1702,
                      "src": "22924:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22898:33:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1728,
                  "nodeType": "ExpressionStatement",
                  "src": "22898:33:19"
                },
                {
                  "expression": {
                    "id": 1735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1729,
                        "name": "collectedProtocolFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "22942:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1732,
                      "indexExpression": {
                        "expression": {
                          "id": 1730,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1700,
                          "src": "22964:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1731,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 426,
                        "src": "22964:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22942:49:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1733,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1700,
                        "src": "22995:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1734,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "protocolFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 436,
                      "src": "22995:32:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22942:85:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1736,
                  "nodeType": "ExpressionStatement",
                  "src": "22942:85:19"
                },
                {
                  "assignments": [
                    1739
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1739,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "23045:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1756,
                      "src": "23038:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3038",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1738,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1737,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3038,
                          "src": "23038:6:19"
                        },
                        "referencedDeclaration": 3038,
                        "src": "23038:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3038",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1744,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1741,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1700,
                          "src": "23060:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1742,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 426,
                        "src": "23060:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1740,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3038,
                      "src": "23053:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3038_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23053:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3038",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23038:49:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1748,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "23116:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1749,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1700,
                            "src": "23125:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1750,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 430,
                          "src": "23125:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 1751,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1700,
                            "src": "23142:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1752,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lpFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 434,
                          "src": "23142:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "23125:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1745,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1739,
                        "src": "23097:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3038",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3070,
                      "src": "23097:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3038_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3038_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23097:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1755,
                  "nodeType": "ExpressionStatement",
                  "src": "23097:59:19"
                }
              ]
            },
            "id": 1757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawDeposit",
            "nameLocation": "22676:15:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1700,
                  "mutability": "mutable",
                  "name": "request",
                  "nameLocation": "22708:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1757,
                  "src": "22692:23:19",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                    "typeString": "struct RequestManager.Request"
                  },
                  "typeName": {
                    "id": 1699,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1698,
                      "name": "Request",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 449,
                      "src": "22692:7:19"
                    },
                    "referencedDeclaration": 449,
                    "src": "22692:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                      "typeString": "struct RequestManager.Request"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1702,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "22725:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1757,
                  "src": "22717:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22717:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22691:42:19"
            },
            "returnParameters": {
              "id": 1704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22742:0:19"
            },
            "scope": 2009,
            "src": "22667:496:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1800,
              "nodeType": "Block",
              "src": "23616:264:19",
              "statements": [
                {
                  "assignments": [
                    1768
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1768,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "23634:6:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "23626:14:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1767,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23626:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1772,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1769,
                      "name": "collectedProtocolFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "23643:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1771,
                    "indexExpression": {
                      "id": 1770,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1760,
                      "src": "23665:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23643:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23626:52:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1774,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1768,
                          "src": "23696:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23705:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "23696:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f746f636f6c20666565206973207a65726f",
                        "id": 1777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23708:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce8ad1c74ab92ff10c0820b04fa1725b871af2e2542ec5c6a08e76dbfc13ba06",
                          "typeString": "literal_string \"Protocol fee is zero\""
                        },
                        "value": "Protocol fee is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce8ad1c74ab92ff10c0820b04fa1725b871af2e2542ec5c6a08e76dbfc13ba06",
                          "typeString": "literal_string \"Protocol fee is zero\""
                        }
                      ],
                      "id": 1773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23688:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23688:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1779,
                  "nodeType": "ExpressionStatement",
                  "src": "23688:43:19"
                },
                {
                  "expression": {
                    "id": 1784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1780,
                        "name": "collectedProtocolFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "23741:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1782,
                      "indexExpression": {
                        "id": 1781,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1760,
                        "src": "23763:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23741:35:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23779:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23741:39:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1785,
                  "nodeType": "ExpressionStatement",
                  "src": "23741:39:19"
                },
                {
                  "assignments": [
                    1788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1788,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "23798:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "23791:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3038",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1787,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1786,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3038,
                          "src": "23791:6:19"
                        },
                        "referencedDeclaration": 3038,
                        "src": "23791:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3038",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1792,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1790,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1760,
                        "src": "23813:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1789,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3038,
                      "src": "23806:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3038_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23806:20:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3038",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23791:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1796,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "23855:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1797,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1768,
                        "src": "23866:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1793,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1788,
                        "src": "23836:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3038",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3070,
                      "src": "23836:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3038_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3038_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23836:37:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1799,
                  "nodeType": "ExpressionStatement",
                  "src": "23836:37:19"
                }
              ]
            },
            "documentation": {
              "id": 1758,
              "nodeType": "StructuredDocumentation",
              "src": "23169:332:19",
              "text": "Withdraw protocol fees collected by the contract.\n Protocol fees are paid in token transferred.\n .. note:: This function can only be called by the contract owner.\n @param tokenAddress The address of the token contract.\n @param recipient The address the fees should be sent to."
            },
            "functionSelector": "cf7b287f",
            "id": 1801,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1765,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1764,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2879,
                  "src": "23602:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "23602:9:19"
              }
            ],
            "name": "withdrawProtocolFees",
            "nameLocation": "23515:20:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1760,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "23544:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "23536:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23536:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1762,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "23566:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "23558:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23558:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23535:41:19"
            },
            "returnParameters": {
              "id": 1766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23616:0:19"
            },
            "scope": 2009,
            "src": "23506:374:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1825,
              "nodeType": "Block",
              "src": "24337:115:19",
              "statements": [
                {
                  "expression": {
                    "id": 1815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1813,
                      "name": "protocolFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 606,
                      "src": "24347:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1814,
                      "name": "newProtocolFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "24364:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24347:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1816,
                  "nodeType": "ExpressionStatement",
                  "src": "24347:34:19"
                },
                {
                  "expression": {
                    "id": 1819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1817,
                      "name": "lpFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 602,
                      "src": "24391:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1818,
                      "name": "newLpFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1806,
                      "src": "24402:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24391:22:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1820,
                  "nodeType": "ExpressionStatement",
                  "src": "24391:22:19"
                },
                {
                  "expression": {
                    "id": 1823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1821,
                      "name": "minLpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 598,
                      "src": "24423:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1822,
                      "name": "newMinLpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1808,
                      "src": "24434:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24423:22:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1824,
                  "nodeType": "ExpressionStatement",
                  "src": "24423:22:19"
                }
              ]
            },
            "documentation": {
              "id": 1802,
              "nodeType": "StructuredDocumentation",
              "src": "23886:305:19",
              "text": "Update fee parameters.\n .. note:: This function can only be called by the contract owner.\n @param newProtocolFeePPM The new value for ``protocolFeePPM``.\n @param newLpFeePPM The new value for ``lpFeePPM``.\n @param newMinLpFee The new value for ``minLpFee``."
            },
            "functionSelector": "78da194b",
            "id": 1826,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1811,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1810,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2879,
                  "src": "24327:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "24327:9:19"
              }
            ],
            "name": "updateFeeData",
            "nameLocation": "24205:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1804,
                  "mutability": "mutable",
                  "name": "newProtocolFeePPM",
                  "nameLocation": "24236:17:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "24228:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24228:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1806,
                  "mutability": "mutable",
                  "name": "newLpFeePPM",
                  "nameLocation": "24271:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "24263:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24263:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1808,
                  "mutability": "mutable",
                  "name": "newMinLpFee",
                  "nameLocation": "24300:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "24292:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24292:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24218:99:19"
            },
            "returnParameters": {
              "id": 1812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24337:0:19"
            },
            "scope": 2009,
            "src": "24196:256:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1838,
              "nodeType": "Block",
              "src": "24733:49:19",
              "statements": [
                {
                  "expression": {
                    "id": 1836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1834,
                      "name": "transferLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "24743:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1835,
                      "name": "newTransferLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1829,
                      "src": "24759:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24743:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1837,
                  "nodeType": "ExpressionStatement",
                  "src": "24743:32:19"
                }
              ]
            },
            "documentation": {
              "id": 1827,
              "nodeType": "StructuredDocumentation",
              "src": "24458:196:19",
              "text": "Update the transfer amount limit.\n .. note:: This function can only be called by the contract owner.\n @param newTransferLimit The new value for ``transferLimit``."
            },
            "functionSelector": "d762a37b",
            "id": 1839,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1832,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1831,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2879,
                  "src": "24723:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "24723:9:19"
              }
            ],
            "name": "updateTransferLimit",
            "nameLocation": "24668:19:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1829,
                  "mutability": "mutable",
                  "name": "newTransferLimit",
                  "nameLocation": "24696:16:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1839,
                  "src": "24688:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24688:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24687:26:19"
            },
            "returnParameters": {
              "id": 1833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24733:0:19"
            },
            "scope": 2009,
            "src": "24659:123:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1867,
              "nodeType": "Block",
              "src": "25159:211:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1850,
                          "name": "finalityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1844,
                          "src": "25177:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25194:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25177:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696e616c69747920706572696f64206d7573742062652067726561746572207468616e2030",
                        "id": 1853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25197:40:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25ea573be6ea1512aa3df00891acf9b351bb62ca968c15c699c1ce305b8feae2",
                          "typeString": "literal_string \"Finality period must be greater than 0\""
                        },
                        "value": "Finality period must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25ea573be6ea1512aa3df00891acf9b351bb62ca968c15c699c1ce305b8feae2",
                          "typeString": "literal_string \"Finality period must be greater than 0\""
                        }
                      ],
                      "id": 1849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25169:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25169:69:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1855,
                  "nodeType": "ExpressionStatement",
                  "src": "25169:69:19"
                },
                {
                  "expression": {
                    "id": 1860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1856,
                        "name": "finalityPeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "25248:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1858,
                      "indexExpression": {
                        "id": 1857,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1842,
                        "src": "25264:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "25248:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1859,
                      "name": "finalityPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1844,
                      "src": "25281:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25248:47:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1861,
                  "nodeType": "ExpressionStatement",
                  "src": "25248:47:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1863,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1842,
                        "src": "25333:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1864,
                        "name": "finalityPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1844,
                        "src": "25348:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1862,
                      "name": "FinalityPeriodUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 530,
                      "src": "25311:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25311:52:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1866,
                  "nodeType": "EmitStatement",
                  "src": "25306:57:19"
                }
              ]
            },
            "documentation": {
              "id": 1840,
              "nodeType": "StructuredDocumentation",
              "src": "24788:253:19",
              "text": "Set the finality period for the given target chain.\n .. note:: This function can only be called by the contract owner.\n @param targetChainId The target chain ID.\n @param finalityPeriod Finality period in seconds."
            },
            "functionSelector": "d137920b",
            "id": 1868,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1847,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1846,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2879,
                  "src": "25145:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "25145:9:19"
              }
            ],
            "name": "setFinalityPeriod",
            "nameLocation": "25055:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1842,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "25081:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1868,
                  "src": "25073:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25073:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1844,
                  "mutability": "mutable",
                  "name": "finalityPeriod",
                  "nameLocation": "25104:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1868,
                  "src": "25096:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25096:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25072:47:19"
            },
            "returnParameters": {
              "id": 1848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25159:0:19"
            },
            "scope": 2009,
            "src": "25046:324:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1885,
              "nodeType": "Block",
              "src": "25728:103:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1875,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 574,
                          "src": "25746:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25760:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "25746:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420616c72656164792064657072656361746564",
                        "id": 1878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25767:29:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad2c6c42423d3e98c875f9dce2f80040aa442e807c64f7403f0d4b02b859f419",
                          "typeString": "literal_string \"Contract already deprecated\""
                        },
                        "value": "Contract already deprecated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad2c6c42423d3e98c875f9dce2f80040aa442e807c64f7403f0d4b02b859f419",
                          "typeString": "literal_string \"Contract already deprecated\""
                        }
                      ],
                      "id": 1874,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25738:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25738:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1880,
                  "nodeType": "ExpressionStatement",
                  "src": "25738:59:19"
                },
                {
                  "expression": {
                    "id": 1883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1881,
                      "name": "deprecated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "25807:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25820:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "25807:17:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1884,
                  "nodeType": "ExpressionStatement",
                  "src": "25807:17:19"
                }
              ]
            },
            "documentation": {
              "id": 1869,
              "nodeType": "StructuredDocumentation",
              "src": "25376:299:19",
              "text": "Mark the contract as deprecated.\n Once the contract is deprecated, it cannot be used to create new\n requests anymore. Withdrawing deposited funds and claim stakes\n still works, though.\n .. note:: This function can only be called by the contract owner."
            },
            "functionSelector": "ea656f7d",
            "id": 1886,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1872,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1871,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2879,
                  "src": "25718:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "25718:9:19"
              }
            ],
            "name": "deprecateContract",
            "nameLocation": "25689:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25706:2:19"
            },
            "returnParameters": {
              "id": 1873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25728:0:19"
            },
            "scope": 2009,
            "src": "25680:151:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1903,
              "nodeType": "Block",
              "src": "26536:66:19",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1896,
                          "name": "requests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "26553:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$449_storage_$",
                            "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                          }
                        },
                        "id": 1898,
                        "indexExpression": {
                          "id": 1897,
                          "name": "requestId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1889,
                          "src": "26562:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26553:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage",
                          "typeString": "struct RequestManager.Request storage ref"
                        }
                      },
                      "id": 1899,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "invalidFillIds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 448,
                      "src": "26553:34:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 1901,
                    "indexExpression": {
                      "id": 1900,
                      "name": "fillId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1891,
                      "src": "26588:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "26553:42:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1895,
                  "id": 1902,
                  "nodeType": "Return",
                  "src": "26546:49:19"
                }
              ]
            },
            "documentation": {
              "id": 1887,
              "nodeType": "StructuredDocumentation",
              "src": "25837:581:19",
              "text": "Returns whether a fill is invalidated or not\n Calling invalidateFill() will set this boolean to true,\n marking that the ``fillId`` for the corresponding ``requestId`` was\n invalidated.\n Calling resolveRequest will validate it again, setting request.invalidatedFills[fillId]\n to false.\n .. seealso:: :sol:func:`invalidateFill`\n .. seealso:: :sol:func:`resolveRequest`\n @param requestId The request ID\n @param fillId The fill ID\n @return Whether the fill ID is invalid for the given request ID"
            },
            "functionSelector": "30a08cbc",
            "id": 1904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInvalidFill",
            "nameLocation": "26432:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1889,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "26454:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1904,
                  "src": "26446:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1888,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26446:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1891,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "26473:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1904,
                  "src": "26465:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1890,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26465:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26445:35:19"
            },
            "returnParameters": {
              "id": 1895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1894,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1904,
                  "src": "26526:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1893,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "26526:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26525:6:19"
            },
            "scope": 2009,
            "src": "26423:179:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1952,
              "nodeType": "Block",
              "src": "27197:235:19",
              "statements": [
                {
                  "assignments": [
                    1921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1921,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "27223:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1952,
                      "src": "27207:23:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1920,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1919,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 449,
                          "src": "27207:7:19"
                        },
                        "referencedDeclaration": 449,
                        "src": "27207:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1925,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1922,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "27233:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$449_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1924,
                    "indexExpression": {
                      "id": 1923,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1907,
                      "src": "27242:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27233:19:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$449_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27207:45:19"
                },
                {
                  "expression": {
                    "id": 1930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1926,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1921,
                        "src": "27262:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1928,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "filler",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 442,
                      "src": "27262:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1929,
                      "name": "filler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1913,
                      "src": "27279:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "27262:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1931,
                  "nodeType": "ExpressionStatement",
                  "src": "27262:23:19"
                },
                {
                  "expression": {
                    "id": 1936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1932,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1921,
                        "src": "27295:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1934,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fillId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 444,
                      "src": "27295:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1935,
                      "name": "fillId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1909,
                      "src": "27312:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "27295:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1937,
                  "nodeType": "ExpressionStatement",
                  "src": "27295:23:19"
                },
                {
                  "expression": {
                    "id": 1944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 1938,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1921,
                          "src": "27329:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1941,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "invalidFillIds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 448,
                        "src": "27329:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 1942,
                      "indexExpression": {
                        "id": 1940,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1909,
                        "src": "27352:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "27329:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27362:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "27329:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1945,
                  "nodeType": "ExpressionStatement",
                  "src": "27329:38:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1947,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1907,
                        "src": "27399:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1948,
                        "name": "filler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1913,
                        "src": "27410:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1949,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1909,
                        "src": "27418:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1946,
                      "name": "RequestResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 539,
                      "src": "27383:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,address,bytes32)"
                      }
                    },
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27383:42:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1951,
                  "nodeType": "EmitStatement",
                  "src": "27378:47:19"
                }
              ]
            },
            "documentation": {
              "id": 1905,
              "nodeType": "StructuredDocumentation",
              "src": "26608:405:19",
              "text": "Mark the request identified by ``requestId`` as filled by ``filler``.\n .. note::\n     This function is a restricted call function. Only callable by the added caller.\n @param requestId The request ID.\n @param fillId The fill ID.\n @param resolutionChainId The resolution (L1) chain ID.\n @param filler The address that filled the request."
            },
            "functionSelector": "5b3a6ef2",
            "id": 1953,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1916,
                    "name": "resolutionChainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1911,
                    "src": "27178:17:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1917,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1915,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2331,
                  "src": "27167:10:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "27167:29:19"
              }
            ],
            "name": "resolveRequest",
            "nameLocation": "27027:14:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1907,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "27059:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1953,
                  "src": "27051:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1906,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27051:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1909,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "27086:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1953,
                  "src": "27078:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1908,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27078:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1911,
                  "mutability": "mutable",
                  "name": "resolutionChainId",
                  "nameLocation": "27110:17:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1953,
                  "src": "27102:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27102:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1913,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "27145:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1953,
                  "src": "27137:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27137:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27041:116:19"
            },
            "returnParameters": {
              "id": 1918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27197:0:19"
            },
            "scope": 2009,
            "src": "27018:414:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2007,
              "nodeType": "Block",
              "src": "27943:405:19",
              "statements": [
                {
                  "assignments": [
                    1968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1968,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "27969:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2007,
                      "src": "27953:23:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1967,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1966,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 449,
                          "src": "27953:7:19"
                        },
                        "referencedDeclaration": 449,
                        "src": "27953:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1972,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1969,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "27979:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$449_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1971,
                    "indexExpression": {
                      "id": 1970,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1956,
                      "src": "27988:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27979:19:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$449_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27953:45:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1974,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1968,
                            "src": "28029:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1975,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "filler",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 442,
                          "src": "28029:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28055:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "28047:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1976,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "28047:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28047:10:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "28029:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420696e76616c6964617465207265736f6c7665642066696c6c73",
                        "id": 1981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28071:34:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c76b1b933590b1d78f647fc6d1d56cd7bfc7e7706ad90fdd0c3a26eadf9d14ae",
                          "typeString": "literal_string \"Cannot invalidate resolved fills\""
                        },
                        "value": "Cannot invalidate resolved fills"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c76b1b933590b1d78f647fc6d1d56cd7bfc7e7706ad90fdd0c3a26eadf9d14ae",
                          "typeString": "literal_string \"Cannot invalidate resolved fills\""
                        }
                      ],
                      "id": 1973,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28008:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28008:107:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1983,
                  "nodeType": "ExpressionStatement",
                  "src": "28008:107:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 1985,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1968,
                              "src": "28146:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1986,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "invalidFillIds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 448,
                            "src": "28146:22:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 1988,
                          "indexExpression": {
                            "id": 1987,
                            "name": "fillId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1958,
                            "src": "28169:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28146:30:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28180:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "28146:39:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c6c20616c726561647920696e76616c696461746564",
                        "id": 1991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28199:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8c16296ae5b68b3a4b2277be98d9404b6766aa65e63140a7bf7f2813c4dabc3",
                          "typeString": "literal_string \"Fill already invalidated\""
                        },
                        "value": "Fill already invalidated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8c16296ae5b68b3a4b2277be98d9404b6766aa65e63140a7bf7f2813c4dabc3",
                          "typeString": "literal_string \"Fill already invalidated\""
                        }
                      ],
                      "id": 1984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28125:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28125:110:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1993,
                  "nodeType": "ExpressionStatement",
                  "src": "28125:110:19"
                },
                {
                  "expression": {
                    "id": 2000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 1994,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1968,
                          "src": "28246:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$449_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1997,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "invalidFillIds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 448,
                        "src": "28246:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 1998,
                      "indexExpression": {
                        "id": 1996,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1958,
                        "src": "28269:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "28246:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28279:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "28246:37:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2001,
                  "nodeType": "ExpressionStatement",
                  "src": "28246:37:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2003,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1956,
                        "src": "28323:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2004,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1958,
                        "src": "28334:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2002,
                      "name": "FillInvalidatedResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "28299:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 2005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28299:42:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2006,
                  "nodeType": "EmitStatement",
                  "src": "28294:47:19"
                }
              ]
            },
            "documentation": {
              "id": 1954,
              "nodeType": "StructuredDocumentation",
              "src": "27438:345:19",
              "text": "Mark the fill identified by ``requestId`` and ``fillId`` as invalid.\n .. note::\n     This function is a restricted call function. Only callable by the added caller.\n @param requestId The request ID.\n @param fillId The fill ID.\n @param resolutionChainId The resolution (L1) chain ID."
            },
            "functionSelector": "03fc4c37",
            "id": 2008,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1963,
                    "name": "resolutionChainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1960,
                    "src": "27924:17:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1964,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1962,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2331,
                  "src": "27913:10:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "27913:29:19"
              }
            ],
            "name": "invalidateFill",
            "nameLocation": "27797:14:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1956,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "27829:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2008,
                  "src": "27821:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1955,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27821:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1958,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "27856:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2008,
                  "src": "27848:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1957,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27848:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1960,
                  "mutability": "mutable",
                  "name": "resolutionChainId",
                  "nameLocation": "27880:17:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2008,
                  "src": "27872:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27872:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27811:92:19"
            },
            "returnParameters": {
              "id": 1965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27943:0:19"
            },
            "scope": 2009,
            "src": "27788:560:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2010,
        "src": "1057:27293:19",
        "usedErrors": []
      }
    ],
    "src": "32:28319:19"
  },
  "bytecode": "6080604052674563918244f40000600b556103e8600c556000600d5569021e19e0c9bab2400000600e553480156200003657600080fd5b5060405162002e5938038062002e598339810160408190526200005991620000c6565b620000643362000076565b600392909255600455600555620000f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060608486031215620000dc57600080fd5b8351925060208401519150604084015190509250925092565b612d5480620001056000396000f3fe6080604052600436106102465760003560e01c80637dc2cd9811610139578063cf7b287f116100b6578063ea6288981161007a578063ea6288981461081e578063ea656f7d14610834578063eb32117314610849578063f2fde38b1461085f578063f7d64cec1461087f578063f94325171461089f57600080fd5b8063cf7b287f14610792578063d137920b146107b2578063d762a37b146107d2578063e2653eeb146107f2578063e7aad5c41461080857600080fd5b80639e375226116100fd5780639e3752261461065c578063a032b5f41461068c578063a888c2cd146106ac578063adb610a31461075c578063cea74edf1461077257600080fd5b80637dc2cd98146105055780638da5cb5b1461051b57806392c824d81461053957806396171d051461054c5780639d8669851461056257600080fd5b80633993b6ed116101c75780637203ae3b1161018b5780637203ae3b14610472578063743c151a14610492578063747293fb146104a557806378da194b146104c557806379650559146104e557600080fd5b80633993b6ed146103da5780635b3a6ef2146103fa5780635d5aa11b1461041a5780636bc6c8d114610430578063715018a61461045d57600080fd5b80632e1a7d4d1161020e5780632e1a7d4d1461030e5780632f4212b81461032e5780632f92f0091461034e57806330a08cbc1461037b57806331e08f7a146103ba57600080fd5b806303fc4c371461024b5780630e136b191461026d5780630e19a1c61461029c5780631489f8d2146102d45780631d18adc5146102f8575b600080fd5b34801561025757600080fd5b5061026b61026636600461292e565b6108b5565b005b34801561027957600080fd5b506006546102879060ff1681565b60405190151581526020015b60405180910390f35b3480156102a857600080fd5b506102bc6102b736600461295a565b610b04565b6040516001600160a01b039091168152602001610293565b3480156102e057600080fd5b506102ea61012c81565b604051908152602001610293565b34801561030457600080fd5b506102ea60055481565b34801561031a57600080fd5b506102bc61032936600461297c565b610b32565b34801561033a57600080fd5b506102ea6103493660046129b1565b610de3565b34801561035a57600080fd5b506102ea61036936600461297c565b60086020526000908152604090205481565b34801561038757600080fd5b5061028761039636600461295a565b6000918252600960209081526040808420928452600b909201905290205460ff1690565b3480156103c657600080fd5b5061026b6103d5366004612a10565b6111fb565b3480156103e657600080fd5b5061026b6103f5366004612a10565b61125f565b34801561040657600080fd5b5061026b610415366004612a2b565b6112b8565b34801561042657600080fd5b506102ea600b5481565b34801561043c57600080fd5b506102ea61044b366004612a10565b600f6020526000908152604090205481565b34801561046957600080fd5b5061026b611461565b34801561047e57600080fd5b5061026b61048d366004612a6a565b611475565b6102ea6104a036600461295a565b61148d565b3480156104b157600080fd5b5061026b6104c0366004612a10565b6117a9565b3480156104d157600080fd5b5061026b6104e036600461292e565b6117c0565b3480156104f157600080fd5b5061026b61050036600461297c565b6117d6565b34801561051157600080fd5b506102ea60045481565b34801561052757600080fd5b506000546001600160a01b03166102bc565b61026b61054736600461297c565b6119d4565b34801561055857600080fd5b506102ea61070881565b34801561056e57600080fd5b506105f161057d36600461297c565b600960208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154600889015499890154600a909901546001600160a01b039889169a97891699969895979496939592946001600160c01b03909216939192909116908b565b604080516001600160a01b039c8d1681529a8c1660208c01528a01989098526060890196909652608088019490945260a087019290925260c08601526001600160c01b031660e085015261010084015290921661012082015261014081019190915261016001610293565b34801561066857600080fd5b50610287610677366004612a10565b60016020526000908152604090205460ff1681565b34801561069857600080fd5b506102ea6106a736600461297c565b611dd5565b3480156106b857600080fd5b506107166106c736600461297c565b600a602052600090815260409020805460018201546002830154600484015460058501546006860154600787015460089097015495966001600160a01b03958616969495909316939192909188565b604080519889526001600160a01b0397881660208a0152880195909552949092166060860152608085015260a084015260c083019190915260e082015261010001610293565b34801561076857600080fd5b506102ea60075481565b34801561077e57600080fd5b506102ea61078d36600461297c565b611df9565b34801561079e57600080fd5b5061026b6107ad366004612aa6565b611e17565b3480156107be57600080fd5b5061026b6107cd36600461295a565b611ea2565b3480156107de57600080fd5b5061026b6107ed36600461297c565b611f58565b3480156107fe57600080fd5b506102ea600c5481565b34801561081457600080fd5b506102ea600d5481565b34801561082a57600080fd5b506102ea60001981565b34801561084057600080fd5b5061026b611f65565b34801561085557600080fd5b506102ea60035481565b34801561086b57600080fd5b5061026b61087a366004612a10565b611fcf565b34801561088b57600080fd5b506102ea61089a36600461297c565b612045565b3480156108ab57600080fd5b506102ea600e5481565b60008181526002602052604090205481906001600160a01b031646820361090c57336001600160a01b038216146109075760405162461bcd60e51b81526004016108fe90612ad9565b60405180910390fd5b6109d2565b6000828152600260205260409020600101546001600160a01b0316806109445760405162461bcd60e51b81526004016108fe90612b0e565b60405163845c544360e01b81526001600160a01b03838116600483015233602483015282169063845c544390604401602060405180830381865afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b49190612b50565b6109d05760405162461bcd60e51b81526004016108fe90612ad9565b505b6000858152600960208190526040909120908101546001600160a01b031615610a3d5760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f7420696e76616c6964617465207265736f6c7665642066696c6c7360448201526064016108fe565b6000858152600b8201602052604090205460ff1615610a9e5760405162461bcd60e51b815260206004820152601860248201527f46696c6c20616c726561647920696e76616c696461746564000000000000000060448201526064016108fe565b6000858152600b8201602052604090819020805460ff19166001179055517f5571b83c623961fb42d39ce6d6d2092153ace66c008e2dc2472ec6d2e8fad04590610af49088908890918252602082015260400190565b60405180910390a1505050505050565b60026020528160005260406000208160028110610b2057600080fd5b01546001600160a01b03169150829050565b6000818152600a602052604081206001015482906001600160a01b0316610b8f5760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b60448201526064016108fe565b6000838152600a602090815260408083208054845260099092528220909180610bb787612069565b6001600160a01b0382166000908152600387016020526040902054919350915015610bf8576001600160a01b03821660009081526003850160205260408120555b8360060154600003610c4a5760078301805460019190600090610c259084906001600160c01b0316612b88565b92506101000a8154816001600160c01b0302191690836001600160c01b031602179055505b80846006016000828254610c5e9190612bb0565b909155505060058401546002850154610c779190612bb0565b84600601541115610cca5760405162461bcd60e51b815260206004820152601c60248201527f416d6f756e7420746f20776974686472617720746f6f206c617267650000000060448201526064016108fe565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610d17576040519150601f19603f3d011682016040523d82523d6000602084013e610d1c565b606091505b5050905080610d645760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016108fe565b8454604080518a81526001600160a01b03861660208201527fa5d98efe63b5c32fd1a0e4d189473a6e9538a04f05da85b3cd50c5915087decf910160405180910390a26008840154158015610dc8575060018501546001600160a01b038481169116145b15610dd757610dd78489612333565b50909695505050505050565b60065460009060ff1615610e325760405162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd081a5cc819195c1c9958d85d195960521b60448201526064016108fe565b6000878152600860205260408120549003610e8f5760405162461bcd60e51b815260206004820152601b60248201527f54617267657420726f6c6c7570206e6f7420737570706f72746564000000000060448201526064016108fe565b61012c821015610ee15760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920706572696f6420746f6f2073686f72740000000000000060448201526064016108fe565b610708821115610f335760405162461bcd60e51b815260206004820152601860248201527f56616c696469747920706572696f6420746f6f206c6f6e67000000000000000060448201526064016108fe565b600e54831115610f855760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e742065786365656473207472616e73666572206c696d697400000060448201526064016108fe565b856000610f9185612045565b90506000610f9e86611dd5565b9050600081610fad8489612bb0565b610fb79190612bb0565b604051636eb1769f60e11b815233600482015230602482015290915081906001600160a01b0386169063dd62ed3e90604401602060405180830381865afa158015611006573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102a9190612bc8565b10156110715760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064016108fe565b6001600760008282546110849190612bb0565b909155505060075460408051466020808301919091528183018f90526bffffffffffffffffffffffff1960608e811b8216818501528d901b166074830152608882018b905260a8808301949094528251808303909401845260c890910182528251928101929092206000818152600990935291208054336001600160a01b03199182161782556001820180549091166001600160a01b038e16179055600281018d9055600381018990556111388842612bb0565b8160040181905550848160050181905550838160060181905550817ff852fa5288e6bd150237cec1f415e191d8232b72067c0520011180d7ea00ba8c8e8e8e8e8e60075488600401546040516111ce97969594939291909687526001600160a01b0395861660208801529385166040870152919093166060850152608084019290925260a083019190915260c082015260e00190565b60405180910390a26111eb6001600160a01b0387163330866123fe565b509b9a5050505050505050505050565b611203612469565b6001600160a01b038116600081815260016020818152604092839020805460ff191690921790915590519182527f371fc559c30f70424413fed6bf7e57dc939651331abad5c970a8ea0921c80b2e91015b60405180910390a150565b611267612469565b6001600160a01b038116600081815260016020908152604091829020805460ff1916905590519182527f4e774c97f73f4bea034579e4224498d7d9b3a4109eaa70ed3d85c97a5855f1989101611254565b60008281526002602052604090205482906001600160a01b031646820361130657336001600160a01b038216146113015760405162461bcd60e51b81526004016108fe90612ad9565b6113cc565b6000828152600260205260409020600101546001600160a01b03168061133e5760405162461bcd60e51b81526004016108fe90612b0e565b60405163845c544360e01b81526001600160a01b03838116600483015233602483015282169063845c544390604401602060405180830381865afa15801561138a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ae9190612b50565b6113ca5760405162461bcd60e51b81526004016108fe90612ad9565b505b600086815260096020818152604080842092830180546001600160a01b0319166001600160a01b038916908117909155600a84018a9055898552600b8401835293819020805460ff1916905580518a815291820193909352918201879052907fb32d3c8b5539b0cc3050d5b75e9dad8eca8744a0892259bda27fdb51b99567369060600160405180910390a150505050505050565b611469612469565b61147360006124c3565b565b61147d612469565b611488838383612513565b505050565b60008281526009602052604081205483906001600160a01b03166114e95760405162461bcd60e51b81526020600482015260136024820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b60448201526064016108fe565b3360009081526001602052604090205460ff166115415760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b60448201526064016108fe565b6000848152600960205260409020600481015442106115945760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b60448201526064016108fe565b6008810154156115e25760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b60448201526064016108fe565b600354341461162a5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081cdd185ad948185b5bdd5b9d60621b60448201526064016108fe565b836116705760405162461bcd60e51b8152602060048201526016602482015275046696c6c4964206d757374206e6f74206265203078360541b60448201526064016108fe565b600781018054600191906000906116919084906001600160c01b0316612be1565b92506101000a8154816001600160c01b0302191690836001600160c01b031602179055506001600760008282546116c89190612bb0565b90915550506007546000908152600a602052604081208681556001810180546001600160a01b0319908116331790915560035460028301556004808301805490921690915560058201839055600682019290925590546117289042612bb0565b6007808301829055600883018790555460018301546002840154600485015460058601546040518c967fa317459aaaff5501ec6d0dcfc26440565beaf33dc2ba0f68b7273a50322c215d966117949690956001600160a01b039182169590949116929091908e90612c0c565b60405180910390a25050600754949350505050565b6117b1612469565b6117bd46826000612513565b50565b6117c8612469565b600d92909255600c55600b55565b60008181526009602052604090205481906001600160a01b03166118325760405162461bcd60e51b81526020600482015260136024820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b60448201526064016108fe565b600082815260096020526040902060088101541561188e5760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b60448201526064016108fe565b80600401544210156118e25760405162461bcd60e51b815260206004820152601760248201527f52657175657374206e6f7420657870697265642079657400000000000000000060448201526064016108fe565b60078101546001600160c01b0316156119355760405162461bcd60e51b815260206004820152601560248201527441637469766520636c61696d732072756e6e696e6760581b60448201526064016108fe565b60001960088201558054604080518581526001600160a01b0390921660208301527fab63a14c4aaba38366fd39116091672bb44520328ee870be35a51e573296e565910160405180910390a1600181015481546006830154600584015460038501546001600160a01b03948516946119ce941692916119b391612bb0565b6119bd9190612bb0565b6001600160a01b0384169190612625565b50505050565b6000818152600a602052604090206001015481906001600160a01b0316611a315760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b60448201526064016108fe565b6000828152600a6020908152604080832080548452600990925290912060078201544210611a915760405162461bcd60e51b815260206004820152600d60248201526c10db185a5b48195e1c1a5c9959609a1b60448201526064016108fe565b6005805460028401549184015460009283929180821115611b525780600003611ad5576002860154600090815260086020526040902054611ad29084612bb0565b92505b6001870154336001600160a01b0390911603611b335760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74206368616c6c656e6765206f776e20636c61696d00000000000060448201526064016108fe565b339450611b408183612c4b565b611b4b906001612bb0565b9350611b7e565b60018701546003546001600160a01b039091169550611b718383612c4b565b611b7b9190612bb0565b93505b336001600160a01b03861614611bcf5760405162461bcd60e51b8152602060048201526016602482015275139bdd08195b1a59da589b19481d1bc81bdd5d189a5960521b60448201526064016108fe565b83341015611c1f5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f756768207374616b652070726f76696465640000000000000060448201526064016108fe565b60018701546001600160a01b0390811690861603611c565734876002016000828254611c4b9190612bb0565b90915550611cae9050565b6004870180546001600160a01b03191633908117909155600090815260038801602052604081208054349290611c8d908490612bb0565b9250508190555034876005016000828254611ca89190612bb0565b90915550505b6007870154611cc690611cc18542612bb0565b612655565b6007880155600554600090611cdb9042612bb0565b90508088600701541015611d435760405162461bcd60e51b815260206004820152602960248201527f436c61696d207465726d696e6174696f6e20646964206e6f7420696e637265616044820152680e6ca40cadcdeeaced60bb1b60648201526084016108fe565b87600001547fa317459aaaff5501ec6d0dcfc26440565beaf33dc2ba0f68b7273a50322c215d8b8a60010160009054906101000a90046001600160a01b03168b600201548c60040160009054906101000a90046001600160a01b03168d600501548e600701548f60080154604051611dc19796959493929190612c0c565b60405180910390a250505050505050505050565b6000620f4240600d5483611de99190612c62565b611df39190612c81565b92915050565b6000611e0482611dd5565b611e0d83612045565b611df39190612bb0565b611e1f612469565b6001600160a01b0382166000908152600f602052604090205480611e7c5760405162461bcd60e51b815260206004820152601460248201527350726f746f636f6c20666565206973207a65726f60601b60448201526064016108fe565b6001600160a01b0383166000818152600f602052604081205583906119ce908484612625565b611eaa612469565b60008111611f095760405162461bcd60e51b815260206004820152602660248201527f46696e616c69747920706572696f64206d75737420626520677265617465722060448201526507468616e20360d41b60648201526084016108fe565b60008281526008602090815260409182902083905581518481529081018390527faba57b48b9f1dfd5747a52ed348a6ab6aa7bafb0575363a5cb7b62659f727b65910160405180910390a15050565b611f60612469565b600e55565b611f6d612469565b60065460ff1615611fc05760405162461bcd60e51b815260206004820152601b60248201527f436f6e747261637420616c72656164792064657072656361746564000000000060448201526064016108fe565b6006805460ff19166001179055565b611fd7612469565b6001600160a01b03811661203c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108fe565b6117bd816124c3565b6000611df3600b54620f4240600c548561205f9190612c62565b611cc19190612c81565b6000818152600a60209081526040808320805484526009909252822060028201546005830154849392919061209e8183612bb0565b8460060154106120f05760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792077697468647261776e00000000000000000060448201526064016108fe565b6009830154600a8401546000916001600160a01b03169081156121365760018701546001600160a01b03838116911614801561212f5750866008015481145b9250612211565b6000818152600b8701602052604090205460ff16156121585760009250612211565b6008860154156121b75760088601546000908152600a60205260409020600190810154908801546001600160a01b03908116911614801561212f57506008808701546000908152600a6020526040902081015490880154149250612211565b866007015442101561220b5760405162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f742066696e69736865640000000000000060448201526064016108fe565b83851192505b600080841561223c576122248688612bb0565b60018a01549092506001600160a01b031690506122d5565b85156122c45733600090815260038a01602052604090205461225f906002612c62565b9150339050600082116122bf5760405162461bcd60e51b815260206004820152602260248201527f4368616c6c656e67657220686173206e6f7468696e6720746f20776974686472604482015261617760f01b60648201526084016108fe565b6122d5565b505060005485906001600160a01b03165b60048901546001600160a01b03163303612323578587111561230c576122fb8688612c4b565b6123059083612bb0565b9150612323565b6123168787612c4b565b6123209083612c4b565b91505b9b909a5098505050505050505050565b6000818152600a60209081526040918290206001810154815484519081526001600160a01b0390911692810183905290927fab63a14c4aaba38366fd39116091672bb44520328ee870be35a51e573296e565910160405180910390a160088401839055600684015460018501546001600160a01b03166000908152600f6020526040812080549091906123c7908490612bb0565b90915550506001840154600585015460038601546001600160a01b03909216916123f79184916119bd9190612bb0565b5050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526119ce9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261266e565b6000546001600160a01b031633146114735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108fe565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166125755760405162461bcd60e51b815260206004820152602360248201527f5265737472696374656443616c6c733a2063616c6c65722063616e6e6f74206260448201526206520360ec1b60648201526084016108fe565b6000838152600260205260409020546001600160a01b0316156125e95760405162461bcd60e51b815260206004820152602660248201527f5265737472696374656443616c6c733a2063616c6c657220616c72656164792060448201526565786973747360d01b60648201526084016108fe565b6040805180820182526001600160a01b03808516825283166020808301919091526000868152600291829052929092206119ce929091906128c1565b6040516001600160a01b03831660248201526044810182905261148890849063a9059cbb60e01b90606401612432565b6000818310156126655781612667565b825b9392505050565b60006126c3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166127409092919063ffffffff16565b80519091501561148857808060200190518101906126e19190612b50565b6114885760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108fe565b606061274f8484600085612757565b949350505050565b6060824710156127b85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016108fe565b6001600160a01b0385163b61280f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108fe565b600080866001600160a01b0316858760405161282b9190612ccf565b60006040518083038185875af1925050503d8060008114612868576040519150601f19603f3d011682016040523d82523d6000602084013e61286d565b606091505b509150915061287d828286612888565b979650505050505050565b60608315612897575081612667565b8251156128a75782518084602001fd5b8160405162461bcd60e51b81526004016108fe9190612ceb565b8260028101928215612909579160200282015b8281111561290957825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906128d4565b50612915929150612919565b5090565b5b80821115612915576000815560010161291a565b60008060006060848603121561294357600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561296d57600080fd5b50508035926020909101359150565b60006020828403121561298e57600080fd5b5035919050565b80356001600160a01b03811681146129ac57600080fd5b919050565b60008060008060008060c087890312156129ca57600080fd5b863595506129da60208801612995565b94506129e860408801612995565b93506129f660608801612995565b92506080870135915060a087013590509295509295509295565b600060208284031215612a2257600080fd5b61266782612995565b60008060008060808587031215612a4157600080fd5b843593506020850135925060408501359150612a5f60608601612995565b905092959194509250565b600080600060608486031215612a7f57600080fd5b83359250612a8f60208501612995565b9150612a9d60408501612995565b90509250925092565b60008060408385031215612ab957600080fd5b612ac283612995565b9150612ad060208401612995565b90509250929050565b6020808252818101527f5265737472696374656443616c6c733a2063616c6c20646973616c6c6f776564604082015260600190565b60208082526022908201527f5265737472696374656443616c6c733a206d657373656e676572206e6f742073604082015261195d60f21b606082015260800190565b600060208284031215612b6257600080fd5b8151801515811461266757600080fd5b634e487b7160e01b600052601160045260246000fd5b60006001600160c01b0383811690831681811015612ba857612ba8612b72565b039392505050565b60008219821115612bc357612bc3612b72565b500190565b600060208284031215612bda57600080fd5b5051919050565b60006001600160c01b03828116848216808303821115612c0357612c03612b72565b01949350505050565b9687526001600160a01b0395861660208801526040870194909452919093166060850152608084019290925260a083019190915260c082015260e00190565b600082821015612c5d57612c5d612b72565b500390565b6000816000190483118215151615612c7c57612c7c612b72565b500290565b600082612c9e57634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015612cbe578181015183820152602001612ca6565b838111156119ce5750506000910152565b60008251612ce1818460208701612ca3565b9190910192915050565b6020815260008251806020840152612d0a816040850160208701612ca3565b601f01601f1916919091016040019291505056fea2646970667358221220585aa0a9ae5672d450f600cefba3e6417fa4ab113d49b67ccbbfe0221ec1b1c864736f6c634300080d0033",
  "bytecodeSha1": "554e583ab59de8df1592193301664d471c15709a",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "RequestManager",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "182": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "181": [
            2169,
            2191,
            true
          ]
        }
      },
      "15": {},
      "17": {
        "RequestManager.claimRequest": {
          "179": [
            972,
            994,
            true
          ]
        }
      },
      "19": {
        "RequestManager.challengeClaim": {
          "155": [
            15711,
            15746,
            true
          ],
          "156": [
            16011,
            16046,
            false
          ],
          "157": [
            16066,
            16091,
            false
          ],
          "158": [
            16204,
            16231,
            true
          ],
          "159": [
            16520,
            16543,
            true
          ],
          "160": [
            16588,
            16609,
            true
          ],
          "161": [
            16654,
            16680,
            false
          ],
          "162": [
            17155,
            17194,
            true
          ]
        },
        "RequestManager.claimRequest": {
          "149": [
            13273,
            13309,
            true
          ],
          "150": [
            13347,
            13375,
            true
          ],
          "151": [
            13423,
            13446,
            true
          ]
        },
        "RequestManager.createRequest": {
          "143": [
            9821,
            9840,
            true
          ],
          "144": [
            9898,
            9933,
            true
          ],
          "145": [
            10017,
            10054,
            true
          ],
          "146": [
            10136,
            10173,
            true
          ],
          "147": [
            10241,
            10264,
            true
          ],
          "148": [
            10606,
            10668,
            true
          ]
        },
        "RequestManager.deprecateContract": {
          "165": [
            25746,
            25765,
            true
          ]
        },
        "RequestManager.invalidateFill": {
          "135": [
            28029,
            28057,
            true
          ],
          "136": [
            28146,
            28185,
            true
          ]
        },
        "RequestManager.resolveClaim": {
          "166": [
            19685,
            19744,
            true
          ],
          "167": [
            20344,
            20364,
            false
          ],
          "168": [
            20502,
            20532,
            false
          ],
          "169": [
            20626,
            20654,
            false
          ],
          "170": [
            20963,
            20999,
            true
          ],
          "171": [
            21262,
            21272,
            false
          ],
          "172": [
            21466,
            21490,
            false
          ],
          "173": [
            21693,
            21710,
            true
          ],
          "174": [
            22326,
            22360,
            false
          ],
          "175": [
            22380,
            22415,
            false
          ]
        },
        "RequestManager.setFinalityPeriod": {
          "164": [
            25177,
            25195,
            true
          ]
        },
        "RequestManager.withdraw": {
          "137": [
            18416,
            18458,
            false
          ],
          "138": [
            18649,
            18675,
            false
          ],
          "139": [
            18805,
            18893,
            true
          ],
          "140": [
            19036,
            19040,
            true
          ],
          "141": [
            19156,
            19184,
            false
          ],
          "142": [
            19188,
            19218,
            false
          ]
        },
        "RequestManager.withdrawExpiredRequest": {
          "152": [
            12119,
            12147,
            true
          ],
          "153": [
            12208,
            12245,
            true
          ],
          "154": [
            12312,
            12337,
            true
          ]
        },
        "RequestManager.withdrawProtocolFees": {
          "163": [
            23696,
            23706,
            true
          ]
        }
      },
      "2": {},
      "21": {
        "RequestManager.resolveRequest": {
          "183": [
            2129,
            2159,
            false
          ],
          "184": [
            2183,
            2203,
            true
          ],
          "185": [
            2485,
            2538,
            true
          ]
        },
        "RestrictedCalls._addCaller": {
          "186": [
            763,
            783,
            true
          ],
          "187": [
            854,
            893,
            true
          ]
        }
      },
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "188": [
            4275,
            4296,
            false
          ],
          "189": [
            4359,
            4389,
            true
          ]
        }
      },
      "6": {
        "Address.functionCallWithValue": {
          "176": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "177": [
            7735,
            7742,
            false
          ],
          "178": [
            7876,
            7897,
            false
          ]
        }
      },
      "7": {},
      "8": {
        "Math.max": {
          "180": [
            497,
            503,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "119": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "120": [
            2541,
            2558
          ],
          "121": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "1": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "40": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "95": [
            2161,
            2234
          ],
          "96": [
            2244,
            2272
          ]
        }
      },
      "15": {
        "BeamerUtils.createRequestId": {
          "21": [
            341,
            643
          ]
        }
      },
      "17": {
        "LpWhitelist.addAllowedLp": {
          "32": [
            1320,
            1344
          ],
          "33": [
            1355,
            1374
          ]
        },
        "LpWhitelist.removeAllowedLp": {
          "34": [
            1670,
            1694
          ],
          "35": [
            1705,
            1726
          ]
        }
      },
      "19": {
        "RequestManager.challengeClaim": {
          "68": [
            15703,
            15764
          ],
          "69": [
            16111,
            16168
          ],
          "70": [
            16196,
            16262
          ],
          "71": [
            16276,
            16298
          ],
          "72": [
            16312,
            16362
          ],
          "73": [
            16393,
            16418
          ],
          "74": [
            16432,
            16491
          ],
          "75": [
            16512,
            16570
          ],
          "76": [
            16580,
            16639
          ],
          "77": [
            16696,
            16727
          ],
          "78": [
            16758,
            16791
          ],
          "79": [
            16805,
            16853
          ],
          "80": [
            16867,
            16906
          ],
          "81": [
            16927,
            17043
          ],
          "82": [
            17134,
            17261
          ],
          "83": [
            17272,
            17536
          ]
        },
        "RequestManager.claimRequest": {
          "42": [
            13265,
            13329
          ],
          "43": [
            13339,
            13405
          ],
          "44": [
            13415,
            13471
          ],
          "45": [
            13481,
            13536
          ],
          "46": [
            13547,
            13572
          ],
          "47": [
            13582,
            13599
          ],
          "48": [
            13662,
            13689
          ],
          "49": [
            13699,
            13725
          ],
          "50": [
            13735,
            13766
          ],
          "51": [
            13776,
            13809
          ],
          "52": [
            13819,
            13849
          ],
          "53": [
            13859,
            13884
          ],
          "54": [
            13894,
            13943
          ],
          "55": [
            13953,
            13974
          ],
          "56": [
            13985,
            14242
          ],
          "57": [
            14253,
            14272
          ]
        },
        "RequestManager.createRequest": {
          "14": [
            9813,
            9867
          ],
          "15": [
            9877,
            9986
          ],
          "16": [
            9996,
            10105
          ],
          "17": [
            10115,
            10223
          ],
          "18": [
            10233,
            10298
          ],
          "19": [
            10585,
            10716
          ],
          "20": [
            10727,
            10744
          ],
          "22": [
            11039,
            11069
          ],
          "23": [
            11079,
            11129
          ],
          "24": [
            11139,
            11179
          ],
          "25": [
            11189,
            11215
          ],
          "26": [
            11225,
            11281
          ],
          "27": [
            11291,
            11326
          ],
          "28": [
            11336,
            11383
          ],
          "29": [
            11394,
            11645
          ],
          "30": [
            11656,
            11723
          ],
          "31": [
            11734,
            11750
          ]
        },
        "RequestManager.deprecateContract": {
          "93": [
            25738,
            25797
          ],
          "94": [
            25807,
            25824
          ]
        },
        "RequestManager.invalidateFill": {
          "2": [
            28008,
            28115
          ],
          "3": [
            28125,
            28235
          ],
          "4": [
            28246,
            28283
          ],
          "5": [
            28294,
            28341
          ]
        },
        "RequestManager.isInvalidFill": {
          "0": [
            26546,
            26595
          ]
        },
        "RequestManager.lpFee": {
          "97": [
            7214,
            7272
          ]
        },
        "RequestManager.protocolFee": {
          "84": [
            7446,
            7490
          ]
        },
        "RequestManager.resolveClaim": {
          "98": [
            19664,
            19793
          ],
          "99": [
            20419,
            20481
          ],
          "100": [
            20587,
            20605
          ],
          "101": [
            20709,
            20868
          ],
          "102": [
            20938,
            21058
          ],
          "103": [
            21072,
            21120
          ],
          "104": [
            21351,
            21402
          ],
          "105": [
            21416,
            21445
          ],
          "106": [
            21575,
            21630
          ],
          "107": [
            21644,
            21670
          ],
          "108": [
            21685,
            21749
          ],
          "109": [
            21959,
            21987
          ],
          "110": [
            22435,
            22489
          ],
          "111": [
            22528,
            22582
          ],
          "112": [
            22617,
            22654
          ]
        },
        "RequestManager.resolveRequest": {
          "36": [
            27262,
            27285
          ],
          "37": [
            27295,
            27318
          ],
          "38": [
            27329,
            27367
          ],
          "39": [
            27378,
            27425
          ]
        },
        "RequestManager.setFinalityPeriod": {
          "89": [
            25169,
            25238
          ],
          "90": [
            25248,
            25295
          ],
          "91": [
            25306,
            25363
          ]
        },
        "RequestManager.totalFee": {
          "85": [
            7743,
            7785
          ]
        },
        "RequestManager.updateFeeData": {
          "59": [
            24347,
            24381
          ],
          "60": [
            24391,
            24413
          ],
          "61": [
            24423,
            24445
          ]
        },
        "RequestManager.updateTransferLimit": {
          "92": [
            24743,
            24775
          ]
        },
        "RequestManager.withdraw": {
          "6": [
            18511,
            18553
          ],
          "7": [
            18691,
            18716
          ],
          "8": [
            18736,
            18774
          ],
          "9": [
            18784,
            18947
          ],
          "10": [
            19028,
            19065
          ],
          "11": [
            19076,
            19141
          ],
          "12": [
            19234,
            19267
          ],
          "13": [
            19288,
            19308
          ]
        },
        "RequestManager.withdrawDeposit": {
          "113": [
            22840,
            22887
          ],
          "114": [
            22898,
            22931
          ],
          "115": [
            22942,
            23027
          ],
          "116": [
            23097,
            23156
          ]
        },
        "RequestManager.withdrawExpiredRequest": {
          "62": [
            12111,
            12177
          ],
          "63": [
            12187,
            12294
          ],
          "64": [
            12304,
            12363
          ],
          "65": [
            12374,
            12426
          ],
          "66": [
            12437,
            12485
          ],
          "67": [
            12555,
            12677
          ]
        },
        "RequestManager.withdrawProtocolFees": {
          "86": [
            23688,
            23731
          ],
          "87": [
            23741,
            23780
          ],
          "88": [
            23836,
            23873
          ]
        }
      },
      "2": {},
      "21": {
        "RestrictedCalls._addCaller": {
          "122": [
            755,
            823
          ],
          "123": [
            833,
            957
          ],
          "124": [
            967,
            1011
          ]
        },
        "RestrictedCalls.addCaller": {
          "41": [
            1567,
            1611
          ],
          "58": [
            1185,
            1230
          ]
        }
      },
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "127": [
            4351,
            4436
          ]
        },
        "SafeERC20.safeTransfer": {
          "125": [
            875,
            961
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "117": [
            1112,
            1208
          ]
        }
      },
      "6": {
        "Address.functionCall": {
          "128": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "129": [
            5137,
            5218
          ],
          "131": [
            5228,
            5288
          ],
          "132": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "130": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "133": [
            7758,
            7775
          ],
          "134": [
            8252,
            8272
          ]
        }
      },
      "7": {
        "Context._msgSender": {
          "118": [
            712,
            729
          ]
        }
      },
      "8": {
        "Math.max": {
          "126": [
            490,
            511
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Address",
    "BeamerUtils",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/IERC20Permit",
    "LpWhitelist",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Math",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Ownable",
    "RestrictedCalls",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/SafeERC20"
  ],
  "deployedBytecode": "6080604052600436106102465760003560e01c80637dc2cd9811610139578063cf7b287f116100b6578063ea6288981161007a578063ea6288981461081e578063ea656f7d14610834578063eb32117314610849578063f2fde38b1461085f578063f7d64cec1461087f578063f94325171461089f57600080fd5b8063cf7b287f14610792578063d137920b146107b2578063d762a37b146107d2578063e2653eeb146107f2578063e7aad5c41461080857600080fd5b80639e375226116100fd5780639e3752261461065c578063a032b5f41461068c578063a888c2cd146106ac578063adb610a31461075c578063cea74edf1461077257600080fd5b80637dc2cd98146105055780638da5cb5b1461051b57806392c824d81461053957806396171d051461054c5780639d8669851461056257600080fd5b80633993b6ed116101c75780637203ae3b1161018b5780637203ae3b14610472578063743c151a14610492578063747293fb146104a557806378da194b146104c557806379650559146104e557600080fd5b80633993b6ed146103da5780635b3a6ef2146103fa5780635d5aa11b1461041a5780636bc6c8d114610430578063715018a61461045d57600080fd5b80632e1a7d4d1161020e5780632e1a7d4d1461030e5780632f4212b81461032e5780632f92f0091461034e57806330a08cbc1461037b57806331e08f7a146103ba57600080fd5b806303fc4c371461024b5780630e136b191461026d5780630e19a1c61461029c5780631489f8d2146102d45780631d18adc5146102f8575b600080fd5b34801561025757600080fd5b5061026b61026636600461292e565b6108b5565b005b34801561027957600080fd5b506006546102879060ff1681565b60405190151581526020015b60405180910390f35b3480156102a857600080fd5b506102bc6102b736600461295a565b610b04565b6040516001600160a01b039091168152602001610293565b3480156102e057600080fd5b506102ea61012c81565b604051908152602001610293565b34801561030457600080fd5b506102ea60055481565b34801561031a57600080fd5b506102bc61032936600461297c565b610b32565b34801561033a57600080fd5b506102ea6103493660046129b1565b610de3565b34801561035a57600080fd5b506102ea61036936600461297c565b60086020526000908152604090205481565b34801561038757600080fd5b5061028761039636600461295a565b6000918252600960209081526040808420928452600b909201905290205460ff1690565b3480156103c657600080fd5b5061026b6103d5366004612a10565b6111fb565b3480156103e657600080fd5b5061026b6103f5366004612a10565b61125f565b34801561040657600080fd5b5061026b610415366004612a2b565b6112b8565b34801561042657600080fd5b506102ea600b5481565b34801561043c57600080fd5b506102ea61044b366004612a10565b600f6020526000908152604090205481565b34801561046957600080fd5b5061026b611461565b34801561047e57600080fd5b5061026b61048d366004612a6a565b611475565b6102ea6104a036600461295a565b61148d565b3480156104b157600080fd5b5061026b6104c0366004612a10565b6117a9565b3480156104d157600080fd5b5061026b6104e036600461292e565b6117c0565b3480156104f157600080fd5b5061026b61050036600461297c565b6117d6565b34801561051157600080fd5b506102ea60045481565b34801561052757600080fd5b506000546001600160a01b03166102bc565b61026b61054736600461297c565b6119d4565b34801561055857600080fd5b506102ea61070881565b34801561056e57600080fd5b506105f161057d36600461297c565b600960208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154600889015499890154600a909901546001600160a01b039889169a97891699969895979496939592946001600160c01b03909216939192909116908b565b604080516001600160a01b039c8d1681529a8c1660208c01528a01989098526060890196909652608088019490945260a087019290925260c08601526001600160c01b031660e085015261010084015290921661012082015261014081019190915261016001610293565b34801561066857600080fd5b50610287610677366004612a10565b60016020526000908152604090205460ff1681565b34801561069857600080fd5b506102ea6106a736600461297c565b611dd5565b3480156106b857600080fd5b506107166106c736600461297c565b600a602052600090815260409020805460018201546002830154600484015460058501546006860154600787015460089097015495966001600160a01b03958616969495909316939192909188565b604080519889526001600160a01b0397881660208a0152880195909552949092166060860152608085015260a084015260c083019190915260e082015261010001610293565b34801561076857600080fd5b506102ea60075481565b34801561077e57600080fd5b506102ea61078d36600461297c565b611df9565b34801561079e57600080fd5b5061026b6107ad366004612aa6565b611e17565b3480156107be57600080fd5b5061026b6107cd36600461295a565b611ea2565b3480156107de57600080fd5b5061026b6107ed36600461297c565b611f58565b3480156107fe57600080fd5b506102ea600c5481565b34801561081457600080fd5b506102ea600d5481565b34801561082a57600080fd5b506102ea60001981565b34801561084057600080fd5b5061026b611f65565b34801561085557600080fd5b506102ea60035481565b34801561086b57600080fd5b5061026b61087a366004612a10565b611fcf565b34801561088b57600080fd5b506102ea61089a36600461297c565b612045565b3480156108ab57600080fd5b506102ea600e5481565b60008181526002602052604090205481906001600160a01b031646820361090c57336001600160a01b038216146109075760405162461bcd60e51b81526004016108fe90612ad9565b60405180910390fd5b6109d2565b6000828152600260205260409020600101546001600160a01b0316806109445760405162461bcd60e51b81526004016108fe90612b0e565b60405163845c544360e01b81526001600160a01b03838116600483015233602483015282169063845c544390604401602060405180830381865afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b49190612b50565b6109d05760405162461bcd60e51b81526004016108fe90612ad9565b505b6000858152600960208190526040909120908101546001600160a01b031615610a3d5760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f7420696e76616c6964617465207265736f6c7665642066696c6c7360448201526064016108fe565b6000858152600b8201602052604090205460ff1615610a9e5760405162461bcd60e51b815260206004820152601860248201527f46696c6c20616c726561647920696e76616c696461746564000000000000000060448201526064016108fe565b6000858152600b8201602052604090819020805460ff19166001179055517f5571b83c623961fb42d39ce6d6d2092153ace66c008e2dc2472ec6d2e8fad04590610af49088908890918252602082015260400190565b60405180910390a1505050505050565b60026020528160005260406000208160028110610b2057600080fd5b01546001600160a01b03169150829050565b6000818152600a602052604081206001015482906001600160a01b0316610b8f5760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b60448201526064016108fe565b6000838152600a602090815260408083208054845260099092528220909180610bb787612069565b6001600160a01b0382166000908152600387016020526040902054919350915015610bf8576001600160a01b03821660009081526003850160205260408120555b8360060154600003610c4a5760078301805460019190600090610c259084906001600160c01b0316612b88565b92506101000a8154816001600160c01b0302191690836001600160c01b031602179055505b80846006016000828254610c5e9190612bb0565b909155505060058401546002850154610c779190612bb0565b84600601541115610cca5760405162461bcd60e51b815260206004820152601c60248201527f416d6f756e7420746f20776974686472617720746f6f206c617267650000000060448201526064016108fe565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610d17576040519150601f19603f3d011682016040523d82523d6000602084013e610d1c565b606091505b5050905080610d645760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016108fe565b8454604080518a81526001600160a01b03861660208201527fa5d98efe63b5c32fd1a0e4d189473a6e9538a04f05da85b3cd50c5915087decf910160405180910390a26008840154158015610dc8575060018501546001600160a01b038481169116145b15610dd757610dd78489612333565b50909695505050505050565b60065460009060ff1615610e325760405162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd081a5cc819195c1c9958d85d195960521b60448201526064016108fe565b6000878152600860205260408120549003610e8f5760405162461bcd60e51b815260206004820152601b60248201527f54617267657420726f6c6c7570206e6f7420737570706f72746564000000000060448201526064016108fe565b61012c821015610ee15760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920706572696f6420746f6f2073686f72740000000000000060448201526064016108fe565b610708821115610f335760405162461bcd60e51b815260206004820152601860248201527f56616c696469747920706572696f6420746f6f206c6f6e67000000000000000060448201526064016108fe565b600e54831115610f855760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e742065786365656473207472616e73666572206c696d697400000060448201526064016108fe565b856000610f9185612045565b90506000610f9e86611dd5565b9050600081610fad8489612bb0565b610fb79190612bb0565b604051636eb1769f60e11b815233600482015230602482015290915081906001600160a01b0386169063dd62ed3e90604401602060405180830381865afa158015611006573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102a9190612bc8565b10156110715760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064016108fe565b6001600760008282546110849190612bb0565b909155505060075460408051466020808301919091528183018f90526bffffffffffffffffffffffff1960608e811b8216818501528d901b166074830152608882018b905260a8808301949094528251808303909401845260c890910182528251928101929092206000818152600990935291208054336001600160a01b03199182161782556001820180549091166001600160a01b038e16179055600281018d9055600381018990556111388842612bb0565b8160040181905550848160050181905550838160060181905550817ff852fa5288e6bd150237cec1f415e191d8232b72067c0520011180d7ea00ba8c8e8e8e8e8e60075488600401546040516111ce97969594939291909687526001600160a01b0395861660208801529385166040870152919093166060850152608084019290925260a083019190915260c082015260e00190565b60405180910390a26111eb6001600160a01b0387163330866123fe565b509b9a5050505050505050505050565b611203612469565b6001600160a01b038116600081815260016020818152604092839020805460ff191690921790915590519182527f371fc559c30f70424413fed6bf7e57dc939651331abad5c970a8ea0921c80b2e91015b60405180910390a150565b611267612469565b6001600160a01b038116600081815260016020908152604091829020805460ff1916905590519182527f4e774c97f73f4bea034579e4224498d7d9b3a4109eaa70ed3d85c97a5855f1989101611254565b60008281526002602052604090205482906001600160a01b031646820361130657336001600160a01b038216146113015760405162461bcd60e51b81526004016108fe90612ad9565b6113cc565b6000828152600260205260409020600101546001600160a01b03168061133e5760405162461bcd60e51b81526004016108fe90612b0e565b60405163845c544360e01b81526001600160a01b03838116600483015233602483015282169063845c544390604401602060405180830381865afa15801561138a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ae9190612b50565b6113ca5760405162461bcd60e51b81526004016108fe90612ad9565b505b600086815260096020818152604080842092830180546001600160a01b0319166001600160a01b038916908117909155600a84018a9055898552600b8401835293819020805460ff1916905580518a815291820193909352918201879052907fb32d3c8b5539b0cc3050d5b75e9dad8eca8744a0892259bda27fdb51b99567369060600160405180910390a150505050505050565b611469612469565b61147360006124c3565b565b61147d612469565b611488838383612513565b505050565b60008281526009602052604081205483906001600160a01b03166114e95760405162461bcd60e51b81526020600482015260136024820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b60448201526064016108fe565b3360009081526001602052604090205460ff166115415760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b60448201526064016108fe565b6000848152600960205260409020600481015442106115945760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b60448201526064016108fe565b6008810154156115e25760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b60448201526064016108fe565b600354341461162a5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081cdd185ad948185b5bdd5b9d60621b60448201526064016108fe565b836116705760405162461bcd60e51b8152602060048201526016602482015275046696c6c4964206d757374206e6f74206265203078360541b60448201526064016108fe565b600781018054600191906000906116919084906001600160c01b0316612be1565b92506101000a8154816001600160c01b0302191690836001600160c01b031602179055506001600760008282546116c89190612bb0565b90915550506007546000908152600a602052604081208681556001810180546001600160a01b0319908116331790915560035460028301556004808301805490921690915560058201839055600682019290925590546117289042612bb0565b6007808301829055600883018790555460018301546002840154600485015460058601546040518c967fa317459aaaff5501ec6d0dcfc26440565beaf33dc2ba0f68b7273a50322c215d966117949690956001600160a01b039182169590949116929091908e90612c0c565b60405180910390a25050600754949350505050565b6117b1612469565b6117bd46826000612513565b50565b6117c8612469565b600d92909255600c55600b55565b60008181526009602052604090205481906001600160a01b03166118325760405162461bcd60e51b81526020600482015260136024820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b60448201526064016108fe565b600082815260096020526040902060088101541561188e5760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b60448201526064016108fe565b80600401544210156118e25760405162461bcd60e51b815260206004820152601760248201527f52657175657374206e6f7420657870697265642079657400000000000000000060448201526064016108fe565b60078101546001600160c01b0316156119355760405162461bcd60e51b815260206004820152601560248201527441637469766520636c61696d732072756e6e696e6760581b60448201526064016108fe565b60001960088201558054604080518581526001600160a01b0390921660208301527fab63a14c4aaba38366fd39116091672bb44520328ee870be35a51e573296e565910160405180910390a1600181015481546006830154600584015460038501546001600160a01b03948516946119ce941692916119b391612bb0565b6119bd9190612bb0565b6001600160a01b0384169190612625565b50505050565b6000818152600a602052604090206001015481906001600160a01b0316611a315760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b60448201526064016108fe565b6000828152600a6020908152604080832080548452600990925290912060078201544210611a915760405162461bcd60e51b815260206004820152600d60248201526c10db185a5b48195e1c1a5c9959609a1b60448201526064016108fe565b6005805460028401549184015460009283929180821115611b525780600003611ad5576002860154600090815260086020526040902054611ad29084612bb0565b92505b6001870154336001600160a01b0390911603611b335760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74206368616c6c656e6765206f776e20636c61696d00000000000060448201526064016108fe565b339450611b408183612c4b565b611b4b906001612bb0565b9350611b7e565b60018701546003546001600160a01b039091169550611b718383612c4b565b611b7b9190612bb0565b93505b336001600160a01b03861614611bcf5760405162461bcd60e51b8152602060048201526016602482015275139bdd08195b1a59da589b19481d1bc81bdd5d189a5960521b60448201526064016108fe565b83341015611c1f5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f756768207374616b652070726f76696465640000000000000060448201526064016108fe565b60018701546001600160a01b0390811690861603611c565734876002016000828254611c4b9190612bb0565b90915550611cae9050565b6004870180546001600160a01b03191633908117909155600090815260038801602052604081208054349290611c8d908490612bb0565b9250508190555034876005016000828254611ca89190612bb0565b90915550505b6007870154611cc690611cc18542612bb0565b612655565b6007880155600554600090611cdb9042612bb0565b90508088600701541015611d435760405162461bcd60e51b815260206004820152602960248201527f436c61696d207465726d696e6174696f6e20646964206e6f7420696e637265616044820152680e6ca40cadcdeeaced60bb1b60648201526084016108fe565b87600001547fa317459aaaff5501ec6d0dcfc26440565beaf33dc2ba0f68b7273a50322c215d8b8a60010160009054906101000a90046001600160a01b03168b600201548c60040160009054906101000a90046001600160a01b03168d600501548e600701548f60080154604051611dc19796959493929190612c0c565b60405180910390a250505050505050505050565b6000620f4240600d5483611de99190612c62565b611df39190612c81565b92915050565b6000611e0482611dd5565b611e0d83612045565b611df39190612bb0565b611e1f612469565b6001600160a01b0382166000908152600f602052604090205480611e7c5760405162461bcd60e51b815260206004820152601460248201527350726f746f636f6c20666565206973207a65726f60601b60448201526064016108fe565b6001600160a01b0383166000818152600f602052604081205583906119ce908484612625565b611eaa612469565b60008111611f095760405162461bcd60e51b815260206004820152602660248201527f46696e616c69747920706572696f64206d75737420626520677265617465722060448201526507468616e20360d41b60648201526084016108fe565b60008281526008602090815260409182902083905581518481529081018390527faba57b48b9f1dfd5747a52ed348a6ab6aa7bafb0575363a5cb7b62659f727b65910160405180910390a15050565b611f60612469565b600e55565b611f6d612469565b60065460ff1615611fc05760405162461bcd60e51b815260206004820152601b60248201527f436f6e747261637420616c72656164792064657072656361746564000000000060448201526064016108fe565b6006805460ff19166001179055565b611fd7612469565b6001600160a01b03811661203c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108fe565b6117bd816124c3565b6000611df3600b54620f4240600c548561205f9190612c62565b611cc19190612c81565b6000818152600a60209081526040808320805484526009909252822060028201546005830154849392919061209e8183612bb0565b8460060154106120f05760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792077697468647261776e00000000000000000060448201526064016108fe565b6009830154600a8401546000916001600160a01b03169081156121365760018701546001600160a01b03838116911614801561212f5750866008015481145b9250612211565b6000818152600b8701602052604090205460ff16156121585760009250612211565b6008860154156121b75760088601546000908152600a60205260409020600190810154908801546001600160a01b03908116911614801561212f57506008808701546000908152600a6020526040902081015490880154149250612211565b866007015442101561220b5760405162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f742066696e69736865640000000000000060448201526064016108fe565b83851192505b600080841561223c576122248688612bb0565b60018a01549092506001600160a01b031690506122d5565b85156122c45733600090815260038a01602052604090205461225f906002612c62565b9150339050600082116122bf5760405162461bcd60e51b815260206004820152602260248201527f4368616c6c656e67657220686173206e6f7468696e6720746f20776974686472604482015261617760f01b60648201526084016108fe565b6122d5565b505060005485906001600160a01b03165b60048901546001600160a01b03163303612323578587111561230c576122fb8688612c4b565b6123059083612bb0565b9150612323565b6123168787612c4b565b6123209083612c4b565b91505b9b909a5098505050505050505050565b6000818152600a60209081526040918290206001810154815484519081526001600160a01b0390911692810183905290927fab63a14c4aaba38366fd39116091672bb44520328ee870be35a51e573296e565910160405180910390a160088401839055600684015460018501546001600160a01b03166000908152600f6020526040812080549091906123c7908490612bb0565b90915550506001840154600585015460038601546001600160a01b03909216916123f79184916119bd9190612bb0565b5050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526119ce9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261266e565b6000546001600160a01b031633146114735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108fe565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166125755760405162461bcd60e51b815260206004820152602360248201527f5265737472696374656443616c6c733a2063616c6c65722063616e6e6f74206260448201526206520360ec1b60648201526084016108fe565b6000838152600260205260409020546001600160a01b0316156125e95760405162461bcd60e51b815260206004820152602660248201527f5265737472696374656443616c6c733a2063616c6c657220616c72656164792060448201526565786973747360d01b60648201526084016108fe565b6040805180820182526001600160a01b03808516825283166020808301919091526000868152600291829052929092206119ce929091906128c1565b6040516001600160a01b03831660248201526044810182905261148890849063a9059cbb60e01b90606401612432565b6000818310156126655781612667565b825b9392505050565b60006126c3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166127409092919063ffffffff16565b80519091501561148857808060200190518101906126e19190612b50565b6114885760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108fe565b606061274f8484600085612757565b949350505050565b6060824710156127b85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016108fe565b6001600160a01b0385163b61280f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108fe565b600080866001600160a01b0316858760405161282b9190612ccf565b60006040518083038185875af1925050503d8060008114612868576040519150601f19603f3d011682016040523d82523d6000602084013e61286d565b606091505b509150915061287d828286612888565b979650505050505050565b60608315612897575081612667565b8251156128a75782518084602001fd5b8160405162461bcd60e51b81526004016108fe9190612ceb565b8260028101928215612909579160200282015b8281111561290957825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906128d4565b50612915929150612919565b5090565b5b80821115612915576000815560010161291a565b60008060006060848603121561294357600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561296d57600080fd5b50508035926020909101359150565b60006020828403121561298e57600080fd5b5035919050565b80356001600160a01b03811681146129ac57600080fd5b919050565b60008060008060008060c087890312156129ca57600080fd5b863595506129da60208801612995565b94506129e860408801612995565b93506129f660608801612995565b92506080870135915060a087013590509295509295509295565b600060208284031215612a2257600080fd5b61266782612995565b60008060008060808587031215612a4157600080fd5b843593506020850135925060408501359150612a5f60608601612995565b905092959194509250565b600080600060608486031215612a7f57600080fd5b83359250612a8f60208501612995565b9150612a9d60408501612995565b90509250925092565b60008060408385031215612ab957600080fd5b612ac283612995565b9150612ad060208401612995565b90509250929050565b6020808252818101527f5265737472696374656443616c6c733a2063616c6c20646973616c6c6f776564604082015260600190565b60208082526022908201527f5265737472696374656443616c6c733a206d657373656e676572206e6f742073604082015261195d60f21b606082015260800190565b600060208284031215612b6257600080fd5b8151801515811461266757600080fd5b634e487b7160e01b600052601160045260246000fd5b60006001600160c01b0383811690831681811015612ba857612ba8612b72565b039392505050565b60008219821115612bc357612bc3612b72565b500190565b600060208284031215612bda57600080fd5b5051919050565b60006001600160c01b03828116848216808303821115612c0357612c03612b72565b01949350505050565b9687526001600160a01b0395861660208801526040870194909452919093166060850152608084019290925260a083019190915260c082015260e00190565b600082821015612c5d57612c5d612b72565b500390565b6000816000190483118215151615612c7c57612c7c612b72565b500290565b600082612c9e57634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015612cbe578181015183820152602001612ca6565b838111156119ce5750506000910152565b60008251612ce1818460208701612ca3565b9190910192915050565b6020815260008251806020840152612d0a816040850160208701612ca3565b601f01601f1916919091016040019291505056fea2646970667358221220585aa0a9ae5672d450f600cefba3e6417fa4ab113d49b67ccbbfe0221ec1b1c864736f6c634300080d0033",
  "deployedSourceMap": "1057:27293:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27788:560;;;;;;;;;;-1:-1:-1;27788:560:19;;;;;:::i;:::-;;:::i;:::-;;5745:22;;;;;;;;;;-1:-1:-1;5745:22:19;;;;;;;;;;;500:14:28;;493:22;475:41;;463:2;448:18;5745:22:19;;;;;;;;576:45:21;;;;;;;;;;-1:-1:-1;576:45:21;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;944:32:28;;;926:51;;914:2;899:18;576:45:21;780:203:28;5254:55:19;;;;;;;;;;;;5300:9;5254:55;;;;;1134:25:28;;;1122:2;1107:18;5254:55:19;988:177:28;5158:39:19;;;;;;;;;;;;;;;;18100:1215;;;;;;;;;;-1:-1:-1;18100:1215:19;;;;;:::i;:::-;;:::i;9557:2200::-;;;;;;;;;;-1:-1:-1;9557:2200:19;;;;;:::i;:::-;;:::i;6075:50::-;;;;;;;;;;-1:-1:-1;6075:50:19;;;;;:::i;:::-;;;;;;;;;;;;;;26423:179;;;;;;;;;;-1:-1:-1;26423:179:19;;;;;:::i;:::-;26526:4;26553:19;;;:8;:19;;;;;;;;:42;;;:34;;;;:42;;;;;;;;26423:179;1256:125:17;;;;;;;;;;-1:-1:-1;1256:125:17;;;;;:::i;:::-;;:::i;1603:130::-;;;;;;;;;;-1:-1:-1;1603:130:17;;;;;:::i;:::-;;:::i;27018:414:19:-;;;;;;;;;;-1:-1:-1;27018:414:19;;;;;:::i;:::-;;:::i;6388:33::-;;;;;;;;;;;;;;;;6988:56;;;;;;;;;;-1:-1:-1;6988:56:19;;;;;:::i;:::-;;;;;;;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;1431:187:21:-;;;;;;;;;;-1:-1:-1;1431:187:21;;;;;:::i;:::-;;:::i;13023:1256:19:-;;;;;;:::i;:::-;;:::i;1121:116:21:-;;;;;;;;;;-1:-1:-1;1121:116:21;;;;;:::i;:::-;;:::i;24196:256:19:-;;;;;;;;;;-1:-1:-1;24196:256:19;;;;;:::i;:::-;;:::i;11939:745::-;;;;;;;;;;-1:-1:-1;11939:745:19;;;;;:::i;:::-;;:::i;4522:26::-;;;;;;;;;;;;;;;;1201:85:0;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;15477:2066:19;;;;;;:::i;:::-;;:::i;5366:56::-;;;;;;;;;;;;5412:10;5366:56;;6170:43;;;;;;;;;;-1:-1:-1;6170:43:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6170:43:19;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6170:43:19;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4424:15:28;;;4406:34;;4476:15;;;4471:2;4456:18;;4449:43;4508:18;;4501:34;;;;4566:2;4551:18;;4544:34;;;;4609:3;4594:19;;4587:35;;;;4386:3;4638:19;;4631:35;;;;4697:3;4682:19;;4675:35;-1:-1:-1;;;;;4747:32:28;4741:3;4726:19;;4719:61;4811:3;4796:19;;4789:35;4861:15;;;4855:3;4840:19;;4833:44;4908:3;4893:19;;4886:36;;;;4355:3;4340:19;6170:43:19;3940:988:28;820:42:17;;;;;;;;;;-1:-1:-1;820:42:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;7369:128:19;;;;;;;;;;-1:-1:-1;7369:128:19;;;;;:::i;:::-;;:::i;6254:39::-;;;;;;;;;;-1:-1:-1;6254:39:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6254:39:19;;;;;;;;;;;;;;;;;;;;5276:25:28;;;-1:-1:-1;;;;;5375:15:28;;;5370:2;5355:18;;5348:43;5407:18;;5400:34;;;;5470:15;;;;5465:2;5450:18;;5443:43;5517:3;5502:19;;5495:35;5328:3;5546:19;;5539:35;5605:3;5590:19;;5583:35;;;;5649:3;5634:19;;5627:35;5263:3;5248:19;6254:39:19;4933:735:28;5942:27:19;;;;;;;;;;;;;;;;7669:123;;;;;;;;;;-1:-1:-1;7669:123:19;;;;;:::i;:::-;;:::i;23506:374::-;;;;;;;;;;-1:-1:-1;23506:374:19;;;;;:::i;:::-;;:::i;25046:324::-;;;;;;;;;;-1:-1:-1;25046:324:19;;;;;:::i;:::-;;:::i;24659:123::-;;;;;;;;;;-1:-1:-1;24659:123:19;;;;;:::i;:::-;;:::i;6517:31::-;;;;;;;;;;;;;;;;6672:33;;;;;;;;;;;;;;;;5527:70;;;;;;;;;;;;-1:-1:-1;;5527:70:19;;25680:151;;;;;;;;;;;;;:::i;4441:25::-;;;;;;;;;;;;;;;;2081:198:0;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;7143:136:19:-;;;;;;;;;;-1:-1:-1;7143:136:19;;;;;:::i;:::-;;:::i;6838:42::-;;;;;;;;;;;;;;;;27788:560;2072:14:21;2089:22;;;:7;:22;;;;;:25;:22;;-1:-1:-1;;;;;2089:25:21;2146:13;2129:30;;2125:490;;2183:10;-1:-1:-1;;;;;2183:20:21;;;2175:65;;;;-1:-1:-1;;;2175:65:21;;;;;;;:::i;:::-;;;;;;;;;2125:490;;;2271:17;2291:22;;;:7;:22;;;;;2314:1;2291:25;;-1:-1:-1;;;;;2291:25:21;;2330:116;;;;-1:-1:-1;;;2330:116:21;;;;;;;:::i;:::-;2485:53;;-1:-1:-1;;;2485:53:21;;-1:-1:-1;;;;;7064:15:28;;;2485:53:21;;;7046:34:28;2527:10:21;7096:18:28;;;7089:43;2485:33:21;;;;;6981:18:28;;2485:53:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2460:144;;;;-1:-1:-1;;;2460:144:21;;;;;;;:::i;:::-;2257:358;2125:490;27953:23:19::1;27979:19:::0;;;:8:::1;:19;::::0;;;;;;;28029:14;;::::1;::::0;-1:-1:-1;;;;;28029:14:19::1;:28:::0;28008:107:::1;;;::::0;-1:-1:-1;;;28008:107:19;;7627:2:28;28008:107:19::1;::::0;::::1;7609:21:28::0;;;7646:18;;;7639:30;7705:34;7685:18;;;7678:62;7757:18;;28008:107:19::1;7425:356:28::0;28008:107:19::1;28146:30;::::0;;;:22:::1;::::0;::::1;:30;::::0;;;;;::::1;;:39;28125:110;;;::::0;-1:-1:-1;;;28125:110:19;;7988:2:28;28125:110:19::1;::::0;::::1;7970:21:28::0;8027:2;8007:18;;;8000:30;8066:26;8046:18;;;8039:54;8110:18;;28125:110:19::1;7786:348:28::0;28125:110:19::1;28246:30;::::0;;;:22:::1;::::0;::::1;:30;::::0;;;;;;:37;;-1:-1:-1;;28246:37:19::1;28279:4;28246:37;::::0;;28299:42;::::1;::::0;::::1;::::0;28323:9;;28269:6;;8313:25:28;;;8369:2;8354:18;;8347:34;8301:2;8286:18;;8139:248;28299:42:19::1;;;;;;;;27943:405;2062:570:21::0;27788:560:19;;;;:::o;576:45:21:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;576:45:21;;-1:-1:-1;576:45:21;;-1:-1:-1;576:45:21:o;18100:1215:19:-;18199:7;8156:15;;;:6;:15;;;;;:23;;;18173:7;;-1:-1:-1;;;;;8156:23:19;8148:67;;;;-1:-1:-1;;;8148:67:19;;8594:2:28;8148:67:19;;;8576:21:28;8633:2;8613:18;;;8606:30;-1:-1:-1;;;8652:18:28;;;8645:47;8709:18;;8148:67:19;8392:341:28;8148:67:19;18222:19:::1;18244:15:::0;;;:6:::1;:15;::::0;;;;;;;18304;;18295:25;;:8:::1;:25:::0;;;;;18244:15;;18222:19;18380:21:::1;18251:7:::0;18380:12:::1;:21::i;:::-;-1:-1:-1::0;;;;;18416:38:19;::::1;18457:1;18416:38:::0;;;:23:::1;::::0;::::1;:38;::::0;;;;;18331:70;;-1:-1:-1;18331:70:19;-1:-1:-1;18416:42:19;18412:152:::1;;-1:-1:-1::0;;;;;18511:38:19;::::1;18552:1;18511:38:::0;;;:23:::1;::::0;::::1;:38;::::0;;;;:42;18412:152:::1;18649:5;:21;;;18674:1;18649:26:::0;18645:82:::1;;18691:20;::::0;::::1;:25:::0;;18715:1:::1;::::0;18691:20;::::1;::::0;:25:::1;::::0;18715:1;;-1:-1:-1;;;;;18691:25:19::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;18691:25:19::1;;;;;-1:-1:-1::0;;;;;18691:25:19::1;;;;;;18645:82;18761:13;18736:5;:21;;;:38;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;18867:26:19::1;::::0;::::1;::::0;18846:18:::1;::::0;::::1;::::0;:47:::1;::::0;18867:26;18846:47:::1;:::i;:::-;18805:5;:21;;;:88;;18784:163;;;::::0;-1:-1:-1;;;18784:163:19;;9441:2:28;18784:163:19::1;::::0;::::1;9423:21:28::0;9480:2;9460:18;;;9453:30;9519;9499:18;;;9492:58;9567:18;;18784:163:19::1;9239:352:28::0;18784:163:19::1;18959:9;18974:13;-1:-1:-1::0;;;;;18974:18:19::1;19000:13;18974:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18958:60;;;19036:4;19028:37;;;::::0;-1:-1:-1;;;19028:37:19;;10008:2:28;19028:37:19::1;::::0;::::1;9990:21:28::0;10047:2;10027:18;;;10020:30;-1:-1:-1;;;10066:18:28;;;10059:50;10126:18;;19028:37:19::1;9806:344:28::0;19028:37:19::1;19110:15:::0;;19081:60:::1;::::0;;10329:25:28;;;-1:-1:-1;;;;;10390:32:28;;10385:2;10370:18;;10363:60;19081::19::1;::::0;10302:18:28;19081:60:19::1;;;;;;;19156:23;::::0;::::1;::::0;:28;:62;::::1;;;-1:-1:-1::0;19205:13:19::1;::::0;::::1;::::0;-1:-1:-1;;;;;19188:30:19;;::::1;19205:13:::0;::::1;19188:30;19156:62;19152:126;;;19234:33;19250:7;19259;19234:15;:33::i;:::-;-1:-1:-1::0;19295:13:19;;18100:1215;-1:-1:-1;;;;;;18100:1215:19:o;9557:2200::-;9821:10;;9794:7;;9821:10;;:19;9813:54;;;;-1:-1:-1;;;9813:54:19;;10636:2:28;9813:54:19;;;10618:21:28;10675:2;10655:18;;;10648:30;-1:-1:-1;;;10694:18:28;;;10687:52;10756:18;;9813:54:19;10434:346:28;9813:54:19;9898:30;;;;:15;:30;;;;;;:35;;9877:109;;;;-1:-1:-1;;;9877:109:19;;10987:2:28;9877:109:19;;;10969:21:28;11026:2;11006:18;;;10999:30;11065:29;11045:18;;;11038:57;11112:18;;9877:109:19;10785:351:28;9877:109:19;5300:9;10017:14;:37;;9996:109;;;;-1:-1:-1;;;9996:109:19;;11343:2:28;9996:109:19;;;11325:21:28;11382:2;11362:18;;;11355:30;11421:27;11401:18;;;11394:55;11466:18;;9996:109:19;11141:349:28;9996:109:19;5412:10;10136:14;:37;;10115:108;;;;-1:-1:-1;;;10115:108:19;;11697:2:28;10115:108:19;;;11679:21:28;11736:2;11716:18;;;11709:30;11775:26;11755:18;;;11748:54;11819:18;;10115:108:19;11495:348:28;10115:108:19;10251:13;;10241:6;:23;;10233:65;;;;-1:-1:-1;;;10233:65:19;;12050:2:28;10233:65:19;;;12032:21:28;12089:2;12069:18;;;12062:30;12128:31;12108:18;;;12101:59;12177:18;;10233:65:19;11848:353:28;10233:65:19;10331:18;10309:12;10388:13;10394:6;10388:5;:13::i;:::-;10361:40;;10411:30;10444:19;10456:6;10444:11;:19::i;:::-;10411:52;-1:-1:-1;10473:24:19;10411:52;10500:37;10521:16;10500:6;:37;:::i;:::-;:74;;;;:::i;:::-;10606:42;;-1:-1:-1;;;10606:42:19;;10622:10;10606:42;;;7046:34:28;10642:4:19;7096:18:28;;;7089:43;10473:101:19;;-1:-1:-1;10473:101:19;;-1:-1:-1;;;;;10606:15:19;;;;;6981:18:28;;10606:42:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;10585:131;;;;-1:-1:-1;;;10585:131:19;;12597:2:28;10585:131:19;;;12579:21:28;12636:2;12616:18;;;12609:30;-1:-1:-1;;;12655:18:28;;;12648:52;12717:18;;10585:131:19;12395:346:28;10585:131:19;10743:1;10727:12;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;10948:12:19;;387:242:15;;;10815:13:19;387:242:15;;;;23249:19:28;;;;23284:12;;;23277:28;;;-1:-1:-1;;23393:2:28;23389:15;;;23385:24;;23371:12;;;23364:46;23444:15;;;23440:24;23426:12;;;23419:46;23481:13;;;23474:29;;;23519:13;;;;23512:29;;;;387:242:15;;;;;;;;;;23557:13:28;;;;387:242:15;;360:283;;;;;;;;;-1:-1:-1;11010:19:19;;;:8;:19;;;;;11039:30;;11059:10;-1:-1:-1;;;;;;11039:30:19;;;;;;-1:-1:-1;11079:29:19;;:50;;;;;-1:-1:-1;;;;;11079:50:19;;;;;11139:24;;;:40;;;11189:17;;;:26;;;11249:32;11267:14;11249:15;:32;:::i;:::-;11225:10;:21;;:56;;;;11310:16;11291:10;:16;;:35;;;;11361:22;11336:10;:22;;:47;;;;11427:9;11399:246;11450:13;11477:18;11509;11541:13;11568:6;11588:12;;11614:10;:21;;;11399:246;;;;;;;;;;;13061:25:28;;;-1:-1:-1;;;;;13160:15:28;;;13155:2;13140:18;;13133:43;13212:15;;;13207:2;13192:18;;13185:43;13264:15;;;;13259:2;13244:18;;13237:43;13311:3;13296:19;;13289:35;;;;13113:3;13340:19;;13333:35;;;;13399:3;13384:19;;13377:35;13048:3;13033:19;;12746:672;11399:246:19;;;;;;;;11656:67;-1:-1:-1;;;;;11656:22:19;;11679:10;11699:4;11706:16;11656:22;:67::i;:::-;-1:-1:-1;11741:9:19;9557:2200;-1:-1:-1;;;;;;;;;;;9557:2200:19:o;1256:125:17:-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1320:17:17;::::1;;::::0;;;1340:4:::1;1320:17;::::0;;;;;;;;:24;;-1:-1:-1;;1320:24:17::1;::::0;;::::1;::::0;;;1360:14;;926:51:28;;;1360:14:17::1;::::0;899:18:28;1360:14:17::1;;;;;;;;1256:125:::0;:::o;1603:130::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1677:17:17;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;;1670:24;;-1:-1:-1;;1670:24:17::1;::::0;;1710:16;;926:51:28;;;1710:16:17::1;::::0;899:18:28;1710:16:17::1;780:203:28::0;27018:414:19;2072:14:21;2089:22;;;:7;:22;;;;;:25;:22;;-1:-1:-1;;;;;2089:25:21;2146:13;2129:30;;2125:490;;2183:10;-1:-1:-1;;;;;2183:20:21;;;2175:65;;;;-1:-1:-1;;;2175:65:21;;;;;;;:::i;:::-;2125:490;;;2271:17;2291:22;;;:7;:22;;;;;2314:1;2291:25;;-1:-1:-1;;;;;2291:25:21;;2330:116;;;;-1:-1:-1;;;2330:116:21;;;;;;;:::i;:::-;2485:53;;-1:-1:-1;;;2485:53:21;;-1:-1:-1;;;;;7064:15:28;;;2485:53:21;;;7046:34:28;2527:10:21;7096:18:28;;;7089:43;2485:33:21;;;;;6981:18:28;;2485:53:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2460:144;;;;-1:-1:-1;;;2460:144:21;;;;;;;:::i;:::-;2257:358;2125:490;27207:23:19::1;27233:19:::0;;;:8:::1;:19;::::0;;;;;;;27262:14;;::::1;:23:::0;;-1:-1:-1;;;;;;27262:23:19::1;-1:-1:-1::0;;;;;27262:23:19;::::1;::::0;;::::1;::::0;;;27295:14:::1;::::0;::::1;:23:::0;;;27329:30;;;:22:::1;::::0;::::1;:30:::0;;;;;;:38;;-1:-1:-1;;27329:38:19::1;::::0;;27383:42;;13625:25:28;;;13666:18;;;13659:60;;;;13735:18;;;13728:34;;;27233:19:19;27383:42:::1;::::0;13613:2:28;13598:18;27383:42:19::1;;;;;;;27197:235;2062:570:21::0;27018:414:19;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1431:187:21:-;1094:13:0;:11;:13::i;:::-;1567:44:21::1;1578:13;1593:6;1601:9;1567:10;:44::i;:::-;1431:187:::0;;;:::o;13023:1256:19:-;13186:7;7941:19;;;:8;:19;;;;;:26;13136:9;;-1:-1:-1;;;;;7941:26:19;7920:106;;;;-1:-1:-1;;;7920:106:19;;13975:2:28;7920:106:19;;;13957:21:28;14014:2;13994:18;;;13987:30;-1:-1:-1;;;14033:18:28;;;14026:49;14092:18;;7920:106:19;13773:343:28;7920:106:19;983:10:17::1;972:22;::::0;;;:10:::1;:22;::::0;;;;;::::1;;964:57;;;::::0;-1:-1:-1;;;964:57:17;;14323:2:28;964:57:17::1;::::0;::::1;14305:21:28::0;14362:2;14342:18;;;14335:30;-1:-1:-1;;;14381:18:28;;;14374:52;14443:18;;964:57:17::1;14121:346:28::0;964:57:17::1;13209:23:19::2;13235:19:::0;;;:8:::2;:19;::::0;;;;13291:18:::2;::::0;::::2;::::0;13273:15:::2;:36;13265:64;;;::::0;-1:-1:-1;;;13265:64:19;;14674:2:28;13265:64:19::2;::::0;::::2;14656:21:28::0;14713:2;14693:18;;;14686:30;-1:-1:-1;;;14732:18:28;;;14725:45;14787:18;;13265:64:19::2;14472:339:28::0;13265:64:19::2;13347:23;::::0;::::2;::::0;:28;13339:66:::2;;;::::0;-1:-1:-1;;;13339:66:19;;15018:2:28;13339:66:19::2;::::0;::::2;15000:21:28::0;15057:2;15037:18;;;15030:30;-1:-1:-1;;;15076:18:28;;;15069:55;15141:18;;13339:66:19::2;14816:349:28::0;13339:66:19::2;13436:10;;13423:9;:23;13415:56;;;::::0;-1:-1:-1;;;13415:56:19;;15372:2:28;13415:56:19::2;::::0;::::2;15354:21:28::0;15411:2;15391:18;;;15384:30;-1:-1:-1;;;15430:18:28;;;15423:50;15490:18;;13415:56:19::2;15170:344:28::0;13415:56:19::2;13489:6:::0;13481:55:::2;;;::::0;-1:-1:-1;;;13481:55:19;;15721:2:28;13481:55:19::2;::::0;::::2;15703:21:28::0;15760:2;15740:18;;;15733:30;-1:-1:-1;;;15779:18:28;;;15772:52;15841:18;;13481:55:19::2;15519:346:28::0;13481:55:19::2;13547:20;::::0;::::2;:25:::0;;13571:1:::2;::::0;13547:20;::::2;::::0;:25:::2;::::0;13571:1;;-1:-1:-1;;;;;13547:25:19::2;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;13547:25:19::2;;;;;-1:-1:-1::0;;;;;13547:25:19::2;;;;;;13598:1;13582:12;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;13639:12:19::2;::::0;13610:19:::2;13632:20:::0;;;:6:::2;:20;::::0;;;;13662:27;;;13699:13:::2;::::0;::::2;:26:::0;;-1:-1:-1;;;;;;13699:26:19;;::::2;13715:10;13699:26;::::0;;;13756:10:::2;::::0;13735:18:::2;::::0;::::2;:31:::0;13776:20:::2;::::0;;::::2;:33:::0;;;;::::2;::::0;;;13819:26:::2;::::0;::::2;:30:::0;;;13859:21:::2;::::0;::::2;:25:::0;;;;13932:11;;13914:29:::2;::::0;:15:::2;:29;:::i;:::-;13894:17;::::0;;::::2;:49:::0;;;13953:12:::2;::::0;::::2;:21:::0;;;14036:12;14062:13:::2;::::0;::::2;::::0;14089:18:::2;::::0;::::2;::::0;14121:20:::2;::::0;::::2;::::0;14155:26:::2;::::0;::::2;::::0;13990:252:::2;::::0;14013:9;;13990:252:::2;::::0;::::2;::::0;14036:12;;-1:-1:-1;;;;;14062:13:19;;::::2;::::0;14089:18;;14121:20;::::2;::::0;14155:26;;13894:49;13968:6;;13990:252:::2;:::i;:::-;;;;;;;;-1:-1:-1::0;;14260:12:19::2;::::0;;13023:1256;-1:-1:-1;;;;13023:1256:19:o;1121:116:21:-;1094:13:0;:11;:13::i;:::-;1185:45:21::1;1196:13;1211:6;1227:1;1185:10;:45::i;:::-;1121:116:::0;:::o;24196:256:19:-;1094:13:0;:11;:13::i;:::-;24347:14:19::1;:34:::0;;;;24391:8:::1;:22:::0;24423:8:::1;:22:::0;24196:256::o;11939:745::-;7979:1;7941:19;;;:8;:19;;;;;:26;12030:9;;-1:-1:-1;;;;;7941:26:19;7920:106;;;;-1:-1:-1;;;7920:106:19;;13975:2:28;7920:106:19;;;13957:21:28;14014:2;13994:18;;;13987:30;-1:-1:-1;;;14033:18:28;;;14026:49;14092:18;;7920:106:19;13773:343:28;7920:106:19;12055:23:::1;12081:19:::0;;;:8:::1;:19;::::0;;;;12119:23:::1;::::0;::::1;::::0;:28;12111:66:::1;;;::::0;-1:-1:-1;;;12111:66:19;;15018:2:28;12111:66:19::1;::::0;::::1;15000:21:28::0;15057:2;15037:18;;;15030:30;-1:-1:-1;;;15076:18:28;;;15069:55;15141:18;;12111:66:19::1;14816:349:28::0;12111:66:19::1;12227:7;:18;;;12208:15;:37;;12187:107;;;::::0;-1:-1:-1;;;12187:107:19;;16983:2:28;12187:107:19::1;::::0;::::1;16965:21:28::0;17022:2;17002:18;;;16995:30;17061:25;17041:18;;;17034:53;17104:18;;12187:107:19::1;16781:347:28::0;12187:107:19::1;12312:20;::::0;::::1;::::0;-1:-1:-1;;;;;12312:20:19::1;:25:::0;12304:59:::1;;;::::0;-1:-1:-1;;;12304:59:19;;17335:2:28;12304:59:19::1;::::0;::::1;17317:21:28::0;17374:2;17354:18;;;17347:30;-1:-1:-1;;;17393:18:28;;;17386:51;17454:18;;12304:59:19::1;17133:345:28::0;12304:59:19::1;-1:-1:-1::0;;12374:23:19::1;::::0;::::1;:52:::0;12470:14;;12442:43:::1;::::0;;10329:25:28;;;-1:-1:-1;;;;;12470:14:19;;::::1;10385:2:28::0;10370:18;;10363:60;12442:43:19::1;::::0;10302:18:28;12442:43:19::1;;;;;;;12518:26;::::0;::::1;::::0;12587:14;;12648:19:::1;::::0;::::1;::::0;12632:13:::1;::::0;::::1;::::0;12615:14:::1;::::0;::::1;::::0;-1:-1:-1;;;;;12518:26:19;;::::1;::::0;12555:122:::1;::::0;12587:14:::1;::::0;12648:19;12615:30:::1;::::0;::::1;:::i;:::-;:52;;;;:::i;:::-;-1:-1:-1::0;;;;;12555:18:19;::::1;::::0;:122;:18:::1;:122::i;:::-;12045:639;;11939:745:::0;;:::o;15477:2066::-;8191:1;8156:15;;;:6;:15;;;;;:23;;;15572:7;;-1:-1:-1;;;;;8156:23:19;8148:67;;;;-1:-1:-1;;;8148:67:19;;8594:2:28;8148:67:19;;;8576:21:28;8633:2;8613:18;;;8606:30;-1:-1:-1;;;8652:18:28;;;8645:47;8709:18;;8148:67:19;8392:341:28;8148:67:19;15595:19:::1;15617:15:::0;;;:6:::1;:15;::::0;;;;;;;15677;;15668:25;;:8:::1;:25:::0;;;;;;15729:17:::1;::::0;::::1;::::0;15711:15:::1;:35;15703:61;;;::::0;-1:-1:-1;;;15703:61:19;;17964:2:28;15703:61:19::1;::::0;::::1;17946:21:28::0;18003:2;17983:18;;;17976:30;-1:-1:-1;;;18022:18:28;;;18015:43;18075:18;;15703:61:19::1;17762:337:28::0;15703:61:19::1;15854:24;::::0;;15911:18:::1;::::0;::::1;::::0;15970:26;;::::1;::::0;15775:17:::1;::::0;;;15854:24;16011:35;;::::1;16007:495;;;16066:20;16090:1;16066:25:::0;16062:121:::1;;16146:21;::::0;::::1;::::0;16130:38:::1;::::0;;;:15:::1;:38;::::0;;;;;16111:57:::1;::::0;;::::1;:::i;:::-;;;16062:121;16204:13;::::0;::::1;::::0;16221:10:::1;-1:-1:-1::0;;;;;16204:13:19;;::::1;:27:::0;16196:66:::1;;;::::0;-1:-1:-1;;;16196:66:19;;18306:2:28;16196:66:19::1;::::0;::::1;18288:21:28::0;18345:2;18325:18;;;18318:30;18384:28;18364:18;;;18357:56;18430:18;;16196:66:19::1;18104:350:28::0;16196:66:19::1;16288:10;::::0;-1:-1:-1;16323:35:19::1;16338:20:::0;16323:12;:35:::1;:::i;:::-;:39;::::0;16361:1:::1;16323:39;:::i;:::-;16312:50;;16007:495;;;16405:13;::::0;::::1;::::0;16481:10:::1;::::0;-1:-1:-1;;;;;16405:13:19;;::::1;::::0;-1:-1:-1;16443:35:19::1;16466:12:::0;16443:20;:35:::1;:::i;:::-;:48;;;;:::i;:::-;16432:59;;16007:495;16520:10;-1:-1:-1::0;;;;;16520:23:19;::::1;;16512:58;;;::::0;-1:-1:-1;;;16512:58:19;;18791:2:28;16512:58:19::1;::::0;::::1;18773:21:28::0;18830:2;18810:18;;;18803:30;-1:-1:-1;;;18849:18:28;;;18842:52;18911:18;;16512:58:19::1;18589:346:28::0;16512:58:19::1;16601:8;16588:9;:21;;16580:59;;;::::0;-1:-1:-1;;;16580:59:19;;19142:2:28;16580:59:19::1;::::0;::::1;19124:21:28::0;19181:2;19161:18;;;19154:30;19220:27;19200:18;;;19193:55;19265:18;;16580:59:19::1;18940:349:28::0;16580:59:19::1;16667:13;::::0;::::1;::::0;-1:-1:-1;;;;;16667:13:19;;::::1;16654:26:::0;;::::1;::::0;16650:267:::1;;16718:9;16696:5;:18;;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;16650:267:19::1;::::0;-1:-1:-1;16650:267:19::1;;16758:20;::::0;::::1;:33:::0;;-1:-1:-1;;;;;;16758:33:19::1;16781:10;16758:33:::0;;::::1;::::0;;;:20:::1;16805:35:::0;;;:23:::1;::::0;::::1;:35;::::0;;;;:48;;16844:9:::1;::::0;16758:20;16805:48:::1;::::0;16844:9;;16805:48:::1;:::i;:::-;;;;;;;;16897:9;16867:5;:26;;;:39;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;16650:267:19::1;16969:17;::::0;::::1;::::0;16947:96:::1;::::0;17000:33:::1;17018:15:::0;17000::::1;:33;:::i;:::-;16947:8;:96::i;:::-;16927:17;::::0;::::1;:116:::0;17100:24:::1;::::0;17053:26:::1;::::0;17082:42:::1;::::0;:15:::1;:42;:::i;:::-;17053:71;;17176:18;17155:5;:17;;;:39;;17134:127;;;::::0;-1:-1:-1;;;17134:127:19;;19496:2:28;17134:127:19::1;::::0;::::1;19478:21:28::0;19535:2;19515:18;;;19508:30;19574:34;19554:18;;;19547:62;-1:-1:-1;;;19625:18:28;;;19618:39;19674:19;;17134:127:19::1;19294:405:28::0;17134:127:19::1;17300:5;:15;;;17277:259;17329:7;17350:5;:13;;;;;;;;;;-1:-1:-1::0;;;;;17350:13:19::1;17377:5;:18;;;17409:5;:20;;;;;;;;;;-1:-1:-1::0;;;;;17409:20:19::1;17443:5;:26;;;17483:5;:17;;;17514:5;:12;;;17277:259;;;;;;;;;;;;:::i;:::-;;;;;;;;15585:1958;;;;;;;;15477:2066:::0;;:::o;7369:128::-;7427:7;7481:9;7463:14;;7454:6;:23;;;;:::i;:::-;7453:37;;;;:::i;:::-;7446:44;7369:128;-1:-1:-1;;7369:128:19:o;7669:123::-;7724:7;7766:19;7778:6;7766:11;:19::i;:::-;7750:13;7756:6;7750:5;:13::i;:::-;:35;;;;:::i;23506:374::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;23643:35:19;::::1;23626:14;23643:35:::0;;;:21:::1;:35;::::0;;;;;23696:10;23688:43:::1;;;::::0;-1:-1:-1;;;23688:43:19;;20301:2:28;23688:43:19::1;::::0;::::1;20283:21:28::0;20340:2;20320:18;;;20313:30;-1:-1:-1;;;20359:18:28;;;20352:50;20419:18;;23688:43:19::1;20099:344:28::0;23688:43:19::1;-1:-1:-1::0;;;;;23741:35:19;::::1;23779:1;23741:35:::0;;;:21:::1;:35;::::0;;;;:39;23763:12;;23836:37:::1;::::0;23855:9;23866:6;23836:18:::1;:37::i;25046:324::-:0;1094:13:0;:11;:13::i;:::-;25194:1:19::1;25177:14;:18;25169:69;;;::::0;-1:-1:-1;;;25169:69:19;;20650:2:28;25169:69:19::1;::::0;::::1;20632:21:28::0;20689:2;20669:18;;;20662:30;20728:34;20708:18;;;20701:62;-1:-1:-1;;;20779:18:28;;;20772:36;20825:19;;25169:69:19::1;20448:402:28::0;25169:69:19::1;25248:30;::::0;;;:15:::1;:30;::::0;;;;;;;;:47;;;25311:52;;8313:25:28;;;8354:18;;;8347:34;;;25311:52:19::1;::::0;8286:18:28;25311:52:19::1;;;;;;;25046:324:::0;;:::o;24659:123::-;1094:13:0;:11;:13::i;:::-;24743::19::1;:32:::0;24659:123::o;25680:151::-;1094:13:0;:11;:13::i;:::-;25746:10:19::1;::::0;::::1;;:19;25738:59;;;::::0;-1:-1:-1;;;25738:59:19;;21310:2:28;25738:59:19::1;::::0;::::1;21292:21:28::0;21349:2;21329:18;;;21322:30;21388:29;21368:18;;;21361:57;21435:18;;25738:59:19::1;21108:351:28::0;25738:59:19::1;25807:10;:17:::0;;-1:-1:-1;;25807:17:19::1;25820:4;25807:17;::::0;;25680:151::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;21666:2:28;2161:73:0::1;::::0;::::1;21648:21:28::0;21705:2;21685:18;;;21678:30;21744:34;21724:18;;;21717:62;-1:-1:-1;;;21795:18:28;;;21788:36;21841:19;;2161:73:0::1;21464:402:28::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;7143:136:19:-:0;7195:7;7221:51;7230:8;;7262:9;7250:8;;7241:6;:17;;;;:::i;:::-;7240:31;;;;:::i;19321:3340::-;19406:7;19460:15;;;:6;:15;;;;;;;;19520;;19511:25;;:8;:25;;;;;19569:18;;;;19628:26;;;;19406:7;;19460:15;19511:25;19569:18;19709:35;19628:26;19569:18;19709:35;:::i;:::-;19685:5;:21;;;:59;19664:129;;;;-1:-1:-1;;;19664:129:19;;22073:2:28;19664:129:19;;;22055:21:28;22112:2;22092:18;;;22085:30;22151:25;22131:18;;;22124:53;22194:18;;19664:129:19;21871:347:28;19664:129:19;20274:14;;;;20315;;;;19804:15;;-1:-1:-1;;;;;20274:14:19;;20344:20;;20340:791;;20442:13;;;;-1:-1:-1;;;;;20432:23:19;;;20442:13;;20432:23;:49;;;;;20469:5;:12;;;20459:6;:22;20432:49;20419:62;;20340:791;;;20502:30;;;;:22;;;:30;;;;;;;;20498:633;;;20600:5;20587:18;;20498:633;;;20626:23;;;;:28;20622:509;;20762:23;;;;20755:31;;;;:6;:31;;;;;:39;;;;;20738:13;;;;-1:-1:-1;;;;;20738:13:19;;;20755:39;;20738:56;:130;;;;-1:-1:-1;20837:23:19;;;;;20830:31;;;;:6;:31;;;;;:38;;;20814:12;;;;:54;20709:159;;20622:509;;;20982:5;:17;;;20963:15;:36;;20938:120;;;;-1:-1:-1;;;20938:120:19;;22425:2:28;20938:120:19;;;22407:21:28;22464:2;22444:18;;;22437:30;22503:27;22483:18;;;22476:55;22548:18;;20938:120:19;22223:349:28;20938:120:19;21100:20;21085:12;:35;21072:48;;20622:509;21195:21;21226;21262:10;21258:777;;;21367:35;21382:20;21367:12;:35;:::i;:::-;21432:13;;;;21351:51;;-1:-1:-1;;;;;;21432:13:19;;-1:-1:-1;21258:777:19;;;21466:24;;21462:573;;21619:10;21595:35;;;;:23;;;:35;;;;;;21591:39;;:1;:39;:::i;:::-;21575:55;;21660:10;21644:26;;21709:1;21693:13;:17;21685:64;;;;-1:-1:-1;;;21685:64:19;;22779:2:28;21685:64:19;;;22761:21:28;22818:2;22798:18;;;22791:30;22857:34;22837:18;;;22830:62;-1:-1:-1;;;22908:18:28;;;22901:32;22950:19;;21685:64:19;22577:398:28;21685:64:19;21462:573;;;-1:-1:-1;;1247:7:0;1273:6;21975:12:19;;-1:-1:-1;;;;;1273:6:0;21462:573:19;22340:20;;;;-1:-1:-1;;;;;22340:20:19;22326:10;:34;22322:285;;22395:20;22380:12;:35;22376:221;;;22453:35;22468:20;22453:12;:35;:::i;:::-;22435:54;;;;:::i;:::-;;;22376:221;;;22546:35;22569:12;22546:20;:35;:::i;:::-;22528:54;;;;:::i;:::-;;;22376:221;22625:13;22640;;-1:-1:-1;19321:3340:19;-1:-1:-1;;;;;;;;;19321:3340:19:o;22667:496::-;22752:19;22774:15;;;:6;:15;;;;;;;;;22817:13;;;;22862:15;;22845:42;;10329:25:28;;;-1:-1:-1;;;;;22817:13:19;;;10370:18:28;;;10363:60;;;22774:15:19;;22845:42;;10302:18:28;22845:42:19;;;;;;;22898:23;;;:33;;;22995:32;;;;22964:26;;;;-1:-1:-1;;;;;22964:26:19;22942:49;;;;:21;:49;;;;;:85;;:49;;;:85;;22995:32;;22942:85;:::i;:::-;;;;-1:-1:-1;;23060:26:19;;;;23142:13;;;;23125:14;;;;-1:-1:-1;;;;;23060:26:19;;;;23097:59;;23116:7;;23125:30;;23142:13;23125:30;:::i;23097:59::-;22742:421;;;22667:496;;:::o;974:241:5:-;1139:68;;-1:-1:-1;;;;;23839:15:28;;;1139:68:5;;;23821:34:28;23891:15;;23871:18;;;23864:43;23923:18;;;23916:34;;;1112:96:5;;1132:5;;-1:-1:-1;;;1162:27:5;23756:18:28;;1139:68:5;;;;-1:-1:-1;;1139:68:5;;;;;;;;;;;;;;-1:-1:-1;;;;;1139:68:5;-1:-1:-1;;;;;;1139:68:5;;;;;;;;;;1112:19;:96::i;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:7;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;24163:2:28;1414:68:0;;;24145:21:28;;;24182:18;;;24175:30;24241:34;24221:18;;;24214:62;24293:18;;1414:68:0;23961:356:28;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;628:390:21:-;-1:-1:-1;;;;;763:20:21;;755:68;;;;-1:-1:-1;;;755:68:21;;24524:2:28;755:68:21;;;24506:21:28;24563:2;24543:18;;;24536:30;24602:34;24582:18;;;24575:62;-1:-1:-1;;;24653:18:28;;;24646:33;24696:19;;755:68:21;24322:399:28;755:68:21;891:1;854:22;;;:7;:22;;;;;:25;-1:-1:-1;;;;;854:25:21;:39;833:124;;;;-1:-1:-1;;;833:124:21;;24928:2:28;833:124:21;;;24910:21:28;24967:2;24947:18;;;24940:30;25006:34;24986:18;;;24979:62;-1:-1:-1;;;25057:18:28;;;25050:36;25103:19;;833:124:21;24726:402:28;833:124:21;967:44;;;;;;;;-1:-1:-1;;;;;967:44:21;;;;;;;;;;;;;;;-1:-1:-1;967:22:21;;;:7;:22;;;;;;;;:44;;:22;;:44;;:::i;763:205:5:-;902:58;;-1:-1:-1;;;;;25325:32:28;;902:58:5;;;25307:51:28;25374:18;;;25367:34;;;875:86:5;;895:5;;-1:-1:-1;;;925:23:5;25280:18:28;;902:58:5;25133:274:28;413:105:8;471:7;502:1;497;:6;;:14;;510:1;497:14;;;506:1;497:14;490:21;413:105;-1:-1:-1;;;413:105:8:o;3747:706:5:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:5;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:5;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:5;;25614:2:28;4351:85:5;;;25596:21:28;25653:2;25633:18;;;25626:30;25692:34;25672:18;;;25665:62;-1:-1:-1;;;25743:18:28;;;25736:40;25793:19;;4351:85:5;25412:406:28;3861:223:6;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:6:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:6;;26025:2:28;5137:81:6;;;26007:21:28;26064:2;26044:18;;;26037:30;26103:34;26083:18;;;26076:62;-1:-1:-1;;;26154:18:28;;;26147:36;26200:19;;5137:81:6;25823:402:28;5137:81:6;-1:-1:-1;;;;;1465:19:6;;;5228:60;;;;-1:-1:-1;;;5228:60:6;;26432:2:28;5228:60:6;;;26414:21:28;26471:2;26451:18;;;26444:30;26510:31;26490:18;;;26483:59;26559:18;;5228:60:6;26230:353:28;5228:60:6;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:6;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:6:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:6;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:6;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:316:28;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:28;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:28;305:18;;;292:32;;14:316;-1:-1:-1;14:316:28:o;527:248::-;595:6;603;656:2;644:9;635:7;631:23;627:32;624:52;;;672:1;669;662:12;624:52;-1:-1:-1;;695:23:28;;;765:2;750:18;;;737:32;;-1:-1:-1;527:248:28:o;1170:180::-;1229:6;1282:2;1270:9;1261:7;1257:23;1253:32;1250:52;;;1298:1;1295;1288:12;1250:52;-1:-1:-1;1321:23:28;;1170:180;-1:-1:-1;1170:180:28:o;1355:173::-;1423:20;;-1:-1:-1;;;;;1472:31:28;;1462:42;;1452:70;;1518:1;1515;1508:12;1452:70;1355:173;;;:::o;1533:541::-;1637:6;1645;1653;1661;1669;1677;1730:3;1718:9;1709:7;1705:23;1701:33;1698:53;;;1747:1;1744;1737:12;1698:53;1783:9;1770:23;1760:33;;1812:38;1846:2;1835:9;1831:18;1812:38;:::i;:::-;1802:48;;1869:38;1903:2;1892:9;1888:18;1869:38;:::i;:::-;1859:48;;1926:38;1960:2;1949:9;1945:18;1926:38;:::i;:::-;1916:48;;2011:3;2000:9;1996:19;1983:33;1973:43;;2063:3;2052:9;2048:19;2035:33;2025:43;;1533:541;;;;;;;;:::o;2514:186::-;2573:6;2626:2;2614:9;2605:7;2601:23;2597:32;2594:52;;;2642:1;2639;2632:12;2594:52;2665:29;2684:9;2665:29;:::i;2705:391::-;2791:6;2799;2807;2815;2868:3;2856:9;2847:7;2843:23;2839:33;2836:53;;;2885:1;2882;2875:12;2836:53;2921:9;2908:23;2898:33;;2978:2;2967:9;2963:18;2950:32;2940:42;;3029:2;3018:9;3014:18;3001:32;2991:42;;3052:38;3086:2;3075:9;3071:18;3052:38;:::i;:::-;3042:48;;2705:391;;;;;;;:::o;3101:328::-;3178:6;3186;3194;3247:2;3235:9;3226:7;3222:23;3218:32;3215:52;;;3263:1;3260;3253:12;3215:52;3299:9;3286:23;3276:33;;3328:38;3362:2;3351:9;3347:18;3328:38;:::i;:::-;3318:48;;3385:38;3419:2;3408:9;3404:18;3385:38;:::i;:::-;3375:48;;3101:328;;;;;:::o;5673:260::-;5741:6;5749;5802:2;5790:9;5781:7;5777:23;5773:32;5770:52;;;5818:1;5815;5808:12;5770:52;5841:29;5860:9;5841:29;:::i;:::-;5831:39;;5889:38;5923:2;5912:9;5908:18;5889:38;:::i;:::-;5879:48;;5673:260;;;;;:::o;6070:356::-;6272:2;6254:21;;;6291:18;;;6284:30;6350:34;6345:2;6330:18;;6323:62;6417:2;6402:18;;6070:356::o;6431:398::-;6633:2;6615:21;;;6672:2;6652:18;;;6645:30;6711:34;6706:2;6691:18;;6684:62;-1:-1:-1;;;6777:2:28;6762:18;;6755:32;6819:3;6804:19;;6431:398::o;7143:277::-;7210:6;7263:2;7251:9;7242:7;7238:23;7234:32;7231:52;;;7279:1;7276;7269:12;7231:52;7311:9;7305:16;7364:5;7357:13;7350:21;7343:5;7340:32;7330:60;;7386:1;7383;7376:12;8738:127;8799:10;8794:3;8790:20;8787:1;8780:31;8830:4;8827:1;8820:15;8854:4;8851:1;8844:15;8870:231;8910:4;-1:-1:-1;;;;;9008:10:28;;;;8978;;9030:12;;;9027:38;;;9045:18;;:::i;:::-;9082:13;;8870:231;-1:-1:-1;;;8870:231:28:o;9106:128::-;9146:3;9177:1;9173:6;9170:1;9167:13;9164:39;;;9183:18;;:::i;:::-;-1:-1:-1;9219:9:28;;9106:128::o;12206:184::-;12276:6;12329:2;12317:9;12308:7;12304:23;12300:32;12297:52;;;12345:1;12342;12335:12;12297:52;-1:-1:-1;12368:16:28;;12206:184;-1:-1:-1;12206:184:28:o;15870:238::-;15910:3;-1:-1:-1;;;;;15977:10:28;;;16007;;;16037:12;;;16029:21;;16026:47;;;16053:18;;:::i;:::-;16089:13;;15870:238;-1:-1:-1;;;;15870:238:28:o;16113:663::-;16428:25;;;-1:-1:-1;;;;;16527:15:28;;;16522:2;16507:18;;16500:43;16574:2;16559:18;;16552:34;;;;16622:15;;;;16617:2;16602:18;;16595:43;16669:3;16654:19;;16647:35;;;;16480:3;16698:19;;16691:35;;;;16757:3;16742:19;;16735:35;16415:3;16400:19;;16113:663::o;18459:125::-;18499:4;18527:1;18524;18521:8;18518:34;;;18532:18;;:::i;:::-;-1:-1:-1;18569:9:28;;18459:125::o;19704:168::-;19744:7;19810:1;19806;19802:6;19798:14;19795:1;19792:21;19787:1;19780:9;19773:17;19769:45;19766:71;;;19817:18;;:::i;:::-;-1:-1:-1;19857:9:28;;19704:168::o;19877:217::-;19917:1;19943;19933:132;;19987:10;19982:3;19978:20;19975:1;19968:31;20022:4;20019:1;20012:15;20050:4;20047:1;20040:15;19933:132;-1:-1:-1;20079:9:28;;19877:217::o;26588:258::-;26660:1;26670:113;26684:6;26681:1;26678:13;26670:113;;;26760:11;;;26754:18;26741:11;;;26734:39;26706:2;26699:10;26670:113;;;26801:6;26798:1;26795:13;26792:48;;;-1:-1:-1;;26836:1:28;26818:16;;26811:27;26588:258::o;26851:274::-;26980:3;27018:6;27012:13;27034:53;27080:6;27075:3;27068:4;27060:6;27056:17;27034:53;:::i;:::-;27103:16;;;;;26851:274;-1:-1:-1;;26851:274:28:o;27130:383::-;27279:2;27268:9;27261:21;27242:4;27311:6;27305:13;27354:6;27349:2;27338:9;27334:18;27327:34;27370:66;27429:6;27424:2;27413:9;27409:18;27404:2;27396:6;27392:15;27370:66;:::i;:::-;27497:2;27476:15;-1:-1:-1;;27472:29:28;27457:45;;;;27504:2;27453:54;;27130:383;-1:-1:-1;;27130:383:28:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "ClaimMade(bytes32,uint256,address,uint256,address,uint256,uint256,bytes32)": {
        "notice": "Emitted when a claim or a counter-claim (challenge) has been made. .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`"
      },
      "ClaimStakeWithdrawn(uint256,bytes32,address)": {
        "notice": "Emitted when staked native tokens tied to a claim have been withdrawn. This can only happen when the claim has been resolved and the caller of :sol:func:`withdraw` is allowed to withdraw their stake. .. seealso:: :sol:func:`withdraw`"
      },
      "DepositWithdrawn(bytes32,address)": {
        "notice": "Emitted when the token deposit for request ``requestId`` has been transferred to the ``receiver``. This can happen in two cases:  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`  * a claim related to the request has been resolved successfully in favor of the claimer .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`"
      },
      "FillInvalidatedResolved(bytes32,bytes32)": {
        "notice": "Emitted when an invalidated fill has been resolved. .. seealso:: :sol:func:`invalidateFill`"
      },
      "LpAdded(address)": {
        "notice": "Emitted when a liquidity provider has been added to the set of allowed liquidity providers. .. seealso:: :sol:func:`addAllowedLp`"
      },
      "LpRemoved(address)": {
        "notice": "Emitted when a liquidity provider has been removed from the set of allowed liquidity providers. .. seealso:: :sol:func:`removeAllowedLp`"
      },
      "RequestCreated(bytes32,uint256,address,address,address,uint256,uint256,uint256)": {
        "notice": "Emitted when a new request has been created. .. seealso:: :sol:func:`createRequest`"
      },
      "RequestResolved(bytes32,address,bytes32)": {
        "notice": "Emitted when a request has been resolved via L1 resolution. .. seealso:: :sol:func:`resolveRequest`"
      }
    },
    "kind": "dev",
    "methods": {
      "CLAIM_ID_WITHDRAWN_EXPIRED()": {
        "notice": "withdrawClaimId is set to this value when an expired request gets withdrawn by the sender"
      },
      "MAX_VALIDITY_PERIOD()": {
        "notice": "The maximum validity period of a request."
      },
      "MIN_VALIDITY_PERIOD()": {
        "notice": "The minimum validity period of a request."
      },
      "addAllowedLp(address)": {
        "notice": "Add a liquidity provider to the set of allowed liquidity providers. .. note:: This function can only be called by the contract owner.",
        "params": {
          "newLp": "The liquidity provider."
        }
      },
      "addCaller(address)": {
        "notice": "Allow calls from an address on the same chain.",
        "params": {
          "caller": "The caller."
        }
      },
      "addCaller(uint256,address,address)": {
        "notice": "Allow calls from an address on another chain.",
        "params": {
          "caller": "The caller.",
          "callerChainId": "The caller's chain ID.",
          "messenger": "The messenger."
        }
      },
      "allowedLps(address)": {
        "notice": "The set of liquidity providers that are added to the whitelist."
      },
      "callers(uint256,uint256)": {
        "notice": "Maps caller chain IDs to tuples [caller, messenger]. For same-chain calls, the messenger address is 0x0."
      },
      "challengeClaim(uint256)": {
        "notice": "Challenge an existing claim. The claim must still be valid at call time. This function implements one round of the challenge game. The original claimer is allowed to call this function only after someone else made a challenge, i.e. every second round. However, once the original claimer counter-challenges, anyone can join the game and make another challenge. The caller must provide enough native tokens as their stake. For the original claimer, the minimum stake is ``challengerStakeTotal - claimerStake + claimStake``. For challengers, the minimum stake is ``claimerStake - challengerStakeTotal + 1``. An example (time flows downwards, claimStake = 10)::   claimRequest() by Max [stakes 10]   challengeClaim() by Alice [stakes 11]   challengeClaim() by Max [stakes 11]   challengeClaim() by Bob [stakes 16] In this example, if Max didn't want to lose the challenge game to Alice and Bob, he would have to challenge with a stake of at least 16.",
        "params": {
          "claimId": "The claim ID."
        }
      },
      "challengePeriodExtension()": {
        "notice": "The period by which the termination time of a claim is extended after each round of the challenge game. This period should allow enough time for the other parties to counter-challenge. .. note::    The claim's termination time is extended only if it is less than the    extension time. Note that in the first challenge round, i.e. the round initiated by the first challenger, the termination time is extended additionally by the finality period of the target chain. This is done to allow for L1 resolution."
      },
      "claimPeriod()": {
        "notice": "The period for which the claim is valid."
      },
      "claimRequest(bytes32,bytes32)": {
        "notice": "Claim that a request was filled by the caller. The request must still be valid at call time. The caller must provide the ``claimStake`` amount of source rollup's native token.",
        "params": {
          "fillId": "The fill ID.",
          "requestId": "ID of the request."
        },
        "returns": {
          "_0": "The claim ID."
        }
      },
      "claimStake()": {
        "notice": "The minimum amount of source chain's native token that the claimer needs to provide when making a claim, as well in each round of the challenge game."
      },
      "claims(uint256)": {
        "notice": "Maps claim IDs to claims."
      },
      "collectedProtocolFees(address)": {
        "notice": "Maps ERC20 token addresses to related token amounts that belong to the protocol."
      },
      "constructor": {
        "notice": "Constructor.",
        "params": {
          "_challengePeriodExtension": "Challenge period extension, in seconds.",
          "_claimPeriod": "Claim period, in seconds.",
          "_claimStake": "Claim stake amount."
        }
      },
      "createRequest(uint256,address,address,address,uint256,uint256)": {
        "notice": "Create a new transfer request.",
        "params": {
          "amount": "Amount of tokens to transfer. Does not include fees.",
          "sourceTokenAddress": "Address of the token contract on the source chain.",
          "targetAddress": "Recipient address on the target chain.",
          "targetChainId": "ID of the target chain.",
          "targetTokenAddress": "Address of the token contract on the target chain.",
          "validityPeriod": "The number of seconds the request is to be considered valid.                       Once its validity period has elapsed, the request cannot be claimed                       anymore and will eventually expire, allowing the request submitter                       to withdraw the deposited tokens if there are no active claims."
        },
        "returns": {
          "_0": "ID of the newly created request."
        }
      },
      "currentNonce()": {
        "notice": "A counter used to generate request and claim IDs. The variable holds the most recently used nonce and must be incremented to get the next nonce"
      },
      "deprecateContract()": {
        "notice": "Mark the contract as deprecated. Once the contract is deprecated, it cannot be used to create new requests anymore. Withdrawing deposited funds and claim stakes still works, though. .. note:: This function can only be called by the contract owner."
      },
      "deprecated()": {
        "notice": "Indicates whether the contract is deprecated. A deprecated contract cannot be used to create new requests."
      },
      "finalityPeriods(uint256)": {
        "notice": "Maps target rollup chain IDs to finality periods. Finality periods are in seconds."
      },
      "invalidateFill(bytes32,bytes32,uint256)": {
        "notice": "Mark the fill identified by ``requestId`` and ``fillId`` as invalid. .. note::     This function is a restricted call function. Only callable by the added caller.",
        "params": {
          "fillId": "The fill ID.",
          "requestId": "The request ID.",
          "resolutionChainId": "The resolution (L1) chain ID."
        }
      },
      "isInvalidFill(bytes32,bytes32)": {
        "notice": "Returns whether a fill is invalidated or not Calling invalidateFill() will set this boolean to true, marking that the ``fillId`` for the corresponding ``requestId`` was invalidated. Calling resolveRequest will validate it again, setting request.invalidatedFills[fillId] to false. .. seealso:: :sol:func:`invalidateFill` .. seealso:: :sol:func:`resolveRequest`",
        "params": {
          "fillId": "The fill ID",
          "requestId": "The request ID"
        },
        "returns": {
          "_0": "Whether the fill ID is invalid for the given request ID"
        }
      },
      "lpFee(uint256)": {
        "notice": "Compute the liquidy provider fee that needs to be paid for a given transfer amount."
      },
      "lpFeePPM()": {
        "notice": "Liquidity provider fee percentage, expressed in ppm (parts per million)."
      },
      "minLpFee()": {
        "notice": "The minimum fee, denominated in transfer token, paid to the liquidity provider."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "protocolFee(uint256)": {
        "notice": "Compute the protocol fee that needs to be paid for a given transfer amount."
      },
      "protocolFeePPM()": {
        "notice": "Protocol fee percentage, expressed in ppm (parts per million)."
      },
      "removeAllowedLp(address)": {
        "notice": "Remove a liquidity provider from the set of allowed liquidity providers. .. note:: This function can only be called by the contract owner.",
        "params": {
          "oldLp": "The liquidity provider."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "requests(bytes32)": {
        "notice": "Maps request IDs to requests."
      },
      "resolveRequest(bytes32,bytes32,uint256,address)": {
        "notice": "Mark the request identified by ``requestId`` as filled by ``filler``. .. note::     This function is a restricted call function. Only callable by the added caller.",
        "params": {
          "fillId": "The fill ID.",
          "filler": "The address that filled the request.",
          "requestId": "The request ID.",
          "resolutionChainId": "The resolution (L1) chain ID."
        }
      },
      "setFinalityPeriod(uint256,uint256)": {
        "notice": "Set the finality period for the given target chain. .. note:: This function can only be called by the contract owner.",
        "params": {
          "finalityPeriod": "Finality period in seconds.",
          "targetChainId": "The target chain ID."
        }
      },
      "totalFee(uint256)": {
        "notice": "Compute the total fee that needs to be paid for a given transfer amount. The total fee is the sum of the liquidity provider fee and the protocol fee."
      },
      "transferLimit()": {
        "notice": "The maximum amount of tokens that can be transferred in a single request."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateFeeData(uint256,uint256,uint256)": {
        "notice": "Update fee parameters. .. note:: This function can only be called by the contract owner.",
        "params": {
          "newLpFeePPM": "The new value for ``lpFeePPM``.",
          "newMinLpFee": "The new value for ``minLpFee``.",
          "newProtocolFeePPM": "The new value for ``protocolFeePPM``."
        }
      },
      "updateTransferLimit(uint256)": {
        "notice": "Update the transfer amount limit. .. note:: This function can only be called by the contract owner.",
        "params": {
          "newTransferLimit": "The new value for ``transferLimit``."
        }
      },
      "withdraw(uint256)": {
        "notice": "Withdraw the deposit that the request submitter left with the contract, as well as the staked native tokens associated with the claim. In case the caller of this function is a challenger that won the game, they will only get their staked native tokens plus the reward in the form of full (sole challenger) or partial (multiple challengers) amount of native tokens staked by the dishonest claimer.",
        "params": {
          "claimId": "The claim ID."
        },
        "returns": {
          "_0": "The address of the deposit receiver."
        }
      },
      "withdrawExpiredRequest(bytes32)": {
        "notice": "Withdraw funds deposited with an expired request. No claims must be active for the request.",
        "params": {
          "requestId": "ID of the expired request."
        }
      },
      "withdrawProtocolFees(address,address)": {
        "notice": "Withdraw protocol fees collected by the contract. Protocol fees are paid in token transferred. .. note:: This function can only be called by the contract owner.",
        "params": {
          "recipient": "The address the fees should be sent to.",
          "tokenAddress": "The address of the token contract."
        }
      }
    },
    "notice": "The request manager. This contract is responsible for keeping track of transfer requests, implementing the rules of the challenge game and holding deposited tokens until they are withdrawn. The information passed by L1 resolution will be stored with the respective requests. It is the only contract that agents need to interact with on the source chain. .. note::   The functions resolveRequest and invalidateFill can only be called by   the :sol:contract:`Resolver` contract, via a chain-dependent messenger contract.",
    "version": 1
  },
  "offset": [
    1057,
    28350
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x246 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DC2CD98 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xCF7B287F GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xEA628898 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xEA628898 EQ PUSH2 0x81E JUMPI DUP1 PUSH4 0xEA656F7D EQ PUSH2 0x834 JUMPI DUP1 PUSH4 0xEB321173 EQ PUSH2 0x849 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x85F JUMPI DUP1 PUSH4 0xF7D64CEC EQ PUSH2 0x87F JUMPI DUP1 PUSH4 0xF9432517 EQ PUSH2 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCF7B287F EQ PUSH2 0x792 JUMPI DUP1 PUSH4 0xD137920B EQ PUSH2 0x7B2 JUMPI DUP1 PUSH4 0xD762A37B EQ PUSH2 0x7D2 JUMPI DUP1 PUSH4 0xE2653EEB EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0xE7AAD5C4 EQ PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E375226 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x9E375226 EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0xA032B5F4 EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xADB610A3 EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0xCEA74EDF EQ PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7DC2CD98 EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x92C824D8 EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0x96171D05 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0x9D866985 EQ PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3993B6ED GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x7203AE3B GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x7203AE3B EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x743C151A EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0x747293FB EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0x78DA194B EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x79650559 EQ PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3993B6ED EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x5B3A6EF2 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x5D5AA11B EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x6BC6C8D1 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x2F4212B8 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x2F92F009 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x30A08CBC EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x31E08F7A EQ PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FC4C37 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xE19A1C6 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x1489F8D2 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x1D18ADC5 EQ PUSH2 0x2F8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x287 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BC PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x295A JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x293 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH2 0x12C DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x293 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BC PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B1 JUMP JUMPDEST PUSH2 0xDE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE PUSH1 0xB SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A10 JUMP JUMPDEST PUSH2 0x11FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A10 JUMP JUMPDEST PUSH2 0x125F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A2B JUMP JUMPDEST PUSH2 0x12B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH2 0x44B CALLDATASIZE PUSH1 0x4 PUSH2 0x2A10 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x1461 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x48D CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6A JUMP JUMPDEST PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x2EA PUSH2 0x4A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x295A JUMP JUMPDEST PUSH2 0x148D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A10 JUMP JUMPDEST PUSH2 0x17A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x4E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x17C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x500 CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH2 0x17D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x26B PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH2 0x19D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH2 0x708 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F1 PUSH2 0x57D CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD SWAP10 DUP10 ADD SLOAD PUSH1 0xA SWAP1 SWAP10 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND SWAP11 SWAP8 DUP10 AND SWAP10 SWAP7 SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP13 DUP14 AND DUP2 MSTORE SWAP11 DUP13 AND PUSH1 0x20 DUP13 ADD MSTORE DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xA0 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x160 ADD PUSH2 0x293 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x677 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH2 0x6A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH2 0x1DD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x716 PUSH2 0x6C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP7 SWAP5 SWAP6 SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x20 DUP11 ADD MSTORE DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 SWAP1 SWAP3 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x293 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH2 0x78D CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH2 0x1DF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x7AD CALLDATASIZE PUSH1 0x4 PUSH2 0x2AA6 JUMP JUMPDEST PUSH2 0x1E17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x7CD CALLDATASIZE PUSH1 0x4 PUSH2 0x295A JUMP JUMPDEST PUSH2 0x1EA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x7ED CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH2 0x1F58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH1 0x0 NOT DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x840 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x1F65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x87A CALLDATASIZE PUSH1 0x4 PUSH2 0x2A10 JUMP JUMPDEST PUSH2 0x1FCF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH2 0x89A CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH2 0x2045 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CHAINID DUP3 SUB PUSH2 0x90C JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FE SWAP1 PUSH2 0x2AD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FE SWAP1 PUSH2 0x2B0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x845C5443 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x845C5443 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x990 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FE SWAP1 PUSH2 0x2AD9 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xA3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420696E76616C6964617465207265736F6C7665642066696C6C73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696C6C20616C726561647920696E76616C6964617465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x5571B83C623961FB42D39CE6D6D2092153ACE66C008E2DC2472EC6D2E8FAD045 SWAP1 PUSH2 0xAF4 SWAP1 DUP9 SWAP1 DUP9 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0xB20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x18DB185A5B5259081B9BDD081D985B1A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SWAP1 SWAP2 DUP1 PUSH2 0xBB7 DUP8 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP4 POP SWAP2 POP ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST DUP4 PUSH1 0x6 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xC4A JUMPI PUSH1 0x7 DUP4 ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC25 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH2 0x2B88 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP5 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC5E SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST DUP5 PUSH1 0x6 ADD SLOAD GT ISZERO PUSH2 0xCCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F20776974686472617720746F6F206C6172676500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD17 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST DUP5 SLOAD PUSH1 0x40 DUP1 MLOAD DUP11 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xA5D98EFE63B5C32FD1A0E4D189473A6E9538A04F05DA85B3CD50C5915087DECF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x8 DUP5 ADD SLOAD ISZERO DUP1 ISZERO PUSH2 0xDC8 JUMPI POP PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0xDD7 JUMPI PUSH2 0xDD7 DUP5 DUP10 PUSH2 0x2333 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xE32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x10DBDB9D1C9858DD081A5CC819195C1C9958D85D1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xE8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617267657420726F6C6C7570206E6F7420737570706F727465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x12C DUP3 LT ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696469747920706572696F6420746F6F2073686F727400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x708 DUP3 GT ISZERO PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696469747920706572696F6420746F6F206C6F6E670000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0xE SLOAD DUP4 GT ISZERO PUSH2 0xF85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473207472616E73666572206C696D6974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST DUP6 PUSH1 0x0 PUSH2 0xF91 DUP6 PUSH2 0x2045 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF9E DUP7 PUSH2 0x1DD5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0xFAD DUP5 DUP10 PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1006 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x102A SWAP2 SWAP1 PUSH2 0x2BC8 JUMP JUMPDEST LT ISZERO PUSH2 0x1071 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1084 SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD CHAINID PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP16 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP15 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE DUP14 SWAP1 SHL AND PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x88 DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0xA8 DUP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP5 ADD DUP5 MSTORE PUSH1 0xC8 SWAP1 SWAP2 ADD DUP3 MSTORE DUP3 MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND OR SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP14 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP10 SWAP1 SSTORE PUSH2 0x1138 DUP9 TIMESTAMP PUSH2 0x2BB0 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0xF852FA5288E6BD150237CEC1F415E191D8232B72067C0520011180D7EA00BA8C DUP15 DUP15 DUP15 DUP15 DUP15 PUSH1 0x7 SLOAD DUP9 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x11CE SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x20 DUP9 ADD MSTORE SWAP4 DUP6 AND PUSH1 0x40 DUP8 ADD MSTORE SWAP2 SWAP1 SWAP4 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x11EB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND CALLER ADDRESS DUP7 PUSH2 0x23FE JUMP JUMPDEST POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1203 PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x371FC559C30F70424413FED6BF7E57DC939651331ABAD5C970A8EA0921C80B2E SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1267 PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x4E774C97F73F4BEA034579E4224498D7D9B3A4109EAA70ED3D85C97A5855F198 SWAP2 ADD PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CHAINID DUP3 SUB PUSH2 0x1306 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FE SWAP1 PUSH2 0x2AD9 JUMP JUMPDEST PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x133E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FE SWAP1 PUSH2 0x2B0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x845C5443 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x845C5443 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x138A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13AE SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0x13CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FE SWAP1 PUSH2 0x2AD9 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP5 ADD DUP11 SWAP1 SSTORE DUP10 DUP6 MSTORE PUSH1 0xB DUP5 ADD DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD DUP11 DUP2 MSTORE SWAP2 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 PUSH32 0xB32D3C8B5539B0CC3050D5B75E9DAD8ECA8744A0892259BDA27FDB51B9956736 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1469 PUSH2 0x2469 JUMP JUMPDEST PUSH2 0x1473 PUSH1 0x0 PUSH2 0x24C3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x147D PUSH2 0x2469 JUMP JUMPDEST PUSH2 0x1488 DUP4 DUP4 DUP4 PUSH2 0x2513 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1C995C5D595CDD1259081B9BDD081D985B1A59 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD TIMESTAMP LT PUSH2 0x1594 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14995C5D595CDD08195E1C1A5C9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0x162A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081CDD185AD948185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST DUP4 PUSH2 0x1670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x46696C6C4964206D757374206E6F742062652030783 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x7 DUP2 ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1691 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH2 0x2BE1 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16C8 SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x4 DUP1 DUP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0x1728 SWAP1 TIMESTAMP PUSH2 0x2BB0 JUMP JUMPDEST PUSH1 0x7 DUP1 DUP4 ADD DUP3 SWAP1 SSTORE PUSH1 0x8 DUP4 ADD DUP8 SWAP1 SSTORE SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x40 MLOAD DUP13 SWAP7 PUSH32 0xA317459AAAFF5501EC6D0DCFC26440565BEAF33DC2BA0F68B7273A50322C215D SWAP7 PUSH2 0x1794 SWAP7 SWAP1 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP6 SWAP1 SWAP5 SWAP2 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP15 SWAP1 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x7 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x17B1 PUSH2 0x2469 JUMP JUMPDEST PUSH2 0x17BD CHAINID DUP3 PUSH1 0x0 PUSH2 0x2513 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x17C8 PUSH2 0x2469 JUMP JUMPDEST PUSH1 0xD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xC SSTORE PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1832 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1C995C5D595CDD1259081B9BDD081D985B1A59 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD SLOAD ISZERO PUSH2 0x188E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x18E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175657374206E6F74206578706972656420796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND ISZERO PUSH2 0x1935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x41637469766520636C61696D732072756E6E696E67 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x8 DUP3 ADD SSTORE DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xAB63A14C4AABA38366FD39116091672BB44520328EE870BE35A51E573296E565 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH2 0x19CE SWAP5 AND SWAP3 SWAP2 PUSH2 0x19B3 SWAP2 PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0x19BD SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x2625 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x18DB185A5B5259081B9BDD081D985B1A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x7 DUP3 ADD SLOAD TIMESTAMP LT PUSH2 0x1A91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x10DB185A5B48195E1C1A5C9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x2 DUP5 ADD SLOAD SWAP2 DUP5 ADD SLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 DUP1 DUP3 GT ISZERO PUSH2 0x1B52 JUMPI DUP1 PUSH1 0x0 SUB PUSH2 0x1AD5 JUMPI PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1AD2 SWAP1 DUP5 PUSH2 0x2BB0 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 DUP8 ADD SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x1B33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206368616C6C656E6765206F776E20636C61696D000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST CALLER SWAP5 POP PUSH2 0x1B40 DUP2 DUP4 PUSH2 0x2C4B JUMP JUMPDEST PUSH2 0x1B4B SWAP1 PUSH1 0x1 PUSH2 0x2BB0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x1 DUP8 ADD SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP6 POP PUSH2 0x1B71 DUP4 DUP4 PUSH2 0x2C4B JUMP JUMPDEST PUSH2 0x1B7B SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST SWAP4 POP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ PUSH2 0x1BCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08195B1A59DA589B19481D1BC81BDD5D189A59 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST DUP4 CALLVALUE LT ISZERO PUSH2 0x1C1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207374616B652070726F766964656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x1 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP7 AND SUB PUSH2 0x1C56 JUMPI CALLVALUE DUP8 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C4B SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1CAE SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x1C8D SWAP1 DUP5 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE DUP8 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1CA8 SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x7 DUP8 ADD SLOAD PUSH2 0x1CC6 SWAP1 PUSH2 0x1CC1 DUP6 TIMESTAMP PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0x2655 JUMP JUMPDEST PUSH1 0x7 DUP9 ADD SSTORE PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1CDB SWAP1 TIMESTAMP PUSH2 0x2BB0 JUMP JUMPDEST SWAP1 POP DUP1 DUP9 PUSH1 0x7 ADD SLOAD LT ISZERO PUSH2 0x1D43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D207465726D696E6174696F6E20646964206E6F7420696E63726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0xE6CA40CADCDEEACED PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FE JUMP JUMPDEST DUP8 PUSH1 0x0 ADD SLOAD PUSH32 0xA317459AAAFF5501EC6D0DCFC26440565BEAF33DC2BA0F68B7273A50322C215D DUP12 DUP11 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x2 ADD SLOAD DUP13 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP14 PUSH1 0x5 ADD SLOAD DUP15 PUSH1 0x7 ADD SLOAD DUP16 PUSH1 0x8 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1DC1 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF4240 PUSH1 0xD SLOAD DUP4 PUSH2 0x1DE9 SWAP2 SWAP1 PUSH2 0x2C62 JUMP JUMPDEST PUSH2 0x1DF3 SWAP2 SWAP1 PUSH2 0x2C81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E04 DUP3 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x1E0D DUP4 PUSH2 0x2045 JUMP JUMPDEST PUSH2 0x1DF3 SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0x1E1F PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x1E7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x50726F746F636F6C20666565206973207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP4 SWAP1 PUSH2 0x19CE SWAP1 DUP5 DUP5 PUSH2 0x2625 JUMP JUMPDEST PUSH2 0x1EAA PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1F09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696E616C69747920706572696F64206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD DUP5 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xABA57B48B9F1DFD5747A52ED348A6AB6AA7BAFB0575363A5CB7B62659F727B65 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1F60 PUSH2 0x2469 JUMP JUMPDEST PUSH1 0xE SSTORE JUMP JUMPDEST PUSH2 0x1F6D PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1FC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420616C726561647920646570726563617465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1FD7 PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x203C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x24C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF3 PUSH1 0xB SLOAD PUSH3 0xF4240 PUSH1 0xC SLOAD DUP6 PUSH2 0x205F SWAP2 SWAP1 PUSH2 0x2C62 JUMP JUMPDEST PUSH2 0x1CC1 SWAP2 SWAP1 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD DUP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x209E DUP2 DUP4 PUSH2 0x2BB0 JUMP JUMPDEST DUP5 PUSH1 0x6 ADD SLOAD LT PUSH2 0x20F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20616C72656164792077697468647261776E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x9 DUP4 ADD SLOAD PUSH1 0xA DUP5 ADD SLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2136 JUMPI PUSH1 0x1 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x212F JUMPI POP DUP7 PUSH1 0x8 ADD SLOAD DUP2 EQ JUMPDEST SWAP3 POP PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2158 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x8 DUP7 ADD SLOAD ISZERO PUSH2 0x21B7 JUMPI PUSH1 0x8 DUP7 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD SWAP1 DUP9 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x212F JUMPI POP PUSH1 0x8 DUP1 DUP8 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 ADD SLOAD SWAP1 DUP9 ADD SLOAD EQ SWAP3 POP PUSH2 0x2211 JUMP JUMPDEST DUP7 PUSH1 0x7 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x220B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20706572696F64206E6F742066696E697368656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST DUP4 DUP6 GT SWAP3 POP JUMPDEST PUSH1 0x0 DUP1 DUP5 ISZERO PUSH2 0x223C JUMPI PUSH2 0x2224 DUP7 DUP9 PUSH2 0x2BB0 JUMP JUMPDEST PUSH1 0x1 DUP11 ADD SLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x22D5 JUMP JUMPDEST DUP6 ISZERO PUSH2 0x22C4 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP11 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x225F SWAP1 PUSH1 0x2 PUSH2 0x2C62 JUMP JUMPDEST SWAP2 POP CALLER SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x22BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4368616C6C656E67657220686173206E6F7468696E6720746F20776974686472 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6177 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x22D5 JUMP JUMPDEST POP POP PUSH1 0x0 SLOAD DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x4 DUP10 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2323 JUMPI DUP6 DUP8 GT ISZERO PUSH2 0x230C JUMPI PUSH2 0x22FB DUP7 DUP9 PUSH2 0x2C4B JUMP JUMPDEST PUSH2 0x2305 SWAP1 DUP4 PUSH2 0x2BB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2323 JUMP JUMPDEST PUSH2 0x2316 DUP8 DUP8 PUSH2 0x2C4B JUMP JUMPDEST PUSH2 0x2320 SWAP1 DUP4 PUSH2 0x2C4B JUMP JUMPDEST SWAP2 POP JUMPDEST SWAP12 SWAP1 SWAP11 POP SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD DUP5 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP3 PUSH32 0xAB63A14C4AABA38366FD39116091672BB44520328EE870BE35A51E573296E565 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 DUP5 ADD DUP4 SWAP1 SSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x23C7 SWAP1 DUP5 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH2 0x23F7 SWAP2 DUP5 SWAP2 PUSH2 0x19BD SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x19CE SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x266E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C65722063616E6E6F742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x65203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x25E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C657220616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x657869737473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP3 MSTORE DUP4 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 SWAP2 DUP3 SWAP1 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 PUSH2 0x19CE SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x28C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1488 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x2432 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x2665 JUMPI DUP2 PUSH2 0x2667 JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2740 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1488 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x26E1 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0x1488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x274F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2757 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x27B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x280F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x282B SWAP2 SWAP1 PUSH2 0x2CCF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2868 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x286D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x287D DUP3 DUP3 DUP7 PUSH2 0x2888 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2897 JUMPI POP DUP2 PUSH2 0x2667 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x28A7 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FE SWAP2 SWAP1 PUSH2 0x2CEB JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2909 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2909 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x28D4 JUMP JUMPDEST POP PUSH2 0x2915 SWAP3 SWAP2 POP PUSH2 0x2919 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2915 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x291A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x296D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x298E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x29AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x29CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH2 0x29DA PUSH1 0x20 DUP9 ADD PUSH2 0x2995 JUMP JUMPDEST SWAP5 POP PUSH2 0x29E8 PUSH1 0x40 DUP9 ADD PUSH2 0x2995 JUMP JUMPDEST SWAP4 POP PUSH2 0x29F6 PUSH1 0x60 DUP9 ADD PUSH2 0x2995 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2667 DUP3 PUSH2 0x2995 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2A5F PUSH1 0x60 DUP7 ADD PUSH2 0x2995 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x2A8F PUSH1 0x20 DUP6 ADD PUSH2 0x2995 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A9D PUSH1 0x40 DUP6 ADD PUSH2 0x2995 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AC2 DUP4 PUSH2 0x2995 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AD0 PUSH1 0x20 DUP5 ADD PUSH2 0x2995 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C20646973616C6C6F776564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A206D657373656E676572206E6F742073 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x2BA8 JUMPI PUSH2 0x2BA8 PUSH2 0x2B72 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2BC3 JUMPI PUSH2 0x2BC3 PUSH2 0x2B72 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP3 DUP2 AND DUP5 DUP3 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x2C03 JUMPI PUSH2 0x2C03 PUSH2 0x2B72 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP7 DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP4 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2C5D JUMPI PUSH2 0x2C5D PUSH2 0x2B72 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2C7C JUMPI PUSH2 0x2C7C PUSH2 0x2B72 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2C9E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CBE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2CA6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x19CE JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2CE1 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2CA3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2D0A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2CA3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC GAS LOG0 0xA9 0xAE JUMP PUSH19 0xD450F600CEFBA3E6417FA4AB113D49B67CCBBF 0xE0 0x22 0x1E 0xC1 0xB1 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "8": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "LT",
      "path": "19"
    },
    "9": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x246"
    },
    "12": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "16": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "SHR",
      "path": "19"
    },
    "19": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "20": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7DC2CD98"
    },
    "25": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "GT",
      "path": "19"
    },
    "26": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x139"
    },
    "29": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "30": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "31": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xCF7B287F"
    },
    "36": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "GT",
      "path": "19"
    },
    "37": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB6"
    },
    "40": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "41": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "42": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xEA628898"
    },
    "47": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "GT",
      "path": "19"
    },
    "48": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "52": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "53": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xEA628898"
    },
    "58": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "59": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x81E"
    },
    "62": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "63": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "64": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xEA656F7D"
    },
    "69": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "70": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x834"
    },
    "73": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "74": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "75": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xEB321173"
    },
    "80": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "81": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x849"
    },
    "84": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "85": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "86": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "92": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x85F"
    },
    "95": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "96": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "97": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF7D64CEC"
    },
    "102": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "103": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x87F"
    },
    "106": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "107": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "108": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF9432517"
    },
    "113": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "114": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x89F"
    },
    "117": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "118": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "121": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "REVERT",
      "path": "19"
    },
    "122": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "123": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "124": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xCF7B287F"
    },
    "129": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "130": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x792"
    },
    "133": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "134": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "135": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD137920B"
    },
    "140": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "141": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7B2"
    },
    "144": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "145": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "146": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD762A37B"
    },
    "151": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "152": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7D2"
    },
    "155": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "156": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "157": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE2653EEB"
    },
    "162": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "163": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7F2"
    },
    "166": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "167": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "168": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE7AAD5C4"
    },
    "173": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "174": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x808"
    },
    "177": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "178": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "181": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "REVERT",
      "path": "19"
    },
    "182": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "183": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "184": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9E375226"
    },
    "189": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "GT",
      "path": "19"
    },
    "190": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFD"
    },
    "193": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "194": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "195": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9E375226"
    },
    "200": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "201": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x65C"
    },
    "204": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "205": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "206": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA032B5F4"
    },
    "211": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "212": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x68C"
    },
    "215": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "216": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "217": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA888C2CD"
    },
    "222": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "223": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6AC"
    },
    "226": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "227": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "228": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xADB610A3"
    },
    "233": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "234": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x75C"
    },
    "237": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "238": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "239": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xCEA74EDF"
    },
    "244": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "245": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x772"
    },
    "248": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "249": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "251": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "252": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "REVERT",
      "path": "19"
    },
    "253": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "254": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "255": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7DC2CD98"
    },
    "260": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "261": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x505"
    },
    "264": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "265": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "266": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8DA5CB5B"
    },
    "271": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "272": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x51B"
    },
    "275": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "276": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "277": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x92C824D8"
    },
    "282": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "283": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x539"
    },
    "286": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "287": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "288": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x96171D05"
    },
    "293": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "294": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x54C"
    },
    "297": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "298": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "299": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9D866985"
    },
    "304": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "305": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x562"
    },
    "308": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "309": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "311": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "312": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "REVERT",
      "path": "19"
    },
    "313": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "314": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "315": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x3993B6ED"
    },
    "320": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "GT",
      "path": "19"
    },
    "321": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C7"
    },
    "324": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "325": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "326": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7203AE3B"
    },
    "331": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "GT",
      "path": "19"
    },
    "332": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18B"
    },
    "335": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "336": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "337": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7203AE3B"
    },
    "342": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "343": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x472"
    },
    "346": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "347": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "348": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x743C151A"
    },
    "353": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "354": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x492"
    },
    "357": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "358": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "359": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x747293FB"
    },
    "364": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "365": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4A5"
    },
    "368": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "369": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "370": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x78DA194B"
    },
    "375": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "376": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4C5"
    },
    "379": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "380": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "381": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x79650559"
    },
    "386": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "387": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4E5"
    },
    "390": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "391": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "393": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "394": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "REVERT",
      "path": "19"
    },
    "395": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "396": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "397": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x3993B6ED"
    },
    "402": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "403": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3DA"
    },
    "406": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "407": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "408": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5B3A6EF2"
    },
    "413": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "414": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3FA"
    },
    "417": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "418": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "419": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5D5AA11B"
    },
    "424": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "425": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x41A"
    },
    "428": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "429": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "430": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6BC6C8D1"
    },
    "435": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "436": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x430"
    },
    "439": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "440": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "441": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x715018A6"
    },
    "446": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "447": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x45D"
    },
    "450": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "451": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "453": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "454": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "REVERT",
      "path": "19"
    },
    "455": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "456": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "457": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2E1A7D4D"
    },
    "462": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "GT",
      "path": "19"
    },
    "463": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x20E"
    },
    "466": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "467": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "468": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2E1A7D4D"
    },
    "473": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "474": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x30E"
    },
    "477": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "478": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "479": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2F4212B8"
    },
    "484": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "485": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x32E"
    },
    "488": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "489": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "490": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2F92F009"
    },
    "495": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "496": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34E"
    },
    "499": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "500": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "501": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x30A08CBC"
    },
    "506": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "507": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37B"
    },
    "510": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "511": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "512": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x31E08F7A"
    },
    "517": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "518": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3BA"
    },
    "521": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "522": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "524": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "525": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "REVERT",
      "path": "19"
    },
    "526": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "527": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "528": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x3FC4C37"
    },
    "533": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "534": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x24B"
    },
    "537": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "538": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "539": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE136B19"
    },
    "544": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "545": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26D"
    },
    "548": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "549": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "550": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE19A1C6"
    },
    "555": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "556": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x29C"
    },
    "559": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "560": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "561": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1489F8D2"
    },
    "566": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "567": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D4"
    },
    "570": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "571": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "572": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1D18ADC5"
    },
    "577": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "EQ",
      "path": "19"
    },
    "578": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F8"
    },
    "581": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "582": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "583": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "585": {
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "DUP1",
      "path": "19"
    },
    "586": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1057,
        28350
      ],
      "op": "REVERT",
      "path": "19"
    },
    "587": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "588": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "589": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "DUP1",
      "path": "19"
    },
    "590": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "591": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x257"
    },
    "594": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "595": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "597": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "DUP1",
      "path": "19"
    },
    "598": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "REVERT",
      "path": "19"
    },
    "599": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "600": {
      "op": "POP"
    },
    "601": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26B"
    },
    "604": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x266"
    },
    "607": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "608": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "610": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x292E"
    },
    "613": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        27788,
        28348
      ],
      "op": "JUMP",
      "path": "19"
    },
    "614": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "615": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8B5"
    },
    "618": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        27788,
        28348
      ],
      "op": "JUMP",
      "path": "19"
    },
    "619": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "620": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "STOP",
      "path": "19"
    },
    "621": {
      "offset": [
        5745,
        5767
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "622": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "623": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "DUP1",
      "path": "19"
    },
    "624": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "625": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x279"
    },
    "628": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "629": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "631": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "DUP1",
      "path": "19"
    },
    "632": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "REVERT",
      "path": "19"
    },
    "633": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "634": {
      "op": "POP"
    },
    "635": {
      "offset": [
        5745,
        5767
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "637": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "638": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x287"
    },
    "641": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "642": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "644": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "AND",
      "path": "19"
    },
    "645": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "DUP2",
      "path": "19"
    },
    "646": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "JUMP",
      "path": "19"
    },
    "647": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "648": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "650": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "651": {
      "op": "SWAP1"
    },
    "652": {
      "op": "ISZERO"
    },
    "653": {
      "op": "ISZERO"
    },
    "654": {
      "op": "DUP2"
    },
    "655": {
      "op": "MSTORE"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "658": {
      "op": "ADD"
    },
    "659": {
      "offset": [
        5745,
        5767
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "660": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "662": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "663": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "DUP1",
      "path": "19"
    },
    "664": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "665": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "SUB",
      "path": "19"
    },
    "666": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "667": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5745,
        5767
      ],
      "op": "RETURN",
      "path": "19"
    },
    "668": {
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "669": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "670": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP1",
      "path": "21"
    },
    "671": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "672": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2A8"
    },
    "675": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "676": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "678": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP1",
      "path": "21"
    },
    "679": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "REVERT",
      "path": "21"
    },
    "680": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "681": {
      "op": "POP"
    },
    "682": {
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2BC"
    },
    "685": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2B7"
    },
    "688": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "689": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "691": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x295A"
    },
    "694": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        576,
        621
      ],
      "op": "JUMP",
      "path": "21"
    },
    "695": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "696": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xB04"
    },
    "699": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        576,
        621
      ],
      "op": "JUMP",
      "path": "21"
    },
    "700": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "701": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "703": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "710": {
      "op": "SHL"
    },
    "711": {
      "op": "SUB"
    },
    "712": {
      "op": "SWAP1"
    },
    "713": {
      "op": "SWAP2"
    },
    "714": {
      "op": "AND"
    },
    "715": {
      "op": "DUP2"
    },
    "716": {
      "op": "MSTORE"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "719": {
      "op": "ADD"
    },
    "720": {
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x293"
    },
    "723": {
      "op": "JUMP"
    },
    "724": {
      "offset": [
        5254,
        5309
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "725": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "726": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "DUP1",
      "path": "19"
    },
    "727": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "728": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2E0"
    },
    "731": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "732": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "734": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "DUP1",
      "path": "19"
    },
    "735": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "REVERT",
      "path": "19"
    },
    "736": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "737": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "POP",
      "path": "19"
    },
    "738": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "741": {
      "offset": [
        5300,
        5309
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12C"
    },
    "744": {
      "offset": [
        5254,
        5309
      ],
      "op": "DUP2",
      "path": "19"
    },
    "745": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "JUMP",
      "path": "19"
    },
    "746": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "747": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "749": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5254,
        5309
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "750": {
      "op": "SWAP1"
    },
    "751": {
      "op": "DUP2"
    },
    "752": {
      "op": "MSTORE"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "755": {
      "op": "ADD"
    },
    "756": {
      "offset": [
        5254,
        5309
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x293"
    },
    "759": {
      "op": "JUMP"
    },
    "760": {
      "offset": [
        5158,
        5197
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "761": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "762": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "DUP1",
      "path": "19"
    },
    "763": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "764": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x304"
    },
    "767": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "768": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "770": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "DUP1",
      "path": "19"
    },
    "771": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "REVERT",
      "path": "19"
    },
    "772": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "773": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "POP",
      "path": "19"
    },
    "774": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "777": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "779": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "780": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "DUP2",
      "path": "19"
    },
    "781": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        5158,
        5197
      ],
      "op": "JUMP",
      "path": "19"
    },
    "782": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "783": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "784": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "DUP1",
      "path": "19"
    },
    "785": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "786": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31A"
    },
    "789": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "790": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "792": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "DUP1",
      "path": "19"
    },
    "793": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "REVERT",
      "path": "19"
    },
    "794": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BC"
    },
    "799": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x329"
    },
    "802": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "803": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "805": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x297C"
    },
    "808": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18100,
        19315
      ],
      "op": "JUMP",
      "path": "19"
    },
    "809": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "810": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB32"
    },
    "813": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18100,
        19315
      ],
      "op": "JUMP",
      "path": "19"
    },
    "814": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "815": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "816": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "DUP1",
      "path": "19"
    },
    "817": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "818": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33A"
    },
    "821": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "822": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "824": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "DUP1",
      "path": "19"
    },
    "825": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "REVERT",
      "path": "19"
    },
    "826": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "827": {
      "op": "POP"
    },
    "828": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "831": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x349"
    },
    "834": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "835": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "837": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x29B1"
    },
    "840": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9557,
        11757
      ],
      "op": "JUMP",
      "path": "19"
    },
    "841": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "842": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDE3"
    },
    "845": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9557,
        11757
      ],
      "op": "JUMP",
      "path": "19"
    },
    "846": {
      "offset": [
        6075,
        6125
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "847": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "848": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "DUP1",
      "path": "19"
    },
    "849": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "850": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35A"
    },
    "853": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "854": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "856": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "DUP1",
      "path": "19"
    },
    "857": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "REVERT",
      "path": "19"
    },
    "858": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "859": {
      "op": "POP"
    },
    "860": {
      "offset": [
        6075,
        6125
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "863": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x369"
    },
    "866": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "867": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "869": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x297C"
    },
    "872": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        6075,
        6125
      ],
      "op": "JUMP",
      "path": "19"
    },
    "873": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "874": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "876": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "878": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "879": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "881": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "882": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "883": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "884": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "886": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "887": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "888": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "889": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "890": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6075,
        6125
      ],
      "op": "JUMP",
      "path": "19"
    },
    "891": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "892": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "893": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "DUP1",
      "path": "19"
    },
    "894": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "895": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x387"
    },
    "898": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "899": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "901": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "DUP1",
      "path": "19"
    },
    "902": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "REVERT",
      "path": "19"
    },
    "903": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "904": {
      "op": "POP"
    },
    "905": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x287"
    },
    "908": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x396"
    },
    "911": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "912": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "914": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x295A"
    },
    "917": {
      "fn": "RequestManager.isInvalidFill",
      "jump": "i",
      "offset": [
        26423,
        26602
      ],
      "op": "JUMP",
      "path": "19"
    },
    "918": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "919": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26526,
        26530
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "921": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26572
      ],
      "op": "SWAP2",
      "path": "19",
      "statement": 0
    },
    "922": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26572
      ],
      "op": "DUP3",
      "path": "19"
    },
    "923": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26572
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "924": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26561
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "926": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26572
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "928": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26572
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "929": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26572
      ],
      "op": "DUP2",
      "path": "19"
    },
    "930": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26572
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "931": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26572
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "933": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26572
      ],
      "op": "DUP1",
      "path": "19"
    },
    "934": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26572
      ],
      "op": "DUP5",
      "path": "19"
    },
    "935": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26572
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "936": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26595
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "937": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26595
      ],
      "op": "DUP5",
      "path": "19"
    },
    "938": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26595
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "939": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26587
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "941": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26587
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "942": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26587
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "943": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26587
      ],
      "op": "ADD",
      "path": "19"
    },
    "944": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26595
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "945": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26595
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "946": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26595
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "947": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26595
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "948": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26595
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "949": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26595
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "951": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26595
      ],
      "op": "AND",
      "path": "19"
    },
    "952": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26553,
        26595
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "953": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        26423,
        26602
      ],
      "op": "JUMP",
      "path": "19"
    },
    "954": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "955": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "956": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "DUP1",
      "path": "17"
    },
    "957": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "958": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3C6"
    },
    "961": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "962": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "964": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "DUP1",
      "path": "17"
    },
    "965": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "REVERT",
      "path": "17"
    },
    "966": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "967": {
      "op": "POP"
    },
    "968": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x26B"
    },
    "971": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3D5"
    },
    "974": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "975": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "977": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A10"
    },
    "980": {
      "fn": "LpWhitelist.addAllowedLp",
      "jump": "i",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMP",
      "path": "17"
    },
    "981": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "982": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x11FB"
    },
    "985": {
      "fn": "LpWhitelist.addAllowedLp",
      "jump": "i",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMP",
      "path": "17"
    },
    "986": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "987": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "988": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "DUP1",
      "path": "17"
    },
    "989": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "990": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3E6"
    },
    "993": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "994": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "996": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "DUP1",
      "path": "17"
    },
    "997": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "REVERT",
      "path": "17"
    },
    "998": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "999": {
      "op": "POP"
    },
    "1000": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x26B"
    },
    "1003": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3F5"
    },
    "1006": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1007": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1009": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A10"
    },
    "1012": {
      "fn": "LpWhitelist.removeAllowedLp",
      "jump": "i",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1013": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1014": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x125F"
    },
    "1017": {
      "fn": "LpWhitelist.removeAllowedLp",
      "jump": "i",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1018": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1019": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1020": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1021": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1022": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x406"
    },
    "1025": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1026": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1028": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1029": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1030": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1031": {
      "op": "POP"
    },
    "1032": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26B"
    },
    "1035": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x415"
    },
    "1038": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1039": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1041": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A2B"
    },
    "1044": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        27018,
        27432
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1045": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1046": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12B8"
    },
    "1049": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        27018,
        27432
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1050": {
      "offset": [
        6388,
        6421
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1051": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1052": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1053": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1054": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x426"
    },
    "1057": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1058": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1060": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1061": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1062": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1063": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "POP",
      "path": "19"
    },
    "1064": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "1067": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "1069": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1070": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1071": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6388,
        6421
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1072": {
      "offset": [
        6988,
        7044
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1073": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1074": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1075": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1076": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x43C"
    },
    "1079": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1080": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1082": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1083": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1084": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1085": {
      "op": "POP"
    },
    "1086": {
      "offset": [
        6988,
        7044
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "1089": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x44B"
    },
    "1092": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1093": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1095": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A10"
    },
    "1098": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        6988,
        7044
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1099": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1100": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "1102": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1104": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1105": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1107": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1108": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1109": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1110": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1112": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1113": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1114": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1115": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1116": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        6988,
        7044
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1117": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1118": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1119": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1120": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1121": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x469"
    },
    "1124": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1125": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1127": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1128": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1129": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1130": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "POP",
      "path": "0"
    },
    "1131": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "1134": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1461"
    },
    "1137": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1138": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1139": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1140": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1141": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1142": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x47E"
    },
    "1145": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1146": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1148": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1149": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1150": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1151": {
      "op": "POP"
    },
    "1152": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x26B"
    },
    "1155": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x48D"
    },
    "1158": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1159": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1161": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2A6A"
    },
    "1164": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1165": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1166": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1475"
    },
    "1169": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1170": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13023,
        14279
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1171": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13023,
        14279
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "1174": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13023,
        14279
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4A0"
    },
    "1177": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13023,
        14279
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1178": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13023,
        14279
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1180": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13023,
        14279
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x295A"
    },
    "1183": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13023,
        14279
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1184": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13023,
        14279
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1185": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13023,
        14279
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x148D"
    },
    "1188": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13023,
        14279
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1189": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1190": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1191": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1192": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1193": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4B1"
    },
    "1196": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1197": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1199": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1200": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1201": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x26B"
    },
    "1206": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4C0"
    },
    "1209": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1210": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1212": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2A10"
    },
    "1215": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1216": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1217": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x17A9"
    },
    "1220": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1221": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1222": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1223": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1224": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1225": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4D1"
    },
    "1228": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1229": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1231": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1232": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1233": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1234": {
      "op": "POP"
    },
    "1235": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26B"
    },
    "1238": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4E0"
    },
    "1241": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1242": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1244": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x292E"
    },
    "1247": {
      "fn": "RequestManager.updateFeeData",
      "jump": "i",
      "offset": [
        24196,
        24452
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1248": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1249": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C0"
    },
    "1252": {
      "fn": "RequestManager.updateFeeData",
      "jump": "i",
      "offset": [
        24196,
        24452
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1253": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1254": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1255": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1256": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1257": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4F1"
    },
    "1260": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1261": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1263": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1264": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1265": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1266": {
      "op": "POP"
    },
    "1267": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26B"
    },
    "1270": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x500"
    },
    "1273": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1274": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1276": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x297C"
    },
    "1279": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        11939,
        12684
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1280": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1281": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17D6"
    },
    "1284": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        11939,
        12684
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1285": {
      "offset": [
        4522,
        4548
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1286": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1287": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1288": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1289": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x511"
    },
    "1292": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1293": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1295": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1296": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1297": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1298": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "POP",
      "path": "19"
    },
    "1299": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "1302": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1304": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1305": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1306": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4522,
        4548
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1307": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1308": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1309": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1310": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1311": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x527"
    },
    "1314": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1315": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1317": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1318": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1319": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1320": {
      "op": "POP"
    },
    "1321": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1323": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 1
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1330": {
      "op": "SHL"
    },
    "1331": {
      "op": "SUB"
    },
    "1332": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1333": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BC"
    },
    "1336": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1337": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15477,
        17543
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1338": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15477,
        17543
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26B"
    },
    "1341": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15477,
        17543
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x547"
    },
    "1344": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15477,
        17543
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1345": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15477,
        17543
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1347": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15477,
        17543
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x297C"
    },
    "1350": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15477,
        17543
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1351": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15477,
        17543
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1352": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15477,
        17543
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19D4"
    },
    "1355": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15477,
        17543
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1356": {
      "offset": [
        5366,
        5422
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1357": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        5366,
        5422
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1358": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        5366,
        5422
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1359": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        5366,
        5422
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1360": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        5366,
        5422
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x558"
    },
    "1363": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        5366,
        5422
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1364": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        5366,
        5422
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1366": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        5366,
        5422
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1367": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        5366,
        5422
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1368": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        5366,
        5422
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1369": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        5366,
        5422
      ],
      "op": "POP",
      "path": "19"
    },
    "1370": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        5366,
        5422
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "1373": {
      "offset": [
        5412,
        5422
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x708"
    },
    "1376": {
      "offset": [
        5366,
        5422
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1377": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        5366,
        5422
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1378": {
      "offset": [
        6170,
        6213
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1379": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1380": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1381": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1382": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x56E"
    },
    "1385": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1386": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1388": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1389": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1390": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1391": {
      "op": "POP"
    },
    "1392": {
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5F1"
    },
    "1395": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x57D"
    },
    "1398": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1399": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1401": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x297C"
    },
    "1404": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        6170,
        6213
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1405": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1406": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "1408": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1410": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1411": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1412": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1413": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1415": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1416": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1417": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1418": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1420": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1421": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1422": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1423": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1424": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1425": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "1427": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1428": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "ADD",
      "path": "19"
    },
    "1429": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1430": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "1432": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1433": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "ADD",
      "path": "19"
    },
    "1434": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1435": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "1437": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1438": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "ADD",
      "path": "19"
    },
    "1439": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1440": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1442": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP6",
      "path": "19"
    },
    "1443": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "ADD",
      "path": "19"
    },
    "1444": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1445": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1447": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1448": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "ADD",
      "path": "19"
    },
    "1449": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1450": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "1452": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP8",
      "path": "19"
    },
    "1453": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "ADD",
      "path": "19"
    },
    "1454": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1455": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "1457": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP9",
      "path": "19"
    },
    "1458": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "ADD",
      "path": "19"
    },
    "1459": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1460": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "1462": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP10",
      "path": "19"
    },
    "1463": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "ADD",
      "path": "19"
    },
    "1464": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1465": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP10",
      "path": "19"
    },
    "1466": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP10",
      "path": "19"
    },
    "1467": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "ADD",
      "path": "19"
    },
    "1468": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1469": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "1471": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1472": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP10",
      "path": "19"
    },
    "1473": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "ADD",
      "path": "19"
    },
    "1474": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1481": {
      "op": "SHL"
    },
    "1482": {
      "op": "SUB"
    },
    "1483": {
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP9",
      "path": "19"
    },
    "1484": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP10",
      "path": "19"
    },
    "1485": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "AND",
      "path": "19"
    },
    "1486": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP11",
      "path": "19"
    },
    "1487": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP8",
      "path": "19"
    },
    "1488": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP10",
      "path": "19"
    },
    "1489": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "AND",
      "path": "19"
    },
    "1490": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP10",
      "path": "19"
    },
    "1491": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "1492": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP9",
      "path": "19"
    },
    "1493": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "1494": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP8",
      "path": "19"
    },
    "1495": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "1496": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "1497": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1498": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "1499": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1500": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1507": {
      "op": "SHL"
    },
    "1508": {
      "op": "SUB"
    },
    "1509": {
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1510": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1511": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "AND",
      "path": "19"
    },
    "1512": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1513": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1514": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1515": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1516": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1517": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "AND",
      "path": "19"
    },
    "1518": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1519": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP12",
      "path": "19"
    },
    "1520": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1521": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1522": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1524": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1525": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        6170,
        6213
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1532": {
      "op": "SHL"
    },
    "1533": {
      "op": "SUB"
    },
    "1534": {
      "op": "SWAP13"
    },
    "1535": {
      "op": "DUP14"
    },
    "1536": {
      "op": "AND"
    },
    "1537": {
      "op": "DUP2"
    },
    "1538": {
      "op": "MSTORE"
    },
    "1539": {
      "op": "SWAP11"
    },
    "1540": {
      "op": "DUP13"
    },
    "1541": {
      "op": "AND"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1544": {
      "op": "DUP13"
    },
    "1545": {
      "op": "ADD"
    },
    "1546": {
      "op": "MSTORE"
    },
    "1547": {
      "op": "DUP11"
    },
    "1548": {
      "op": "ADD"
    },
    "1549": {
      "op": "SWAP9"
    },
    "1550": {
      "op": "SWAP1"
    },
    "1551": {
      "op": "SWAP9"
    },
    "1552": {
      "op": "MSTORE"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1555": {
      "op": "DUP10"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "op": "SWAP7"
    },
    "1558": {
      "op": "SWAP1"
    },
    "1559": {
      "op": "SWAP7"
    },
    "1560": {
      "op": "MSTORE"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1563": {
      "op": "DUP9"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "SWAP5"
    },
    "1566": {
      "op": "SWAP1"
    },
    "1567": {
      "op": "SWAP5"
    },
    "1568": {
      "op": "MSTORE"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1571": {
      "op": "DUP8"
    },
    "1572": {
      "op": "ADD"
    },
    "1573": {
      "op": "SWAP3"
    },
    "1574": {
      "op": "SWAP1"
    },
    "1575": {
      "op": "SWAP3"
    },
    "1576": {
      "op": "MSTORE"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1579": {
      "op": "DUP7"
    },
    "1580": {
      "op": "ADD"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1588": {
      "op": "SHL"
    },
    "1589": {
      "op": "SUB"
    },
    "1590": {
      "op": "AND"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1593": {
      "op": "DUP6"
    },
    "1594": {
      "op": "ADD"
    },
    "1595": {
      "op": "MSTORE"
    },
    "1596": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1599": {
      "op": "DUP5"
    },
    "1600": {
      "op": "ADD"
    },
    "1601": {
      "op": "MSTORE"
    },
    "1602": {
      "op": "SWAP1"
    },
    "1603": {
      "op": "SWAP3"
    },
    "1604": {
      "op": "AND"
    },
    "1605": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "1608": {
      "op": "DUP3"
    },
    "1609": {
      "op": "ADD"
    },
    "1610": {
      "op": "MSTORE"
    },
    "1611": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "1614": {
      "op": "DUP2"
    },
    "1615": {
      "op": "ADD"
    },
    "1616": {
      "op": "SWAP2"
    },
    "1617": {
      "op": "SWAP1"
    },
    "1618": {
      "op": "SWAP2"
    },
    "1619": {
      "op": "MSTORE"
    },
    "1620": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "1623": {
      "op": "ADD"
    },
    "1624": {
      "offset": [
        6170,
        6213
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x293"
    },
    "1627": {
      "op": "JUMP"
    },
    "1628": {
      "offset": [
        820,
        862
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1629": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "1630": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1631": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1632": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x668"
    },
    "1635": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1636": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1638": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1639": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1640": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1641": {
      "op": "POP"
    },
    "1642": {
      "offset": [
        820,
        862
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x287"
    },
    "1645": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x677"
    },
    "1648": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1649": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1651": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A10"
    },
    "1654": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        820,
        862
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1655": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1656": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1658": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1660": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1661": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1663": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1664": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1665": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1666": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1668": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1669": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1670": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1671": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1673": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "AND",
      "path": "17"
    },
    "1674": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1675": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        820,
        862
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1676": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1677": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1678": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1679": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1680": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x698"
    },
    "1683": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1684": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1686": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1687": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1688": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1689": {
      "op": "POP"
    },
    "1690": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "1693": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6A7"
    },
    "1696": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1697": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1699": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x297C"
    },
    "1702": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        7369,
        7497
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1703": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1704": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DD5"
    },
    "1707": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        7369,
        7497
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1708": {
      "offset": [
        6254,
        6293
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1709": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1710": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1711": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1712": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6B8"
    },
    "1715": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1716": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1718": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1719": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1720": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1721": {
      "op": "POP"
    },
    "1722": {
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x716"
    },
    "1725": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6C7"
    },
    "1728": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1729": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1731": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x297C"
    },
    "1734": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        6254,
        6293
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1735": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1736": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "1738": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1740": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1741": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1743": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1744": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1745": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1746": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1748": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1749": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1750": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1751": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1752": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "1754": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1755": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "ADD",
      "path": "19"
    },
    "1756": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1757": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "1759": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1760": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "ADD",
      "path": "19"
    },
    "1761": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1762": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1764": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1765": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "ADD",
      "path": "19"
    },
    "1766": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1767": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1769": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "DUP6",
      "path": "19"
    },
    "1770": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "ADD",
      "path": "19"
    },
    "1771": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1772": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "1774": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1775": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "ADD",
      "path": "19"
    },
    "1776": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1777": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "1779": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "DUP8",
      "path": "19"
    },
    "1780": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "ADD",
      "path": "19"
    },
    "1781": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1782": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "1784": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1785": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP8",
      "path": "19"
    },
    "1786": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "ADD",
      "path": "19"
    },
    "1787": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1788": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "1789": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1796": {
      "op": "SHL"
    },
    "1797": {
      "op": "SUB"
    },
    "1798": {
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "1799": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1800": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "AND",
      "path": "19"
    },
    "1801": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "1802": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "1803": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "1804": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1805": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1806": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "AND",
      "path": "19"
    },
    "1807": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1808": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1809": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1810": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1811": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1812": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "DUP9",
      "path": "19"
    },
    "1813": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1814": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1815": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1817": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1818": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6254,
        6293
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1819": {
      "op": "SWAP9"
    },
    "1820": {
      "op": "DUP10"
    },
    "1821": {
      "op": "MSTORE"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "op": "SUB"
    },
    "1830": {
      "op": "SWAP8"
    },
    "1831": {
      "op": "DUP9"
    },
    "1832": {
      "op": "AND"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1835": {
      "op": "DUP11"
    },
    "1836": {
      "op": "ADD"
    },
    "1837": {
      "op": "MSTORE"
    },
    "1838": {
      "op": "DUP9"
    },
    "1839": {
      "op": "ADD"
    },
    "1840": {
      "op": "SWAP6"
    },
    "1841": {
      "op": "SWAP1"
    },
    "1842": {
      "op": "SWAP6"
    },
    "1843": {
      "op": "MSTORE"
    },
    "1844": {
      "op": "SWAP5"
    },
    "1845": {
      "op": "SWAP1"
    },
    "1846": {
      "op": "SWAP3"
    },
    "1847": {
      "op": "AND"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1850": {
      "op": "DUP7"
    },
    "1851": {
      "op": "ADD"
    },
    "1852": {
      "op": "MSTORE"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1855": {
      "op": "DUP6"
    },
    "1856": {
      "op": "ADD"
    },
    "1857": {
      "op": "MSTORE"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1860": {
      "op": "DUP5"
    },
    "1861": {
      "op": "ADD"
    },
    "1862": {
      "op": "MSTORE"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1865": {
      "op": "DUP4"
    },
    "1866": {
      "op": "ADD"
    },
    "1867": {
      "op": "SWAP2"
    },
    "1868": {
      "op": "SWAP1"
    },
    "1869": {
      "op": "SWAP2"
    },
    "1870": {
      "op": "MSTORE"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1873": {
      "op": "DUP3"
    },
    "1874": {
      "op": "ADD"
    },
    "1875": {
      "op": "MSTORE"
    },
    "1876": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1879": {
      "op": "ADD"
    },
    "1880": {
      "offset": [
        6254,
        6293
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x293"
    },
    "1883": {
      "op": "JUMP"
    },
    "1884": {
      "offset": [
        5942,
        5969
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1885": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1886": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1887": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1888": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x768"
    },
    "1891": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1892": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1894": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1895": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1896": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1897": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "POP",
      "path": "19"
    },
    "1898": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "1901": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "1903": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1904": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1905": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        5942,
        5969
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1906": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1907": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1908": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1909": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1910": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x77E"
    },
    "1913": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1914": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1916": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1917": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1918": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1919": {
      "op": "POP"
    },
    "1920": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "1923": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x78D"
    },
    "1926": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1927": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1929": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x297C"
    },
    "1932": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7669,
        7792
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1933": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1934": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DF9"
    },
    "1937": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7669,
        7792
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1938": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1939": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1940": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1941": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1942": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x79E"
    },
    "1945": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1946": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1948": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1949": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1950": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1951": {
      "op": "POP"
    },
    "1952": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26B"
    },
    "1955": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7AD"
    },
    "1958": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1959": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1961": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2AA6"
    },
    "1964": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        23506,
        23880
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1965": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1966": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E17"
    },
    "1969": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        23506,
        23880
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1970": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1971": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1972": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1973": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1974": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7BE"
    },
    "1977": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1978": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1980": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1981": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1982": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26B"
    },
    "1987": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7CD"
    },
    "1990": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1991": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1993": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x295A"
    },
    "1996": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "i",
      "offset": [
        25046,
        25370
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1997": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1998": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1EA2"
    },
    "2001": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "i",
      "offset": [
        25046,
        25370
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2002": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2003": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2004": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2005": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2006": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7DE"
    },
    "2009": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2010": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2012": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2013": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2014": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2015": {
      "op": "POP"
    },
    "2016": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26B"
    },
    "2019": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7ED"
    },
    "2022": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2023": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2025": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x297C"
    },
    "2028": {
      "fn": "RequestManager.updateTransferLimit",
      "jump": "i",
      "offset": [
        24659,
        24782
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2029": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2030": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F58"
    },
    "2033": {
      "fn": "RequestManager.updateTransferLimit",
      "jump": "i",
      "offset": [
        24659,
        24782
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2034": {
      "offset": [
        6517,
        6548
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2035": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2036": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2037": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2038": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7FE"
    },
    "2041": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2042": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2044": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2045": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2046": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2047": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "POP",
      "path": "19"
    },
    "2048": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "2051": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "2053": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2054": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2055": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6517,
        6548
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2056": {
      "offset": [
        6672,
        6705
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2057": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2058": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2059": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2060": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x814"
    },
    "2063": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2064": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2066": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2067": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2068": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2069": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "POP",
      "path": "19"
    },
    "2070": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "2073": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xD"
    },
    "2075": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2076": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2077": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        6672,
        6705
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2078": {
      "offset": [
        5527,
        5597
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2079": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5527,
        5597
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2080": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5527,
        5597
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2081": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5527,
        5597
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2082": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5527,
        5597
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x82A"
    },
    "2085": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5527,
        5597
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2086": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5527,
        5597
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2088": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5527,
        5597
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2089": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5527,
        5597
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2090": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5527,
        5597
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2091": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5527,
        5597
      ],
      "op": "POP",
      "path": "19"
    },
    "2092": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5527,
        5597
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2097": {
      "op": "NOT"
    },
    "2098": {
      "offset": [
        5527,
        5597
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2099": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        5527,
        5597
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2100": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2101": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2102": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2103": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2104": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x840"
    },
    "2107": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2108": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2110": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2111": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2112": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2113": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "POP",
      "path": "19"
    },
    "2114": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26B"
    },
    "2117": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F65"
    },
    "2120": {
      "fn": "RequestManager.deprecateContract",
      "jump": "i",
      "offset": [
        25680,
        25831
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2121": {
      "offset": [
        4441,
        4466
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2122": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2123": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2124": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2125": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x855"
    },
    "2128": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2129": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2131": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2132": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2133": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2134": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "POP",
      "path": "19"
    },
    "2135": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "2138": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "2140": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2141": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2142": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        4441,
        4466
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2143": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2144": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2145": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2146": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2147": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86B"
    },
    "2150": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2151": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2153": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2156": {
      "op": "POP"
    },
    "2157": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "2160": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87A"
    },
    "2163": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2164": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2166": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A10"
    },
    "2169": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2170": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2171": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FCF"
    },
    "2174": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2175": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2176": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2177": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2178": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2179": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x88B"
    },
    "2182": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2183": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2185": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2186": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2187": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2188": {
      "op": "POP"
    },
    "2189": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "2192": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x89A"
    },
    "2195": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2196": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2198": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x297C"
    },
    "2201": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7143,
        7279
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2202": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2203": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2045"
    },
    "2206": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7143,
        7279
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2207": {
      "offset": [
        6838,
        6880
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2208": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2209": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2210": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2211": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8AB"
    },
    "2214": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2215": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2217": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2218": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2219": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2220": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "POP",
      "path": "19"
    },
    "2221": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "2224": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "2226": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2227": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2228": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6838,
        6880
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2229": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2230": {
      "offset": [
        2072,
        2086
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2232": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2233": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2234": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2235": {
      "offset": [
        2089,
        2096
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "2237": {
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2239": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2240": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2242": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2243": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2244": {
      "offset": [
        2089,
        2114
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2245": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2246": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2253": {
      "op": "SHL"
    },
    "2254": {
      "op": "SUB"
    },
    "2255": {
      "offset": [
        2089,
        2114
      ],
      "op": "AND",
      "path": "21"
    },
    "2256": {
      "offset": [
        2146,
        2159
      ],
      "op": "CHAINID",
      "path": "21"
    },
    "2257": {
      "offset": [
        2129,
        2159
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2258": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2129,
        2159
      ],
      "op": "SUB",
      "path": "21"
    },
    "2259": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x90C"
    },
    "2262": {
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2263": {
      "offset": [
        2183,
        2193
      ],
      "op": "CALLER",
      "path": "21"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2270": {
      "op": "SHL"
    },
    "2271": {
      "op": "SUB"
    },
    "2272": {
      "offset": [
        2183,
        2203
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2273": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2183,
        2203
      ],
      "op": "AND",
      "path": "21"
    },
    "2274": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2183,
        2203
      ],
      "op": "EQ",
      "path": "21"
    },
    "2275": {
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x907"
    },
    "2278": {
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2279": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2281": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2288": {
      "op": "SHL"
    },
    "2289": {
      "offset": [
        2175,
        2240
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2290": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2291": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2293": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "ADD",
      "path": "21"
    },
    "2294": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8FE"
    },
    "2297": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2298": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2AD9"
    },
    "2301": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2302": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2303": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2305": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2306": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2307": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2308": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "SUB",
      "path": "21"
    },
    "2309": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2310": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "21"
    },
    "2311": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2312": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9D2"
    },
    "2315": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2316": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2317": {
      "offset": [
        2271,
        2288
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2319": {
      "offset": [
        2291,
        2313
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2320": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2321": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2322": {
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "2324": {
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2326": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2327": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2329": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2330": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2331": {
      "offset": [
        2314,
        2315
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "2333": {
      "offset": [
        2291,
        2316
      ],
      "op": "ADD",
      "path": "21"
    },
    "2334": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2316
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2341": {
      "op": "SHL"
    },
    "2342": {
      "op": "SUB"
    },
    "2343": {
      "offset": [
        2291,
        2316
      ],
      "op": "AND",
      "path": "21"
    },
    "2344": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2316
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2345": {
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x944"
    },
    "2348": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2349": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2351": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2358": {
      "op": "SHL"
    },
    "2359": {
      "offset": [
        2330,
        2446
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2360": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2361": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2363": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "ADD",
      "path": "21"
    },
    "2364": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8FE"
    },
    "2367": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2368": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2B0E"
    },
    "2371": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2372": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2373": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2375": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2376": {
      "op": "PUSH4",
      "value": "0x845C5443"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2383": {
      "op": "SHL"
    },
    "2384": {
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2385": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2392": {
      "op": "SHL"
    },
    "2393": {
      "op": "SUB"
    },
    "2394": {
      "op": "DUP4"
    },
    "2395": {
      "op": "DUP2"
    },
    "2396": {
      "op": "AND"
    },
    "2397": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2399": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "21"
    },
    "2400": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "21"
    },
    "2401": {
      "op": "MSTORE"
    },
    "2402": {
      "offset": [
        2527,
        2537
      ],
      "op": "CALLER",
      "path": "21"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2405": {
      "op": "DUP4"
    },
    "2406": {
      "op": "ADD"
    },
    "2407": {
      "op": "MSTORE"
    },
    "2408": {
      "offset": [
        2485,
        2518
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2409": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2518
      ],
      "op": "AND",
      "path": "21"
    },
    "2410": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2411": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2518
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x845C5443"
    },
    "2416": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2419": {
      "op": "ADD"
    },
    "2420": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2422": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2424": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2425": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2426": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "21"
    },
    "2427": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "SUB",
      "path": "21"
    },
    "2428": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2429": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP7",
      "path": "21"
    },
    "2430": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "GAS",
      "path": "21"
    },
    "2431": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "STATICCALL",
      "path": "21"
    },
    "2432": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2433": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2434": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2435": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x990"
    },
    "2438": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2439": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "2440": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2442": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2443": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATACOPY",
      "path": "21"
    },
    "2444": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "2445": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2447": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "REVERT",
      "path": "21"
    },
    "2448": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2449": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "21"
    },
    "2450": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "21"
    },
    "2451": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "21"
    },
    "2452": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "21"
    },
    "2453": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2455": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2456": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "2457": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "2459": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "NOT",
      "path": "21"
    },
    "2460": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "2462": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2463": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "21"
    },
    "2464": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "AND",
      "path": "21"
    },
    "2465": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2466": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "21"
    },
    "2467": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2468": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2470": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2471": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "21"
    },
    "2472": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2473": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "21"
    },
    "2474": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2475": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9B4"
    },
    "2478": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2479": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2480": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2B50"
    },
    "2483": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2484": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2485": {
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9D0"
    },
    "2488": {
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2489": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2491": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2492": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2498": {
      "op": "SHL"
    },
    "2499": {
      "offset": [
        2460,
        2604
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2500": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2501": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2503": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "ADD",
      "path": "21"
    },
    "2504": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8FE"
    },
    "2507": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2508": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2AD9"
    },
    "2511": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        2460,
        2604
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2512": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2513": {
      "offset": [
        2257,
        2615
      ],
      "op": "POP",
      "path": "21"
    },
    "2514": {
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2515": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27953,
        27976
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2517": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27979,
        27998
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2518": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27979,
        27998
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2519": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27979,
        27998
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2520": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27979,
        27987
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "2522": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27979,
        27998
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2524": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27979,
        27998
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2525": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27979,
        27998
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2526": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27979,
        27998
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2527": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27979,
        27998
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2529": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27979,
        27998
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2530": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27979,
        27998
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2531": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27979,
        27998
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2532": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28029,
        28043
      ],
      "op": "SWAP1",
      "path": "19",
      "statement": 2
    },
    "2533": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28029,
        28043
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2534": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28029,
        28043
      ],
      "op": "ADD",
      "path": "19"
    },
    "2535": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28029,
        28043
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2542": {
      "op": "SHL"
    },
    "2543": {
      "op": "SUB"
    },
    "2544": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28029,
        28043
      ],
      "op": "AND",
      "path": "19"
    },
    "2545": {
      "branch": 135,
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28029,
        28057
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2546": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28008,
        28115
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA3D"
    },
    "2549": {
      "branch": 135,
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28008,
        28115
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2550": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28008,
        28115
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2552": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28008,
        28115
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2553": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2559": {
      "op": "SHL"
    },
    "2560": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28008,
        28115
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2561": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28008,
        28115
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2564": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28008,
        28115
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2566": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28008,
        28115
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2567": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28008,
        28115
      ],
      "op": "ADD",
      "path": "19"
    },
    "2568": {
      "op": "DUP2"
    },
    "2569": {
      "op": "SWAP1"
    },
    "2570": {
      "op": "MSTORE"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2573": {
      "op": "DUP3"
    },
    "2574": {
      "op": "ADD"
    },
    "2575": {
      "op": "MSTORE"
    },
    "2576": {
      "op": "PUSH32",
      "value": "0x43616E6E6F7420696E76616C6964617465207265736F6C7665642066696C6C73"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2611": {
      "op": "DUP3"
    },
    "2612": {
      "op": "ADD"
    },
    "2613": {
      "op": "MSTORE"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2616": {
      "op": "ADD"
    },
    "2617": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28008,
        28115
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "2620": {
      "op": "JUMP"
    },
    "2621": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28008,
        28115
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2622": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28176
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 3,
      "value": "0x0"
    },
    "2624": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28176
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2625": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28176
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2626": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28176
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2627": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28168
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "2629": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28168
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2630": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28168
      ],
      "op": "ADD",
      "path": "19"
    },
    "2631": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28176
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2633": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28176
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2634": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28176
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2636": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28176
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2637": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28176
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2638": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28176
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2639": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28176
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "2641": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28176
      ],
      "op": "AND",
      "path": "19"
    },
    "2642": {
      "branch": 136,
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28146,
        28185
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2643": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28125,
        28235
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA9E"
    },
    "2646": {
      "branch": 136,
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28125,
        28235
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2647": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28125,
        28235
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2649": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28125,
        28235
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2650": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2656": {
      "op": "SHL"
    },
    "2657": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28125,
        28235
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2658": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28125,
        28235
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2661": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28125,
        28235
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2663": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28125,
        28235
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2664": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28125,
        28235
      ],
      "op": "ADD",
      "path": "19"
    },
    "2665": {
      "op": "MSTORE"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2670": {
      "op": "DUP3"
    },
    "2671": {
      "op": "ADD"
    },
    "2672": {
      "op": "MSTORE"
    },
    "2673": {
      "op": "PUSH32",
      "value": "0x46696C6C20616C726561647920696E76616C6964617465640000000000000000"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2708": {
      "op": "DUP3"
    },
    "2709": {
      "op": "ADD"
    },
    "2710": {
      "op": "MSTORE"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2713": {
      "op": "ADD"
    },
    "2714": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28125,
        28235
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "2717": {
      "op": "JUMP"
    },
    "2718": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28125,
        28235
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2719": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28276
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 4,
      "value": "0x0"
    },
    "2721": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28276
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2722": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28276
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2723": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28276
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2724": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28268
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "2726": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28268
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2727": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28268
      ],
      "op": "ADD",
      "path": "19"
    },
    "2728": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28276
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2730": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28276
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2731": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28276
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2733": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28276
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2734": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28276
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2735": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28276
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2736": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28276
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2737": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28283
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2738": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28283
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2741": {
      "op": "NOT"
    },
    "2742": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28283
      ],
      "op": "AND",
      "path": "19"
    },
    "2743": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28279,
        28283
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2745": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28283
      ],
      "op": "OR",
      "path": "19"
    },
    "2746": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28283
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2747": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28246,
        28283
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "2748": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28299,
        28341
      ],
      "op": "MLOAD",
      "path": "19",
      "statement": 5
    },
    "2749": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28299,
        28341
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x5571B83C623961FB42D39CE6D6D2092153ACE66C008E2DC2472EC6D2E8FAD045"
    },
    "2782": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28299,
        28341
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2783": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28299,
        28341
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xAF4"
    },
    "2786": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28299,
        28341
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2787": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28323,
        28332
      ],
      "op": "DUP9",
      "path": "19"
    },
    "2788": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28323,
        28332
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2789": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28269,
        28275
      ],
      "op": "DUP9",
      "path": "19"
    },
    "2790": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28269,
        28275
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2791": {
      "op": "SWAP2"
    },
    "2792": {
      "op": "DUP3"
    },
    "2793": {
      "op": "MSTORE"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2796": {
      "op": "DUP3"
    },
    "2797": {
      "op": "ADD"
    },
    "2798": {
      "op": "MSTORE"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2801": {
      "op": "ADD"
    },
    "2802": {
      "op": "SWAP1"
    },
    "2803": {
      "op": "JUMP"
    },
    "2804": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28299,
        28341
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2805": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28299,
        28341
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2807": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28299,
        28341
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2808": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28299,
        28341
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2809": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28299,
        28341
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2810": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28299,
        28341
      ],
      "op": "SUB",
      "path": "19"
    },
    "2811": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28299,
        28341
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2812": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28299,
        28341
      ],
      "op": "LOG1",
      "path": "19"
    },
    "2813": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27943,
        28348
      ],
      "op": "POP",
      "path": "19"
    },
    "2814": {
      "offset": [
        2062,
        2632
      ],
      "op": "POP",
      "path": "21"
    },
    "2815": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "POP",
      "path": "19"
    },
    "2816": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "POP",
      "path": "19"
    },
    "2817": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "POP",
      "path": "19"
    },
    "2818": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        27788,
        28348
      ],
      "op": "POP",
      "path": "19"
    },
    "2819": {
      "fn": "RequestManager.invalidateFill",
      "jump": "o",
      "offset": [
        27788,
        28348
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2820": {
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2821": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "2823": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2825": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2826": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2827": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2829": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2830": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2832": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2834": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2835": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2836": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "2838": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2839": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "LT",
      "path": "21"
    },
    "2840": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xB20"
    },
    "2843": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2844": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2846": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2847": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "REVERT",
      "path": "21"
    },
    "2848": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2849": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "ADD",
      "path": "21"
    },
    "2850": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2857": {
      "op": "SHL"
    },
    "2858": {
      "op": "SUB"
    },
    "2859": {
      "offset": [
        576,
        621
      ],
      "op": "AND",
      "path": "21"
    },
    "2860": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2861": {
      "op": "POP"
    },
    "2862": {
      "offset": [
        576,
        621
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2863": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2864": {
      "op": "POP"
    },
    "2865": {
      "jump": "o",
      "offset": [
        576,
        621
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2866": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2867": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18199,
        18206
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2869": {
      "offset": [
        8156,
        8171
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2870": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8156,
        8171
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2871": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8156,
        8171
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2872": {
      "offset": [
        8156,
        8162
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "2874": {
      "offset": [
        8156,
        8171
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2876": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8156,
        8171
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2877": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8156,
        8171
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2879": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8156,
        8171
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2880": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8156,
        8171
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2881": {
      "offset": [
        8156,
        8179
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2883": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8156,
        8179
      ],
      "op": "ADD",
      "path": "19"
    },
    "2884": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8156,
        8179
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2885": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18173,
        18180
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2886": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18173,
        18180
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2893": {
      "op": "SHL"
    },
    "2894": {
      "op": "SUB"
    },
    "2895": {
      "offset": [
        8156,
        8179
      ],
      "op": "AND",
      "path": "19"
    },
    "2896": {
      "offset": [
        8148,
        8215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB8F"
    },
    "2899": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8148,
        8215
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2900": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8148,
        8215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2902": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8148,
        8215
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2903": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2909": {
      "op": "SHL"
    },
    "2910": {
      "offset": [
        8148,
        8215
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2911": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8148,
        8215
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2914": {
      "offset": [
        8148,
        8215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2916": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8148,
        8215
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2917": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8148,
        8215
      ],
      "op": "ADD",
      "path": "19"
    },
    "2918": {
      "op": "MSTORE"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2923": {
      "op": "DUP3"
    },
    "2924": {
      "op": "ADD"
    },
    "2925": {
      "op": "MSTORE"
    },
    "2926": {
      "op": "PUSH17",
      "value": "0x18DB185A5B5259081B9BDD081D985B1A59"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "2946": {
      "op": "SHL"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2949": {
      "op": "DUP3"
    },
    "2950": {
      "op": "ADD"
    },
    "2951": {
      "op": "MSTORE"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2954": {
      "op": "ADD"
    },
    "2955": {
      "offset": [
        8148,
        8215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "2958": {
      "op": "JUMP"
    },
    "2959": {
      "offset": [
        8148,
        8215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2960": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18222,
        18241
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2962": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18259
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2963": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18259
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2964": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18259
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2965": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "2967": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18259
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2969": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18259
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2970": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18259
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2971": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18259
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2972": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18259
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2974": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18259
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2975": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18259
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2976": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18259
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2977": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18304,
        18319
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2978": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18304,
        18319
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2979": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18295,
        18320
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2980": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18295,
        18320
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2981": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18295,
        18303
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "2983": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18295,
        18320
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2984": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18295,
        18320
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2985": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18295,
        18320
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2986": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18295,
        18320
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2987": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18295,
        18320
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2988": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18259
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2989": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18244,
        18259
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2990": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18222,
        18241
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2991": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18380,
        18401
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBB7"
    },
    "2994": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18251,
        18258
      ],
      "op": "DUP8",
      "path": "19"
    },
    "2995": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18380,
        18392
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2069"
    },
    "2998": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18380,
        18401
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2999": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18380,
        18401
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3006": {
      "op": "SHL"
    },
    "3007": {
      "op": "SUB"
    },
    "3008": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18454
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3009": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18454
      ],
      "op": "AND",
      "path": "19"
    },
    "3010": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18457,
        18458
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3012": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18454
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3013": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18454
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3014": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18454
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3015": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18439
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "3017": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18439
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3018": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18439
      ],
      "op": "ADD",
      "path": "19"
    },
    "3019": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18454
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3021": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18454
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3022": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18454
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3024": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18454
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3025": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18454
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3026": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18454
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3027": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18331,
        18401
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3028": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18331,
        18401
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "3029": {
      "op": "POP"
    },
    "3030": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18331,
        18401
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3031": {
      "op": "POP"
    },
    "3032": {
      "branch": 137,
      "fn": "RequestManager.withdraw",
      "offset": [
        18416,
        18458
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3033": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18412,
        18564
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBF8"
    },
    "3036": {
      "branch": 137,
      "fn": "RequestManager.withdraw",
      "offset": [
        18412,
        18564
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3043": {
      "op": "SHL"
    },
    "3044": {
      "op": "SUB"
    },
    "3045": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18549
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 6
    },
    "3046": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18549
      ],
      "op": "AND",
      "path": "19"
    },
    "3047": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18552,
        18553
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3049": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18549
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3050": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18549
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3051": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18549
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3052": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18534
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "3054": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18534
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3055": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18534
      ],
      "op": "ADD",
      "path": "19"
    },
    "3056": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18549
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3058": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18549
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3059": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18549
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3061": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18549
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3062": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18549
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3063": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18511,
        18553
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3064": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18412,
        18564
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3065": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18649,
        18654
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3066": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18649,
        18670
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "3068": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18649,
        18670
      ],
      "op": "ADD",
      "path": "19"
    },
    "3069": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18649,
        18670
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3070": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18674,
        18675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3072": {
      "branch": 138,
      "fn": "RequestManager.withdraw",
      "offset": [
        18649,
        18675
      ],
      "op": "SUB",
      "path": "19"
    },
    "3073": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18645,
        18727
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC4A"
    },
    "3076": {
      "branch": 138,
      "fn": "RequestManager.withdraw",
      "offset": [
        18645,
        18727
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3077": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18711
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 7,
      "value": "0x7"
    },
    "3079": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18711
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3080": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18711
      ],
      "op": "ADD",
      "path": "19"
    },
    "3081": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3082": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3083": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18715,
        18716
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3085": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18715,
        18716
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3086": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18711
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3087": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18711
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3089": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18711
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3090": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC25"
    },
    "3093": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3094": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18715,
        18716
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3095": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18715,
        18716
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3102": {
      "op": "SHL"
    },
    "3103": {
      "op": "SUB"
    },
    "3104": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "AND",
      "path": "19"
    },
    "3105": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B88"
    },
    "3108": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18691,
        18716
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3109": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3110": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3111": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "POP",
      "path": "19"
    },
    "3112": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "3115": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "EXP",
      "path": "19"
    },
    "3116": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3117": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3118": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3125": {
      "op": "SHL"
    },
    "3126": {
      "op": "SUB"
    },
    "3127": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "MUL",
      "path": "19"
    },
    "3128": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "NOT",
      "path": "19"
    },
    "3129": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "AND",
      "path": "19"
    },
    "3130": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3131": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3138": {
      "op": "SHL"
    },
    "3139": {
      "op": "SUB"
    },
    "3140": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "AND",
      "path": "19"
    },
    "3141": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "MUL",
      "path": "19"
    },
    "3142": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "OR",
      "path": "19"
    },
    "3143": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3144": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3145": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18691,
        18716
      ],
      "op": "POP",
      "path": "19"
    },
    "3146": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18645,
        18727
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3147": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18761,
        18774
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 8
    },
    "3148": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18741
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3149": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18757
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "3151": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18757
      ],
      "op": "ADD",
      "path": "19"
    },
    "3152": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18757
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3154": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18774
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3155": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18774
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3156": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18774
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3157": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC5E"
    },
    "3160": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18774
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3161": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18774
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3162": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "3165": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18736,
        18774
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3166": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18774
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3167": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18774
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3168": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18774
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3169": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18736,
        18774
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3170": {
      "op": "POP"
    },
    "3171": {
      "op": "POP"
    },
    "3172": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18867,
        18893
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 9,
      "value": "0x5"
    },
    "3174": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18867,
        18893
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3175": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18867,
        18893
      ],
      "op": "ADD",
      "path": "19"
    },
    "3176": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18867,
        18893
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3177": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18846,
        18864
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "3179": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18846,
        18864
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3180": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18846,
        18864
      ],
      "op": "ADD",
      "path": "19"
    },
    "3181": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18846,
        18864
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3182": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18846,
        18893
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC77"
    },
    "3185": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18846,
        18893
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3186": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18867,
        18893
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3187": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18846,
        18893
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "3190": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18846,
        18893
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3191": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18846,
        18893
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3192": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18805,
        18810
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3193": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18805,
        18826
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "3195": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18805,
        18826
      ],
      "op": "ADD",
      "path": "19"
    },
    "3196": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18805,
        18826
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3197": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18805,
        18893
      ],
      "op": "GT",
      "path": "19"
    },
    "3198": {
      "branch": 139,
      "fn": "RequestManager.withdraw",
      "offset": [
        18805,
        18893
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3199": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18784,
        18947
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCCA"
    },
    "3202": {
      "branch": 139,
      "fn": "RequestManager.withdraw",
      "offset": [
        18784,
        18947
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3203": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18784,
        18947
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3205": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18784,
        18947
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3206": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3212": {
      "op": "SHL"
    },
    "3213": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18784,
        18947
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3214": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18784,
        18947
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3217": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18784,
        18947
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3219": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18784,
        18947
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3220": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18784,
        18947
      ],
      "op": "ADD",
      "path": "19"
    },
    "3221": {
      "op": "MSTORE"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3226": {
      "op": "DUP3"
    },
    "3227": {
      "op": "ADD"
    },
    "3228": {
      "op": "MSTORE"
    },
    "3229": {
      "op": "PUSH32",
      "value": "0x416D6F756E7420746F20776974686472617720746F6F206C6172676500000000"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3264": {
      "op": "DUP3"
    },
    "3265": {
      "op": "ADD"
    },
    "3266": {
      "op": "MSTORE"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18784,
        18947
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "3273": {
      "op": "JUMP"
    },
    "3274": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18784,
        18947
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3275": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18959,
        18968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3277": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        18987
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3284": {
      "op": "SHL"
    },
    "3285": {
      "op": "SUB"
    },
    "3286": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        18992
      ],
      "op": "AND",
      "path": "19"
    },
    "3287": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19000,
        19013
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3288": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3290": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3291": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3293": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3295": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3296": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3297": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3298": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "SUB",
      "path": "19"
    },
    "3299": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3300": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3301": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3302": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "GAS",
      "path": "19"
    },
    "3303": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "CALL",
      "path": "19"
    },
    "3304": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3305": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "POP",
      "path": "19"
    },
    "3306": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "POP",
      "path": "19"
    },
    "3307": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "POP",
      "path": "19"
    },
    "3308": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3309": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3310": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3312": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3313": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "EQ",
      "path": "19"
    },
    "3314": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD17"
    },
    "3317": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3318": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3320": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3321": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3322": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "POP",
      "path": "19"
    },
    "3323": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3325": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "NOT",
      "path": "19"
    },
    "3326": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3F"
    },
    "3328": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3329": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "ADD",
      "path": "19"
    },
    "3330": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "AND",
      "path": "19"
    },
    "3331": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3332": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "ADD",
      "path": "19"
    },
    "3333": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3335": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3336": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3337": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3338": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3339": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3340": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3342": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3344": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3345": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "ADD",
      "path": "19"
    },
    "3346": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "3347": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD1C"
    },
    "3350": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3351": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3352": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "3354": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3355": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "POP",
      "path": "19"
    },
    "3356": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3357": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18974,
        19018
      ],
      "op": "POP",
      "path": "19"
    },
    "3358": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18958,
        19018
      ],
      "op": "POP",
      "path": "19"
    },
    "3359": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18958,
        19018
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3360": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18958,
        19018
      ],
      "op": "POP",
      "path": "19"
    },
    "3361": {
      "branch": 140,
      "fn": "RequestManager.withdraw",
      "offset": [
        19036,
        19040
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 10
    },
    "3362": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19028,
        19065
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD64"
    },
    "3365": {
      "branch": 140,
      "fn": "RequestManager.withdraw",
      "offset": [
        19028,
        19065
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3366": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19028,
        19065
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3368": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19028,
        19065
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3369": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3375": {
      "op": "SHL"
    },
    "3376": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19028,
        19065
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3377": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19028,
        19065
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3380": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19028,
        19065
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3382": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19028,
        19065
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3383": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19028,
        19065
      ],
      "op": "ADD",
      "path": "19"
    },
    "3384": {
      "op": "MSTORE"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3389": {
      "op": "DUP3"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "op": "MSTORE"
    },
    "3392": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "3415": {
      "op": "SHL"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3418": {
      "op": "DUP3"
    },
    "3419": {
      "op": "ADD"
    },
    "3420": {
      "op": "MSTORE"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3423": {
      "op": "ADD"
    },
    "3424": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19028,
        19065
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "3427": {
      "op": "JUMP"
    },
    "3428": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19028,
        19065
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3429": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19110,
        19125
      ],
      "op": "DUP5",
      "path": "19",
      "statement": 11
    },
    "3430": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19110,
        19125
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3431": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19081,
        19141
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3433": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19081,
        19141
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3434": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19081,
        19141
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3435": {
      "op": "DUP11"
    },
    "3436": {
      "op": "DUP2"
    },
    "3437": {
      "op": "MSTORE"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3444": {
      "op": "SHL"
    },
    "3445": {
      "op": "SUB"
    },
    "3446": {
      "op": "DUP7"
    },
    "3447": {
      "op": "AND"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3450": {
      "op": "DUP3"
    },
    "3451": {
      "op": "ADD"
    },
    "3452": {
      "op": "MSTORE"
    },
    "3453": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19081,
        19141
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xA5D98EFE63B5C32FD1A0E4D189473A6E9538A04F05DA85B3CD50C5915087DECF"
    },
    "3486": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19081,
        19141
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3487": {
      "op": "ADD"
    },
    "3488": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19081,
        19141
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3490": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19081,
        19141
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3491": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19081,
        19141
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3492": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19081,
        19141
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3493": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19081,
        19141
      ],
      "op": "SUB",
      "path": "19"
    },
    "3494": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19081,
        19141
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3495": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19081,
        19141
      ],
      "op": "LOG2",
      "path": "19"
    },
    "3496": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19156,
        19179
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "3498": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19156,
        19179
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3499": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19156,
        19179
      ],
      "op": "ADD",
      "path": "19"
    },
    "3500": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19156,
        19179
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3501": {
      "branch": 141,
      "fn": "RequestManager.withdraw",
      "offset": [
        19156,
        19184
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3502": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19156,
        19218
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3503": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19156,
        19218
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3504": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19156,
        19218
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDC8"
    },
    "3507": {
      "branch": 141,
      "fn": "RequestManager.withdraw",
      "offset": [
        19156,
        19218
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3508": {
      "op": "POP"
    },
    "3509": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19205,
        19218
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3511": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19205,
        19218
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3512": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19205,
        19218
      ],
      "op": "ADD",
      "path": "19"
    },
    "3513": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19205,
        19218
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3520": {
      "op": "SHL"
    },
    "3521": {
      "op": "SUB"
    },
    "3522": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19188,
        19218
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3523": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19188,
        19218
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3524": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19188,
        19218
      ],
      "op": "AND",
      "path": "19"
    },
    "3525": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19205,
        19218
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3526": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19205,
        19218
      ],
      "op": "AND",
      "path": "19"
    },
    "3527": {
      "branch": 142,
      "fn": "RequestManager.withdraw",
      "offset": [
        19188,
        19218
      ],
      "op": "EQ",
      "path": "19"
    },
    "3528": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19156,
        19218
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3529": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19152,
        19278
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3530": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19152,
        19278
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDD7"
    },
    "3533": {
      "branch": 142,
      "fn": "RequestManager.withdraw",
      "offset": [
        19152,
        19278
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3534": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19234,
        19267
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 12,
      "value": "0xDD7"
    },
    "3537": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19250,
        19257
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3538": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19259,
        19266
      ],
      "op": "DUP10",
      "path": "19"
    },
    "3539": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19234,
        19249
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2333"
    },
    "3542": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        19234,
        19267
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3543": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19234,
        19267
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3544": {
      "op": "POP"
    },
    "3545": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19295,
        19308
      ],
      "op": "SWAP1",
      "path": "19",
      "statement": 13
    },
    "3546": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19295,
        19308
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "3547": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18100,
        19315
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "3548": {
      "op": "POP"
    },
    "3549": {
      "op": "POP"
    },
    "3550": {
      "op": "POP"
    },
    "3551": {
      "op": "POP"
    },
    "3552": {
      "op": "POP"
    },
    "3553": {
      "op": "POP"
    },
    "3554": {
      "fn": "RequestManager.withdraw",
      "jump": "o",
      "offset": [
        18100,
        19315
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3555": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3556": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9821,
        9831
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 14,
      "value": "0x6"
    },
    "3558": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9821,
        9831
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3559": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9794,
        9801
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3561": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9794,
        9801
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3562": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9821,
        9831
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "3564": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9821,
        9831
      ],
      "op": "AND",
      "path": "19"
    },
    "3565": {
      "branch": 143,
      "fn": "RequestManager.createRequest",
      "offset": [
        9821,
        9840
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3566": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9813,
        9867
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE32"
    },
    "3569": {
      "branch": 143,
      "fn": "RequestManager.createRequest",
      "offset": [
        9813,
        9867
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3570": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9813,
        9867
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3572": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9813,
        9867
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3573": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3579": {
      "op": "SHL"
    },
    "3580": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9813,
        9867
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3581": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9813,
        9867
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3584": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9813,
        9867
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3586": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9813,
        9867
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3587": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9813,
        9867
      ],
      "op": "ADD",
      "path": "19"
    },
    "3588": {
      "op": "MSTORE"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3593": {
      "op": "DUP3"
    },
    "3594": {
      "op": "ADD"
    },
    "3595": {
      "op": "MSTORE"
    },
    "3596": {
      "op": "PUSH22",
      "value": "0x10DBDB9D1C9858DD081A5CC819195C1C9958D85D1959"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "3621": {
      "op": "SHL"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3624": {
      "op": "DUP3"
    },
    "3625": {
      "op": "ADD"
    },
    "3626": {
      "op": "MSTORE"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3629": {
      "op": "ADD"
    },
    "3630": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9813,
        9867
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "3633": {
      "op": "JUMP"
    },
    "3634": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9813,
        9867
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3635": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9898,
        9928
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 15,
      "value": "0x0"
    },
    "3637": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9898,
        9928
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3638": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9898,
        9928
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3639": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9898,
        9928
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3640": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9898,
        9913
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "3642": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9898,
        9928
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3644": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9898,
        9928
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3645": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9898,
        9928
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3647": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9898,
        9928
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3648": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9898,
        9928
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3649": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9898,
        9928
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3650": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9898,
        9933
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3651": {
      "branch": 144,
      "fn": "RequestManager.createRequest",
      "offset": [
        9898,
        9933
      ],
      "op": "SUB",
      "path": "19"
    },
    "3652": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        9986
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE8F"
    },
    "3655": {
      "branch": 144,
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        9986
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3656": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        9986
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3658": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        9986
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3659": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3665": {
      "op": "SHL"
    },
    "3666": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        9986
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3667": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        9986
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3670": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        9986
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3672": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        9986
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3673": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        9986
      ],
      "op": "ADD",
      "path": "19"
    },
    "3674": {
      "op": "MSTORE"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3679": {
      "op": "DUP3"
    },
    "3680": {
      "op": "ADD"
    },
    "3681": {
      "op": "MSTORE"
    },
    "3682": {
      "op": "PUSH32",
      "value": "0x54617267657420726F6C6C7570206E6F7420737570706F727465640000000000"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3717": {
      "op": "DUP3"
    },
    "3718": {
      "op": "ADD"
    },
    "3719": {
      "op": "MSTORE"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3722": {
      "op": "ADD"
    },
    "3723": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        9986
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "3726": {
      "op": "JUMP"
    },
    "3727": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        9986
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3728": {
      "offset": [
        5300,
        5309
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12C"
    },
    "3731": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10017,
        10031
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 16
    },
    "3732": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10017,
        10054
      ],
      "op": "LT",
      "path": "19"
    },
    "3733": {
      "branch": 145,
      "fn": "RequestManager.createRequest",
      "offset": [
        10017,
        10054
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3734": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9996,
        10105
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEE1"
    },
    "3737": {
      "branch": 145,
      "fn": "RequestManager.createRequest",
      "offset": [
        9996,
        10105
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3738": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9996,
        10105
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3740": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9996,
        10105
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3741": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3747": {
      "op": "SHL"
    },
    "3748": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9996,
        10105
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3749": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9996,
        10105
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3752": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9996,
        10105
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3754": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9996,
        10105
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3755": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9996,
        10105
      ],
      "op": "ADD",
      "path": "19"
    },
    "3756": {
      "op": "MSTORE"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3761": {
      "op": "DUP3"
    },
    "3762": {
      "op": "ADD"
    },
    "3763": {
      "op": "MSTORE"
    },
    "3764": {
      "op": "PUSH32",
      "value": "0x56616C696469747920706572696F6420746F6F2073686F727400000000000000"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3799": {
      "op": "DUP3"
    },
    "3800": {
      "op": "ADD"
    },
    "3801": {
      "op": "MSTORE"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3804": {
      "op": "ADD"
    },
    "3805": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9996,
        10105
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "3808": {
      "op": "JUMP"
    },
    "3809": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9996,
        10105
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3810": {
      "offset": [
        5412,
        5422
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x708"
    },
    "3813": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10136,
        10150
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 17
    },
    "3814": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10136,
        10173
      ],
      "op": "GT",
      "path": "19"
    },
    "3815": {
      "branch": 146,
      "fn": "RequestManager.createRequest",
      "offset": [
        10136,
        10173
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3816": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10115,
        10223
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF33"
    },
    "3819": {
      "branch": 146,
      "fn": "RequestManager.createRequest",
      "offset": [
        10115,
        10223
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3820": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10115,
        10223
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3822": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10115,
        10223
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3823": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3829": {
      "op": "SHL"
    },
    "3830": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10115,
        10223
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3831": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10115,
        10223
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3834": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10115,
        10223
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3836": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10115,
        10223
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3837": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10115,
        10223
      ],
      "op": "ADD",
      "path": "19"
    },
    "3838": {
      "op": "MSTORE"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3843": {
      "op": "DUP3"
    },
    "3844": {
      "op": "ADD"
    },
    "3845": {
      "op": "MSTORE"
    },
    "3846": {
      "op": "PUSH32",
      "value": "0x56616C696469747920706572696F6420746F6F206C6F6E670000000000000000"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3881": {
      "op": "DUP3"
    },
    "3882": {
      "op": "ADD"
    },
    "3883": {
      "op": "MSTORE"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10115,
        10223
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "3890": {
      "op": "JUMP"
    },
    "3891": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10115,
        10223
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3892": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10251,
        10264
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 18,
      "value": "0xE"
    },
    "3894": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10251,
        10264
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3895": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10241,
        10247
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3896": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10241,
        10264
      ],
      "op": "GT",
      "path": "19"
    },
    "3897": {
      "branch": 147,
      "fn": "RequestManager.createRequest",
      "offset": [
        10241,
        10264
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3898": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10233,
        10298
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF85"
    },
    "3901": {
      "branch": 147,
      "fn": "RequestManager.createRequest",
      "offset": [
        10233,
        10298
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3902": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10233,
        10298
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3904": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10233,
        10298
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3905": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3911": {
      "op": "SHL"
    },
    "3912": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10233,
        10298
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3913": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10233,
        10298
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3916": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10233,
        10298
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3918": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10233,
        10298
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3919": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10233,
        10298
      ],
      "op": "ADD",
      "path": "19"
    },
    "3920": {
      "op": "MSTORE"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3925": {
      "op": "DUP3"
    },
    "3926": {
      "op": "ADD"
    },
    "3927": {
      "op": "MSTORE"
    },
    "3928": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473207472616E73666572206C696D6974000000"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3963": {
      "op": "DUP3"
    },
    "3964": {
      "op": "ADD"
    },
    "3965": {
      "op": "MSTORE"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3968": {
      "op": "ADD"
    },
    "3969": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10233,
        10298
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "3972": {
      "op": "JUMP"
    },
    "3973": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10233,
        10298
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3974": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10331,
        10349
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3975": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10309,
        10321
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3977": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10388,
        10401
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF91"
    },
    "3980": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10394,
        10400
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3981": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10388,
        10393
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2045"
    },
    "3984": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10388,
        10401
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3985": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10388,
        10401
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3986": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10361,
        10401
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3987": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10361,
        10401
      ],
      "op": "POP",
      "path": "19"
    },
    "3988": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10411,
        10441
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3990": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10444,
        10463
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF9E"
    },
    "3993": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10456,
        10462
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3994": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10444,
        10455
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DD5"
    },
    "3997": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10444,
        10463
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3998": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10444,
        10463
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3999": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10411,
        10463
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4000": {
      "op": "POP"
    },
    "4001": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10473,
        10497
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4003": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10411,
        10463
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4004": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10500,
        10537
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFAD"
    },
    "4007": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10521,
        10537
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4008": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10500,
        10506
      ],
      "op": "DUP10",
      "path": "19"
    },
    "4009": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10500,
        10537
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "4012": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10500,
        10537
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4013": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10500,
        10537
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4014": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10500,
        10574
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFB7"
    },
    "4017": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10500,
        10574
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4018": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10500,
        10574
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4019": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10500,
        10574
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "4022": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10500,
        10574
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4023": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10500,
        10574
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4024": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 19,
      "value": "0x40"
    },
    "4026": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4027": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4034": {
      "op": "SHL"
    },
    "4035": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4036": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4037": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10622,
        10632
      ],
      "op": "CALLER",
      "path": "19"
    },
    "4038": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4040": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4041": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "ADD",
      "path": "19"
    },
    "4042": {
      "op": "MSTORE"
    },
    "4043": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10642,
        10646
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4046": {
      "op": "DUP3"
    },
    "4047": {
      "op": "ADD"
    },
    "4048": {
      "op": "MSTORE"
    },
    "4049": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10473,
        10574
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4050": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10473,
        10574
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4051": {
      "op": "POP"
    },
    "4052": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10473,
        10574
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4053": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10473,
        10574
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4060": {
      "op": "SHL"
    },
    "4061": {
      "op": "SUB"
    },
    "4062": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10621
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4063": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10621
      ],
      "op": "AND",
      "path": "19"
    },
    "4064": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10621
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4065": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10621
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDD62ED3E"
    },
    "4070": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10621
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4073": {
      "op": "ADD"
    },
    "4074": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4076": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4078": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4079": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4080": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4081": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "SUB",
      "path": "19"
    },
    "4082": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4083": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4084": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "GAS",
      "path": "19"
    },
    "4085": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "4086": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4087": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4088": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4089": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1006"
    },
    "4092": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4093": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4094": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4096": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4097": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "4098": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4099": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4101": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4102": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4103": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "POP",
      "path": "19"
    },
    "4104": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "POP",
      "path": "19"
    },
    "4105": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "POP",
      "path": "19"
    },
    "4106": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "POP",
      "path": "19"
    },
    "4107": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4109": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4110": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4111": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "4113": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "NOT",
      "path": "19"
    },
    "4114": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "4116": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4117": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "ADD",
      "path": "19"
    },
    "4118": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "AND",
      "path": "19"
    },
    "4119": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4120": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "ADD",
      "path": "19"
    },
    "4121": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4122": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4124": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4125": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "POP",
      "path": "19"
    },
    "4126": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4127": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "ADD",
      "path": "19"
    },
    "4128": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4129": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x102A"
    },
    "4132": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4133": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4134": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BC8"
    },
    "4137": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10606,
        10648
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4138": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10648
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4139": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10668
      ],
      "op": "LT",
      "path": "19"
    },
    "4140": {
      "branch": 148,
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10668
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4141": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10585,
        10716
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1071"
    },
    "4144": {
      "branch": 148,
      "fn": "RequestManager.createRequest",
      "offset": [
        10585,
        10716
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4145": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10585,
        10716
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4147": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10585,
        10716
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4154": {
      "op": "SHL"
    },
    "4155": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10585,
        10716
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4156": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10585,
        10716
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4159": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10585,
        10716
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4161": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10585,
        10716
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4162": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10585,
        10716
      ],
      "op": "ADD",
      "path": "19"
    },
    "4163": {
      "op": "MSTORE"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4168": {
      "op": "DUP3"
    },
    "4169": {
      "op": "ADD"
    },
    "4170": {
      "op": "MSTORE"
    },
    "4171": {
      "op": "PUSH22",
      "value": "0x496E73756666696369656E7420616C6C6F77616E6365"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4196": {
      "op": "SHL"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4199": {
      "op": "DUP3"
    },
    "4200": {
      "op": "ADD"
    },
    "4201": {
      "op": "MSTORE"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4204": {
      "op": "ADD"
    },
    "4205": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10585,
        10716
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "4208": {
      "op": "JUMP"
    },
    "4209": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10585,
        10716
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4210": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10743,
        10744
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 20,
      "value": "0x1"
    },
    "4212": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10727,
        10739
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "4214": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10727,
        10739
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4216": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10727,
        10744
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4217": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10727,
        10744
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4218": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10727,
        10744
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4219": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10727,
        10744
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1084"
    },
    "4222": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10727,
        10744
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4223": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10727,
        10744
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4224": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10727,
        10744
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "4227": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10727,
        10744
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4228": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10727,
        10744
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4229": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10727,
        10744
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4230": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10727,
        10744
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4231": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10727,
        10744
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4232": {
      "op": "POP"
    },
    "4233": {
      "op": "POP"
    },
    "4234": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10948,
        10960
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "4236": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10948,
        10960
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4237": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 21,
      "value": "0x40"
    },
    "4239": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4240": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4241": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10815,
        10828
      ],
      "op": "CHAINID",
      "path": "19"
    },
    "4242": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4244": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4245": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4246": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "ADD",
      "path": "15"
    },
    "4247": {
      "op": "SWAP2"
    },
    "4248": {
      "op": "SWAP1"
    },
    "4249": {
      "op": "SWAP2"
    },
    "4250": {
      "op": "MSTORE"
    },
    "4251": {
      "op": "DUP2"
    },
    "4252": {
      "op": "DUP4"
    },
    "4253": {
      "op": "ADD"
    },
    "4254": {
      "op": "DUP16"
    },
    "4255": {
      "op": "SWAP1"
    },
    "4256": {
      "op": "MSTORE"
    },
    "4257": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4270": {
      "op": "NOT"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4273": {
      "op": "DUP15"
    },
    "4274": {
      "op": "DUP2"
    },
    "4275": {
      "op": "SHL"
    },
    "4276": {
      "op": "DUP3"
    },
    "4277": {
      "op": "AND"
    },
    "4278": {
      "op": "DUP2"
    },
    "4279": {
      "op": "DUP6"
    },
    "4280": {
      "op": "ADD"
    },
    "4281": {
      "op": "MSTORE"
    },
    "4282": {
      "op": "DUP14"
    },
    "4283": {
      "op": "SWAP1"
    },
    "4284": {
      "op": "SHL"
    },
    "4285": {
      "op": "AND"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "4288": {
      "op": "DUP4"
    },
    "4289": {
      "op": "ADD"
    },
    "4290": {
      "op": "MSTORE"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "4293": {
      "op": "DUP3"
    },
    "4294": {
      "op": "ADD"
    },
    "4295": {
      "op": "DUP12"
    },
    "4296": {
      "op": "SWAP1"
    },
    "4297": {
      "op": "MSTORE"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4300": {
      "op": "DUP1"
    },
    "4301": {
      "op": "DUP4"
    },
    "4302": {
      "op": "ADD"
    },
    "4303": {
      "op": "SWAP5"
    },
    "4304": {
      "op": "SWAP1"
    },
    "4305": {
      "op": "SWAP5"
    },
    "4306": {
      "op": "MSTORE"
    },
    "4307": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4308": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4309": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4310": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4311": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "SUB",
      "path": "15"
    },
    "4312": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4313": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "4314": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "ADD",
      "path": "15"
    },
    "4315": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4316": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "4319": {
      "op": "SWAP1"
    },
    "4320": {
      "op": "SWAP2"
    },
    "4321": {
      "op": "ADD"
    },
    "4322": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4323": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        387,
        629
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4324": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        360,
        643
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4325": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        360,
        643
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4326": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        360,
        643
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4327": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        360,
        643
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4328": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        360,
        643
      ],
      "op": "ADD",
      "path": "15"
    },
    "4329": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        360,
        643
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4330": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        360,
        643
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4331": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        360,
        643
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4332": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        360,
        643
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4335": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11010,
        11029
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4336": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11010,
        11029
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4337": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11010,
        11029
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4338": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11010,
        11018
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "4340": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11010,
        11029
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4341": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11010,
        11029
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4342": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11010,
        11029
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4343": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11010,
        11029
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4344": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11010,
        11029
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4345": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11039,
        11069
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 22
    },
    "4346": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11039,
        11069
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4347": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11059,
        11069
      ],
      "op": "CALLER",
      "path": "19"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4354": {
      "op": "SHL"
    },
    "4355": {
      "op": "SUB"
    },
    "4356": {
      "op": "NOT"
    },
    "4357": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11039,
        11069
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4358": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11039,
        11069
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4359": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11039,
        11069
      ],
      "op": "AND",
      "path": "19"
    },
    "4360": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11039,
        11069
      ],
      "op": "OR",
      "path": "19"
    },
    "4361": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11039,
        11069
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4362": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11039,
        11069
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4365": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11079,
        11108
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 23
    },
    "4366": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11079,
        11108
      ],
      "op": "ADD",
      "path": "19"
    },
    "4367": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11079,
        11129
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4368": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11079,
        11129
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4369": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11079,
        11129
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4370": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11079,
        11129
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4371": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11079,
        11129
      ],
      "op": "AND",
      "path": "19"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4378": {
      "op": "SHL"
    },
    "4379": {
      "op": "SUB"
    },
    "4380": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11079,
        11129
      ],
      "op": "DUP15",
      "path": "19"
    },
    "4381": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11079,
        11129
      ],
      "op": "AND",
      "path": "19"
    },
    "4382": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11079,
        11129
      ],
      "op": "OR",
      "path": "19"
    },
    "4383": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11079,
        11129
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4384": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11079,
        11129
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4385": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11139,
        11163
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 24,
      "value": "0x2"
    },
    "4387": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11139,
        11163
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4388": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11139,
        11163
      ],
      "op": "ADD",
      "path": "19"
    },
    "4389": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11139,
        11179
      ],
      "op": "DUP14",
      "path": "19"
    },
    "4390": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11139,
        11179
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4391": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11139,
        11179
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4392": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11189,
        11206
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 25,
      "value": "0x3"
    },
    "4394": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11189,
        11206
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4395": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11189,
        11206
      ],
      "op": "ADD",
      "path": "19"
    },
    "4396": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11189,
        11215
      ],
      "op": "DUP10",
      "path": "19"
    },
    "4397": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11189,
        11215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4398": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11189,
        11215
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4399": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11249,
        11281
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 26,
      "value": "0x1138"
    },
    "4402": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11267,
        11281
      ],
      "op": "DUP9",
      "path": "19"
    },
    "4403": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11249,
        11264
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "4404": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11249,
        11281
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "4407": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        11249,
        11281
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4408": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11249,
        11281
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4409": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11225,
        11235
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4410": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11225,
        11246
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4412": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11225,
        11246
      ],
      "op": "ADD",
      "path": "19"
    },
    "4413": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11225,
        11281
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4414": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11225,
        11281
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4415": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11225,
        11281
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4416": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11225,
        11281
      ],
      "op": "POP",
      "path": "19"
    },
    "4417": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11310,
        11326
      ],
      "op": "DUP5",
      "path": "19",
      "statement": 27
    },
    "4418": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11291,
        11301
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4419": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11291,
        11307
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "4421": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11291,
        11307
      ],
      "op": "ADD",
      "path": "19"
    },
    "4422": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11291,
        11326
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4423": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11291,
        11326
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4424": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11291,
        11326
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4425": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11291,
        11326
      ],
      "op": "POP",
      "path": "19"
    },
    "4426": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11361,
        11383
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 28
    },
    "4427": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11336,
        11346
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4428": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11336,
        11358
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "4430": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11336,
        11358
      ],
      "op": "ADD",
      "path": "19"
    },
    "4431": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11336,
        11383
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4432": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11336,
        11383
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4433": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11336,
        11383
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4434": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11336,
        11383
      ],
      "op": "POP",
      "path": "19"
    },
    "4435": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11427,
        11436
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 29
    },
    "4436": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xF852FA5288E6BD150237CEC1F415E191D8232B72067C0520011180D7EA00BA8C"
    },
    "4469": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11450,
        11463
      ],
      "op": "DUP15",
      "path": "19"
    },
    "4470": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11477,
        11495
      ],
      "op": "DUP15",
      "path": "19"
    },
    "4471": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11509,
        11527
      ],
      "op": "DUP15",
      "path": "19"
    },
    "4472": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11541,
        11554
      ],
      "op": "DUP15",
      "path": "19"
    },
    "4473": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11568,
        11574
      ],
      "op": "DUP15",
      "path": "19"
    },
    "4474": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11588,
        11600
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "4476": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11588,
        11600
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4477": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11614,
        11624
      ],
      "op": "DUP9",
      "path": "19"
    },
    "4478": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11614,
        11635
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4480": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11614,
        11635
      ],
      "op": "ADD",
      "path": "19"
    },
    "4481": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11614,
        11635
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4482": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4484": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4485": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x11CE"
    },
    "4488": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "SWAP8",
      "path": "19"
    },
    "4489": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "4490": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "4491": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "4492": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4493": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4494": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4495": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4496": {
      "op": "SWAP7"
    },
    "4497": {
      "op": "DUP8"
    },
    "4498": {
      "op": "MSTORE"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4505": {
      "op": "SHL"
    },
    "4506": {
      "op": "SUB"
    },
    "4507": {
      "op": "SWAP6"
    },
    "4508": {
      "op": "DUP7"
    },
    "4509": {
      "op": "AND"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4512": {
      "op": "DUP9"
    },
    "4513": {
      "op": "ADD"
    },
    "4514": {
      "op": "MSTORE"
    },
    "4515": {
      "op": "SWAP4"
    },
    "4516": {
      "op": "DUP6"
    },
    "4517": {
      "op": "AND"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4520": {
      "op": "DUP8"
    },
    "4521": {
      "op": "ADD"
    },
    "4522": {
      "op": "MSTORE"
    },
    "4523": {
      "op": "SWAP2"
    },
    "4524": {
      "op": "SWAP1"
    },
    "4525": {
      "op": "SWAP4"
    },
    "4526": {
      "op": "AND"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4529": {
      "op": "DUP6"
    },
    "4530": {
      "op": "ADD"
    },
    "4531": {
      "op": "MSTORE"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4534": {
      "op": "DUP5"
    },
    "4535": {
      "op": "ADD"
    },
    "4536": {
      "op": "SWAP3"
    },
    "4537": {
      "op": "SWAP1"
    },
    "4538": {
      "op": "SWAP3"
    },
    "4539": {
      "op": "MSTORE"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4542": {
      "op": "DUP4"
    },
    "4543": {
      "op": "ADD"
    },
    "4544": {
      "op": "SWAP2"
    },
    "4545": {
      "op": "SWAP1"
    },
    "4546": {
      "op": "SWAP2"
    },
    "4547": {
      "op": "MSTORE"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4550": {
      "op": "DUP3"
    },
    "4551": {
      "op": "ADD"
    },
    "4552": {
      "op": "MSTORE"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4555": {
      "op": "ADD"
    },
    "4556": {
      "op": "SWAP1"
    },
    "4557": {
      "op": "JUMP"
    },
    "4558": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4559": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4561": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4562": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4563": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4564": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "SUB",
      "path": "19"
    },
    "4565": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4566": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11399,
        11645
      ],
      "op": "LOG2",
      "path": "19"
    },
    "4567": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11656,
        11723
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 30,
      "value": "0x11EB"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4576": {
      "op": "SHL"
    },
    "4577": {
      "op": "SUB"
    },
    "4578": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11656,
        11678
      ],
      "op": "DUP8",
      "path": "19"
    },
    "4579": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11656,
        11678
      ],
      "op": "AND",
      "path": "19"
    },
    "4580": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11689
      ],
      "op": "CALLER",
      "path": "19"
    },
    "4581": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11699,
        11703
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "4582": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11706,
        11722
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4583": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11656,
        11678
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23FE"
    },
    "4586": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        11656,
        11723
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4587": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11656,
        11723
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4588": {
      "op": "POP"
    },
    "4589": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11741,
        11750
      ],
      "op": "SWAP12",
      "path": "19",
      "statement": 31
    },
    "4590": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9557,
        11757
      ],
      "op": "SWAP11",
      "path": "19"
    },
    "4591": {
      "op": "POP"
    },
    "4592": {
      "op": "POP"
    },
    "4593": {
      "op": "POP"
    },
    "4594": {
      "op": "POP"
    },
    "4595": {
      "op": "POP"
    },
    "4596": {
      "op": "POP"
    },
    "4597": {
      "op": "POP"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "op": "POP"
    },
    "4601": {
      "op": "POP"
    },
    "4602": {
      "fn": "RequestManager.createRequest",
      "jump": "o",
      "offset": [
        9557,
        11757
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4603": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4604": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1203"
    },
    "4607": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2469"
    },
    "4610": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4611": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4618": {
      "op": "SHL"
    },
    "4619": {
      "op": "SUB"
    },
    "4620": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 32
    },
    "4621": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "AND",
      "path": "17"
    },
    "4622": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4624": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4625": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4626": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4627": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1340,
        1344
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "4629": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4631": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4632": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4633": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4634": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4636": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "4637": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4638": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4639": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4640": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4641": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4644": {
      "op": "NOT"
    },
    "4645": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "AND",
      "path": "17"
    },
    "4646": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4647": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "4648": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "OR",
      "path": "17"
    },
    "4649": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4650": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4651": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "4652": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "SWAP1",
      "path": "17",
      "statement": 33
    },
    "4653": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4654": {
      "op": "SWAP2"
    },
    "4655": {
      "op": "DUP3"
    },
    "4656": {
      "op": "MSTORE"
    },
    "4657": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x371FC559C30F70424413FED6BF7E57DC939651331ABAD5C970A8EA0921C80B2E"
    },
    "4690": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4691": {
      "op": "ADD"
    },
    "4692": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4693": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4695": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4696": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4697": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4698": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "SUB",
      "path": "17"
    },
    "4699": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4700": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "LOG1",
      "path": "17"
    },
    "4701": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "POP",
      "path": "17"
    },
    "4702": {
      "fn": "LpWhitelist.addAllowedLp",
      "jump": "o",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4703": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4704": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1267"
    },
    "4707": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2469"
    },
    "4710": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4711": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4718": {
      "op": "SHL"
    },
    "4719": {
      "op": "SUB"
    },
    "4720": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 34
    },
    "4721": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "AND",
      "path": "17"
    },
    "4722": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4724": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4725": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4726": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4727": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1687
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "4729": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4731": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4732": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4733": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4734": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4736": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4737": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4738": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4739": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4740": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1670,
        1694
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4741": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1670,
        1694
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4744": {
      "op": "NOT"
    },
    "4745": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1670,
        1694
      ],
      "op": "AND",
      "path": "17"
    },
    "4746": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1670,
        1694
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4747": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1670,
        1694
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "4748": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1710,
        1726
      ],
      "op": "SWAP1",
      "path": "17",
      "statement": 35
    },
    "4749": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1710,
        1726
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4750": {
      "op": "SWAP2"
    },
    "4751": {
      "op": "DUP3"
    },
    "4752": {
      "op": "MSTORE"
    },
    "4753": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1710,
        1726
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x4E774C97F73F4BEA034579E4224498D7D9B3A4109EAA70ED3D85C97A5855F198"
    },
    "4786": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1710,
        1726
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4787": {
      "op": "ADD"
    },
    "4788": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1710,
        1726
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1254"
    },
    "4791": {
      "op": "JUMP"
    },
    "4792": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4793": {
      "offset": [
        2072,
        2086
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4795": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4796": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4797": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4798": {
      "offset": [
        2089,
        2096
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "4800": {
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4802": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4803": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4805": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4806": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4807": {
      "offset": [
        2089,
        2114
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4808": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4809": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4816": {
      "op": "SHL"
    },
    "4817": {
      "op": "SUB"
    },
    "4818": {
      "offset": [
        2089,
        2114
      ],
      "op": "AND",
      "path": "21"
    },
    "4819": {
      "offset": [
        2146,
        2159
      ],
      "op": "CHAINID",
      "path": "21"
    },
    "4820": {
      "offset": [
        2129,
        2159
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4821": {
      "branch": 183,
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2129,
        2159
      ],
      "op": "SUB",
      "path": "21"
    },
    "4822": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1306"
    },
    "4825": {
      "branch": 183,
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4826": {
      "offset": [
        2183,
        2193
      ],
      "op": "CALLER",
      "path": "21"
    },
    "4827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4833": {
      "op": "SHL"
    },
    "4834": {
      "op": "SUB"
    },
    "4835": {
      "offset": [
        2183,
        2203
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4836": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2183,
        2203
      ],
      "op": "AND",
      "path": "21"
    },
    "4837": {
      "branch": 184,
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2183,
        2203
      ],
      "op": "EQ",
      "path": "21"
    },
    "4838": {
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1301"
    },
    "4841": {
      "branch": 184,
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4842": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4844": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4845": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4851": {
      "op": "SHL"
    },
    "4852": {
      "offset": [
        2175,
        2240
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4853": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4854": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4856": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "ADD",
      "path": "21"
    },
    "4857": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8FE"
    },
    "4860": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4861": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2AD9"
    },
    "4864": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4865": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4866": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x13CC"
    },
    "4869": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4870": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4871": {
      "offset": [
        2271,
        2288
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4873": {
      "offset": [
        2291,
        2313
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4874": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4875": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4876": {
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "4878": {
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4880": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4881": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4883": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4884": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4885": {
      "offset": [
        2314,
        2315
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "4887": {
      "offset": [
        2291,
        2316
      ],
      "op": "ADD",
      "path": "21"
    },
    "4888": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2316
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4895": {
      "op": "SHL"
    },
    "4896": {
      "op": "SUB"
    },
    "4897": {
      "offset": [
        2291,
        2316
      ],
      "op": "AND",
      "path": "21"
    },
    "4898": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2316
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4899": {
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x133E"
    },
    "4902": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4903": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4905": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4906": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4912": {
      "op": "SHL"
    },
    "4913": {
      "offset": [
        2330,
        2446
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4914": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4915": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4917": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "ADD",
      "path": "21"
    },
    "4918": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8FE"
    },
    "4921": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4922": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2B0E"
    },
    "4925": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4926": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4927": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4929": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4930": {
      "op": "PUSH4",
      "value": "0x845C5443"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4937": {
      "op": "SHL"
    },
    "4938": {
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4939": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4946": {
      "op": "SHL"
    },
    "4947": {
      "op": "SUB"
    },
    "4948": {
      "op": "DUP4"
    },
    "4949": {
      "op": "DUP2"
    },
    "4950": {
      "op": "AND"
    },
    "4951": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4953": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4954": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "21"
    },
    "4955": {
      "op": "MSTORE"
    },
    "4956": {
      "offset": [
        2527,
        2537
      ],
      "op": "CALLER",
      "path": "21"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4959": {
      "op": "DUP4"
    },
    "4960": {
      "op": "ADD"
    },
    "4961": {
      "op": "MSTORE"
    },
    "4962": {
      "offset": [
        2485,
        2518
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4963": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2518
      ],
      "op": "AND",
      "path": "21"
    },
    "4964": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4965": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2518
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x845C5443"
    },
    "4970": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4973": {
      "op": "ADD"
    },
    "4974": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4976": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4978": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4979": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4980": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4981": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "SUB",
      "path": "21"
    },
    "4982": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4983": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP7",
      "path": "21"
    },
    "4984": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "GAS",
      "path": "21"
    },
    "4985": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "STATICCALL",
      "path": "21"
    },
    "4986": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "4987": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4988": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "4989": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x138A"
    },
    "4992": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4993": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "4994": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4996": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4997": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATACOPY",
      "path": "21"
    },
    "4998": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "4999": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5001": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "REVERT",
      "path": "21"
    },
    "5002": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5003": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "21"
    },
    "5004": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "21"
    },
    "5005": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "21"
    },
    "5006": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "21"
    },
    "5007": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5009": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "5010": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "5011": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "5013": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "NOT",
      "path": "21"
    },
    "5014": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "5016": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "21"
    },
    "5017": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "21"
    },
    "5018": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "AND",
      "path": "21"
    },
    "5019": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "21"
    },
    "5020": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "21"
    },
    "5021": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5022": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5024": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5025": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "21"
    },
    "5026": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5027": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "21"
    },
    "5028": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5029": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x13AE"
    },
    "5032": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5033": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5034": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2B50"
    },
    "5037": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5038": {
      "branch": 185,
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5039": {
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x13CA"
    },
    "5042": {
      "branch": 185,
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5043": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5045": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "5046": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5050": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5052": {
      "op": "SHL"
    },
    "5053": {
      "offset": [
        2460,
        2604
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5054": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5055": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "5057": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "ADD",
      "path": "21"
    },
    "5058": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8FE"
    },
    "5061": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5062": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2AD9"
    },
    "5065": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        2460,
        2604
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5066": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5067": {
      "offset": [
        2257,
        2615
      ],
      "op": "POP",
      "path": "21"
    },
    "5068": {
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5069": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27207,
        27230
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5071": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27233,
        27252
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5072": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27233,
        27252
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5073": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27233,
        27252
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5074": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27233,
        27241
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "5076": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27233,
        27252
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5078": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27233,
        27252
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5079": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27233,
        27252
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5080": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27233,
        27252
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5081": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27233,
        27252
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5083": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27233,
        27252
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5084": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27233,
        27252
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5085": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27233,
        27252
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5086": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27276
      ],
      "op": "SWAP3",
      "path": "19",
      "statement": 36
    },
    "5087": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27276
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5088": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27276
      ],
      "op": "ADD",
      "path": "19"
    },
    "5089": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27285
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5090": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27285
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5097": {
      "op": "SHL"
    },
    "5098": {
      "op": "SUB"
    },
    "5099": {
      "op": "NOT"
    },
    "5100": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27285
      ],
      "op": "AND",
      "path": "19"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5107": {
      "op": "SHL"
    },
    "5108": {
      "op": "SUB"
    },
    "5109": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27285
      ],
      "op": "DUP10",
      "path": "19"
    },
    "5110": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27285
      ],
      "op": "AND",
      "path": "19"
    },
    "5111": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27285
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5112": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27285
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5113": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27285
      ],
      "op": "OR",
      "path": "19"
    },
    "5114": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27285
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5115": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27285
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5116": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27262,
        27285
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5117": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27295,
        27309
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 37,
      "value": "0xA"
    },
    "5119": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27295,
        27309
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5120": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27295,
        27309
      ],
      "op": "ADD",
      "path": "19"
    },
    "5121": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27295,
        27318
      ],
      "op": "DUP11",
      "path": "19"
    },
    "5122": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27295,
        27318
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5123": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27295,
        27318
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5124": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27359
      ],
      "op": "DUP10",
      "path": "19",
      "statement": 38
    },
    "5125": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27359
      ],
      "op": "DUP6",
      "path": "19"
    },
    "5126": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27359
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5127": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27351
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "5129": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27351
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5130": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27351
      ],
      "op": "ADD",
      "path": "19"
    },
    "5131": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27359
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5132": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27359
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5133": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27359
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5134": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27359
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5135": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27359
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5136": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27359
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5137": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27367
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5138": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27367
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5141": {
      "op": "NOT"
    },
    "5142": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27367
      ],
      "op": "AND",
      "path": "19"
    },
    "5143": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27367
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5144": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27329,
        27367
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5145": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27383,
        27425
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 39
    },
    "5146": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27383,
        27425
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5147": {
      "op": "DUP11"
    },
    "5148": {
      "op": "DUP2"
    },
    "5149": {
      "op": "MSTORE"
    },
    "5150": {
      "op": "SWAP2"
    },
    "5151": {
      "op": "DUP3"
    },
    "5152": {
      "op": "ADD"
    },
    "5153": {
      "op": "SWAP4"
    },
    "5154": {
      "op": "SWAP1"
    },
    "5155": {
      "op": "SWAP4"
    },
    "5156": {
      "op": "MSTORE"
    },
    "5157": {
      "op": "SWAP2"
    },
    "5158": {
      "op": "DUP3"
    },
    "5159": {
      "op": "ADD"
    },
    "5160": {
      "op": "DUP8"
    },
    "5161": {
      "op": "SWAP1"
    },
    "5162": {
      "op": "MSTORE"
    },
    "5163": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27233,
        27252
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5164": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27383,
        27425
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xB32D3C8B5539B0CC3050D5B75E9DAD8ECA8744A0892259BDA27FDB51B9956736"
    },
    "5197": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27383,
        27425
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5200": {
      "op": "ADD"
    },
    "5201": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27383,
        27425
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5203": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27383,
        27425
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5204": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27383,
        27425
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5205": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27383,
        27425
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5206": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27383,
        27425
      ],
      "op": "SUB",
      "path": "19"
    },
    "5207": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27383,
        27425
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5208": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27383,
        27425
      ],
      "op": "LOG1",
      "path": "19"
    },
    "5209": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27197,
        27432
      ],
      "op": "POP",
      "path": "19"
    },
    "5210": {
      "offset": [
        2062,
        2632
      ],
      "op": "POP",
      "path": "21"
    },
    "5211": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "POP",
      "path": "19"
    },
    "5212": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "POP",
      "path": "19"
    },
    "5213": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "POP",
      "path": "19"
    },
    "5214": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "POP",
      "path": "19"
    },
    "5215": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27018,
        27432
      ],
      "op": "POP",
      "path": "19"
    },
    "5216": {
      "fn": "RequestManager.resolveRequest",
      "jump": "o",
      "offset": [
        27018,
        27432
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5217": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5218": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1469"
    },
    "5221": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2469"
    },
    "5224": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5225": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5226": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 40,
      "value": "0x1473"
    },
    "5229": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5231": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24C3"
    },
    "5234": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5235": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5236": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5237": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5238": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147D"
    },
    "5241": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2469"
    },
    "5244": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5245": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5246": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1567,
        1611
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 41,
      "value": "0x1488"
    },
    "5249": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1578,
        1591
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5250": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1593,
        1599
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5251": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1601,
        1610
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5252": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1567,
        1577
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2513"
    },
    "5255": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1567,
        1611
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5256": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1567,
        1611
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5257": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "POP",
      "path": "21"
    },
    "5258": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "POP",
      "path": "21"
    },
    "5259": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "POP",
      "path": "21"
    },
    "5260": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5261": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13023,
        14279
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5262": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13186,
        13193
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5264": {
      "offset": [
        7941,
        7960
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5265": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5266": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5267": {
      "offset": [
        7941,
        7949
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "5269": {
      "offset": [
        7941,
        7960
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5271": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5272": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5274": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5275": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5276": {
      "offset": [
        7941,
        7967
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5277": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13136,
        13145
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5278": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13136,
        13145
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5285": {
      "op": "SHL"
    },
    "5286": {
      "op": "SUB"
    },
    "5287": {
      "offset": [
        7941,
        7967
      ],
      "op": "AND",
      "path": "19"
    },
    "5288": {
      "offset": [
        7920,
        8026
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14E9"
    },
    "5291": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7920,
        8026
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5292": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7920,
        8026
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5294": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7920,
        8026
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5295": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5301": {
      "op": "SHL"
    },
    "5302": {
      "offset": [
        7920,
        8026
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5303": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7920,
        8026
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5306": {
      "offset": [
        7920,
        8026
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5308": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7920,
        8026
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5309": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        7920,
        8026
      ],
      "op": "ADD",
      "path": "19"
    },
    "5310": {
      "op": "MSTORE"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5315": {
      "op": "DUP3"
    },
    "5316": {
      "op": "ADD"
    },
    "5317": {
      "op": "MSTORE"
    },
    "5318": {
      "op": "PUSH19",
      "value": "0x1C995C5D595CDD1259081B9BDD081D985B1A59"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "5340": {
      "op": "SHL"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5343": {
      "op": "DUP3"
    },
    "5344": {
      "op": "ADD"
    },
    "5345": {
      "op": "MSTORE"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5348": {
      "op": "ADD"
    },
    "5349": {
      "offset": [
        7920,
        8026
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "5352": {
      "op": "JUMP"
    },
    "5353": {
      "offset": [
        7920,
        8026
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5354": {
      "offset": [
        983,
        993
      ],
      "op": "CALLER",
      "path": "17"
    },
    "5355": {
      "offset": [
        972,
        994
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5357": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5358": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5359": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5360": {
      "offset": [
        972,
        982
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "5362": {
      "offset": [
        972,
        994
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5364": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5365": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5367": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5368": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "5369": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5370": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "5372": {
      "branch": 179,
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "AND",
      "path": "17"
    },
    "5373": {
      "offset": [
        964,
        1021
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1541"
    },
    "5376": {
      "branch": 179,
      "offset": [
        964,
        1021
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5377": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        964,
        1021
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5379": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        964,
        1021
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5380": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5386": {
      "op": "SHL"
    },
    "5387": {
      "offset": [
        964,
        1021
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5388": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        964,
        1021
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5391": {
      "offset": [
        964,
        1021
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "5393": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        964,
        1021
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5394": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        964,
        1021
      ],
      "op": "ADD",
      "path": "17"
    },
    "5395": {
      "op": "MSTORE"
    },
    "5396": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5400": {
      "op": "DUP3"
    },
    "5401": {
      "op": "ADD"
    },
    "5402": {
      "op": "MSTORE"
    },
    "5403": {
      "op": "PUSH22",
      "value": "0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "5428": {
      "op": "SHL"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5431": {
      "op": "DUP3"
    },
    "5432": {
      "op": "ADD"
    },
    "5433": {
      "op": "MSTORE"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5436": {
      "op": "ADD"
    },
    "5437": {
      "offset": [
        964,
        1021
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8FE"
    },
    "5440": {
      "op": "JUMP"
    },
    "5441": {
      "offset": [
        964,
        1021
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5442": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13209,
        13232
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5444": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13235,
        13254
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5445": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13235,
        13254
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5446": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13235,
        13254
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5447": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13235,
        13243
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "5449": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13235,
        13254
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5451": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13235,
        13254
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5452": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13235,
        13254
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5454": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13235,
        13254
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5455": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13235,
        13254
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5456": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13291,
        13309
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 42,
      "value": "0x4"
    },
    "5458": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13291,
        13309
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5459": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13291,
        13309
      ],
      "op": "ADD",
      "path": "19"
    },
    "5460": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13291,
        13309
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5461": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13273,
        13288
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "5462": {
      "branch": 149,
      "fn": "RequestManager.claimRequest",
      "offset": [
        13273,
        13309
      ],
      "op": "LT",
      "path": "19"
    },
    "5463": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13265,
        13329
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1594"
    },
    "5466": {
      "branch": 149,
      "fn": "RequestManager.claimRequest",
      "offset": [
        13265,
        13329
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5467": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13265,
        13329
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5469": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13265,
        13329
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5470": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5476": {
      "op": "SHL"
    },
    "5477": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13265,
        13329
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5478": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13265,
        13329
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5481": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13265,
        13329
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5483": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13265,
        13329
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5484": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13265,
        13329
      ],
      "op": "ADD",
      "path": "19"
    },
    "5485": {
      "op": "MSTORE"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5490": {
      "op": "DUP3"
    },
    "5491": {
      "op": "ADD"
    },
    "5492": {
      "op": "MSTORE"
    },
    "5493": {
      "op": "PUSH15",
      "value": "0x14995C5D595CDD08195E1C1A5C9959"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "5511": {
      "op": "SHL"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5514": {
      "op": "DUP3"
    },
    "5515": {
      "op": "ADD"
    },
    "5516": {
      "op": "MSTORE"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5519": {
      "op": "ADD"
    },
    "5520": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13265,
        13329
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "5523": {
      "op": "JUMP"
    },
    "5524": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13265,
        13329
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5525": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13347,
        13370
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 43,
      "value": "0x8"
    },
    "5527": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13347,
        13370
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5528": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13347,
        13370
      ],
      "op": "ADD",
      "path": "19"
    },
    "5529": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13347,
        13370
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5530": {
      "branch": 150,
      "fn": "RequestManager.claimRequest",
      "offset": [
        13347,
        13375
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5531": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13339,
        13405
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15E2"
    },
    "5534": {
      "branch": 150,
      "fn": "RequestManager.claimRequest",
      "offset": [
        13339,
        13405
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5535": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13339,
        13405
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5537": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13339,
        13405
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5538": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5542": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5544": {
      "op": "SHL"
    },
    "5545": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13339,
        13405
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5546": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13339,
        13405
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5549": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13339,
        13405
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5551": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13339,
        13405
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5552": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13339,
        13405
      ],
      "op": "ADD",
      "path": "19"
    },
    "5553": {
      "op": "MSTORE"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5558": {
      "op": "DUP3"
    },
    "5559": {
      "op": "ADD"
    },
    "5560": {
      "op": "MSTORE"
    },
    "5561": {
      "op": "PUSH25",
      "value": "0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7"
    },
    "5587": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "5589": {
      "op": "SHL"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5592": {
      "op": "DUP3"
    },
    "5593": {
      "op": "ADD"
    },
    "5594": {
      "op": "MSTORE"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5597": {
      "op": "ADD"
    },
    "5598": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13339,
        13405
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "5601": {
      "op": "JUMP"
    },
    "5602": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13339,
        13405
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5603": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13436,
        13446
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 44,
      "value": "0x3"
    },
    "5605": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13436,
        13446
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5606": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13423,
        13432
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "5607": {
      "branch": 151,
      "fn": "RequestManager.claimRequest",
      "offset": [
        13423,
        13446
      ],
      "op": "EQ",
      "path": "19"
    },
    "5608": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13415,
        13471
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x162A"
    },
    "5611": {
      "branch": 151,
      "fn": "RequestManager.claimRequest",
      "offset": [
        13415,
        13471
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5612": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13415,
        13471
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5614": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13415,
        13471
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5615": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5619": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5621": {
      "op": "SHL"
    },
    "5622": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13415,
        13471
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5623": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13415,
        13471
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5626": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13415,
        13471
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5628": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13415,
        13471
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5629": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13415,
        13471
      ],
      "op": "ADD",
      "path": "19"
    },
    "5630": {
      "op": "MSTORE"
    },
    "5631": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5635": {
      "op": "DUP3"
    },
    "5636": {
      "op": "ADD"
    },
    "5637": {
      "op": "MSTORE"
    },
    "5638": {
      "op": "PUSH20",
      "value": "0x125B9D985B1A59081CDD185AD948185B5BDD5B9D"
    },
    "5659": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "5661": {
      "op": "SHL"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5664": {
      "op": "DUP3"
    },
    "5665": {
      "op": "ADD"
    },
    "5666": {
      "op": "MSTORE"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5669": {
      "op": "ADD"
    },
    "5670": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13415,
        13471
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "5673": {
      "op": "JUMP"
    },
    "5674": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13415,
        13471
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5675": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13489,
        13495
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 45
    },
    "5676": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13481,
        13536
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1670"
    },
    "5679": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13481,
        13536
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5680": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13481,
        13536
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5682": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13481,
        13536
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5683": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5687": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5689": {
      "op": "SHL"
    },
    "5690": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13481,
        13536
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5691": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13481,
        13536
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5694": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13481,
        13536
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5696": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13481,
        13536
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5697": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13481,
        13536
      ],
      "op": "ADD",
      "path": "19"
    },
    "5698": {
      "op": "MSTORE"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5703": {
      "op": "DUP3"
    },
    "5704": {
      "op": "ADD"
    },
    "5705": {
      "op": "MSTORE"
    },
    "5706": {
      "op": "PUSH22",
      "value": "0x46696C6C4964206D757374206E6F742062652030783"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "5731": {
      "op": "SHL"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5734": {
      "op": "DUP3"
    },
    "5735": {
      "op": "ADD"
    },
    "5736": {
      "op": "MSTORE"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5739": {
      "op": "ADD"
    },
    "5740": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13481,
        13536
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "5743": {
      "op": "JUMP"
    },
    "5744": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13481,
        13536
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5745": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13567
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 46,
      "value": "0x7"
    },
    "5747": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13567
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5748": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13567
      ],
      "op": "ADD",
      "path": "19"
    },
    "5749": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5750": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5751": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13571,
        13572
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5753": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13571,
        13572
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5754": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13567
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5755": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13567
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5757": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13567
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5758": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1691"
    },
    "5761": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5762": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13571,
        13572
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5763": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13571,
        13572
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5770": {
      "op": "SHL"
    },
    "5771": {
      "op": "SUB"
    },
    "5772": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "AND",
      "path": "19"
    },
    "5773": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BE1"
    },
    "5776": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13547,
        13572
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5777": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5778": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5779": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "POP",
      "path": "19"
    },
    "5780": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "5783": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "EXP",
      "path": "19"
    },
    "5784": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5785": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5786": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5793": {
      "op": "SHL"
    },
    "5794": {
      "op": "SUB"
    },
    "5795": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "MUL",
      "path": "19"
    },
    "5796": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "NOT",
      "path": "19"
    },
    "5797": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "AND",
      "path": "19"
    },
    "5798": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5799": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5804": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5806": {
      "op": "SHL"
    },
    "5807": {
      "op": "SUB"
    },
    "5808": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "AND",
      "path": "19"
    },
    "5809": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "MUL",
      "path": "19"
    },
    "5810": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "OR",
      "path": "19"
    },
    "5811": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5812": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5813": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13547,
        13572
      ],
      "op": "POP",
      "path": "19"
    },
    "5814": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13598,
        13599
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 47,
      "value": "0x1"
    },
    "5816": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13582,
        13594
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "5818": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13582,
        13594
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5820": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13582,
        13599
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5821": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13582,
        13599
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5822": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13582,
        13599
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5823": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13582,
        13599
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16C8"
    },
    "5826": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13582,
        13599
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5827": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13582,
        13599
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5828": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13582,
        13599
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "5831": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13582,
        13599
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5832": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13582,
        13599
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5833": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13582,
        13599
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5834": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13582,
        13599
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5835": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13582,
        13599
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5836": {
      "op": "POP"
    },
    "5837": {
      "op": "POP"
    },
    "5838": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13639,
        13651
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "5840": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13639,
        13651
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5841": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13610,
        13629
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5843": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13632,
        13652
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5844": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13632,
        13652
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5845": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13632,
        13652
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5846": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13632,
        13638
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "5848": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13632,
        13652
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5850": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13632,
        13652
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5851": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13632,
        13652
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5853": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13632,
        13652
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5854": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13632,
        13652
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5855": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13662,
        13689
      ],
      "op": "DUP7",
      "path": "19",
      "statement": 48
    },
    "5856": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13662,
        13689
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5857": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13662,
        13689
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5858": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13699,
        13712
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 49,
      "value": "0x1"
    },
    "5860": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13699,
        13712
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5861": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13699,
        13712
      ],
      "op": "ADD",
      "path": "19"
    },
    "5862": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13699,
        13725
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5863": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13699,
        13725
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5870": {
      "op": "SHL"
    },
    "5871": {
      "op": "SUB"
    },
    "5872": {
      "op": "NOT"
    },
    "5873": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13699,
        13725
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5874": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13699,
        13725
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5875": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13699,
        13725
      ],
      "op": "AND",
      "path": "19"
    },
    "5876": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13715,
        13725
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5877": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13699,
        13725
      ],
      "op": "OR",
      "path": "19"
    },
    "5878": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13699,
        13725
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5879": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13699,
        13725
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5880": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13699,
        13725
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5881": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13756,
        13766
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 50,
      "value": "0x3"
    },
    "5883": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13756,
        13766
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5884": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13735,
        13753
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "5886": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13735,
        13753
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5887": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13735,
        13753
      ],
      "op": "ADD",
      "path": "19"
    },
    "5888": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13735,
        13766
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5889": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13776,
        13796
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 51,
      "value": "0x4"
    },
    "5891": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13776,
        13796
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5892": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13776,
        13796
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5893": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13776,
        13796
      ],
      "op": "ADD",
      "path": "19"
    },
    "5894": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13776,
        13809
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5895": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13776,
        13809
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5896": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13776,
        13809
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5897": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13776,
        13809
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5898": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13776,
        13809
      ],
      "op": "AND",
      "path": "19"
    },
    "5899": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13776,
        13809
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5900": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13776,
        13809
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5901": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13776,
        13809
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5902": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13819,
        13845
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 52,
      "value": "0x5"
    },
    "5904": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13819,
        13845
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5905": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13819,
        13845
      ],
      "op": "ADD",
      "path": "19"
    },
    "5906": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13819,
        13849
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5907": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13819,
        13849
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5908": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13819,
        13849
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5909": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13859,
        13880
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 53,
      "value": "0x6"
    },
    "5911": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13859,
        13880
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5912": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13859,
        13880
      ],
      "op": "ADD",
      "path": "19"
    },
    "5913": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13859,
        13884
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5914": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13859,
        13884
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5915": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13859,
        13884
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5916": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13859,
        13884
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5917": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13932,
        13943
      ],
      "op": "SWAP1",
      "path": "19",
      "statement": 54
    },
    "5918": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13932,
        13943
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5919": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13914,
        13943
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1728"
    },
    "5922": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13914,
        13943
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5923": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13914,
        13929
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "5924": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13914,
        13943
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "5927": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13914,
        13943
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5928": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13914,
        13943
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5929": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13894,
        13911
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "5931": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13894,
        13911
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5932": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13894,
        13911
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5933": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13894,
        13911
      ],
      "op": "ADD",
      "path": "19"
    },
    "5934": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13894,
        13943
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5935": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13894,
        13943
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5936": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13894,
        13943
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5937": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13953,
        13965
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 55,
      "value": "0x8"
    },
    "5939": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13953,
        13965
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5940": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13953,
        13965
      ],
      "op": "ADD",
      "path": "19"
    },
    "5941": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13953,
        13974
      ],
      "op": "DUP8",
      "path": "19"
    },
    "5942": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13953,
        13974
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5943": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13953,
        13974
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5944": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14036,
        14048
      ],
      "op": "SLOAD",
      "path": "19",
      "statement": 56
    },
    "5945": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14075
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5947": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14075
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5948": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14075
      ],
      "op": "ADD",
      "path": "19"
    },
    "5949": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14075
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5950": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14089,
        14107
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "5952": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14089,
        14107
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5953": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14089,
        14107
      ],
      "op": "ADD",
      "path": "19"
    },
    "5954": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14089,
        14107
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5955": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14121,
        14141
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5957": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14121,
        14141
      ],
      "op": "DUP6",
      "path": "19"
    },
    "5958": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14121,
        14141
      ],
      "op": "ADD",
      "path": "19"
    },
    "5959": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14121,
        14141
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5960": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14155,
        14181
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "5962": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14155,
        14181
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5963": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14155,
        14181
      ],
      "op": "ADD",
      "path": "19"
    },
    "5964": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14155,
        14181
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5965": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5967": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5968": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14013,
        14022
      ],
      "op": "DUP13",
      "path": "19"
    },
    "5969": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14013,
        14022
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "5970": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xA317459AAAFF5501EC6D0DCFC26440565BEAF33DC2BA0F68B7273A50322C215D"
    },
    "6003": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "6004": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1794"
    },
    "6007": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "6008": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14036,
        14048
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6009": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14036,
        14048
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "6010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6016": {
      "op": "SHL"
    },
    "6017": {
      "op": "SUB"
    },
    "6018": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14075
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6019": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14075
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6020": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14075
      ],
      "op": "AND",
      "path": "19"
    },
    "6021": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14075
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "6022": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14089,
        14107
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6023": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14089,
        14107
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "6024": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14121,
        14141
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6025": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14121,
        14141
      ],
      "op": "AND",
      "path": "19"
    },
    "6026": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14121,
        14141
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6027": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14155,
        14181
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6028": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14155,
        14181
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6029": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13894,
        13943
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6030": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13968,
        13974
      ],
      "op": "DUP15",
      "path": "19"
    },
    "6031": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13968,
        13974
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6032": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C0C"
    },
    "6035": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13990,
        14242
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6036": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6037": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6039": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6040": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6041": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6042": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "SUB",
      "path": "19"
    },
    "6043": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6044": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13990,
        14242
      ],
      "op": "LOG2",
      "path": "19"
    },
    "6045": {
      "op": "POP"
    },
    "6046": {
      "op": "POP"
    },
    "6047": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14260,
        14272
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 57,
      "value": "0x7"
    },
    "6049": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14260,
        14272
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6050": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14260,
        14272
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "6051": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13023,
        14279
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6052": {
      "op": "POP"
    },
    "6053": {
      "op": "POP"
    },
    "6054": {
      "op": "POP"
    },
    "6055": {
      "op": "POP"
    },
    "6056": {
      "fn": "RequestManager.claimRequest",
      "jump": "o",
      "offset": [
        13023,
        14279
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6057": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6058": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B1"
    },
    "6061": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2469"
    },
    "6064": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6065": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6066": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1185,
        1230
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 58,
      "value": "0x17BD"
    },
    "6069": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1196,
        1209
      ],
      "op": "CHAINID",
      "path": "21"
    },
    "6070": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1211,
        1217
      ],
      "op": "DUP3",
      "path": "21"
    },
    "6071": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1227,
        1228
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "6073": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1185,
        1195
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2513"
    },
    "6076": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1185,
        1230
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6077": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1185,
        1230
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6078": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "POP",
      "path": "21"
    },
    "6079": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6080": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24196,
        24452
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6081": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C8"
    },
    "6084": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2469"
    },
    "6087": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6088": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6089": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24347,
        24361
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 59,
      "value": "0xD"
    },
    "6091": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24347,
        24381
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6092": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24347,
        24381
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6093": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24347,
        24381
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6094": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24347,
        24381
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "6095": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24391,
        24399
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 60,
      "value": "0xC"
    },
    "6097": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24391,
        24413
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "6098": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24423,
        24431
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 61,
      "value": "0xB"
    },
    "6100": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        24423,
        24445
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "6101": {
      "fn": "RequestManager.updateFeeData",
      "jump": "o",
      "offset": [
        24196,
        24452
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6102": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6103": {
      "offset": [
        7979,
        7980
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6105": {
      "offset": [
        7941,
        7960
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6106": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6107": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6108": {
      "offset": [
        7941,
        7949
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "6110": {
      "offset": [
        7941,
        7960
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6112": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6113": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6115": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6116": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6117": {
      "offset": [
        7941,
        7967
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6118": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12030,
        12039
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6119": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12030,
        12039
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6126": {
      "op": "SHL"
    },
    "6127": {
      "op": "SUB"
    },
    "6128": {
      "offset": [
        7941,
        7967
      ],
      "op": "AND",
      "path": "19"
    },
    "6129": {
      "offset": [
        7920,
        8026
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1832"
    },
    "6132": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7920,
        8026
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6133": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7920,
        8026
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6135": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7920,
        8026
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6136": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6142": {
      "op": "SHL"
    },
    "6143": {
      "offset": [
        7920,
        8026
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6144": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7920,
        8026
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6147": {
      "offset": [
        7920,
        8026
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6149": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7920,
        8026
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6150": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        7920,
        8026
      ],
      "op": "ADD",
      "path": "19"
    },
    "6151": {
      "op": "MSTORE"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6156": {
      "op": "DUP3"
    },
    "6157": {
      "op": "ADD"
    },
    "6158": {
      "op": "MSTORE"
    },
    "6159": {
      "op": "PUSH19",
      "value": "0x1C995C5D595CDD1259081B9BDD081D985B1A59"
    },
    "6179": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "6181": {
      "op": "SHL"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6184": {
      "op": "DUP3"
    },
    "6185": {
      "op": "ADD"
    },
    "6186": {
      "op": "MSTORE"
    },
    "6187": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6189": {
      "op": "ADD"
    },
    "6190": {
      "offset": [
        7920,
        8026
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "6193": {
      "op": "JUMP"
    },
    "6194": {
      "offset": [
        7920,
        8026
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6195": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12055,
        12078
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6197": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12081,
        12100
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6198": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12081,
        12100
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6199": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12081,
        12100
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6200": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12081,
        12089
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "6202": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12081,
        12100
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6204": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12081,
        12100
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6205": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12081,
        12100
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6207": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12081,
        12100
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6208": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12081,
        12100
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6209": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12119,
        12142
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 62,
      "value": "0x8"
    },
    "6211": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12119,
        12142
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6212": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12119,
        12142
      ],
      "op": "ADD",
      "path": "19"
    },
    "6213": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12119,
        12142
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6214": {
      "branch": 152,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12119,
        12147
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6215": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12111,
        12177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x188E"
    },
    "6218": {
      "branch": 152,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12111,
        12177
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6219": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12111,
        12177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6221": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12111,
        12177
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6222": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6226": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6228": {
      "op": "SHL"
    },
    "6229": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12111,
        12177
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6230": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12111,
        12177
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6233": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12111,
        12177
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6235": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12111,
        12177
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6236": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12111,
        12177
      ],
      "op": "ADD",
      "path": "19"
    },
    "6237": {
      "op": "MSTORE"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6240": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6242": {
      "op": "DUP3"
    },
    "6243": {
      "op": "ADD"
    },
    "6244": {
      "op": "MSTORE"
    },
    "6245": {
      "op": "PUSH25",
      "value": "0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "6273": {
      "op": "SHL"
    },
    "6274": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6276": {
      "op": "DUP3"
    },
    "6277": {
      "op": "ADD"
    },
    "6278": {
      "op": "MSTORE"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6281": {
      "op": "ADD"
    },
    "6282": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12111,
        12177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "6285": {
      "op": "JUMP"
    },
    "6286": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12111,
        12177
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6287": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12227,
        12234
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 63
    },
    "6288": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12227,
        12245
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6290": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12227,
        12245
      ],
      "op": "ADD",
      "path": "19"
    },
    "6291": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12227,
        12245
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6292": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12208,
        12223
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "6293": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12208,
        12245
      ],
      "op": "LT",
      "path": "19"
    },
    "6294": {
      "branch": 153,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12208,
        12245
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6295": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12187,
        12294
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18E2"
    },
    "6298": {
      "branch": 153,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12187,
        12294
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6299": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12187,
        12294
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6301": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12187,
        12294
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6302": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6306": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6308": {
      "op": "SHL"
    },
    "6309": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12187,
        12294
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6310": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12187,
        12294
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6313": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12187,
        12294
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6315": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12187,
        12294
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6316": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12187,
        12294
      ],
      "op": "ADD",
      "path": "19"
    },
    "6317": {
      "op": "MSTORE"
    },
    "6318": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6322": {
      "op": "DUP3"
    },
    "6323": {
      "op": "ADD"
    },
    "6324": {
      "op": "MSTORE"
    },
    "6325": {
      "op": "PUSH32",
      "value": "0x52657175657374206E6F74206578706972656420796574000000000000000000"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6360": {
      "op": "DUP3"
    },
    "6361": {
      "op": "ADD"
    },
    "6362": {
      "op": "MSTORE"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6365": {
      "op": "ADD"
    },
    "6366": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12187,
        12294
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "6369": {
      "op": "JUMP"
    },
    "6370": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12187,
        12294
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6371": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12312,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 64,
      "value": "0x7"
    },
    "6373": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12312,
        12332
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6374": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12312,
        12332
      ],
      "op": "ADD",
      "path": "19"
    },
    "6375": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12312,
        12332
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6382": {
      "op": "SHL"
    },
    "6383": {
      "op": "SUB"
    },
    "6384": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12312,
        12332
      ],
      "op": "AND",
      "path": "19"
    },
    "6385": {
      "branch": 154,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12312,
        12337
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6386": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12304,
        12363
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1935"
    },
    "6389": {
      "branch": 154,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12304,
        12363
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6390": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12304,
        12363
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6392": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12304,
        12363
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6393": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6399": {
      "op": "SHL"
    },
    "6400": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12304,
        12363
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6401": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12304,
        12363
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6404": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12304,
        12363
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6406": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12304,
        12363
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6407": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12304,
        12363
      ],
      "op": "ADD",
      "path": "19"
    },
    "6408": {
      "op": "MSTORE"
    },
    "6409": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6411": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6413": {
      "op": "DUP3"
    },
    "6414": {
      "op": "ADD"
    },
    "6415": {
      "op": "MSTORE"
    },
    "6416": {
      "op": "PUSH21",
      "value": "0x41637469766520636C61696D732072756E6E696E67"
    },
    "6438": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "6440": {
      "op": "SHL"
    },
    "6441": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6443": {
      "op": "DUP3"
    },
    "6444": {
      "op": "ADD"
    },
    "6445": {
      "op": "MSTORE"
    },
    "6446": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6448": {
      "op": "ADD"
    },
    "6449": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12304,
        12363
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "6452": {
      "op": "JUMP"
    },
    "6453": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12304,
        12363
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6456": {
      "op": "NOT"
    },
    "6457": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12374,
        12397
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 65,
      "value": "0x8"
    },
    "6459": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12374,
        12397
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6460": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12374,
        12397
      ],
      "op": "ADD",
      "path": "19"
    },
    "6461": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12374,
        12426
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "6462": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12470,
        12484
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 66
    },
    "6463": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12470,
        12484
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6464": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12442,
        12485
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6466": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12442,
        12485
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6467": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12442,
        12485
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6468": {
      "op": "DUP6"
    },
    "6469": {
      "op": "DUP2"
    },
    "6470": {
      "op": "MSTORE"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6477": {
      "op": "SHL"
    },
    "6478": {
      "op": "SUB"
    },
    "6479": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12470,
        12484
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6480": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12470,
        12484
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6481": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12470,
        12484
      ],
      "op": "AND",
      "path": "19"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6484": {
      "op": "DUP4"
    },
    "6485": {
      "op": "ADD"
    },
    "6486": {
      "op": "MSTORE"
    },
    "6487": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12442,
        12485
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xAB63A14C4AABA38366FD39116091672BB44520328EE870BE35A51E573296E565"
    },
    "6520": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12442,
        12485
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6521": {
      "op": "ADD"
    },
    "6522": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12442,
        12485
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6524": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12442,
        12485
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6525": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12442,
        12485
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6526": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12442,
        12485
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6527": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12442,
        12485
      ],
      "op": "SUB",
      "path": "19"
    },
    "6528": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12442,
        12485
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6529": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12442,
        12485
      ],
      "op": "LOG1",
      "path": "19"
    },
    "6530": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12518,
        12544
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6532": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12518,
        12544
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6533": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12518,
        12544
      ],
      "op": "ADD",
      "path": "19"
    },
    "6534": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12518,
        12544
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6535": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12587,
        12601
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 67
    },
    "6536": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12587,
        12601
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6537": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12648,
        12667
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "6539": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12648,
        12667
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6540": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12648,
        12667
      ],
      "op": "ADD",
      "path": "19"
    },
    "6541": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12648,
        12667
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6542": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12632,
        12645
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "6544": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12632,
        12645
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6545": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12632,
        12645
      ],
      "op": "ADD",
      "path": "19"
    },
    "6546": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12632,
        12645
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6547": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12615,
        12629
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "6549": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12615,
        12629
      ],
      "op": "DUP6",
      "path": "19"
    },
    "6550": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12615,
        12629
      ],
      "op": "ADD",
      "path": "19"
    },
    "6551": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12615,
        12629
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6558": {
      "op": "SHL"
    },
    "6559": {
      "op": "SUB"
    },
    "6560": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12518,
        12544
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "6561": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12518,
        12544
      ],
      "op": "DUP6",
      "path": "19"
    },
    "6562": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12518,
        12544
      ],
      "op": "AND",
      "path": "19"
    },
    "6563": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12518,
        12544
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "6564": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12555,
        12677
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19CE"
    },
    "6567": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12555,
        12677
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "6568": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12587,
        12601
      ],
      "op": "AND",
      "path": "19"
    },
    "6569": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12587,
        12601
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6570": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12648,
        12667
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6571": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12615,
        12645
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19B3"
    },
    "6574": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12615,
        12645
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6575": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12615,
        12645
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "6578": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        12615,
        12645
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6579": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12615,
        12645
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6580": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12615,
        12667
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19BD"
    },
    "6583": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12615,
        12667
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6584": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12615,
        12667
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6585": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12615,
        12667
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "6588": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        12615,
        12667
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6589": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12615,
        12667
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6596": {
      "op": "SHL"
    },
    "6597": {
      "op": "SUB"
    },
    "6598": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12555,
        12573
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6599": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12555,
        12573
      ],
      "op": "AND",
      "path": "19"
    },
    "6600": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12555,
        12573
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6601": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12555,
        12677
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6602": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12555,
        12573
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2625"
    },
    "6605": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        12555,
        12677
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6606": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12555,
        12677
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6607": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12045,
        12684
      ],
      "op": "POP",
      "path": "19"
    },
    "6608": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12045,
        12684
      ],
      "op": "POP",
      "path": "19"
    },
    "6609": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "POP",
      "path": "19"
    },
    "6610": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        11939,
        12684
      ],
      "op": "POP",
      "path": "19"
    },
    "6611": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "o",
      "offset": [
        11939,
        12684
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6612": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15477,
        17543
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6613": {
      "offset": [
        8191,
        8192
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6615": {
      "offset": [
        8156,
        8171
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6616": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8156,
        8171
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6617": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8156,
        8171
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6618": {
      "offset": [
        8156,
        8162
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "6620": {
      "offset": [
        8156,
        8171
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6622": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8156,
        8171
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6623": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8156,
        8171
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6625": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8156,
        8171
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6626": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8156,
        8171
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6627": {
      "offset": [
        8156,
        8179
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6629": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8156,
        8179
      ],
      "op": "ADD",
      "path": "19"
    },
    "6630": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8156,
        8179
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6631": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15572,
        15579
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6632": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15572,
        15579
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6639": {
      "op": "SHL"
    },
    "6640": {
      "op": "SUB"
    },
    "6641": {
      "offset": [
        8156,
        8179
      ],
      "op": "AND",
      "path": "19"
    },
    "6642": {
      "offset": [
        8148,
        8215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A31"
    },
    "6645": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8148,
        8215
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6646": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8148,
        8215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6648": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8148,
        8215
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6649": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6655": {
      "op": "SHL"
    },
    "6656": {
      "offset": [
        8148,
        8215
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6657": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8148,
        8215
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6660": {
      "offset": [
        8148,
        8215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6662": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8148,
        8215
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6663": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8148,
        8215
      ],
      "op": "ADD",
      "path": "19"
    },
    "6664": {
      "op": "MSTORE"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6669": {
      "op": "DUP3"
    },
    "6670": {
      "op": "ADD"
    },
    "6671": {
      "op": "MSTORE"
    },
    "6672": {
      "op": "PUSH17",
      "value": "0x18DB185A5B5259081B9BDD081D985B1A59"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "6692": {
      "op": "SHL"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6695": {
      "op": "DUP3"
    },
    "6696": {
      "op": "ADD"
    },
    "6697": {
      "op": "MSTORE"
    },
    "6698": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6700": {
      "op": "ADD"
    },
    "6701": {
      "offset": [
        8148,
        8215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "6704": {
      "op": "JUMP"
    },
    "6705": {
      "offset": [
        8148,
        8215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6706": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15595,
        15614
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6708": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15617,
        15632
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6709": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15617,
        15632
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6710": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15617,
        15632
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6711": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15617,
        15623
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "6713": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15617,
        15632
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6715": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15617,
        15632
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6716": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15617,
        15632
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6717": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15617,
        15632
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6718": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15617,
        15632
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6720": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15617,
        15632
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6721": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15617,
        15632
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6722": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15617,
        15632
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6723": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15677,
        15692
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6724": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15677,
        15692
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6725": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15668,
        15693
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6726": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15668,
        15693
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6727": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15668,
        15676
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "6729": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15668,
        15693
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6730": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15668,
        15693
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6731": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15668,
        15693
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6732": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15668,
        15693
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6733": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15668,
        15693
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6734": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15668,
        15693
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6735": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15729,
        15746
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 68,
      "value": "0x7"
    },
    "6737": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15729,
        15746
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6738": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15729,
        15746
      ],
      "op": "ADD",
      "path": "19"
    },
    "6739": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15729,
        15746
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6740": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15711,
        15726
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "6741": {
      "branch": 155,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15711,
        15746
      ],
      "op": "LT",
      "path": "19"
    },
    "6742": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15703,
        15764
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A91"
    },
    "6745": {
      "branch": 155,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15703,
        15764
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6746": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15703,
        15764
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6748": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15703,
        15764
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6755": {
      "op": "SHL"
    },
    "6756": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15703,
        15764
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6757": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15703,
        15764
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6760": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15703,
        15764
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6762": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15703,
        15764
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6763": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15703,
        15764
      ],
      "op": "ADD",
      "path": "19"
    },
    "6764": {
      "op": "MSTORE"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6769": {
      "op": "DUP3"
    },
    "6770": {
      "op": "ADD"
    },
    "6771": {
      "op": "MSTORE"
    },
    "6772": {
      "op": "PUSH13",
      "value": "0x10DB185A5B48195E1C1A5C9959"
    },
    "6786": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "6788": {
      "op": "SHL"
    },
    "6789": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6791": {
      "op": "DUP3"
    },
    "6792": {
      "op": "ADD"
    },
    "6793": {
      "op": "MSTORE"
    },
    "6794": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6796": {
      "op": "ADD"
    },
    "6797": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15703,
        15764
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "6800": {
      "op": "JUMP"
    },
    "6801": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15703,
        15764
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6802": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15854,
        15878
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "6804": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15854,
        15878
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6805": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15854,
        15878
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6806": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15911,
        15929
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "6808": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15911,
        15929
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6809": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15911,
        15929
      ],
      "op": "ADD",
      "path": "19"
    },
    "6810": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15911,
        15929
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6811": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15970,
        15996
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6812": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15970,
        15996
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6813": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15970,
        15996
      ],
      "op": "ADD",
      "path": "19"
    },
    "6814": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15970,
        15996
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6815": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15775,
        15792
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6817": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15775,
        15792
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6818": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15775,
        15792
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6819": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15775,
        15792
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6820": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15854,
        15878
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6821": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16011,
        16046
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6822": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16011,
        16046
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6823": {
      "branch": 156,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16011,
        16046
      ],
      "op": "GT",
      "path": "19"
    },
    "6824": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16007,
        16502
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6825": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16007,
        16502
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B52"
    },
    "6828": {
      "branch": 156,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16007,
        16502
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6829": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16066,
        16086
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6830": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16090,
        16091
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6832": {
      "branch": 157,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16066,
        16091
      ],
      "op": "SUB",
      "path": "19"
    },
    "6833": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16062,
        16183
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1AD5"
    },
    "6836": {
      "branch": 157,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16062,
        16183
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6837": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16146,
        16167
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 69,
      "value": "0x2"
    },
    "6839": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16146,
        16167
      ],
      "op": "DUP7",
      "path": "19"
    },
    "6840": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16146,
        16167
      ],
      "op": "ADD",
      "path": "19"
    },
    "6841": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16146,
        16167
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6842": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16130,
        16168
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6844": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16130,
        16168
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6845": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16130,
        16168
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6846": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16130,
        16168
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6847": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16130,
        16145
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "6849": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16130,
        16168
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6851": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16130,
        16168
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6852": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16130,
        16168
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6854": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16130,
        16168
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6855": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16130,
        16168
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6856": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16130,
        16168
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6857": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16111,
        16168
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1AD2"
    },
    "6860": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16111,
        16168
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6861": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16111,
        16168
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6862": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16111,
        16168
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "6865": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16111,
        16168
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6866": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16111,
        16168
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6867": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16111,
        16168
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6868": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16111,
        16168
      ],
      "op": "POP",
      "path": "19"
    },
    "6869": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16062,
        16183
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6870": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16204,
        16217
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 70,
      "value": "0x1"
    },
    "6872": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16204,
        16217
      ],
      "op": "DUP8",
      "path": "19"
    },
    "6873": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16204,
        16217
      ],
      "op": "ADD",
      "path": "19"
    },
    "6874": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16204,
        16217
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6875": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16221,
        16231
      ],
      "op": "CALLER",
      "path": "19"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6882": {
      "op": "SHL"
    },
    "6883": {
      "op": "SUB"
    },
    "6884": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16204,
        16217
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6885": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16204,
        16217
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6886": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16204,
        16217
      ],
      "op": "AND",
      "path": "19"
    },
    "6887": {
      "branch": 158,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16204,
        16231
      ],
      "op": "SUB",
      "path": "19"
    },
    "6888": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16262
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B33"
    },
    "6891": {
      "branch": 158,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16262
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6892": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16262
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6894": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16262
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6895": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6899": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6901": {
      "op": "SHL"
    },
    "6902": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16262
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6903": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16262
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6906": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16262
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6908": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16262
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6909": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16262
      ],
      "op": "ADD",
      "path": "19"
    },
    "6910": {
      "op": "MSTORE"
    },
    "6911": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "6913": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6915": {
      "op": "DUP3"
    },
    "6916": {
      "op": "ADD"
    },
    "6917": {
      "op": "MSTORE"
    },
    "6918": {
      "op": "PUSH32",
      "value": "0x43616E6E6F74206368616C6C656E6765206F776E20636C61696D000000000000"
    },
    "6951": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6953": {
      "op": "DUP3"
    },
    "6954": {
      "op": "ADD"
    },
    "6955": {
      "op": "MSTORE"
    },
    "6956": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6958": {
      "op": "ADD"
    },
    "6959": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16262
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "6962": {
      "op": "JUMP"
    },
    "6963": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16262
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6964": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16288,
        16298
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 71
    },
    "6965": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16288,
        16298
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "6966": {
      "op": "POP"
    },
    "6967": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16323,
        16358
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 72,
      "value": "0x1B40"
    },
    "6970": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16338,
        16358
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6971": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16323,
        16335
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6972": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16323,
        16358
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C4B"
    },
    "6975": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16323,
        16358
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6976": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16323,
        16358
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6977": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16323,
        16362
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B4B"
    },
    "6980": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16323,
        16362
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6981": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16361,
        16362
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6983": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16323,
        16362
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "6986": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16323,
        16362
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6987": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16323,
        16362
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6988": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16312,
        16362
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6989": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16312,
        16362
      ],
      "op": "POP",
      "path": "19"
    },
    "6990": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16007,
        16502
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B7E"
    },
    "6993": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16007,
        16502
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6994": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16007,
        16502
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6995": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16405,
        16418
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 73,
      "value": "0x1"
    },
    "6997": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16405,
        16418
      ],
      "op": "DUP8",
      "path": "19"
    },
    "6998": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16405,
        16418
      ],
      "op": "ADD",
      "path": "19"
    },
    "6999": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16405,
        16418
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7000": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16481,
        16491
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 74,
      "value": "0x3"
    },
    "7002": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16481,
        16491
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7009": {
      "op": "SHL"
    },
    "7010": {
      "op": "SUB"
    },
    "7011": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16405,
        16418
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7012": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16405,
        16418
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7013": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16405,
        16418
      ],
      "op": "AND",
      "path": "19"
    },
    "7014": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16405,
        16418
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "7015": {
      "op": "POP"
    },
    "7016": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16443,
        16478
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B71"
    },
    "7019": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16466,
        16478
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7020": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16443,
        16463
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7021": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16443,
        16478
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C4B"
    },
    "7024": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16443,
        16478
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7025": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16443,
        16478
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7026": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16443,
        16491
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B7B"
    },
    "7029": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16443,
        16491
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7030": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16443,
        16491
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7031": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16443,
        16491
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "7034": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16443,
        16491
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7035": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16443,
        16491
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7036": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16432,
        16491
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "7037": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16432,
        16491
      ],
      "op": "POP",
      "path": "19"
    },
    "7038": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16007,
        16502
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7039": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16520,
        16530
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 75
    },
    "7040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7046": {
      "op": "SHL"
    },
    "7047": {
      "op": "SUB"
    },
    "7048": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16520,
        16543
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7049": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16520,
        16543
      ],
      "op": "AND",
      "path": "19"
    },
    "7050": {
      "branch": 159,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16520,
        16543
      ],
      "op": "EQ",
      "path": "19"
    },
    "7051": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16512,
        16570
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BCF"
    },
    "7054": {
      "branch": 159,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16512,
        16570
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7055": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16512,
        16570
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7057": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16512,
        16570
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7058": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7062": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7064": {
      "op": "SHL"
    },
    "7065": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16512,
        16570
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7066": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16512,
        16570
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7069": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16512,
        16570
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7071": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16512,
        16570
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7072": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16512,
        16570
      ],
      "op": "ADD",
      "path": "19"
    },
    "7073": {
      "op": "MSTORE"
    },
    "7074": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "7076": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7078": {
      "op": "DUP3"
    },
    "7079": {
      "op": "ADD"
    },
    "7080": {
      "op": "MSTORE"
    },
    "7081": {
      "op": "PUSH22",
      "value": "0x139BDD08195B1A59DA589B19481D1BC81BDD5D189A59"
    },
    "7104": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "7106": {
      "op": "SHL"
    },
    "7107": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7109": {
      "op": "DUP3"
    },
    "7110": {
      "op": "ADD"
    },
    "7111": {
      "op": "MSTORE"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7114": {
      "op": "ADD"
    },
    "7115": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16512,
        16570
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "7118": {
      "op": "JUMP"
    },
    "7119": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16512,
        16570
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7120": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16601,
        16609
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 76
    },
    "7121": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16588,
        16597
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "7122": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16588,
        16609
      ],
      "op": "LT",
      "path": "19"
    },
    "7123": {
      "branch": 160,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16588,
        16609
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7124": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16580,
        16639
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C1F"
    },
    "7127": {
      "branch": 160,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16580,
        16639
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7128": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16580,
        16639
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7130": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16580,
        16639
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7131": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7137": {
      "op": "SHL"
    },
    "7138": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16580,
        16639
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7139": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16580,
        16639
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7142": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16580,
        16639
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7144": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16580,
        16639
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7145": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16580,
        16639
      ],
      "op": "ADD",
      "path": "19"
    },
    "7146": {
      "op": "MSTORE"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7151": {
      "op": "DUP3"
    },
    "7152": {
      "op": "ADD"
    },
    "7153": {
      "op": "MSTORE"
    },
    "7154": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768207374616B652070726F766964656400000000000000"
    },
    "7187": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7189": {
      "op": "DUP3"
    },
    "7190": {
      "op": "ADD"
    },
    "7191": {
      "op": "MSTORE"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7194": {
      "op": "ADD"
    },
    "7195": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16580,
        16639
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "7198": {
      "op": "JUMP"
    },
    "7199": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16580,
        16639
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7200": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16667,
        16680
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7202": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16667,
        16680
      ],
      "op": "DUP8",
      "path": "19"
    },
    "7203": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16667,
        16680
      ],
      "op": "ADD",
      "path": "19"
    },
    "7204": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16667,
        16680
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7211": {
      "op": "SHL"
    },
    "7212": {
      "op": "SUB"
    },
    "7213": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16667,
        16680
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7214": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16667,
        16680
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7215": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16667,
        16680
      ],
      "op": "AND",
      "path": "19"
    },
    "7216": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16654,
        16680
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7217": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16654,
        16680
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7218": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16654,
        16680
      ],
      "op": "AND",
      "path": "19"
    },
    "7219": {
      "branch": 161,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16654,
        16680
      ],
      "op": "SUB",
      "path": "19"
    },
    "7220": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16650,
        16917
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C56"
    },
    "7223": {
      "branch": 161,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16650,
        16917
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7224": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16718,
        16727
      ],
      "op": "CALLVALUE",
      "path": "19",
      "statement": 77
    },
    "7225": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16701
      ],
      "op": "DUP8",
      "path": "19"
    },
    "7226": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16714
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "7228": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16714
      ],
      "op": "ADD",
      "path": "19"
    },
    "7229": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16714
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7231": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16727
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7232": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16727
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7233": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16727
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7234": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16727
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C4B"
    },
    "7237": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16727
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7238": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16727
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7239": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16727
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "7242": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16696,
        16727
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7243": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16727
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7244": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16727
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7245": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16727
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7246": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16696,
        16727
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7247": {
      "op": "POP"
    },
    "7248": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16650,
        16917
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CAE"
    },
    "7251": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16650,
        16917
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7252": {
      "op": "POP"
    },
    "7253": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16650,
        16917
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7254": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16650,
        16917
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7255": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16778
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 78,
      "value": "0x4"
    },
    "7257": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16778
      ],
      "op": "DUP8",
      "path": "19"
    },
    "7258": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16778
      ],
      "op": "ADD",
      "path": "19"
    },
    "7259": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16791
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7260": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16791
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7267": {
      "op": "SHL"
    },
    "7268": {
      "op": "SUB"
    },
    "7269": {
      "op": "NOT"
    },
    "7270": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16791
      ],
      "op": "AND",
      "path": "19"
    },
    "7271": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16781,
        16791
      ],
      "op": "CALLER",
      "path": "19"
    },
    "7272": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16791
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7273": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16791
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7274": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16791
      ],
      "op": "OR",
      "path": "19"
    },
    "7275": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16791
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7276": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16791
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7277": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16791
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7278": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16778
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7280": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16840
      ],
      "op": "SWAP1",
      "path": "19",
      "statement": 79
    },
    "7281": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16840
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7282": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16840
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7283": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16828
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "7285": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16828
      ],
      "op": "DUP9",
      "path": "19"
    },
    "7286": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16828
      ],
      "op": "ADD",
      "path": "19"
    },
    "7287": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16840
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7289": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16840
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7290": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16840
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7292": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16840
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7293": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16840
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7294": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16853
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7295": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16853
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7296": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16844,
        16853
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "7297": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16844,
        16853
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7298": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16758,
        16778
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7299": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16853
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C8D"
    },
    "7302": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16853
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7303": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16844,
        16853
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7304": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16844,
        16853
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7305": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16853
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "7308": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16805,
        16853
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7309": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16853
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7310": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16853
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7311": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16853
      ],
      "op": "POP",
      "path": "19"
    },
    "7312": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16853
      ],
      "op": "POP",
      "path": "19"
    },
    "7313": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16853
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7314": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16853
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7315": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16853
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7316": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16805,
        16853
      ],
      "op": "POP",
      "path": "19"
    },
    "7317": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16897,
        16906
      ],
      "op": "CALLVALUE",
      "path": "19",
      "statement": 80
    },
    "7318": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16872
      ],
      "op": "DUP8",
      "path": "19"
    },
    "7319": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16893
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "7321": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16893
      ],
      "op": "ADD",
      "path": "19"
    },
    "7322": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16893
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7324": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16906
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7325": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16906
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7326": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16906
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7327": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16906
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CA8"
    },
    "7330": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16906
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7331": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16906
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7332": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16906
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "7335": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16867,
        16906
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7336": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16906
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7337": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16906
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7338": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16906
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7339": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16867,
        16906
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7340": {
      "op": "POP"
    },
    "7341": {
      "op": "POP"
    },
    "7342": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16650,
        16917
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7343": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16969,
        16986
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 81,
      "value": "0x7"
    },
    "7345": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16969,
        16986
      ],
      "op": "DUP8",
      "path": "19"
    },
    "7346": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16969,
        16986
      ],
      "op": "ADD",
      "path": "19"
    },
    "7347": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16969,
        16986
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7348": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16947,
        17043
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CC6"
    },
    "7351": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16947,
        17043
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7352": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17000,
        17033
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CC1"
    },
    "7355": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17018,
        17033
      ],
      "op": "DUP6",
      "path": "19"
    },
    "7356": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17000,
        17015
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "7357": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17000,
        17033
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "7360": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17000,
        17033
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7361": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17000,
        17033
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7362": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16947,
        16955
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2655"
    },
    "7365": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16947,
        17043
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7366": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16947,
        17043
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7367": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16927,
        16944
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "7369": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16927,
        16944
      ],
      "op": "DUP9",
      "path": "19"
    },
    "7370": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16927,
        16944
      ],
      "op": "ADD",
      "path": "19"
    },
    "7371": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16927,
        17043
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7372": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17100,
        17124
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "7374": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17100,
        17124
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7375": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17053,
        17079
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7377": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17053,
        17079
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7378": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17082,
        17124
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CDB"
    },
    "7381": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17082,
        17124
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7382": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17082,
        17097
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "7383": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17082,
        17124
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "7386": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17082,
        17124
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7387": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17082,
        17124
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7388": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17053,
        17124
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7389": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17053,
        17124
      ],
      "op": "POP",
      "path": "19"
    },
    "7390": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17176,
        17194
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 82
    },
    "7391": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17155,
        17160
      ],
      "op": "DUP9",
      "path": "19"
    },
    "7392": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17155,
        17172
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "7394": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17155,
        17172
      ],
      "op": "ADD",
      "path": "19"
    },
    "7395": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17155,
        17172
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7396": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17155,
        17194
      ],
      "op": "LT",
      "path": "19"
    },
    "7397": {
      "branch": 162,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17155,
        17194
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7398": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17134,
        17261
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D43"
    },
    "7401": {
      "branch": 162,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17134,
        17261
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7402": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17134,
        17261
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7404": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17134,
        17261
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7405": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7409": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7411": {
      "op": "SHL"
    },
    "7412": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17134,
        17261
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7413": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17134,
        17261
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7416": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17134,
        17261
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7418": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17134,
        17261
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7419": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17134,
        17261
      ],
      "op": "ADD",
      "path": "19"
    },
    "7420": {
      "op": "MSTORE"
    },
    "7421": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "7423": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7425": {
      "op": "DUP3"
    },
    "7426": {
      "op": "ADD"
    },
    "7427": {
      "op": "MSTORE"
    },
    "7428": {
      "op": "PUSH32",
      "value": "0x436C61696D207465726D696E6174696F6E20646964206E6F7420696E63726561"
    },
    "7461": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7463": {
      "op": "DUP3"
    },
    "7464": {
      "op": "ADD"
    },
    "7465": {
      "op": "MSTORE"
    },
    "7466": {
      "op": "PUSH9",
      "value": "0xE6CA40CADCDEEACED"
    },
    "7476": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "7478": {
      "op": "SHL"
    },
    "7479": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7481": {
      "op": "DUP3"
    },
    "7482": {
      "op": "ADD"
    },
    "7483": {
      "op": "MSTORE"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7486": {
      "op": "ADD"
    },
    "7487": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17134,
        17261
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "7490": {
      "op": "JUMP"
    },
    "7491": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17134,
        17261
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7492": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17300,
        17305
      ],
      "op": "DUP8",
      "path": "19",
      "statement": 83
    },
    "7493": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17300,
        17315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7495": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17300,
        17315
      ],
      "op": "ADD",
      "path": "19"
    },
    "7496": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17300,
        17315
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7497": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xA317459AAAFF5501EC6D0DCFC26440565BEAF33DC2BA0F68B7273A50322C215D"
    },
    "7530": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17329,
        17336
      ],
      "op": "DUP12",
      "path": "19"
    },
    "7531": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17350,
        17355
      ],
      "op": "DUP11",
      "path": "19"
    },
    "7532": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17350,
        17363
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7534": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17350,
        17363
      ],
      "op": "ADD",
      "path": "19"
    },
    "7535": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17350,
        17363
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7537": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17350,
        17363
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7538": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17350,
        17363
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7539": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17350,
        17363
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7540": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17350,
        17363
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "7543": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17350,
        17363
      ],
      "op": "EXP",
      "path": "19"
    },
    "7544": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17350,
        17363
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7545": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17350,
        17363
      ],
      "op": "DIV",
      "path": "19"
    },
    "7546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7552": {
      "op": "SHL"
    },
    "7553": {
      "op": "SUB"
    },
    "7554": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17350,
        17363
      ],
      "op": "AND",
      "path": "19"
    },
    "7555": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17377,
        17382
      ],
      "op": "DUP12",
      "path": "19"
    },
    "7556": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17377,
        17395
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "7558": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17377,
        17395
      ],
      "op": "ADD",
      "path": "19"
    },
    "7559": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17377,
        17395
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7560": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17409,
        17414
      ],
      "op": "DUP13",
      "path": "19"
    },
    "7561": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17409,
        17429
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7563": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17409,
        17429
      ],
      "op": "ADD",
      "path": "19"
    },
    "7564": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17409,
        17429
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7566": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17409,
        17429
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7567": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17409,
        17429
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7568": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17409,
        17429
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7569": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17409,
        17429
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "7572": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17409,
        17429
      ],
      "op": "EXP",
      "path": "19"
    },
    "7573": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17409,
        17429
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7574": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17409,
        17429
      ],
      "op": "DIV",
      "path": "19"
    },
    "7575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7581": {
      "op": "SHL"
    },
    "7582": {
      "op": "SUB"
    },
    "7583": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17409,
        17429
      ],
      "op": "AND",
      "path": "19"
    },
    "7584": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17443,
        17448
      ],
      "op": "DUP14",
      "path": "19"
    },
    "7585": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17443,
        17469
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "7587": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17443,
        17469
      ],
      "op": "ADD",
      "path": "19"
    },
    "7588": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17443,
        17469
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7589": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17483,
        17488
      ],
      "op": "DUP15",
      "path": "19"
    },
    "7590": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17483,
        17500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "7592": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17483,
        17500
      ],
      "op": "ADD",
      "path": "19"
    },
    "7593": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17483,
        17500
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7594": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17514,
        17519
      ],
      "op": "DUP16",
      "path": "19"
    },
    "7595": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17514,
        17526
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "7597": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17514,
        17526
      ],
      "op": "ADD",
      "path": "19"
    },
    "7598": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17514,
        17526
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7599": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7601": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7602": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DC1"
    },
    "7605": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "SWAP8",
      "path": "19"
    },
    "7606": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "7607": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "7608": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "7609": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "7610": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7611": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7612": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7613": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C0C"
    },
    "7616": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17277,
        17536
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7617": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7618": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7620": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7621": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7622": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7623": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "SUB",
      "path": "19"
    },
    "7624": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7625": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17277,
        17536
      ],
      "op": "LOG2",
      "path": "19"
    },
    "7626": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15585,
        17543
      ],
      "op": "POP",
      "path": "19"
    },
    "7627": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15585,
        17543
      ],
      "op": "POP",
      "path": "19"
    },
    "7628": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15585,
        17543
      ],
      "op": "POP",
      "path": "19"
    },
    "7629": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15585,
        17543
      ],
      "op": "POP",
      "path": "19"
    },
    "7630": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15585,
        17543
      ],
      "op": "POP",
      "path": "19"
    },
    "7631": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15585,
        17543
      ],
      "op": "POP",
      "path": "19"
    },
    "7632": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15585,
        17543
      ],
      "op": "POP",
      "path": "19"
    },
    "7633": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15585,
        17543
      ],
      "op": "POP",
      "path": "19"
    },
    "7634": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15477,
        17543
      ],
      "op": "POP",
      "path": "19"
    },
    "7635": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15477,
        17543
      ],
      "op": "POP",
      "path": "19"
    },
    "7636": {
      "fn": "RequestManager.challengeClaim",
      "jump": "o",
      "offset": [
        15477,
        17543
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7637": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7638": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7427,
        7434
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7640": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7481,
        7490
      ],
      "op": "PUSH3",
      "path": "19",
      "statement": 84,
      "value": "0xF4240"
    },
    "7644": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7463,
        7477
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xD"
    },
    "7646": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7463,
        7477
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7647": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7460
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7648": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7477
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DE9"
    },
    "7651": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7477
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7652": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7477
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7653": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7477
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C62"
    },
    "7656": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        7454,
        7477
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7657": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7477
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7658": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7453,
        7490
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DF3"
    },
    "7661": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7453,
        7490
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7662": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7453,
        7490
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7663": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7453,
        7490
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C81"
    },
    "7666": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        7453,
        7490
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7667": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7453,
        7490
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7668": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7446,
        7490
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7669": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7369,
        7497
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7670": {
      "op": "POP"
    },
    "7671": {
      "op": "POP"
    },
    "7672": {
      "fn": "RequestManager.protocolFee",
      "jump": "o",
      "offset": [
        7369,
        7497
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7673": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7669,
        7792
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7674": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7724,
        7731
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7676": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7766,
        7785
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 85,
      "value": "0x1E04"
    },
    "7679": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7778,
        7784
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7680": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7766,
        7777
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DD5"
    },
    "7683": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7766,
        7785
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7684": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7766,
        7785
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7685": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7750,
        7763
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E0D"
    },
    "7688": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7756,
        7762
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7689": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7750,
        7755
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2045"
    },
    "7692": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7750,
        7763
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7693": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7750,
        7763
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7694": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7750,
        7785
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DF3"
    },
    "7697": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7750,
        7785
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7698": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7750,
        7785
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7699": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7750,
        7785
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "7702": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7750,
        7785
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7703": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23506,
        23880
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7704": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1F"
    },
    "7707": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2469"
    },
    "7710": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7711": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7718": {
      "op": "SHL"
    },
    "7719": {
      "op": "SUB"
    },
    "7720": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23643,
        23678
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7721": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23643,
        23678
      ],
      "op": "AND",
      "path": "19"
    },
    "7722": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23626,
        23640
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7724": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23643,
        23678
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7725": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23643,
        23678
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7726": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23643,
        23678
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7727": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23643,
        23664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "7729": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23643,
        23678
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7731": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23643,
        23678
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7732": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23643,
        23678
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7734": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23643,
        23678
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7735": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23643,
        23678
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7736": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23643,
        23678
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7737": {
      "branch": 163,
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23696,
        23706
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 86
    },
    "7738": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23688,
        23731
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E7C"
    },
    "7741": {
      "branch": 163,
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23688,
        23731
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7742": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23688,
        23731
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7744": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23688,
        23731
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7745": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7751": {
      "op": "SHL"
    },
    "7752": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23688,
        23731
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7753": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23688,
        23731
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7756": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23688,
        23731
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7758": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23688,
        23731
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7759": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23688,
        23731
      ],
      "op": "ADD",
      "path": "19"
    },
    "7760": {
      "op": "MSTORE"
    },
    "7761": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7765": {
      "op": "DUP3"
    },
    "7766": {
      "op": "ADD"
    },
    "7767": {
      "op": "MSTORE"
    },
    "7768": {
      "op": "PUSH20",
      "value": "0x50726F746F636F6C20666565206973207A65726F"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7791": {
      "op": "SHL"
    },
    "7792": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7794": {
      "op": "DUP3"
    },
    "7795": {
      "op": "ADD"
    },
    "7796": {
      "op": "MSTORE"
    },
    "7797": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7799": {
      "op": "ADD"
    },
    "7800": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23688,
        23731
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "7803": {
      "op": "JUMP"
    },
    "7804": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23688,
        23731
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7811": {
      "op": "SHL"
    },
    "7812": {
      "op": "SUB"
    },
    "7813": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23741,
        23776
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 87
    },
    "7814": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23741,
        23776
      ],
      "op": "AND",
      "path": "19"
    },
    "7815": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23779,
        23780
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7817": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23741,
        23776
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7818": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23741,
        23776
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7819": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23741,
        23776
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7820": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23741,
        23762
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "7822": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23741,
        23776
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7824": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23741,
        23776
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7825": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23741,
        23776
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7827": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23741,
        23776
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7828": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23741,
        23776
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7829": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23741,
        23780
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7830": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23763,
        23775
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7831": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23763,
        23775
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7832": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23836,
        23873
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 88,
      "value": "0x19CE"
    },
    "7835": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23836,
        23873
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7836": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23855,
        23864
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7837": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23866,
        23872
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7838": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        23836,
        23854
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2625"
    },
    "7841": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        23836,
        23873
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7842": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7843": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EAA"
    },
    "7846": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2469"
    },
    "7849": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7850": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7851": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25194,
        25195
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 89,
      "value": "0x0"
    },
    "7853": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25177,
        25191
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7854": {
      "branch": 164,
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25177,
        25195
      ],
      "op": "GT",
      "path": "19"
    },
    "7855": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25169,
        25238
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F09"
    },
    "7858": {
      "branch": 164,
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25169,
        25238
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7859": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25169,
        25238
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7861": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25169,
        25238
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7862": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7868": {
      "op": "SHL"
    },
    "7869": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25169,
        25238
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7870": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25169,
        25238
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7873": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25169,
        25238
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7875": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25169,
        25238
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7876": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25169,
        25238
      ],
      "op": "ADD",
      "path": "19"
    },
    "7877": {
      "op": "MSTORE"
    },
    "7878": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7880": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7882": {
      "op": "DUP3"
    },
    "7883": {
      "op": "ADD"
    },
    "7884": {
      "op": "MSTORE"
    },
    "7885": {
      "op": "PUSH32",
      "value": "0x46696E616C69747920706572696F64206D757374206265206772656174657220"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7920": {
      "op": "DUP3"
    },
    "7921": {
      "op": "ADD"
    },
    "7922": {
      "op": "MSTORE"
    },
    "7923": {
      "op": "PUSH6",
      "value": "0x7468616E203"
    },
    "7930": {
      "op": "PUSH1",
      "value": "0xD4"
    },
    "7932": {
      "op": "SHL"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7935": {
      "op": "DUP3"
    },
    "7936": {
      "op": "ADD"
    },
    "7937": {
      "op": "MSTORE"
    },
    "7938": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7940": {
      "op": "ADD"
    },
    "7941": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25169,
        25238
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "7944": {
      "op": "JUMP"
    },
    "7945": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25169,
        25238
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7946": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25278
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 90,
      "value": "0x0"
    },
    "7948": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25278
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7949": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25278
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7950": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25278
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7951": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25263
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "7953": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25278
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7955": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25278
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7956": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25278
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7957": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25278
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7958": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25278
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7960": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25278
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7961": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25278
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7962": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25278
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7963": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25278
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7964": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25295
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7965": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25295
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7966": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25248,
        25295
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7967": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25311,
        25363
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 91
    },
    "7968": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25311,
        25363
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7969": {
      "op": "DUP5"
    },
    "7970": {
      "op": "DUP2"
    },
    "7971": {
      "op": "MSTORE"
    },
    "7972": {
      "op": "SWAP1"
    },
    "7973": {
      "op": "DUP2"
    },
    "7974": {
      "op": "ADD"
    },
    "7975": {
      "op": "DUP4"
    },
    "7976": {
      "op": "SWAP1"
    },
    "7977": {
      "op": "MSTORE"
    },
    "7978": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25311,
        25363
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xABA57B48B9F1DFD5747A52ED348A6AB6AA7BAFB0575363A5CB7B62659F727B65"
    },
    "8011": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25311,
        25363
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8012": {
      "op": "ADD"
    },
    "8013": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25311,
        25363
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8015": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25311,
        25363
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8016": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25311,
        25363
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8017": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25311,
        25363
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8018": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25311,
        25363
      ],
      "op": "SUB",
      "path": "19"
    },
    "8019": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25311,
        25363
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8020": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25311,
        25363
      ],
      "op": "LOG1",
      "path": "19"
    },
    "8021": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "POP",
      "path": "19"
    },
    "8022": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        25046,
        25370
      ],
      "op": "POP",
      "path": "19"
    },
    "8023": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "o",
      "offset": [
        25046,
        25370
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8024": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24659,
        24782
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8025": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F60"
    },
    "8028": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2469"
    },
    "8031": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8032": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8033": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24743,
        24756
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 92,
      "value": "0xE"
    },
    "8035": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        24743,
        24775
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "8036": {
      "fn": "RequestManager.updateTransferLimit",
      "jump": "o",
      "offset": [
        24659,
        24782
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8037": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25680,
        25831
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8038": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F6D"
    },
    "8041": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2469"
    },
    "8044": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8045": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8046": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25746,
        25756
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 93,
      "value": "0x6"
    },
    "8048": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25746,
        25756
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8049": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25746,
        25756
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "8051": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25746,
        25756
      ],
      "op": "AND",
      "path": "19"
    },
    "8052": {
      "branch": 165,
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25746,
        25765
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8053": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25738,
        25797
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FC0"
    },
    "8056": {
      "branch": 165,
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25738,
        25797
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8057": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25738,
        25797
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8059": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25738,
        25797
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8066": {
      "op": "SHL"
    },
    "8067": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25738,
        25797
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8068": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25738,
        25797
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8071": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25738,
        25797
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "8073": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25738,
        25797
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8074": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25738,
        25797
      ],
      "op": "ADD",
      "path": "19"
    },
    "8075": {
      "op": "MSTORE"
    },
    "8076": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "8078": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8080": {
      "op": "DUP3"
    },
    "8081": {
      "op": "ADD"
    },
    "8082": {
      "op": "MSTORE"
    },
    "8083": {
      "op": "PUSH32",
      "value": "0x436F6E747261637420616C726561647920646570726563617465640000000000"
    },
    "8116": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8118": {
      "op": "DUP3"
    },
    "8119": {
      "op": "ADD"
    },
    "8120": {
      "op": "MSTORE"
    },
    "8121": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8123": {
      "op": "ADD"
    },
    "8124": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25738,
        25797
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "8127": {
      "op": "JUMP"
    },
    "8128": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25738,
        25797
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8129": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25807,
        25817
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 94,
      "value": "0x6"
    },
    "8131": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25807,
        25824
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8132": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25807,
        25824
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8133": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8135": {
      "op": "NOT"
    },
    "8136": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25807,
        25824
      ],
      "op": "AND",
      "path": "19"
    },
    "8137": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25820,
        25824
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "8139": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25807,
        25824
      ],
      "op": "OR",
      "path": "19"
    },
    "8140": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25807,
        25824
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8141": {
      "fn": "RequestManager.deprecateContract",
      "offset": [
        25807,
        25824
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "8142": {
      "fn": "RequestManager.deprecateContract",
      "jump": "o",
      "offset": [
        25680,
        25831
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8143": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8144": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FD7"
    },
    "8147": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2469"
    },
    "8150": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8151": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8158": {
      "op": "SHL"
    },
    "8159": {
      "op": "SUB"
    },
    "8160": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 95
    },
    "8161": {
      "branch": 181,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "8162": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x203C"
    },
    "8165": {
      "branch": 181,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8166": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8169": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8173": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8175": {
      "op": "SHL"
    },
    "8176": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8177": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8183": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "8184": {
      "op": "MSTORE"
    },
    "8185": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8187": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8189": {
      "op": "DUP3"
    },
    "8190": {
      "op": "ADD"
    },
    "8191": {
      "op": "MSTORE"
    },
    "8192": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "8225": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8227": {
      "op": "DUP3"
    },
    "8228": {
      "op": "ADD"
    },
    "8229": {
      "op": "MSTORE"
    },
    "8230": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "8237": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8239": {
      "op": "SHL"
    },
    "8240": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8242": {
      "op": "DUP3"
    },
    "8243": {
      "op": "ADD"
    },
    "8244": {
      "op": "MSTORE"
    },
    "8245": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8247": {
      "op": "ADD"
    },
    "8248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FE"
    },
    "8251": {
      "op": "JUMP"
    },
    "8252": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 96,
      "value": "0x17BD"
    },
    "8256": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24C3"
    },
    "8260": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8261": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7143,
        7279
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8262": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7195,
        7202
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8264": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7221,
        7272
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 97,
      "value": "0x1DF3"
    },
    "8267": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7230,
        7238
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "8269": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7230,
        7238
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8270": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7262,
        7271
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0xF4240"
    },
    "8274": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7250,
        7258
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "8276": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7250,
        7258
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8277": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7241,
        7247
      ],
      "op": "DUP6",
      "path": "19"
    },
    "8278": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7241,
        7258
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x205F"
    },
    "8281": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7241,
        7258
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8282": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7241,
        7258
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8283": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7241,
        7258
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C62"
    },
    "8286": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7241,
        7258
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8287": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7241,
        7258
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8288": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7240,
        7271
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CC1"
    },
    "8291": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7240,
        7271
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8292": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7240,
        7271
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8293": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7240,
        7271
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C81"
    },
    "8296": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7240,
        7271
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8297": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19321,
        22661
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8298": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19406,
        19413
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8300": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19460,
        19475
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8301": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19460,
        19475
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8302": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19460,
        19475
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8303": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19460,
        19466
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "8305": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19460,
        19475
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8307": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19460,
        19475
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8308": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19460,
        19475
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8309": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19460,
        19475
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8310": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19460,
        19475
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8312": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19460,
        19475
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8313": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19460,
        19475
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8314": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19460,
        19475
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8315": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19520,
        19535
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8316": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19520,
        19535
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8317": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19511,
        19536
      ],
      "op": "DUP5",
      "path": "19"
    },
    "8318": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19511,
        19536
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8319": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19511,
        19519
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "8321": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19511,
        19536
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8322": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19511,
        19536
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "8323": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19511,
        19536
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8324": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19511,
        19536
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8325": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19511,
        19536
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8326": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19569,
        19587
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "8328": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19569,
        19587
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8329": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19569,
        19587
      ],
      "op": "ADD",
      "path": "19"
    },
    "8330": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19569,
        19587
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8331": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19628,
        19654
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "8333": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19628,
        19654
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8334": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19628,
        19654
      ],
      "op": "ADD",
      "path": "19"
    },
    "8335": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19628,
        19654
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8336": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19406,
        19413
      ],
      "op": "DUP5",
      "path": "19"
    },
    "8337": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19406,
        19413
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "8338": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19460,
        19475
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "8339": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19511,
        19536
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8340": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19569,
        19587
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8341": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19709,
        19744
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 98,
      "value": "0x209E"
    },
    "8344": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19628,
        19654
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8345": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19569,
        19587
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8346": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19709,
        19744
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "8349": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        19709,
        19744
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8350": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19709,
        19744
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8351": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19685,
        19690
      ],
      "op": "DUP5",
      "path": "19"
    },
    "8352": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19685,
        19706
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "8354": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19685,
        19706
      ],
      "op": "ADD",
      "path": "19"
    },
    "8355": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19685,
        19706
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8356": {
      "branch": 166,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19685,
        19744
      ],
      "op": "LT",
      "path": "19"
    },
    "8357": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19664,
        19793
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x20F0"
    },
    "8360": {
      "branch": 166,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19664,
        19793
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8361": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19664,
        19793
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8363": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19664,
        19793
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8364": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8368": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8370": {
      "op": "SHL"
    },
    "8371": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19664,
        19793
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8372": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19664,
        19793
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8375": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19664,
        19793
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "8377": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19664,
        19793
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8378": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19664,
        19793
      ],
      "op": "ADD",
      "path": "19"
    },
    "8379": {
      "op": "MSTORE"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8384": {
      "op": "DUP3"
    },
    "8385": {
      "op": "ADD"
    },
    "8386": {
      "op": "MSTORE"
    },
    "8387": {
      "op": "PUSH32",
      "value": "0x436C61696D20616C72656164792077697468647261776E000000000000000000"
    },
    "8420": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8422": {
      "op": "DUP3"
    },
    "8423": {
      "op": "ADD"
    },
    "8424": {
      "op": "MSTORE"
    },
    "8425": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8427": {
      "op": "ADD"
    },
    "8428": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19664,
        19793
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "8431": {
      "op": "JUMP"
    },
    "8432": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19664,
        19793
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8433": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20274,
        20288
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "8435": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20274,
        20288
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8436": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20274,
        20288
      ],
      "op": "ADD",
      "path": "19"
    },
    "8437": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20274,
        20288
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8438": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20315,
        20329
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "8440": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20315,
        20329
      ],
      "op": "DUP5",
      "path": "19"
    },
    "8441": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20315,
        20329
      ],
      "op": "ADD",
      "path": "19"
    },
    "8442": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20315,
        20329
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8443": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19804,
        19819
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8445": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19804,
        19819
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8452": {
      "op": "SHL"
    },
    "8453": {
      "op": "SUB"
    },
    "8454": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20274,
        20288
      ],
      "op": "AND",
      "path": "19"
    },
    "8455": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20274,
        20288
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8456": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20344,
        20364
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8457": {
      "branch": 167,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20344,
        20364
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8458": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20340,
        21131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2136"
    },
    "8461": {
      "branch": 167,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20340,
        21131
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8462": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20442,
        20455
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 99,
      "value": "0x1"
    },
    "8464": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20442,
        20455
      ],
      "op": "DUP8",
      "path": "19"
    },
    "8465": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20442,
        20455
      ],
      "op": "ADD",
      "path": "19"
    },
    "8466": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20442,
        20455
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8473": {
      "op": "SHL"
    },
    "8474": {
      "op": "SUB"
    },
    "8475": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20432,
        20455
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8476": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20432,
        20455
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8477": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20432,
        20455
      ],
      "op": "AND",
      "path": "19"
    },
    "8478": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20442,
        20455
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8479": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20442,
        20455
      ],
      "op": "AND",
      "path": "19"
    },
    "8480": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20432,
        20455
      ],
      "op": "EQ",
      "path": "19"
    },
    "8481": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20432,
        20481
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8482": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20432,
        20481
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8483": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20432,
        20481
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x212F"
    },
    "8486": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20432,
        20481
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8487": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20432,
        20481
      ],
      "op": "POP",
      "path": "19"
    },
    "8488": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20469,
        20474
      ],
      "op": "DUP7",
      "path": "19"
    },
    "8489": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20469,
        20481
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "8491": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20469,
        20481
      ],
      "op": "ADD",
      "path": "19"
    },
    "8492": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20469,
        20481
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8493": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20459,
        20465
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8494": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20459,
        20481
      ],
      "op": "EQ",
      "path": "19"
    },
    "8495": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20432,
        20481
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8496": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20419,
        20481
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "8497": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20419,
        20481
      ],
      "op": "POP",
      "path": "19"
    },
    "8498": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20340,
        21131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2211"
    },
    "8501": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20340,
        21131
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8502": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20340,
        21131
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8503": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20532
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8505": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20532
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8506": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20532
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8507": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20532
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8508": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20524
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "8510": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20524
      ],
      "op": "DUP8",
      "path": "19"
    },
    "8511": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20524
      ],
      "op": "ADD",
      "path": "19"
    },
    "8512": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20532
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8514": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20532
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8515": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20532
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8517": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20532
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8518": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20532
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8519": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20532
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8520": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20532
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "8522": {
      "branch": 168,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20502,
        20532
      ],
      "op": "AND",
      "path": "19"
    },
    "8523": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20498,
        21131
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8524": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20498,
        21131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2158"
    },
    "8527": {
      "branch": 168,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20498,
        21131
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8528": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20600,
        20605
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 100,
      "value": "0x0"
    },
    "8530": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20587,
        20605
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "8531": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20587,
        20605
      ],
      "op": "POP",
      "path": "19"
    },
    "8532": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20498,
        21131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2211"
    },
    "8535": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20498,
        21131
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8536": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20498,
        21131
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8537": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20626,
        20649
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "8539": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20626,
        20649
      ],
      "op": "DUP7",
      "path": "19"
    },
    "8540": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20626,
        20649
      ],
      "op": "ADD",
      "path": "19"
    },
    "8541": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20626,
        20649
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8542": {
      "branch": 169,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20626,
        20654
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8543": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20622,
        21131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21B7"
    },
    "8546": {
      "branch": 169,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20622,
        21131
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8547": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20762,
        20785
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 101,
      "value": "0x8"
    },
    "8549": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20762,
        20785
      ],
      "op": "DUP7",
      "path": "19"
    },
    "8550": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20762,
        20785
      ],
      "op": "ADD",
      "path": "19"
    },
    "8551": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20762,
        20785
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8552": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20786
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8554": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20786
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8555": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20786
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8556": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20786
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8557": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20761
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "8559": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20786
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8561": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20786
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8562": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20786
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8564": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20786
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8565": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20786
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8566": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20794
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "8568": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20794
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8569": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20794
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8570": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20794
      ],
      "op": "ADD",
      "path": "19"
    },
    "8571": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20794
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8572": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20738,
        20751
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8573": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20738,
        20751
      ],
      "op": "DUP9",
      "path": "19"
    },
    "8574": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20738,
        20751
      ],
      "op": "ADD",
      "path": "19"
    },
    "8575": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20738,
        20751
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8582": {
      "op": "SHL"
    },
    "8583": {
      "op": "SUB"
    },
    "8584": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20738,
        20751
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8585": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20738,
        20751
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8586": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20738,
        20751
      ],
      "op": "AND",
      "path": "19"
    },
    "8587": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20794
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8588": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20755,
        20794
      ],
      "op": "AND",
      "path": "19"
    },
    "8589": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20738,
        20794
      ],
      "op": "EQ",
      "path": "19"
    },
    "8590": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20738,
        20868
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8591": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20738,
        20868
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8592": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20738,
        20868
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x212F"
    },
    "8595": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20738,
        20868
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8596": {
      "op": "POP"
    },
    "8597": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20837,
        20860
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "8599": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20837,
        20860
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8600": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20837,
        20860
      ],
      "op": "DUP8",
      "path": "19"
    },
    "8601": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20837,
        20860
      ],
      "op": "ADD",
      "path": "19"
    },
    "8602": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20837,
        20860
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8603": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20830,
        20861
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8605": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20830,
        20861
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8606": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20830,
        20861
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8607": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20830,
        20861
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8608": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20830,
        20836
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "8610": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20830,
        20861
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8612": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20830,
        20861
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8613": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20830,
        20861
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8615": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20830,
        20861
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8616": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20830,
        20861
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8617": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20830,
        20868
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8618": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20830,
        20868
      ],
      "op": "ADD",
      "path": "19"
    },
    "8619": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20830,
        20868
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8620": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20814,
        20826
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8621": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20814,
        20826
      ],
      "op": "DUP9",
      "path": "19"
    },
    "8622": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20814,
        20826
      ],
      "op": "ADD",
      "path": "19"
    },
    "8623": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20814,
        20826
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8624": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20814,
        20868
      ],
      "op": "EQ",
      "path": "19"
    },
    "8625": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20709,
        20868
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "8626": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20709,
        20868
      ],
      "op": "POP",
      "path": "19"
    },
    "8627": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20622,
        21131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2211"
    },
    "8630": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20622,
        21131
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8631": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20622,
        21131
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8632": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20982,
        20987
      ],
      "op": "DUP7",
      "path": "19",
      "statement": 102
    },
    "8633": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20982,
        20999
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "8635": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20982,
        20999
      ],
      "op": "ADD",
      "path": "19"
    },
    "8636": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20982,
        20999
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8637": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20963,
        20978
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "8638": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20963,
        20999
      ],
      "op": "LT",
      "path": "19"
    },
    "8639": {
      "branch": 170,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20963,
        20999
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8640": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20938,
        21058
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x220B"
    },
    "8643": {
      "branch": 170,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20938,
        21058
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8644": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20938,
        21058
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8646": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20938,
        21058
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8647": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8651": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8653": {
      "op": "SHL"
    },
    "8654": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20938,
        21058
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8655": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20938,
        21058
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8658": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20938,
        21058
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "8660": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20938,
        21058
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8661": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20938,
        21058
      ],
      "op": "ADD",
      "path": "19"
    },
    "8662": {
      "op": "MSTORE"
    },
    "8663": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "8665": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8667": {
      "op": "DUP3"
    },
    "8668": {
      "op": "ADD"
    },
    "8669": {
      "op": "MSTORE"
    },
    "8670": {
      "op": "PUSH32",
      "value": "0x436C61696D20706572696F64206E6F742066696E697368656400000000000000"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8705": {
      "op": "DUP3"
    },
    "8706": {
      "op": "ADD"
    },
    "8707": {
      "op": "MSTORE"
    },
    "8708": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8710": {
      "op": "ADD"
    },
    "8711": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20938,
        21058
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "8714": {
      "op": "JUMP"
    },
    "8715": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20938,
        21058
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8716": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21100,
        21120
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 103
    },
    "8717": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21085,
        21097
      ],
      "op": "DUP6",
      "path": "19"
    },
    "8718": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21085,
        21120
      ],
      "op": "GT",
      "path": "19"
    },
    "8719": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21072,
        21120
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "8720": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21072,
        21120
      ],
      "op": "POP",
      "path": "19"
    },
    "8721": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20622,
        21131
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8722": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21195,
        21216
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8724": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21226,
        21247
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8725": {
      "branch": 171,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21262,
        21272
      ],
      "op": "DUP5",
      "path": "19"
    },
    "8726": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21258,
        22035
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8727": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21258,
        22035
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x223C"
    },
    "8730": {
      "branch": 171,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21258,
        22035
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8731": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21367,
        21402
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 104,
      "value": "0x2224"
    },
    "8734": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21382,
        21402
      ],
      "op": "DUP7",
      "path": "19"
    },
    "8735": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21367,
        21379
      ],
      "op": "DUP9",
      "path": "19"
    },
    "8736": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21367,
        21402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "8739": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        21367,
        21402
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8740": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21367,
        21402
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8741": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21432,
        21445
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 105,
      "value": "0x1"
    },
    "8743": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21432,
        21445
      ],
      "op": "DUP11",
      "path": "19"
    },
    "8744": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21432,
        21445
      ],
      "op": "ADD",
      "path": "19"
    },
    "8745": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21432,
        21445
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8746": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21351,
        21402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8747": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21351,
        21402
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "8748": {
      "op": "POP"
    },
    "8749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8755": {
      "op": "SHL"
    },
    "8756": {
      "op": "SUB"
    },
    "8757": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21432,
        21445
      ],
      "op": "AND",
      "path": "19"
    },
    "8758": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21432,
        21445
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8759": {
      "op": "POP"
    },
    "8760": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21258,
        22035
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22D5"
    },
    "8763": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21258,
        22035
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8764": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21258,
        22035
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8765": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21466,
        21490
      ],
      "op": "DUP6",
      "path": "19"
    },
    "8766": {
      "branch": 172,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21466,
        21490
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8767": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21462,
        22035
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22C4"
    },
    "8770": {
      "branch": 172,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21462,
        22035
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8771": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21619,
        21629
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 106
    },
    "8772": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21595,
        21630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8774": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21595,
        21630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8775": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21595,
        21630
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8776": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21595,
        21630
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8777": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21595,
        21618
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "8779": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21595,
        21618
      ],
      "op": "DUP11",
      "path": "19"
    },
    "8780": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21595,
        21618
      ],
      "op": "ADD",
      "path": "19"
    },
    "8781": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21595,
        21630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8783": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21595,
        21630
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8784": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21595,
        21630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8786": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21595,
        21630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8787": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21595,
        21630
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "8788": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21595,
        21630
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8789": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21591,
        21630
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x225F"
    },
    "8792": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21591,
        21630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8793": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21591,
        21592
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "8795": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21591,
        21630
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C62"
    },
    "8798": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        21591,
        21630
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8799": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21591,
        21630
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8800": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21575,
        21630
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8801": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21575,
        21630
      ],
      "op": "POP",
      "path": "19"
    },
    "8802": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21660,
        21670
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 107
    },
    "8803": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21644,
        21670
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8804": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21644,
        21670
      ],
      "op": "POP",
      "path": "19"
    },
    "8805": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21709,
        21710
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 108,
      "value": "0x0"
    },
    "8807": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21693,
        21706
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8808": {
      "branch": 173,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21693,
        21710
      ],
      "op": "GT",
      "path": "19"
    },
    "8809": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21685,
        21749
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22BF"
    },
    "8812": {
      "branch": 173,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21685,
        21749
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8813": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21685,
        21749
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "8815": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21685,
        21749
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8816": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8820": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8822": {
      "op": "SHL"
    },
    "8823": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21685,
        21749
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8824": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21685,
        21749
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "8825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8827": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21685,
        21749
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "8829": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21685,
        21749
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8830": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21685,
        21749
      ],
      "op": "ADD",
      "path": "19"
    },
    "8831": {
      "op": "MSTORE"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8836": {
      "op": "DUP3"
    },
    "8837": {
      "op": "ADD"
    },
    "8838": {
      "op": "MSTORE"
    },
    "8839": {
      "op": "PUSH32",
      "value": "0x4368616C6C656E67657220686173206E6F7468696E6720746F20776974686472"
    },
    "8872": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8874": {
      "op": "DUP3"
    },
    "8875": {
      "op": "ADD"
    },
    "8876": {
      "op": "MSTORE"
    },
    "8877": {
      "op": "PUSH2",
      "value": "0x6177"
    },
    "8880": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8882": {
      "op": "SHL"
    },
    "8883": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8885": {
      "op": "DUP3"
    },
    "8886": {
      "op": "ADD"
    },
    "8887": {
      "op": "MSTORE"
    },
    "8888": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8890": {
      "op": "ADD"
    },
    "8891": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21685,
        21749
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FE"
    },
    "8894": {
      "op": "JUMP"
    },
    "8895": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21685,
        21749
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8896": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21462,
        22035
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22D5"
    },
    "8899": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21462,
        22035
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8900": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21462,
        22035
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8901": {
      "op": "POP"
    },
    "8902": {
      "op": "POP"
    },
    "8903": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8905": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8906": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21975,
        21987
      ],
      "op": "DUP6",
      "path": "19",
      "statement": 109
    },
    "8907": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21975,
        21987
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8914": {
      "op": "SHL"
    },
    "8915": {
      "op": "SUB"
    },
    "8916": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "8917": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21462,
        22035
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8918": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22340,
        22360
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "8920": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22340,
        22360
      ],
      "op": "DUP10",
      "path": "19"
    },
    "8921": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22340,
        22360
      ],
      "op": "ADD",
      "path": "19"
    },
    "8922": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22340,
        22360
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8929": {
      "op": "SHL"
    },
    "8930": {
      "op": "SUB"
    },
    "8931": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22340,
        22360
      ],
      "op": "AND",
      "path": "19"
    },
    "8932": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22326,
        22336
      ],
      "op": "CALLER",
      "path": "19"
    },
    "8933": {
      "branch": 174,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22326,
        22360
      ],
      "op": "SUB",
      "path": "19"
    },
    "8934": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22322,
        22607
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2323"
    },
    "8937": {
      "branch": 174,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22322,
        22607
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8938": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22395,
        22415
      ],
      "op": "DUP6",
      "path": "19"
    },
    "8939": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22380,
        22392
      ],
      "op": "DUP8",
      "path": "19"
    },
    "8940": {
      "branch": 175,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22380,
        22415
      ],
      "op": "GT",
      "path": "19"
    },
    "8941": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22376,
        22597
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8942": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22376,
        22597
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x230C"
    },
    "8945": {
      "branch": 175,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22376,
        22597
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8946": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22453,
        22488
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 110,
      "value": "0x22FB"
    },
    "8949": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22468,
        22488
      ],
      "op": "DUP7",
      "path": "19"
    },
    "8950": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22453,
        22465
      ],
      "op": "DUP9",
      "path": "19"
    },
    "8951": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22453,
        22488
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C4B"
    },
    "8954": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22453,
        22488
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8955": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22453,
        22488
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8956": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22435,
        22489
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2305"
    },
    "8959": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22435,
        22489
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8960": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22435,
        22489
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8961": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22435,
        22489
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "8964": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22435,
        22489
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8965": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22435,
        22489
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8966": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22435,
        22489
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8967": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22435,
        22489
      ],
      "op": "POP",
      "path": "19"
    },
    "8968": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22376,
        22597
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2323"
    },
    "8971": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22376,
        22597
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8972": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22376,
        22597
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8973": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22546,
        22581
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 111,
      "value": "0x2316"
    },
    "8976": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22569,
        22581
      ],
      "op": "DUP8",
      "path": "19"
    },
    "8977": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22546,
        22566
      ],
      "op": "DUP8",
      "path": "19"
    },
    "8978": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22546,
        22581
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C4B"
    },
    "8981": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22546,
        22581
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8982": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22546,
        22581
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8983": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22528,
        22582
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2320"
    },
    "8986": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22528,
        22582
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8987": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22528,
        22582
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8988": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22528,
        22582
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C4B"
    },
    "8991": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22528,
        22582
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8992": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22528,
        22582
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8993": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22528,
        22582
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8994": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22528,
        22582
      ],
      "op": "POP",
      "path": "19"
    },
    "8995": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22376,
        22597
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8996": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22625,
        22638
      ],
      "op": "SWAP12",
      "path": "19",
      "statement": 112
    },
    "8997": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22640,
        22653
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8998": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22640,
        22653
      ],
      "op": "SWAP11",
      "path": "19"
    },
    "8999": {
      "op": "POP"
    },
    "9000": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19321,
        22661
      ],
      "op": "SWAP9",
      "path": "19"
    },
    "9001": {
      "op": "POP"
    },
    "9002": {
      "op": "POP"
    },
    "9003": {
      "op": "POP"
    },
    "9004": {
      "op": "POP"
    },
    "9005": {
      "op": "POP"
    },
    "9006": {
      "op": "POP"
    },
    "9007": {
      "op": "POP"
    },
    "9008": {
      "op": "POP"
    },
    "9009": {
      "op": "POP"
    },
    "9010": {
      "fn": "RequestManager.resolveClaim",
      "jump": "o",
      "offset": [
        19321,
        22661
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9011": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22667,
        23163
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9012": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22752,
        22771
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "9014": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9015": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9016": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9017": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22780
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "9019": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9021": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9022": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9023": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9024": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9026": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9027": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9028": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9029": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "9030": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22817,
        22830
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "9032": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22817,
        22830
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9033": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22817,
        22830
      ],
      "op": "ADD",
      "path": "19"
    },
    "9034": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22817,
        22830
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9035": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22862,
        22877
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 113
    },
    "9036": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22862,
        22877
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9037": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22845,
        22887
      ],
      "op": "DUP5",
      "path": "19"
    },
    "9038": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22845,
        22887
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9039": {
      "op": "SWAP1"
    },
    "9040": {
      "op": "DUP2"
    },
    "9041": {
      "op": "MSTORE"
    },
    "9042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9048": {
      "op": "SHL"
    },
    "9049": {
      "op": "SUB"
    },
    "9050": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22817,
        22830
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9051": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22817,
        22830
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9052": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22817,
        22830
      ],
      "op": "AND",
      "path": "19"
    },
    "9053": {
      "op": "SWAP3"
    },
    "9054": {
      "op": "DUP2"
    },
    "9055": {
      "op": "ADD"
    },
    "9056": {
      "op": "DUP4"
    },
    "9057": {
      "op": "SWAP1"
    },
    "9058": {
      "op": "MSTORE"
    },
    "9059": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9060": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22774,
        22789
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "9061": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22845,
        22887
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xAB63A14C4AABA38366FD39116091672BB44520328EE870BE35A51E573296E565"
    },
    "9094": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22845,
        22887
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9095": {
      "op": "ADD"
    },
    "9096": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22845,
        22887
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9098": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22845,
        22887
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9099": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22845,
        22887
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9100": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22845,
        22887
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9101": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22845,
        22887
      ],
      "op": "SUB",
      "path": "19"
    },
    "9102": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22845,
        22887
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9103": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22845,
        22887
      ],
      "op": "LOG1",
      "path": "19"
    },
    "9104": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22898,
        22921
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 114,
      "value": "0x8"
    },
    "9106": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22898,
        22921
      ],
      "op": "DUP5",
      "path": "19"
    },
    "9107": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22898,
        22921
      ],
      "op": "ADD",
      "path": "19"
    },
    "9108": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22898,
        22931
      ],
      "op": "DUP4",
      "path": "19"
    },
    "9109": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22898,
        22931
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9110": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22898,
        22931
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "9111": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22995,
        23027
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 115,
      "value": "0x6"
    },
    "9113": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22995,
        23027
      ],
      "op": "DUP5",
      "path": "19"
    },
    "9114": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22995,
        23027
      ],
      "op": "ADD",
      "path": "19"
    },
    "9115": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22995,
        23027
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9116": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22964,
        22990
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "9118": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22964,
        22990
      ],
      "op": "DUP6",
      "path": "19"
    },
    "9119": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22964,
        22990
      ],
      "op": "ADD",
      "path": "19"
    },
    "9120": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22964,
        22990
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9127": {
      "op": "SHL"
    },
    "9128": {
      "op": "SUB"
    },
    "9129": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22964,
        22990
      ],
      "op": "AND",
      "path": "19"
    },
    "9130": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        22991
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "9132": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        22991
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9133": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        22991
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9134": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        22991
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9135": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        22963
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "9137": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        22991
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9139": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        22991
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9140": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        22991
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9142": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        22991
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9143": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        22991
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "9144": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        23027
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9145": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        23027
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9146": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        22991
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9147": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        22991
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9148": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        22991
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9149": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        23027
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23C7"
    },
    "9152": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        23027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9153": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22995,
        23027
      ],
      "op": "DUP5",
      "path": "19"
    },
    "9154": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22995,
        23027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9155": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        23027
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "9158": {
      "fn": "RequestManager.withdrawDeposit",
      "jump": "i",
      "offset": [
        22942,
        23027
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9159": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        23027
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9160": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        23027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9161": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        23027
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9162": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22942,
        23027
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "9163": {
      "op": "POP"
    },
    "9164": {
      "op": "POP"
    },
    "9165": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23060,
        23086
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "9167": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23060,
        23086
      ],
      "op": "DUP5",
      "path": "19"
    },
    "9168": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23060,
        23086
      ],
      "op": "ADD",
      "path": "19"
    },
    "9169": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23060,
        23086
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9170": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23142,
        23155
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 116,
      "value": "0x5"
    },
    "9172": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23142,
        23155
      ],
      "op": "DUP6",
      "path": "19"
    },
    "9173": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23142,
        23155
      ],
      "op": "ADD",
      "path": "19"
    },
    "9174": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23142,
        23155
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9175": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23125,
        23139
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "9177": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23125,
        23139
      ],
      "op": "DUP7",
      "path": "19"
    },
    "9178": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23125,
        23139
      ],
      "op": "ADD",
      "path": "19"
    },
    "9179": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23125,
        23139
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9186": {
      "op": "SHL"
    },
    "9187": {
      "op": "SUB"
    },
    "9188": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23060,
        23086
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9189": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23060,
        23086
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "9190": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23060,
        23086
      ],
      "op": "AND",
      "path": "19"
    },
    "9191": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23060,
        23086
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9192": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23097,
        23156
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23F7"
    },
    "9195": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23097,
        23156
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9196": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23116,
        23123
      ],
      "op": "DUP5",
      "path": "19"
    },
    "9197": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23116,
        23123
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9198": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23125,
        23155
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19BD"
    },
    "9201": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23125,
        23155
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9202": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23142,
        23155
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9203": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23125,
        23155
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BB0"
    },
    "9206": {
      "fn": "RequestManager.withdrawDeposit",
      "jump": "i",
      "offset": [
        23125,
        23155
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9207": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23097,
        23156
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9208": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22742,
        23163
      ],
      "op": "POP",
      "path": "19"
    },
    "9209": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22742,
        23163
      ],
      "op": "POP",
      "path": "19"
    },
    "9210": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22742,
        23163
      ],
      "op": "POP",
      "path": "19"
    },
    "9211": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22667,
        23163
      ],
      "op": "POP",
      "path": "19"
    },
    "9212": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        22667,
        23163
      ],
      "op": "POP",
      "path": "19"
    },
    "9213": {
      "fn": "RequestManager.withdrawDeposit",
      "jump": "o",
      "offset": [
        22667,
        23163
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9214": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        974,
        1215
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9215": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 117,
      "value": "0x40"
    },
    "9217": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9224": {
      "op": "SHL"
    },
    "9225": {
      "op": "SUB"
    },
    "9226": {
      "op": "DUP1"
    },
    "9227": {
      "op": "DUP6"
    },
    "9228": {
      "op": "AND"
    },
    "9229": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "9231": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9232": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "5"
    },
    "9233": {
      "op": "MSTORE"
    },
    "9234": {
      "op": "DUP4"
    },
    "9235": {
      "op": "AND"
    },
    "9236": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9238": {
      "op": "DUP3"
    },
    "9239": {
      "op": "ADD"
    },
    "9240": {
      "op": "MSTORE"
    },
    "9241": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9243": {
      "op": "DUP2"
    },
    "9244": {
      "op": "ADD"
    },
    "9245": {
      "op": "DUP3"
    },
    "9246": {
      "op": "SWAP1"
    },
    "9247": {
      "op": "MSTORE"
    },
    "9248": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1208
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19CE"
    },
    "9251": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1208
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9252": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1132,
        1137
      ],
      "op": "DUP6",
      "path": "5"
    },
    "9253": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1132,
        1137
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9254": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "9259": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9261": {
      "op": "SHL"
    },
    "9262": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1162,
        1189
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9263": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9265": {
      "op": "ADD"
    },
    "9266": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9267": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9269": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9270": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9271": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9273": {
      "op": "NOT"
    },
    "9274": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9275": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9276": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SUB",
      "path": "5"
    },
    "9277": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "5"
    },
    "9278": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9279": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9280": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9281": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9282": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9283": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9285": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9286": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "5"
    },
    "9287": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9288": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9293": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9295": {
      "op": "SHL"
    },
    "9296": {
      "op": "SUB"
    },
    "9297": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "AND",
      "path": "5"
    },
    "9298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9302": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9304": {
      "op": "SHL"
    },
    "9305": {
      "op": "SUB"
    },
    "9306": {
      "op": "NOT"
    },
    "9307": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9308": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "9309": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "AND",
      "path": "5"
    },
    "9310": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9311": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9312": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9313": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "OR",
      "path": "5"
    },
    "9314": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9315": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9316": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9317": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1131
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x266E"
    },
    "9320": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1112,
        1208
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9321": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9322": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9324": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9331": {
      "op": "SHL"
    },
    "9332": {
      "op": "SUB"
    },
    "9333": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "9334": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 118
    },
    "9335": {
      "branch": 182,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 119
    },
    "9336": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1473"
    },
    "9339": {
      "branch": 182,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9340": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9342": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9343": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9349": {
      "op": "SHL"
    },
    "9350": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9351": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9354": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9356": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9357": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "9358": {
      "op": "DUP2"
    },
    "9359": {
      "op": "SWAP1"
    },
    "9360": {
      "op": "MSTORE"
    },
    "9361": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9363": {
      "op": "DUP3"
    },
    "9364": {
      "op": "ADD"
    },
    "9365": {
      "op": "MSTORE"
    },
    "9366": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "9399": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9401": {
      "op": "DUP3"
    },
    "9402": {
      "op": "ADD"
    },
    "9403": {
      "op": "MSTORE"
    },
    "9404": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9406": {
      "op": "ADD"
    },
    "9407": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FE"
    },
    "9410": {
      "op": "JUMP"
    },
    "9411": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9412": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9414": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9415": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9422": {
      "op": "SHL"
    },
    "9423": {
      "op": "SUB"
    },
    "9424": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 120
    },
    "9425": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9426": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "9427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9433": {
      "op": "SHL"
    },
    "9434": {
      "op": "SUB"
    },
    "9435": {
      "op": "NOT"
    },
    "9436": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9437": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "9438": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9439": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "9440": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9441": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9442": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 121,
      "value": "0x40"
    },
    "9444": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9445": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9446": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9447": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9448": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "9449": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9450": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9451": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9452": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "9485": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9486": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9487": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9488": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "9489": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "9490": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9491": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        628,
        1018
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "9492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9498": {
      "op": "SHL"
    },
    "9499": {
      "op": "SUB"
    },
    "9500": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        763,
        783
      ],
      "op": "DUP3",
      "path": "21",
      "statement": 122
    },
    "9501": {
      "branch": 186,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        763,
        783
      ],
      "op": "AND",
      "path": "21"
    },
    "9502": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2575"
    },
    "9505": {
      "branch": 186,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "9506": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "9508": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "9509": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9513": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9515": {
      "op": "SHL"
    },
    "9516": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "DUP2",
      "path": "21"
    },
    "9517": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "9518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9520": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "9522": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "DUP3",
      "path": "21"
    },
    "9523": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "ADD",
      "path": "21"
    },
    "9524": {
      "op": "MSTORE"
    },
    "9525": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "9527": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9529": {
      "op": "DUP3"
    },
    "9530": {
      "op": "ADD"
    },
    "9531": {
      "op": "MSTORE"
    },
    "9532": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C65722063616E6E6F742062"
    },
    "9565": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9567": {
      "op": "DUP3"
    },
    "9568": {
      "op": "ADD"
    },
    "9569": {
      "op": "MSTORE"
    },
    "9570": {
      "op": "PUSH3",
      "value": "0x65203"
    },
    "9574": {
      "op": "PUSH1",
      "value": "0xEC"
    },
    "9576": {
      "op": "SHL"
    },
    "9577": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9579": {
      "op": "DUP3"
    },
    "9580": {
      "op": "ADD"
    },
    "9581": {
      "op": "MSTORE"
    },
    "9582": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9584": {
      "op": "ADD"
    },
    "9585": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8FE"
    },
    "9588": {
      "op": "JUMP"
    },
    "9589": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "9590": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        891,
        892
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 123,
      "value": "0x0"
    },
    "9592": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "DUP4",
      "path": "21"
    },
    "9593": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "DUP2",
      "path": "21"
    },
    "9594": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "9595": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        861
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "9597": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "9599": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "9600": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "9602": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "9603": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "9604": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        879
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "9605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9611": {
      "op": "SHL"
    },
    "9612": {
      "op": "SUB"
    },
    "9613": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        879
      ],
      "op": "AND",
      "path": "21"
    },
    "9614": {
      "branch": 187,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        893
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "9615": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x25E9"
    },
    "9618": {
      "branch": 187,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "9619": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "9621": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "9622": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9626": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9628": {
      "op": "SHL"
    },
    "9629": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "DUP2",
      "path": "21"
    },
    "9630": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "9631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9633": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "9635": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "DUP3",
      "path": "21"
    },
    "9636": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "ADD",
      "path": "21"
    },
    "9637": {
      "op": "MSTORE"
    },
    "9638": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9640": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9642": {
      "op": "DUP3"
    },
    "9643": {
      "op": "ADD"
    },
    "9644": {
      "op": "MSTORE"
    },
    "9645": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C657220616C726561647920"
    },
    "9678": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9680": {
      "op": "DUP3"
    },
    "9681": {
      "op": "ADD"
    },
    "9682": {
      "op": "MSTORE"
    },
    "9683": {
      "op": "PUSH6",
      "value": "0x657869737473"
    },
    "9690": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9692": {
      "op": "SHL"
    },
    "9693": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9695": {
      "op": "DUP3"
    },
    "9696": {
      "op": "ADD"
    },
    "9697": {
      "op": "MSTORE"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9700": {
      "op": "ADD"
    },
    "9701": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8FE"
    },
    "9704": {
      "op": "JUMP"
    },
    "9705": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "9706": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 124,
      "value": "0x40"
    },
    "9708": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "21"
    },
    "9709": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "9710": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "21"
    },
    "9711": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP3",
      "path": "21"
    },
    "9712": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "ADD",
      "path": "21"
    },
    "9713": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP3",
      "path": "21"
    },
    "9714": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "9715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9721": {
      "op": "SHL"
    },
    "9722": {
      "op": "SUB"
    },
    "9723": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "21"
    },
    "9724": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP6",
      "path": "21"
    },
    "9725": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "AND",
      "path": "21"
    },
    "9726": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP3",
      "path": "21"
    },
    "9727": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "9728": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP4",
      "path": "21"
    },
    "9729": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "AND",
      "path": "21"
    },
    "9730": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "9732": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "21"
    },
    "9733": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP4",
      "path": "21"
    },
    "9734": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "ADD",
      "path": "21"
    },
    "9735": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "9736": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "9737": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "9738": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9741": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "DUP7",
      "path": "21"
    },
    "9742": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "DUP2",
      "path": "21"
    },
    "9743": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "9744": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        974
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "9746": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "9747": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "DUP3",
      "path": "21"
    },
    "9748": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "9749": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "9750": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "9751": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "9752": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "9753": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "9754": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x19CE"
    },
    "9757": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "9758": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "9759": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "9760": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "9761": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x28C1"
    },
    "9764": {
      "fn": "RestrictedCalls._addCaller",
      "jump": "i",
      "offset": [
        967,
        1011
      ],
      "op": "JUMP",
      "path": "21"
    },
    "9765": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        968
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9766": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 125,
      "value": "0x40"
    },
    "9768": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9775": {
      "op": "SHL"
    },
    "9776": {
      "op": "SUB"
    },
    "9777": {
      "op": "DUP4"
    },
    "9778": {
      "op": "AND"
    },
    "9779": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "9781": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9782": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "ADD",
      "path": "5"
    },
    "9783": {
      "op": "MSTORE"
    },
    "9784": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9786": {
      "op": "DUP2"
    },
    "9787": {
      "op": "ADD"
    },
    "9788": {
      "op": "DUP3"
    },
    "9789": {
      "op": "SWAP1"
    },
    "9790": {
      "op": "MSTORE"
    },
    "9791": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        875,
        961
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1488"
    },
    "9794": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        875,
        961
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9795": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        895,
        900
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9796": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        895,
        900
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9797": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "9802": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9804": {
      "op": "SHL"
    },
    "9805": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        925,
        948
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9806": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9808": {
      "op": "ADD"
    },
    "9809": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2432"
    },
    "9812": {
      "op": "JUMP"
    },
    "9813": {
      "fn": "Math.max",
      "offset": [
        413,
        518
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9814": {
      "fn": "Math.max",
      "offset": [
        471,
        478
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "9816": {
      "fn": "Math.max",
      "offset": [
        502,
        503
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 126
    },
    "9817": {
      "fn": "Math.max",
      "offset": [
        497,
        498
      ],
      "op": "DUP4",
      "path": "8"
    },
    "9818": {
      "fn": "Math.max",
      "offset": [
        497,
        503
      ],
      "op": "LT",
      "path": "8"
    },
    "9819": {
      "branch": 180,
      "fn": "Math.max",
      "offset": [
        497,
        503
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "9820": {
      "fn": "Math.max",
      "offset": [
        497,
        511
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2665"
    },
    "9823": {
      "branch": 180,
      "fn": "Math.max",
      "offset": [
        497,
        511
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "9824": {
      "fn": "Math.max",
      "offset": [
        510,
        511
      ],
      "op": "DUP2",
      "path": "8"
    },
    "9825": {
      "fn": "Math.max",
      "offset": [
        497,
        511
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2667"
    },
    "9828": {
      "fn": "Math.max",
      "offset": [
        497,
        511
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9829": {
      "fn": "Math.max",
      "offset": [
        497,
        511
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9830": {
      "fn": "Math.max",
      "offset": [
        506,
        507
      ],
      "op": "DUP3",
      "path": "8"
    },
    "9831": {
      "fn": "Math.max",
      "offset": [
        497,
        511
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9832": {
      "fn": "Math.max",
      "offset": [
        490,
        511
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "9833": {
      "fn": "Math.max",
      "offset": [
        413,
        518
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "9834": {
      "op": "POP"
    },
    "9835": {
      "op": "POP"
    },
    "9836": {
      "op": "POP"
    },
    "9837": {
      "fn": "Math.max",
      "jump": "o",
      "offset": [
        413,
        518
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9838": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3747,
        4453
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9839": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4189
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9841": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26C3"
    },
    "9844": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4220,
        4224
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9845": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9847": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9848": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9849": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9851": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "ADD",
      "path": "5"
    },
    "9852": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9854": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9855": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9856": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9858": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9859": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9860": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9862": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "ADD",
      "path": "5"
    },
    "9863": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "9896": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9897": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9898": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "POP",
      "path": "5"
    },
    "9899": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4200,
        4205
      ],
      "op": "DUP6",
      "path": "5"
    },
    "9900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9906": {
      "op": "SHL"
    },
    "9907": {
      "op": "SUB"
    },
    "9908": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "AND",
      "path": "5"
    },
    "9909": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2740"
    },
    "9912": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9913": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9914": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9915": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9916": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "9921": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "AND",
      "path": "5"
    },
    "9922": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        4192,
        4261
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9923": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9924": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4292
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9925": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4292
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9926": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4261
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9927": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4261
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9928": {
      "op": "POP"
    },
    "9929": {
      "branch": 188,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4296
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9930": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4271,
        4447
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1488"
    },
    "9933": {
      "branch": 188,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4271,
        4447
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9934": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4370,
        4380
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 127
    },
    "9935": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9936": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9938": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "ADD",
      "path": "5"
    },
    "9939": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9940": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9941": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9942": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "ADD",
      "path": "5"
    },
    "9943": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9944": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26E1"
    },
    "9947": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9948": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9949": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B50"
    },
    "9952": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        4359,
        4389
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9953": {
      "branch": 189,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9954": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1488"
    },
    "9957": {
      "branch": 189,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9958": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9960": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9961": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9965": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9967": {
      "op": "SHL"
    },
    "9968": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9969": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9972": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9974": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9975": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "ADD",
      "path": "5"
    },
    "9976": {
      "op": "MSTORE"
    },
    "9977": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "9979": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9981": {
      "op": "DUP3"
    },
    "9982": {
      "op": "ADD"
    },
    "9983": {
      "op": "MSTORE"
    },
    "9984": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "10017": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10019": {
      "op": "DUP3"
    },
    "10020": {
      "op": "ADD"
    },
    "10021": {
      "op": "MSTORE"
    },
    "10022": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "10033": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "10035": {
      "op": "SHL"
    },
    "10036": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10038": {
      "op": "DUP3"
    },
    "10039": {
      "op": "ADD"
    },
    "10040": {
      "op": "MSTORE"
    },
    "10041": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10043": {
      "op": "ADD"
    },
    "10044": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8FE"
    },
    "10047": {
      "op": "JUMP"
    },
    "10048": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10049": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "10051": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 128,
      "value": "0x274F"
    },
    "10054": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10055": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10056": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10058": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "6"
    },
    "10059": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2757"
    },
    "10062": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10063": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10064": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "10065": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "10066": {
      "op": "POP"
    },
    "10067": {
      "op": "POP"
    },
    "10068": {
      "op": "POP"
    },
    "10069": {
      "op": "POP"
    },
    "10070": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10071": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10072": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "10074": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 129
    },
    "10075": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "6"
    },
    "10076": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "6"
    },
    "10077": {
      "branch": 176,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "10078": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27B8"
    },
    "10081": {
      "branch": 176,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10082": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10084": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10085": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10089": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10091": {
      "op": "SHL"
    },
    "10092": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10093": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10094": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10096": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "10098": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10099": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "6"
    },
    "10100": {
      "op": "MSTORE"
    },
    "10101": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10103": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10105": {
      "op": "DUP3"
    },
    "10106": {
      "op": "ADD"
    },
    "10107": {
      "op": "MSTORE"
    },
    "10108": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "10141": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10143": {
      "op": "DUP3"
    },
    "10144": {
      "op": "ADD"
    },
    "10145": {
      "op": "MSTORE"
    },
    "10146": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "10153": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "10155": {
      "op": "SHL"
    },
    "10156": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10158": {
      "op": "DUP3"
    },
    "10159": {
      "op": "ADD"
    },
    "10160": {
      "op": "MSTORE"
    },
    "10161": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10163": {
      "op": "ADD"
    },
    "10164": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FE"
    },
    "10167": {
      "op": "JUMP"
    },
    "10168": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10175": {
      "op": "SHL"
    },
    "10176": {
      "op": "SUB"
    },
    "10177": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 130
    },
    "10178": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "6"
    },
    "10179": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "10180": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 131,
      "value": "0x280F"
    },
    "10183": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10184": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10186": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10187": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10191": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10193": {
      "op": "SHL"
    },
    "10194": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10195": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10198": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "10200": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10201": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "6"
    },
    "10202": {
      "op": "MSTORE"
    },
    "10203": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "10205": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10207": {
      "op": "DUP3"
    },
    "10208": {
      "op": "ADD"
    },
    "10209": {
      "op": "MSTORE"
    },
    "10210": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "10243": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10245": {
      "op": "DUP3"
    },
    "10246": {
      "op": "ADD"
    },
    "10247": {
      "op": "MSTORE"
    },
    "10248": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10250": {
      "op": "ADD"
    },
    "10251": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FE"
    },
    "10254": {
      "op": "JUMP"
    },
    "10255": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10256": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10258": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10259": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "6"
    },
    "10260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10266": {
      "op": "SHL"
    },
    "10267": {
      "op": "SUB"
    },
    "10268": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "6"
    },
    "10269": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "6"
    },
    "10270": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "6"
    },
    "10271": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10273": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x282B"
    },
    "10277": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10278": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10279": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CCF"
    },
    "10282": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10283": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10284": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10286": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10288": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10289": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10291": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "6"
    },
    "10292": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10293": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "6"
    },
    "10294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "6"
    },
    "10295": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "6"
    },
    "10296": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "6"
    },
    "10297": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "10298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "10299": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "10300": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "10301": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "10302": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10303": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "6"
    },
    "10307": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2868"
    },
    "10310": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10311": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10313": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10315": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "10316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "10318": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "6"
    },
    "10319": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "10321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "10322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "6"
    },
    "10323": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "6"
    },
    "10324": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10325": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "6"
    },
    "10326": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10328": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10329": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "10330": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10331": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10332": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "10333": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10335": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10337": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10338": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "6"
    },
    "10339": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "10340": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x286D"
    },
    "10343": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10344": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10345": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "10347": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10348": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "10349": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10350": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "10351": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10352": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "10353": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10354": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "10355": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 132,
      "value": "0x287D"
    },
    "10358": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10359": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10360": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "6"
    },
    "10361": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2888"
    },
    "10364": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10365": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10366": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "10367": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "10368": {
      "op": "POP"
    },
    "10369": {
      "op": "POP"
    },
    "10370": {
      "op": "POP"
    },
    "10371": {
      "op": "POP"
    },
    "10372": {
      "op": "POP"
    },
    "10373": {
      "op": "POP"
    },
    "10374": {
      "op": "POP"
    },
    "10375": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10376": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8303
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10377": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "10379": {
      "branch": 177,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10380": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8297
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "10381": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8297
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2897"
    },
    "10384": {
      "branch": 177,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8297
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10385": {
      "op": "POP"
    },
    "10386": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 133
    },
    "10387": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2667"
    },
    "10390": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10391": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8297
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10392": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10393": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10394": {
      "branch": 178,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "10395": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8287
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28A7"
    },
    "10398": {
      "branch": 178,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8287
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10399": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8120,
        8130
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10400": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8114,
        8131
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10401": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8180,
        8195
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10402": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8167,
        8177
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10403": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8163,
        8165
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10405": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8159,
        8178
      ],
      "op": "ADD",
      "path": "6"
    },
    "10406": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8152,
        8196
      ],
      "op": "REVERT",
      "path": "6"
    },
    "10407": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8287
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10408": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8259,
        8271
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 134
    },
    "10409": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8252,
        8272
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10411": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8252,
        8272
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10412": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10416": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10418": {
      "op": "SHL"
    },
    "10419": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8252,
        8272
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10420": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8252,
        8272
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10421": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8252,
        8272
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "10423": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8252,
        8272
      ],
      "op": "ADD",
      "path": "6"
    },
    "10424": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8252,
        8272
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FE"
    },
    "10427": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8252,
        8272
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10428": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8252,
        8272
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10429": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8252,
        8272
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CEB"
    },
    "10432": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8252,
        8272
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10433": {
      "op": "JUMPDEST"
    },
    "10434": {
      "op": "DUP3"
    },
    "10435": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "10437": {
      "op": "DUP2"
    },
    "10438": {
      "op": "ADD"
    },
    "10439": {
      "op": "SWAP3"
    },
    "10440": {
      "op": "DUP3"
    },
    "10441": {
      "op": "ISZERO"
    },
    "10442": {
      "op": "PUSH2",
      "value": "0x2909"
    },
    "10445": {
      "op": "JUMPI"
    },
    "10446": {
      "op": "SWAP2"
    },
    "10447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10449": {
      "op": "MUL"
    },
    "10450": {
      "op": "DUP3"
    },
    "10451": {
      "op": "ADD"
    },
    "10452": {
      "op": "JUMPDEST"
    },
    "10453": {
      "op": "DUP3"
    },
    "10454": {
      "op": "DUP2"
    },
    "10455": {
      "op": "GT"
    },
    "10456": {
      "op": "ISZERO"
    },
    "10457": {
      "op": "PUSH2",
      "value": "0x2909"
    },
    "10460": {
      "op": "JUMPI"
    },
    "10461": {
      "op": "DUP3"
    },
    "10462": {
      "op": "MLOAD"
    },
    "10463": {
      "op": "DUP3"
    },
    "10464": {
      "op": "SLOAD"
    },
    "10465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10471": {
      "op": "SHL"
    },
    "10472": {
      "op": "SUB"
    },
    "10473": {
      "op": "NOT"
    },
    "10474": {
      "op": "AND"
    },
    "10475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10481": {
      "op": "SHL"
    },
    "10482": {
      "op": "SUB"
    },
    "10483": {
      "op": "SWAP1"
    },
    "10484": {
      "op": "SWAP2"
    },
    "10485": {
      "op": "AND"
    },
    "10486": {
      "op": "OR"
    },
    "10487": {
      "op": "DUP3"
    },
    "10488": {
      "op": "SSTORE"
    },
    "10489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10491": {
      "op": "SWAP1"
    },
    "10492": {
      "op": "SWAP3"
    },
    "10493": {
      "op": "ADD"
    },
    "10494": {
      "op": "SWAP2"
    },
    "10495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10497": {
      "op": "SWAP1"
    },
    "10498": {
      "op": "SWAP2"
    },
    "10499": {
      "op": "ADD"
    },
    "10500": {
      "op": "SWAP1"
    },
    "10501": {
      "op": "PUSH2",
      "value": "0x28D4"
    },
    "10504": {
      "op": "JUMP"
    },
    "10505": {
      "op": "JUMPDEST"
    },
    "10506": {
      "op": "POP"
    },
    "10507": {
      "op": "PUSH2",
      "value": "0x2915"
    },
    "10510": {
      "op": "SWAP3"
    },
    "10511": {
      "op": "SWAP2"
    },
    "10512": {
      "op": "POP"
    },
    "10513": {
      "op": "PUSH2",
      "value": "0x2919"
    },
    "10516": {
      "jump": "i",
      "op": "JUMP"
    },
    "10517": {
      "op": "JUMPDEST"
    },
    "10518": {
      "op": "POP"
    },
    "10519": {
      "op": "SWAP1"
    },
    "10520": {
      "jump": "o",
      "op": "JUMP"
    },
    "10521": {
      "op": "JUMPDEST"
    },
    "10522": {
      "op": "JUMPDEST"
    },
    "10523": {
      "op": "DUP1"
    },
    "10524": {
      "op": "DUP3"
    },
    "10525": {
      "op": "GT"
    },
    "10526": {
      "op": "ISZERO"
    },
    "10527": {
      "op": "PUSH2",
      "value": "0x2915"
    },
    "10530": {
      "op": "JUMPI"
    },
    "10531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10533": {
      "op": "DUP2"
    },
    "10534": {
      "op": "SSTORE"
    },
    "10535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10537": {
      "op": "ADD"
    },
    "10538": {
      "op": "PUSH2",
      "value": "0x291A"
    },
    "10541": {
      "op": "JUMP"
    },
    "10542": {
      "op": "JUMPDEST"
    },
    "10543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10545": {
      "op": "DUP1"
    },
    "10546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10548": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10550": {
      "op": "DUP5"
    },
    "10551": {
      "op": "DUP7"
    },
    "10552": {
      "op": "SUB"
    },
    "10553": {
      "op": "SLT"
    },
    "10554": {
      "op": "ISZERO"
    },
    "10555": {
      "op": "PUSH2",
      "value": "0x2943"
    },
    "10558": {
      "op": "JUMPI"
    },
    "10559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10561": {
      "op": "DUP1"
    },
    "10562": {
      "op": "REVERT"
    },
    "10563": {
      "op": "JUMPDEST"
    },
    "10564": {
      "op": "POP"
    },
    "10565": {
      "op": "POP"
    },
    "10566": {
      "op": "DUP2"
    },
    "10567": {
      "op": "CALLDATALOAD"
    },
    "10568": {
      "op": "SWAP4"
    },
    "10569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10571": {
      "op": "DUP4"
    },
    "10572": {
      "op": "ADD"
    },
    "10573": {
      "op": "CALLDATALOAD"
    },
    "10574": {
      "op": "SWAP4"
    },
    "10575": {
      "op": "POP"
    },
    "10576": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10578": {
      "op": "SWAP1"
    },
    "10579": {
      "op": "SWAP3"
    },
    "10580": {
      "op": "ADD"
    },
    "10581": {
      "op": "CALLDATALOAD"
    },
    "10582": {
      "op": "SWAP2"
    },
    "10583": {
      "op": "SWAP1"
    },
    "10584": {
      "op": "POP"
    },
    "10585": {
      "jump": "o",
      "op": "JUMP"
    },
    "10586": {
      "op": "JUMPDEST"
    },
    "10587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10589": {
      "op": "DUP1"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10592": {
      "op": "DUP4"
    },
    "10593": {
      "op": "DUP6"
    },
    "10594": {
      "op": "SUB"
    },
    "10595": {
      "op": "SLT"
    },
    "10596": {
      "op": "ISZERO"
    },
    "10597": {
      "op": "PUSH2",
      "value": "0x296D"
    },
    "10600": {
      "op": "JUMPI"
    },
    "10601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10603": {
      "op": "DUP1"
    },
    "10604": {
      "op": "REVERT"
    },
    "10605": {
      "op": "JUMPDEST"
    },
    "10606": {
      "op": "POP"
    },
    "10607": {
      "op": "POP"
    },
    "10608": {
      "op": "DUP1"
    },
    "10609": {
      "op": "CALLDATALOAD"
    },
    "10610": {
      "op": "SWAP3"
    },
    "10611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10613": {
      "op": "SWAP1"
    },
    "10614": {
      "op": "SWAP2"
    },
    "10615": {
      "op": "ADD"
    },
    "10616": {
      "op": "CALLDATALOAD"
    },
    "10617": {
      "op": "SWAP2"
    },
    "10618": {
      "op": "POP"
    },
    "10619": {
      "jump": "o",
      "op": "JUMP"
    },
    "10620": {
      "op": "JUMPDEST"
    },
    "10621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10625": {
      "op": "DUP3"
    },
    "10626": {
      "op": "DUP5"
    },
    "10627": {
      "op": "SUB"
    },
    "10628": {
      "op": "SLT"
    },
    "10629": {
      "op": "ISZERO"
    },
    "10630": {
      "op": "PUSH2",
      "value": "0x298E"
    },
    "10633": {
      "op": "JUMPI"
    },
    "10634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10636": {
      "op": "DUP1"
    },
    "10637": {
      "op": "REVERT"
    },
    "10638": {
      "op": "JUMPDEST"
    },
    "10639": {
      "op": "POP"
    },
    "10640": {
      "op": "CALLDATALOAD"
    },
    "10641": {
      "op": "SWAP2"
    },
    "10642": {
      "op": "SWAP1"
    },
    "10643": {
      "op": "POP"
    },
    "10644": {
      "jump": "o",
      "op": "JUMP"
    },
    "10645": {
      "op": "JUMPDEST"
    },
    "10646": {
      "op": "DUP1"
    },
    "10647": {
      "op": "CALLDATALOAD"
    },
    "10648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10654": {
      "op": "SHL"
    },
    "10655": {
      "op": "SUB"
    },
    "10656": {
      "op": "DUP2"
    },
    "10657": {
      "op": "AND"
    },
    "10658": {
      "op": "DUP2"
    },
    "10659": {
      "op": "EQ"
    },
    "10660": {
      "op": "PUSH2",
      "value": "0x29AC"
    },
    "10663": {
      "op": "JUMPI"
    },
    "10664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10666": {
      "op": "DUP1"
    },
    "10667": {
      "op": "REVERT"
    },
    "10668": {
      "op": "JUMPDEST"
    },
    "10669": {
      "op": "SWAP2"
    },
    "10670": {
      "op": "SWAP1"
    },
    "10671": {
      "op": "POP"
    },
    "10672": {
      "jump": "o",
      "op": "JUMP"
    },
    "10673": {
      "op": "JUMPDEST"
    },
    "10674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10676": {
      "op": "DUP1"
    },
    "10677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10679": {
      "op": "DUP1"
    },
    "10680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10682": {
      "op": "DUP1"
    },
    "10683": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10685": {
      "op": "DUP8"
    },
    "10686": {
      "op": "DUP10"
    },
    "10687": {
      "op": "SUB"
    },
    "10688": {
      "op": "SLT"
    },
    "10689": {
      "op": "ISZERO"
    },
    "10690": {
      "op": "PUSH2",
      "value": "0x29CA"
    },
    "10693": {
      "op": "JUMPI"
    },
    "10694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10696": {
      "op": "DUP1"
    },
    "10697": {
      "op": "REVERT"
    },
    "10698": {
      "op": "JUMPDEST"
    },
    "10699": {
      "op": "DUP7"
    },
    "10700": {
      "op": "CALLDATALOAD"
    },
    "10701": {
      "op": "SWAP6"
    },
    "10702": {
      "op": "POP"
    },
    "10703": {
      "op": "PUSH2",
      "value": "0x29DA"
    },
    "10706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10708": {
      "op": "DUP9"
    },
    "10709": {
      "op": "ADD"
    },
    "10710": {
      "op": "PUSH2",
      "value": "0x2995"
    },
    "10713": {
      "jump": "i",
      "op": "JUMP"
    },
    "10714": {
      "op": "JUMPDEST"
    },
    "10715": {
      "op": "SWAP5"
    },
    "10716": {
      "op": "POP"
    },
    "10717": {
      "op": "PUSH2",
      "value": "0x29E8"
    },
    "10720": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10722": {
      "op": "DUP9"
    },
    "10723": {
      "op": "ADD"
    },
    "10724": {
      "op": "PUSH2",
      "value": "0x2995"
    },
    "10727": {
      "jump": "i",
      "op": "JUMP"
    },
    "10728": {
      "op": "JUMPDEST"
    },
    "10729": {
      "op": "SWAP4"
    },
    "10730": {
      "op": "POP"
    },
    "10731": {
      "op": "PUSH2",
      "value": "0x29F6"
    },
    "10734": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10736": {
      "op": "DUP9"
    },
    "10737": {
      "op": "ADD"
    },
    "10738": {
      "op": "PUSH2",
      "value": "0x2995"
    },
    "10741": {
      "jump": "i",
      "op": "JUMP"
    },
    "10742": {
      "op": "JUMPDEST"
    },
    "10743": {
      "op": "SWAP3"
    },
    "10744": {
      "op": "POP"
    },
    "10745": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10747": {
      "op": "DUP8"
    },
    "10748": {
      "op": "ADD"
    },
    "10749": {
      "op": "CALLDATALOAD"
    },
    "10750": {
      "op": "SWAP2"
    },
    "10751": {
      "op": "POP"
    },
    "10752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10754": {
      "op": "DUP8"
    },
    "10755": {
      "op": "ADD"
    },
    "10756": {
      "op": "CALLDATALOAD"
    },
    "10757": {
      "op": "SWAP1"
    },
    "10758": {
      "op": "POP"
    },
    "10759": {
      "op": "SWAP3"
    },
    "10760": {
      "op": "SWAP6"
    },
    "10761": {
      "op": "POP"
    },
    "10762": {
      "op": "SWAP3"
    },
    "10763": {
      "op": "SWAP6"
    },
    "10764": {
      "op": "POP"
    },
    "10765": {
      "op": "SWAP3"
    },
    "10766": {
      "op": "SWAP6"
    },
    "10767": {
      "jump": "o",
      "op": "JUMP"
    },
    "10768": {
      "op": "JUMPDEST"
    },
    "10769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10773": {
      "op": "DUP3"
    },
    "10774": {
      "op": "DUP5"
    },
    "10775": {
      "op": "SUB"
    },
    "10776": {
      "op": "SLT"
    },
    "10777": {
      "op": "ISZERO"
    },
    "10778": {
      "op": "PUSH2",
      "value": "0x2A22"
    },
    "10781": {
      "op": "JUMPI"
    },
    "10782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10784": {
      "op": "DUP1"
    },
    "10785": {
      "op": "REVERT"
    },
    "10786": {
      "op": "JUMPDEST"
    },
    "10787": {
      "op": "PUSH2",
      "value": "0x2667"
    },
    "10790": {
      "op": "DUP3"
    },
    "10791": {
      "op": "PUSH2",
      "value": "0x2995"
    },
    "10794": {
      "jump": "i",
      "op": "JUMP"
    },
    "10795": {
      "op": "JUMPDEST"
    },
    "10796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10798": {
      "op": "DUP1"
    },
    "10799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10801": {
      "op": "DUP1"
    },
    "10802": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10804": {
      "op": "DUP6"
    },
    "10805": {
      "op": "DUP8"
    },
    "10806": {
      "op": "SUB"
    },
    "10807": {
      "op": "SLT"
    },
    "10808": {
      "op": "ISZERO"
    },
    "10809": {
      "op": "PUSH2",
      "value": "0x2A41"
    },
    "10812": {
      "op": "JUMPI"
    },
    "10813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10815": {
      "op": "DUP1"
    },
    "10816": {
      "op": "REVERT"
    },
    "10817": {
      "op": "JUMPDEST"
    },
    "10818": {
      "op": "DUP5"
    },
    "10819": {
      "op": "CALLDATALOAD"
    },
    "10820": {
      "op": "SWAP4"
    },
    "10821": {
      "op": "POP"
    },
    "10822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10824": {
      "op": "DUP6"
    },
    "10825": {
      "op": "ADD"
    },
    "10826": {
      "op": "CALLDATALOAD"
    },
    "10827": {
      "op": "SWAP3"
    },
    "10828": {
      "op": "POP"
    },
    "10829": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10831": {
      "op": "DUP6"
    },
    "10832": {
      "op": "ADD"
    },
    "10833": {
      "op": "CALLDATALOAD"
    },
    "10834": {
      "op": "SWAP2"
    },
    "10835": {
      "op": "POP"
    },
    "10836": {
      "op": "PUSH2",
      "value": "0x2A5F"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10841": {
      "op": "DUP7"
    },
    "10842": {
      "op": "ADD"
    },
    "10843": {
      "op": "PUSH2",
      "value": "0x2995"
    },
    "10846": {
      "jump": "i",
      "op": "JUMP"
    },
    "10847": {
      "op": "JUMPDEST"
    },
    "10848": {
      "op": "SWAP1"
    },
    "10849": {
      "op": "POP"
    },
    "10850": {
      "op": "SWAP3"
    },
    "10851": {
      "op": "SWAP6"
    },
    "10852": {
      "op": "SWAP2"
    },
    "10853": {
      "op": "SWAP5"
    },
    "10854": {
      "op": "POP"
    },
    "10855": {
      "op": "SWAP3"
    },
    "10856": {
      "op": "POP"
    },
    "10857": {
      "jump": "o",
      "op": "JUMP"
    },
    "10858": {
      "op": "JUMPDEST"
    },
    "10859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10861": {
      "op": "DUP1"
    },
    "10862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10864": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10866": {
      "op": "DUP5"
    },
    "10867": {
      "op": "DUP7"
    },
    "10868": {
      "op": "SUB"
    },
    "10869": {
      "op": "SLT"
    },
    "10870": {
      "op": "ISZERO"
    },
    "10871": {
      "op": "PUSH2",
      "value": "0x2A7F"
    },
    "10874": {
      "op": "JUMPI"
    },
    "10875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10877": {
      "op": "DUP1"
    },
    "10878": {
      "op": "REVERT"
    },
    "10879": {
      "op": "JUMPDEST"
    },
    "10880": {
      "op": "DUP4"
    },
    "10881": {
      "op": "CALLDATALOAD"
    },
    "10882": {
      "op": "SWAP3"
    },
    "10883": {
      "op": "POP"
    },
    "10884": {
      "op": "PUSH2",
      "value": "0x2A8F"
    },
    "10887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10889": {
      "op": "DUP6"
    },
    "10890": {
      "op": "ADD"
    },
    "10891": {
      "op": "PUSH2",
      "value": "0x2995"
    },
    "10894": {
      "jump": "i",
      "op": "JUMP"
    },
    "10895": {
      "op": "JUMPDEST"
    },
    "10896": {
      "op": "SWAP2"
    },
    "10897": {
      "op": "POP"
    },
    "10898": {
      "op": "PUSH2",
      "value": "0x2A9D"
    },
    "10901": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10903": {
      "op": "DUP6"
    },
    "10904": {
      "op": "ADD"
    },
    "10905": {
      "op": "PUSH2",
      "value": "0x2995"
    },
    "10908": {
      "jump": "i",
      "op": "JUMP"
    },
    "10909": {
      "op": "JUMPDEST"
    },
    "10910": {
      "op": "SWAP1"
    },
    "10911": {
      "op": "POP"
    },
    "10912": {
      "op": "SWAP3"
    },
    "10913": {
      "op": "POP"
    },
    "10914": {
      "op": "SWAP3"
    },
    "10915": {
      "op": "POP"
    },
    "10916": {
      "op": "SWAP3"
    },
    "10917": {
      "jump": "o",
      "op": "JUMP"
    },
    "10918": {
      "op": "JUMPDEST"
    },
    "10919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10921": {
      "op": "DUP1"
    },
    "10922": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10924": {
      "op": "DUP4"
    },
    "10925": {
      "op": "DUP6"
    },
    "10926": {
      "op": "SUB"
    },
    "10927": {
      "op": "SLT"
    },
    "10928": {
      "op": "ISZERO"
    },
    "10929": {
      "op": "PUSH2",
      "value": "0x2AB9"
    },
    "10932": {
      "op": "JUMPI"
    },
    "10933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10935": {
      "op": "DUP1"
    },
    "10936": {
      "op": "REVERT"
    },
    "10937": {
      "op": "JUMPDEST"
    },
    "10938": {
      "op": "PUSH2",
      "value": "0x2AC2"
    },
    "10941": {
      "op": "DUP4"
    },
    "10942": {
      "op": "PUSH2",
      "value": "0x2995"
    },
    "10945": {
      "jump": "i",
      "op": "JUMP"
    },
    "10946": {
      "op": "JUMPDEST"
    },
    "10947": {
      "op": "SWAP2"
    },
    "10948": {
      "op": "POP"
    },
    "10949": {
      "op": "PUSH2",
      "value": "0x2AD0"
    },
    "10952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10954": {
      "op": "DUP5"
    },
    "10955": {
      "op": "ADD"
    },
    "10956": {
      "op": "PUSH2",
      "value": "0x2995"
    },
    "10959": {
      "jump": "i",
      "op": "JUMP"
    },
    "10960": {
      "op": "JUMPDEST"
    },
    "10961": {
      "op": "SWAP1"
    },
    "10962": {
      "op": "POP"
    },
    "10963": {
      "op": "SWAP3"
    },
    "10964": {
      "op": "POP"
    },
    "10965": {
      "op": "SWAP3"
    },
    "10966": {
      "op": "SWAP1"
    },
    "10967": {
      "op": "POP"
    },
    "10968": {
      "jump": "o",
      "op": "JUMP"
    },
    "10969": {
      "op": "JUMPDEST"
    },
    "10970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10972": {
      "op": "DUP1"
    },
    "10973": {
      "op": "DUP3"
    },
    "10974": {
      "op": "MSTORE"
    },
    "10975": {
      "op": "DUP2"
    },
    "10976": {
      "op": "DUP2"
    },
    "10977": {
      "op": "ADD"
    },
    "10978": {
      "op": "MSTORE"
    },
    "10979": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C20646973616C6C6F776564"
    },
    "11012": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11014": {
      "op": "DUP3"
    },
    "11015": {
      "op": "ADD"
    },
    "11016": {
      "op": "MSTORE"
    },
    "11017": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11019": {
      "op": "ADD"
    },
    "11020": {
      "op": "SWAP1"
    },
    "11021": {
      "jump": "o",
      "op": "JUMP"
    },
    "11022": {
      "op": "JUMPDEST"
    },
    "11023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11025": {
      "op": "DUP1"
    },
    "11026": {
      "op": "DUP3"
    },
    "11027": {
      "op": "MSTORE"
    },
    "11028": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11030": {
      "op": "SWAP1"
    },
    "11031": {
      "op": "DUP3"
    },
    "11032": {
      "op": "ADD"
    },
    "11033": {
      "op": "MSTORE"
    },
    "11034": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A206D657373656E676572206E6F742073"
    },
    "11067": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11069": {
      "op": "DUP3"
    },
    "11070": {
      "op": "ADD"
    },
    "11071": {
      "op": "MSTORE"
    },
    "11072": {
      "op": "PUSH2",
      "value": "0x195D"
    },
    "11075": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "11077": {
      "op": "SHL"
    },
    "11078": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11080": {
      "op": "DUP3"
    },
    "11081": {
      "op": "ADD"
    },
    "11082": {
      "op": "MSTORE"
    },
    "11083": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11085": {
      "op": "ADD"
    },
    "11086": {
      "op": "SWAP1"
    },
    "11087": {
      "jump": "o",
      "op": "JUMP"
    },
    "11088": {
      "op": "JUMPDEST"
    },
    "11089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11093": {
      "op": "DUP3"
    },
    "11094": {
      "op": "DUP5"
    },
    "11095": {
      "op": "SUB"
    },
    "11096": {
      "op": "SLT"
    },
    "11097": {
      "op": "ISZERO"
    },
    "11098": {
      "op": "PUSH2",
      "value": "0x2B62"
    },
    "11101": {
      "op": "JUMPI"
    },
    "11102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11104": {
      "op": "DUP1"
    },
    "11105": {
      "op": "REVERT"
    },
    "11106": {
      "op": "JUMPDEST"
    },
    "11107": {
      "op": "DUP2"
    },
    "11108": {
      "op": "MLOAD"
    },
    "11109": {
      "op": "DUP1"
    },
    "11110": {
      "op": "ISZERO"
    },
    "11111": {
      "op": "ISZERO"
    },
    "11112": {
      "op": "DUP2"
    },
    "11113": {
      "op": "EQ"
    },
    "11114": {
      "op": "PUSH2",
      "value": "0x2667"
    },
    "11117": {
      "op": "JUMPI"
    },
    "11118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11120": {
      "op": "DUP1"
    },
    "11121": {
      "op": "REVERT"
    },
    "11122": {
      "op": "JUMPDEST"
    },
    "11123": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11128": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11130": {
      "op": "SHL"
    },
    "11131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11133": {
      "op": "MSTORE"
    },
    "11134": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11136": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11138": {
      "op": "MSTORE"
    },
    "11139": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11143": {
      "op": "REVERT"
    },
    "11144": {
      "op": "JUMPDEST"
    },
    "11145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11151": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11153": {
      "op": "SHL"
    },
    "11154": {
      "op": "SUB"
    },
    "11155": {
      "op": "DUP4"
    },
    "11156": {
      "op": "DUP2"
    },
    "11157": {
      "op": "AND"
    },
    "11158": {
      "op": "SWAP1"
    },
    "11159": {
      "op": "DUP4"
    },
    "11160": {
      "op": "AND"
    },
    "11161": {
      "op": "DUP2"
    },
    "11162": {
      "op": "DUP2"
    },
    "11163": {
      "op": "LT"
    },
    "11164": {
      "op": "ISZERO"
    },
    "11165": {
      "op": "PUSH2",
      "value": "0x2BA8"
    },
    "11168": {
      "op": "JUMPI"
    },
    "11169": {
      "op": "PUSH2",
      "value": "0x2BA8"
    },
    "11172": {
      "op": "PUSH2",
      "value": "0x2B72"
    },
    "11175": {
      "jump": "i",
      "op": "JUMP"
    },
    "11176": {
      "op": "JUMPDEST"
    },
    "11177": {
      "op": "SUB"
    },
    "11178": {
      "op": "SWAP4"
    },
    "11179": {
      "op": "SWAP3"
    },
    "11180": {
      "op": "POP"
    },
    "11181": {
      "op": "POP"
    },
    "11182": {
      "op": "POP"
    },
    "11183": {
      "jump": "o",
      "op": "JUMP"
    },
    "11184": {
      "op": "JUMPDEST"
    },
    "11185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11187": {
      "op": "DUP3"
    },
    "11188": {
      "op": "NOT"
    },
    "11189": {
      "op": "DUP3"
    },
    "11190": {
      "op": "GT"
    },
    "11191": {
      "op": "ISZERO"
    },
    "11192": {
      "op": "PUSH2",
      "value": "0x2BC3"
    },
    "11195": {
      "op": "JUMPI"
    },
    "11196": {
      "op": "PUSH2",
      "value": "0x2BC3"
    },
    "11199": {
      "op": "PUSH2",
      "value": "0x2B72"
    },
    "11202": {
      "jump": "i",
      "op": "JUMP"
    },
    "11203": {
      "op": "JUMPDEST"
    },
    "11204": {
      "op": "POP"
    },
    "11205": {
      "op": "ADD"
    },
    "11206": {
      "op": "SWAP1"
    },
    "11207": {
      "jump": "o",
      "op": "JUMP"
    },
    "11208": {
      "op": "JUMPDEST"
    },
    "11209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11213": {
      "op": "DUP3"
    },
    "11214": {
      "op": "DUP5"
    },
    "11215": {
      "op": "SUB"
    },
    "11216": {
      "op": "SLT"
    },
    "11217": {
      "op": "ISZERO"
    },
    "11218": {
      "op": "PUSH2",
      "value": "0x2BDA"
    },
    "11221": {
      "op": "JUMPI"
    },
    "11222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11224": {
      "op": "DUP1"
    },
    "11225": {
      "op": "REVERT"
    },
    "11226": {
      "op": "JUMPDEST"
    },
    "11227": {
      "op": "POP"
    },
    "11228": {
      "op": "MLOAD"
    },
    "11229": {
      "op": "SWAP2"
    },
    "11230": {
      "op": "SWAP1"
    },
    "11231": {
      "op": "POP"
    },
    "11232": {
      "jump": "o",
      "op": "JUMP"
    },
    "11233": {
      "op": "JUMPDEST"
    },
    "11234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11240": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11242": {
      "op": "SHL"
    },
    "11243": {
      "op": "SUB"
    },
    "11244": {
      "op": "DUP3"
    },
    "11245": {
      "op": "DUP2"
    },
    "11246": {
      "op": "AND"
    },
    "11247": {
      "op": "DUP5"
    },
    "11248": {
      "op": "DUP3"
    },
    "11249": {
      "op": "AND"
    },
    "11250": {
      "op": "DUP1"
    },
    "11251": {
      "op": "DUP4"
    },
    "11252": {
      "op": "SUB"
    },
    "11253": {
      "op": "DUP3"
    },
    "11254": {
      "op": "GT"
    },
    "11255": {
      "op": "ISZERO"
    },
    "11256": {
      "op": "PUSH2",
      "value": "0x2C03"
    },
    "11259": {
      "op": "JUMPI"
    },
    "11260": {
      "op": "PUSH2",
      "value": "0x2C03"
    },
    "11263": {
      "op": "PUSH2",
      "value": "0x2B72"
    },
    "11266": {
      "jump": "i",
      "op": "JUMP"
    },
    "11267": {
      "op": "JUMPDEST"
    },
    "11268": {
      "op": "ADD"
    },
    "11269": {
      "op": "SWAP5"
    },
    "11270": {
      "op": "SWAP4"
    },
    "11271": {
      "op": "POP"
    },
    "11272": {
      "op": "POP"
    },
    "11273": {
      "op": "POP"
    },
    "11274": {
      "op": "POP"
    },
    "11275": {
      "jump": "o",
      "op": "JUMP"
    },
    "11276": {
      "op": "JUMPDEST"
    },
    "11277": {
      "op": "SWAP7"
    },
    "11278": {
      "op": "DUP8"
    },
    "11279": {
      "op": "MSTORE"
    },
    "11280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11286": {
      "op": "SHL"
    },
    "11287": {
      "op": "SUB"
    },
    "11288": {
      "op": "SWAP6"
    },
    "11289": {
      "op": "DUP7"
    },
    "11290": {
      "op": "AND"
    },
    "11291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11293": {
      "op": "DUP9"
    },
    "11294": {
      "op": "ADD"
    },
    "11295": {
      "op": "MSTORE"
    },
    "11296": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11298": {
      "op": "DUP8"
    },
    "11299": {
      "op": "ADD"
    },
    "11300": {
      "op": "SWAP5"
    },
    "11301": {
      "op": "SWAP1"
    },
    "11302": {
      "op": "SWAP5"
    },
    "11303": {
      "op": "MSTORE"
    },
    "11304": {
      "op": "SWAP2"
    },
    "11305": {
      "op": "SWAP1"
    },
    "11306": {
      "op": "SWAP4"
    },
    "11307": {
      "op": "AND"
    },
    "11308": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11310": {
      "op": "DUP6"
    },
    "11311": {
      "op": "ADD"
    },
    "11312": {
      "op": "MSTORE"
    },
    "11313": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11315": {
      "op": "DUP5"
    },
    "11316": {
      "op": "ADD"
    },
    "11317": {
      "op": "SWAP3"
    },
    "11318": {
      "op": "SWAP1"
    },
    "11319": {
      "op": "SWAP3"
    },
    "11320": {
      "op": "MSTORE"
    },
    "11321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11323": {
      "op": "DUP4"
    },
    "11324": {
      "op": "ADD"
    },
    "11325": {
      "op": "SWAP2"
    },
    "11326": {
      "op": "SWAP1"
    },
    "11327": {
      "op": "SWAP2"
    },
    "11328": {
      "op": "MSTORE"
    },
    "11329": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11331": {
      "op": "DUP3"
    },
    "11332": {
      "op": "ADD"
    },
    "11333": {
      "op": "MSTORE"
    },
    "11334": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11336": {
      "op": "ADD"
    },
    "11337": {
      "op": "SWAP1"
    },
    "11338": {
      "jump": "o",
      "op": "JUMP"
    },
    "11339": {
      "op": "JUMPDEST"
    },
    "11340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11342": {
      "op": "DUP3"
    },
    "11343": {
      "op": "DUP3"
    },
    "11344": {
      "op": "LT"
    },
    "11345": {
      "op": "ISZERO"
    },
    "11346": {
      "op": "PUSH2",
      "value": "0x2C5D"
    },
    "11349": {
      "op": "JUMPI"
    },
    "11350": {
      "op": "PUSH2",
      "value": "0x2C5D"
    },
    "11353": {
      "op": "PUSH2",
      "value": "0x2B72"
    },
    "11356": {
      "jump": "i",
      "op": "JUMP"
    },
    "11357": {
      "op": "JUMPDEST"
    },
    "11358": {
      "op": "POP"
    },
    "11359": {
      "op": "SUB"
    },
    "11360": {
      "op": "SWAP1"
    },
    "11361": {
      "jump": "o",
      "op": "JUMP"
    },
    "11362": {
      "op": "JUMPDEST"
    },
    "11363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11365": {
      "op": "DUP2"
    },
    "11366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11368": {
      "op": "NOT"
    },
    "11369": {
      "op": "DIV"
    },
    "11370": {
      "op": "DUP4"
    },
    "11371": {
      "op": "GT"
    },
    "11372": {
      "op": "DUP3"
    },
    "11373": {
      "op": "ISZERO"
    },
    "11374": {
      "op": "ISZERO"
    },
    "11375": {
      "op": "AND"
    },
    "11376": {
      "op": "ISZERO"
    },
    "11377": {
      "op": "PUSH2",
      "value": "0x2C7C"
    },
    "11380": {
      "op": "JUMPI"
    },
    "11381": {
      "op": "PUSH2",
      "value": "0x2C7C"
    },
    "11384": {
      "op": "PUSH2",
      "value": "0x2B72"
    },
    "11387": {
      "jump": "i",
      "op": "JUMP"
    },
    "11388": {
      "op": "JUMPDEST"
    },
    "11389": {
      "op": "POP"
    },
    "11390": {
      "op": "MUL"
    },
    "11391": {
      "op": "SWAP1"
    },
    "11392": {
      "jump": "o",
      "op": "JUMP"
    },
    "11393": {
      "op": "JUMPDEST"
    },
    "11394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11396": {
      "op": "DUP3"
    },
    "11397": {
      "op": "PUSH2",
      "value": "0x2C9E"
    },
    "11400": {
      "op": "JUMPI"
    },
    "11401": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11406": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11408": {
      "op": "SHL"
    },
    "11409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11411": {
      "op": "MSTORE"
    },
    "11412": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "11414": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11416": {
      "op": "MSTORE"
    },
    "11417": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11421": {
      "op": "REVERT"
    },
    "11422": {
      "op": "JUMPDEST"
    },
    "11423": {
      "op": "POP"
    },
    "11424": {
      "op": "DIV"
    },
    "11425": {
      "op": "SWAP1"
    },
    "11426": {
      "jump": "o",
      "op": "JUMP"
    },
    "11427": {
      "op": "JUMPDEST"
    },
    "11428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11430": {
      "op": "JUMPDEST"
    },
    "11431": {
      "op": "DUP4"
    },
    "11432": {
      "op": "DUP2"
    },
    "11433": {
      "op": "LT"
    },
    "11434": {
      "op": "ISZERO"
    },
    "11435": {
      "op": "PUSH2",
      "value": "0x2CBE"
    },
    "11438": {
      "op": "JUMPI"
    },
    "11439": {
      "op": "DUP2"
    },
    "11440": {
      "op": "DUP2"
    },
    "11441": {
      "op": "ADD"
    },
    "11442": {
      "op": "MLOAD"
    },
    "11443": {
      "op": "DUP4"
    },
    "11444": {
      "op": "DUP3"
    },
    "11445": {
      "op": "ADD"
    },
    "11446": {
      "op": "MSTORE"
    },
    "11447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11449": {
      "op": "ADD"
    },
    "11450": {
      "op": "PUSH2",
      "value": "0x2CA6"
    },
    "11453": {
      "op": "JUMP"
    },
    "11454": {
      "op": "JUMPDEST"
    },
    "11455": {
      "op": "DUP4"
    },
    "11456": {
      "op": "DUP2"
    },
    "11457": {
      "op": "GT"
    },
    "11458": {
      "op": "ISZERO"
    },
    "11459": {
      "op": "PUSH2",
      "value": "0x19CE"
    },
    "11462": {
      "op": "JUMPI"
    },
    "11463": {
      "op": "POP"
    },
    "11464": {
      "op": "POP"
    },
    "11465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11467": {
      "op": "SWAP2"
    },
    "11468": {
      "op": "ADD"
    },
    "11469": {
      "op": "MSTORE"
    },
    "11470": {
      "jump": "o",
      "op": "JUMP"
    },
    "11471": {
      "op": "JUMPDEST"
    },
    "11472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11474": {
      "op": "DUP3"
    },
    "11475": {
      "op": "MLOAD"
    },
    "11476": {
      "op": "PUSH2",
      "value": "0x2CE1"
    },
    "11479": {
      "op": "DUP2"
    },
    "11480": {
      "op": "DUP5"
    },
    "11481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11483": {
      "op": "DUP8"
    },
    "11484": {
      "op": "ADD"
    },
    "11485": {
      "op": "PUSH2",
      "value": "0x2CA3"
    },
    "11488": {
      "jump": "i",
      "op": "JUMP"
    },
    "11489": {
      "op": "JUMPDEST"
    },
    "11490": {
      "op": "SWAP2"
    },
    "11491": {
      "op": "SWAP1"
    },
    "11492": {
      "op": "SWAP2"
    },
    "11493": {
      "op": "ADD"
    },
    "11494": {
      "op": "SWAP3"
    },
    "11495": {
      "op": "SWAP2"
    },
    "11496": {
      "op": "POP"
    },
    "11497": {
      "op": "POP"
    },
    "11498": {
      "jump": "o",
      "op": "JUMP"
    },
    "11499": {
      "op": "JUMPDEST"
    },
    "11500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11502": {
      "op": "DUP2"
    },
    "11503": {
      "op": "MSTORE"
    },
    "11504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11506": {
      "op": "DUP3"
    },
    "11507": {
      "op": "MLOAD"
    },
    "11508": {
      "op": "DUP1"
    },
    "11509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11511": {
      "op": "DUP5"
    },
    "11512": {
      "op": "ADD"
    },
    "11513": {
      "op": "MSTORE"
    },
    "11514": {
      "op": "PUSH2",
      "value": "0x2D0A"
    },
    "11517": {
      "op": "DUP2"
    },
    "11518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11520": {
      "op": "DUP6"
    },
    "11521": {
      "op": "ADD"
    },
    "11522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11524": {
      "op": "DUP8"
    },
    "11525": {
      "op": "ADD"
    },
    "11526": {
      "op": "PUSH2",
      "value": "0x2CA3"
    },
    "11529": {
      "jump": "i",
      "op": "JUMP"
    },
    "11530": {
      "op": "JUMPDEST"
    },
    "11531": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11533": {
      "op": "ADD"
    },
    "11534": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11536": {
      "op": "NOT"
    },
    "11537": {
      "op": "AND"
    },
    "11538": {
      "op": "SWAP2"
    },
    "11539": {
      "op": "SWAP1"
    },
    "11540": {
      "op": "SWAP2"
    },
    "11541": {
      "op": "ADD"
    },
    "11542": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11544": {
      "op": "ADD"
    },
    "11545": {
      "op": "SWAP3"
    },
    "11546": {
      "op": "SWAP2"
    },
    "11547": {
      "op": "POP"
    },
    "11548": {
      "op": "POP"
    },
    "11549": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "f748d56e55e6465e17ecfc0b9375cc37eacb5b5b",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/Math.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/access/Ownable.sol\";\n\nimport \"./BeamerUtils.sol\";\nimport \"./RestrictedCalls.sol\";\nimport \"./LpWhitelist.sol\";\n\n/// The request manager.\n///\n/// This contract is responsible for keeping track of transfer requests,\n/// implementing the rules of the challenge game and holding deposited\n/// tokens until they are withdrawn.\n/// The information passed by L1 resolution will be stored with the respective requests.\n///\n/// It is the only contract that agents need to interact with on the source chain.\n/// .. note::\n///\n///   The functions resolveRequest and invalidateFill can only be called by\n///   the :sol:contract:`Resolver` contract, via a chain-dependent messenger contract.\ncontract RequestManager is Ownable, LpWhitelist, RestrictedCalls {\n    using Math for uint256;\n    using SafeERC20 for IERC20;\n\n    // Structs\n    // TODO: check if we can use a smaller type for `targetChainId`, so that the\n    // fields can be packed into one storage slot\n    struct Request {\n        address sender;\n        address sourceTokenAddress;\n        uint256 targetChainId;\n        uint256 amount;\n        uint256 validUntil;\n        uint256 lpFee;\n        uint256 protocolFee;\n        uint192 activeClaims;\n        uint256 withdrawClaimId;\n        address filler;\n        bytes32 fillId;\n        mapping(bytes32 => bool) invalidFillIds;\n    }\n\n    struct Claim {\n        bytes32 requestId;\n        address claimer;\n        uint256 claimerStake;\n        mapping(address => uint256) challengersStakes;\n        address lastChallenger;\n        uint256 challengerStakeTotal;\n        uint256 withdrawnAmount;\n        uint256 termination;\n        bytes32 fillId;\n    }\n\n    // Events\n\n    /// Emitted when a new request has been created.\n    ///\n    /// .. seealso:: :sol:func:`createRequest`\n    event RequestCreated(\n        bytes32 indexed requestId,\n        uint256 targetChainId,\n        address sourceTokenAddress,\n        address targetTokenAddress,\n        address targetAddress,\n        uint256 amount,\n        uint256 nonce,\n        uint256 validUntil\n    );\n\n    /// Emitted when the token deposit for request ``requestId`` has been\n    /// transferred to the ``receiver``.\n    ///\n    /// This can happen in two cases:\n    ///\n    ///  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`\n    ///  * a claim related to the request has been resolved successfully in favor of the claimer\n    ///\n    /// .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`\n    event DepositWithdrawn(bytes32 requestId, address receiver);\n\n    /// Emitted when a claim or a counter-claim (challenge) has been made.\n    ///\n    /// .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`\n    event ClaimMade(\n        bytes32 indexed requestId,\n        uint256 claimId,\n        address claimer,\n        uint256 claimerStake,\n        address lastChallenger,\n        uint256 challengerStakeTotal,\n        uint256 termination,\n        bytes32 fillId\n    );\n\n    /// Emitted when staked native tokens tied to a claim have been withdrawn.\n    ///\n    /// This can only happen when the claim has been resolved and the caller\n    /// of :sol:func:`withdraw` is allowed to withdraw their stake.\n    ///\n    /// .. seealso:: :sol:func:`withdraw`\n    event ClaimStakeWithdrawn(\n        uint256 claimId,\n        bytes32 indexed requestId,\n        address claimReceiver\n    );\n\n    event FinalityPeriodUpdated(uint256 targetChainId, uint256 finalityPeriod);\n\n    /// Emitted when a request has been resolved via L1 resolution.\n    ///\n    /// .. seealso:: :sol:func:`resolveRequest`\n    event RequestResolved(bytes32 requestId, address filler, bytes32 fillId);\n\n    /// Emitted when an invalidated fill has been resolved.\n    ///\n    /// .. seealso:: :sol:func:`invalidateFill`\n    event FillInvalidatedResolved(bytes32 requestId, bytes32 fillId);\n\n    // Constants\n\n    /// The minimum amount of source chain's native token that the claimer needs to\n    /// provide when making a claim, as well in each round of the challenge game.\n    uint256 public claimStake;\n\n    /// The period for which the claim is valid.\n    uint256 public claimPeriod;\n\n    /// The period by which the termination time of a claim is extended after each\n    /// round of the challenge game. This period should allow enough time for the\n    /// other parties to counter-challenge.\n    ///\n    /// .. note::\n    ///\n    ///    The claim's termination time is extended only if it is less than the\n    ///    extension time.\n    ///\n    /// Note that in the first challenge round, i.e. the round initiated by the first\n    /// challenger, the termination time is extended additionally by the finality\n    /// period of the target chain. This is done to allow for L1 resolution.\n    uint256 public challengePeriodExtension;\n\n    /// The minimum validity period of a request.\n    uint256 public constant MIN_VALIDITY_PERIOD = 5 minutes;\n\n    /// The maximum validity period of a request.\n    uint256 public constant MAX_VALIDITY_PERIOD = 30 minutes;\n\n    /// withdrawClaimId is set to this value when an expired request gets withdrawn by the sender\n    uint256 public constant CLAIM_ID_WITHDRAWN_EXPIRED = type(uint256).max;\n\n    // Variables\n\n    /// Indicates whether the contract is deprecated. A deprecated contract\n    /// cannot be used to create new requests.\n    bool public deprecated;\n\n    /// A counter used to generate request and claim IDs.\n    /// The variable holds the most recently used nonce and must\n    /// be incremented to get the next nonce\n    uint256 public currentNonce;\n\n    /// Maps target rollup chain IDs to finality periods.\n    /// Finality periods are in seconds.\n    mapping(uint256 => uint256) public finalityPeriods;\n\n    /// Maps request IDs to requests.\n    mapping(bytes32 => Request) public requests;\n\n    /// Maps claim IDs to claims.\n    mapping(uint256 => Claim) public claims;\n\n    /// The minimum fee, denominated in transfer token, paid to the liquidity provider.\n    uint256 public minLpFee = 5 ether; // 5e18\n\n    /// Liquidity provider fee percentage, expressed in ppm (parts per million).\n    uint256 public lpFeePPM = 1_000; // 0.1% of the token amount being transferred\n\n    /// Protocol fee percentage, expressed in ppm (parts per million).\n    uint256 public protocolFeePPM = 0; // 0% of the token amount being transferred\n\n    /// The maximum amount of tokens that can be transferred in a single request.\n    uint256 public transferLimit = 10000 ether; // 10000e18\n\n    /// Maps ERC20 token addresses to related token amounts that belong to the protocol.\n    mapping(address => uint256) public collectedProtocolFees;\n\n    /// Compute the liquidy provider fee that needs to be paid for a given transfer amount.\n    function lpFee(uint256 amount) public view returns (uint256) {\n        return Math.max(minLpFee, (amount * lpFeePPM) / 1_000_000);\n    }\n\n    /// Compute the protocol fee that needs to be paid for a given transfer amount.\n    function protocolFee(uint256 amount) public view returns (uint256) {\n        return (amount * protocolFeePPM) / 1_000_000;\n    }\n\n    /// Compute the total fee that needs to be paid for a given transfer amount.\n    /// The total fee is the sum of the liquidity provider fee and the protocol fee.\n    function totalFee(uint256 amount) public view returns (uint256) {\n        return lpFee(amount) + protocolFee(amount);\n    }\n\n    // Modifiers\n\n    /// Check whether a given request ID is valid.\n    modifier validRequestId(bytes32 requestId) {\n        require(\n            requests[requestId].sender != address(0),\n            \"requestId not valid\"\n        );\n        _;\n    }\n\n    /// Check whether a given claim ID is valid.\n    modifier validClaimId(uint256 claimId) {\n        require(claims[claimId].claimer != address(0), \"claimId not valid\");\n        _;\n    }\n\n    /// Constructor.\n    ///\n    /// @param _claimStake Claim stake amount.\n    /// @param _claimPeriod Claim period, in seconds.\n    /// @param _challengePeriodExtension Challenge period extension, in seconds.\n    constructor(\n        uint256 _claimStake,\n        uint256 _claimPeriod,\n        uint256 _challengePeriodExtension\n    ) {\n        claimStake = _claimStake;\n        claimPeriod = _claimPeriod;\n        challengePeriodExtension = _challengePeriodExtension;\n    }\n\n    /// Create a new transfer request.\n    ///\n    /// @param targetChainId ID of the target chain.\n    /// @param sourceTokenAddress Address of the token contract on the source chain.\n    /// @param targetTokenAddress Address of the token contract on the target chain.\n    /// @param targetAddress Recipient address on the target chain.\n    /// @param amount Amount of tokens to transfer. Does not include fees.\n    /// @param validityPeriod The number of seconds the request is to be considered valid.\n    ///                       Once its validity period has elapsed, the request cannot be claimed\n    ///                       anymore and will eventually expire, allowing the request submitter\n    ///                       to withdraw the deposited tokens if there are no active claims.\n    /// @return ID of the newly created request.\n    function createRequest(\n        uint256 targetChainId,\n        address sourceTokenAddress,\n        address targetTokenAddress,\n        address targetAddress,\n        uint256 amount,\n        uint256 validityPeriod\n    ) external returns (bytes32) {\n        require(deprecated == false, \"Contract is deprecated\");\n        require(\n            finalityPeriods[targetChainId] != 0,\n            \"Target rollup not supported\"\n        );\n        require(\n            validityPeriod >= MIN_VALIDITY_PERIOD,\n            \"Validity period too short\"\n        );\n        require(\n            validityPeriod <= MAX_VALIDITY_PERIOD,\n            \"Validity period too long\"\n        );\n        require(amount <= transferLimit, \"Amount exceeds transfer limit\");\n\n        IERC20 token = IERC20(sourceTokenAddress);\n\n        uint256 lpFeeTokenAmount = lpFee(amount);\n        uint256 protocolFeeTokenAmount = protocolFee(amount);\n        uint256 totalTokenAmount = amount +\n            lpFeeTokenAmount +\n            protocolFeeTokenAmount;\n\n        require(\n            token.allowance(msg.sender, address(this)) >= totalTokenAmount,\n            \"Insufficient allowance\"\n        );\n\n        currentNonce += 1;\n        bytes32 requestId = BeamerUtils.createRequestId(\n            block.chainid,\n            targetChainId,\n            targetTokenAddress,\n            targetAddress,\n            amount,\n            currentNonce\n        );\n\n        Request storage newRequest = requests[requestId];\n        newRequest.sender = msg.sender;\n        newRequest.sourceTokenAddress = sourceTokenAddress;\n        newRequest.targetChainId = targetChainId;\n        newRequest.amount = amount;\n        newRequest.validUntil = block.timestamp + validityPeriod;\n        newRequest.lpFee = lpFeeTokenAmount;\n        newRequest.protocolFee = protocolFeeTokenAmount;\n\n        emit RequestCreated(\n            requestId,\n            targetChainId,\n            sourceTokenAddress,\n            targetTokenAddress,\n            targetAddress,\n            amount,\n            currentNonce,\n            newRequest.validUntil\n        );\n\n        token.safeTransferFrom(msg.sender, address(this), totalTokenAmount);\n\n        return requestId;\n    }\n\n    /// Withdraw funds deposited with an expired request.\n    ///\n    /// No claims must be active for the request.\n    ///\n    /// @param requestId ID of the expired request.\n    function withdrawExpiredRequest(bytes32 requestId)\n        external\n        validRequestId(requestId)\n    {\n        Request storage request = requests[requestId];\n\n        require(request.withdrawClaimId == 0, \"Deposit already withdrawn\");\n        require(\n            block.timestamp >= request.validUntil,\n            \"Request not expired yet\"\n        );\n        require(request.activeClaims == 0, \"Active claims running\");\n\n        request.withdrawClaimId = CLAIM_ID_WITHDRAWN_EXPIRED;\n\n        emit DepositWithdrawn(requestId, request.sender);\n\n        IERC20 token = IERC20(request.sourceTokenAddress);\n        token.safeTransfer(\n            request.sender,\n            request.amount + request.lpFee + request.protocolFee\n        );\n    }\n\n    /// Claim that a request was filled by the caller.\n    ///\n    /// The request must still be valid at call time.\n    /// The caller must provide the ``claimStake`` amount of source rollup's native\n    /// token.\n    ///\n    /// @param requestId ID of the request.\n    /// @param fillId The fill ID.\n    /// @return The claim ID.\n    function claimRequest(bytes32 requestId, bytes32 fillId)\n        external\n        payable\n        validRequestId(requestId)\n        onlyWhitelist\n        returns (uint256)\n    {\n        Request storage request = requests[requestId];\n\n        require(block.timestamp < request.validUntil, \"Request expired\");\n        require(request.withdrawClaimId == 0, \"Deposit already withdrawn\");\n        require(msg.value == claimStake, \"Invalid stake amount\");\n        require(fillId != bytes32(0), \"FillId must not be 0x0\");\n\n        request.activeClaims += 1;\n        currentNonce += 1;\n\n        Claim storage claim = claims[currentNonce];\n        claim.requestId = requestId;\n        claim.claimer = msg.sender;\n        claim.claimerStake = claimStake;\n        claim.lastChallenger = address(0);\n        claim.challengerStakeTotal = 0;\n        claim.withdrawnAmount = 0;\n        claim.termination = block.timestamp + claimPeriod;\n        claim.fillId = fillId;\n\n        emit ClaimMade(\n            requestId,\n            currentNonce,\n            claim.claimer,\n            claim.claimerStake,\n            claim.lastChallenger,\n            claim.challengerStakeTotal,\n            claim.termination,\n            fillId\n        );\n\n        return currentNonce;\n    }\n\n    /// Challenge an existing claim.\n    ///\n    /// The claim must still be valid at call time.\n    /// This function implements one round of the challenge game.\n    /// The original claimer is allowed to call this function only\n    /// after someone else made a challenge, i.e. every second round.\n    /// However, once the original claimer counter-challenges, anyone\n    /// can join the game and make another challenge.\n    ///\n    /// The caller must provide enough native tokens as their stake.\n    /// For the original claimer, the minimum stake is\n    /// ``challengerStakeTotal - claimerStake + claimStake``.\n    ///\n    /// For challengers, the minimum stake is\n    /// ``claimerStake - challengerStakeTotal + 1``.\n    ///\n    /// An example (time flows downwards, claimStake = 10)::\n    ///\n    ///   claimRequest() by Max [stakes 10]\n    ///   challengeClaim() by Alice [stakes 11]\n    ///   challengeClaim() by Max [stakes 11]\n    ///   challengeClaim() by Bob [stakes 16]\n    ///\n    /// In this example, if Max didn't want to lose the challenge game to\n    /// Alice and Bob, he would have to challenge with a stake of at least 16.\n    ///\n    /// @param claimId The claim ID.\n    function challengeClaim(uint256 claimId)\n        external\n        payable\n        validClaimId(claimId)\n    {\n        Claim storage claim = claims[claimId];\n        Request storage request = requests[claim.requestId];\n        require(block.timestamp < claim.termination, \"Claim expired\");\n\n        address nextActor;\n        uint256 minValue;\n        uint256 periodExtension = challengePeriodExtension;\n        uint256 claimerStake = claim.claimerStake;\n        uint256 challengerStakeTotal = claim.challengerStakeTotal;\n\n        if (claimerStake > challengerStakeTotal) {\n            if (challengerStakeTotal == 0) {\n                periodExtension += finalityPeriods[request.targetChainId];\n            }\n            require(claim.claimer != msg.sender, \"Cannot challenge own claim\");\n            nextActor = msg.sender;\n            minValue = claimerStake - challengerStakeTotal + 1;\n        } else {\n            nextActor = claim.claimer;\n            minValue = challengerStakeTotal - claimerStake + claimStake;\n        }\n\n        require(msg.sender == nextActor, \"Not eligible to outbid\");\n        require(msg.value >= minValue, \"Not enough stake provided\");\n\n        if (nextActor == claim.claimer) {\n            claim.claimerStake += msg.value;\n        } else {\n            claim.lastChallenger = msg.sender;\n            claim.challengersStakes[msg.sender] += msg.value;\n            claim.challengerStakeTotal += msg.value;\n        }\n\n        claim.termination = Math.max(\n            claim.termination,\n            block.timestamp + periodExtension\n        );\n        uint256 minimumTermination = block.timestamp + challengePeriodExtension;\n        require(\n            claim.termination >= minimumTermination,\n            \"Claim termination did not increase enough\"\n        );\n\n        emit ClaimMade(\n            claim.requestId,\n            claimId,\n            claim.claimer,\n            claim.claimerStake,\n            claim.lastChallenger,\n            claim.challengerStakeTotal,\n            claim.termination,\n            claim.fillId\n        );\n    }\n\n    /// Withdraw the deposit that the request submitter left with the contract,\n    /// as well as the staked native tokens associated with the claim.\n    ///\n    /// In case the caller of this function is a challenger that won the game,\n    /// they will only get their staked native tokens plus the reward in the form\n    /// of full (sole challenger) or partial (multiple challengers) amount\n    /// of native tokens staked by the dishonest claimer.\n    ///\n    /// @param claimId The claim ID.\n    /// @return The address of the deposit receiver.\n    function withdraw(uint256 claimId)\n        external\n        validClaimId(claimId)\n        returns (address)\n    {\n        Claim storage claim = claims[claimId];\n        Request storage request = requests[claim.requestId];\n\n        (address claimReceiver, uint256 ethToTransfer) = resolveClaim(claimId);\n\n        if (claim.challengersStakes[claimReceiver] > 0) {\n            //Re-entrancy protection\n            claim.challengersStakes[claimReceiver] = 0;\n        }\n\n        // First time withdraw is called, remove it from active claims\n        if (claim.withdrawnAmount == 0) {\n            request.activeClaims -= 1;\n        }\n        claim.withdrawnAmount += ethToTransfer;\n        require(\n            claim.withdrawnAmount <=\n                claim.claimerStake + claim.challengerStakeTotal,\n            \"Amount to withdraw too large\"\n        );\n\n        (bool sent, ) = claimReceiver.call{value: ethToTransfer}(\"\");\n        require(sent, \"Failed to send Ether\");\n\n        emit ClaimStakeWithdrawn(claimId, claim.requestId, claimReceiver);\n\n        if (request.withdrawClaimId == 0 && claimReceiver == claim.claimer) {\n            withdrawDeposit(request, claimId);\n        }\n\n        return claimReceiver;\n    }\n\n    function resolveClaim(uint256 claimId)\n        private\n        view\n        returns (address, uint256)\n    {\n        Claim storage claim = claims[claimId];\n        Request storage request = requests[claim.requestId];\n        uint256 claimerStake = claim.claimerStake;\n        uint256 challengerStakeTotal = claim.challengerStakeTotal;\n        require(\n            claim.withdrawnAmount < claimerStake + challengerStakeTotal,\n            \"Claim already withdrawn\"\n        );\n\n        bool claimValid = false;\n\n        // The claim is resolved with the following priority:\n        // 1) The l1 resolved filler is the claimer and l1 resolved fillId matches, claim is valid\n        // 2) FillId is true in request's invalidFillIds, claim is invalid\n        // 3) The withdrawer's claim matches exactly this claim (same claimer address, same fillId)\n        // 4) Claim properties, claim terminated and claimer has the highest stake\n        address filler = request.filler;\n        bytes32 fillId = request.fillId;\n\n        if (filler != address(0)) {\n            // Claim resolution via 1)\n            claimValid = filler == claim.claimer && fillId == claim.fillId;\n        } else if (request.invalidFillIds[fillId]) {\n            // Claim resolution via 2)\n            claimValid = false;\n        } else if (request.withdrawClaimId != 0) {\n            // Claim resolution via 3)\n            claimValid =\n                claim.claimer == claims[request.withdrawClaimId].claimer &&\n                claim.fillId == claims[request.withdrawClaimId].fillId;\n        } else {\n            // Claim resolution via 4)\n            require(\n                block.timestamp >= claim.termination,\n                \"Claim period not finished\"\n            );\n            claimValid = claimerStake > challengerStakeTotal;\n        }\n\n        // Calculate withdraw scheme for claim stakes\n        uint256 ethToTransfer;\n        address claimReceiver;\n\n        if (claimValid) {\n            // If claim is valid, all stakes go to the claimer\n            ethToTransfer = claimerStake + challengerStakeTotal;\n            claimReceiver = claim.claimer;\n        } else if (challengerStakeTotal > 0) {\n            // If claim is invalid, partial withdrawal by the sender\n            ethToTransfer = 2 * claim.challengersStakes[msg.sender];\n            claimReceiver = msg.sender;\n\n            require(ethToTransfer > 0, \"Challenger has nothing to withdraw\");\n        } else {\n            // The unlikely event is possible that a false claim has no challenger\n            // If it is known that the claim is false then the claim stake goes to the platform\n            ethToTransfer = claimerStake;\n            claimReceiver = owner();\n        }\n\n        // If the challenger wins and is the last challenger, he gets either\n        // twice his stake plus the excess stake (if the claimer was winning), or\n        // twice his stake minus the difference between the claimer and challenger stakes (if the claimer was losing)\n        if (msg.sender == claim.lastChallenger) {\n            if (claimerStake > challengerStakeTotal) {\n                ethToTransfer += (claimerStake - challengerStakeTotal);\n            } else {\n                ethToTransfer -= (challengerStakeTotal - claimerStake);\n            }\n        }\n\n        return (claimReceiver, ethToTransfer);\n    }\n\n    function withdrawDeposit(Request storage request, uint256 claimId) private {\n        Claim storage claim = claims[claimId];\n        address claimer = claim.claimer;\n        emit DepositWithdrawn(claim.requestId, claimer);\n\n        request.withdrawClaimId = claimId;\n\n        collectedProtocolFees[request.sourceTokenAddress] += request\n            .protocolFee;\n\n        IERC20 token = IERC20(request.sourceTokenAddress);\n        token.safeTransfer(claimer, request.amount + request.lpFee);\n    }\n\n    /// Withdraw protocol fees collected by the contract.\n    ///\n    /// Protocol fees are paid in token transferred.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param tokenAddress The address of the token contract.\n    /// @param recipient The address the fees should be sent to.\n    function withdrawProtocolFees(address tokenAddress, address recipient)\n        external\n        onlyOwner\n    {\n        uint256 amount = collectedProtocolFees[tokenAddress];\n        require(amount > 0, \"Protocol fee is zero\");\n        collectedProtocolFees[tokenAddress] = 0;\n\n        IERC20 token = IERC20(tokenAddress);\n        token.safeTransfer(recipient, amount);\n    }\n\n    /// Update fee parameters.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param newProtocolFeePPM The new value for ``protocolFeePPM``.\n    /// @param newLpFeePPM The new value for ``lpFeePPM``.\n    /// @param newMinLpFee The new value for ``minLpFee``.\n    function updateFeeData(\n        uint256 newProtocolFeePPM,\n        uint256 newLpFeePPM,\n        uint256 newMinLpFee\n    ) external onlyOwner {\n        protocolFeePPM = newProtocolFeePPM;\n        lpFeePPM = newLpFeePPM;\n        minLpFee = newMinLpFee;\n    }\n\n    /// Update the transfer amount limit.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param newTransferLimit The new value for ``transferLimit``.\n    function updateTransferLimit(uint256 newTransferLimit) external onlyOwner {\n        transferLimit = newTransferLimit;\n    }\n\n    /// Set the finality period for the given target chain.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param targetChainId The target chain ID.\n    /// @param finalityPeriod Finality period in seconds.\n    function setFinalityPeriod(uint256 targetChainId, uint256 finalityPeriod)\n        external\n        onlyOwner\n    {\n        require(finalityPeriod > 0, \"Finality period must be greater than 0\");\n        finalityPeriods[targetChainId] = finalityPeriod;\n\n        emit FinalityPeriodUpdated(targetChainId, finalityPeriod);\n    }\n\n    /// Mark the contract as deprecated.\n    ///\n    /// Once the contract is deprecated, it cannot be used to create new\n    /// requests anymore. Withdrawing deposited funds and claim stakes\n    /// still works, though.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    function deprecateContract() external onlyOwner {\n        require(deprecated == false, \"Contract already deprecated\");\n        deprecated = true;\n    }\n\n    /// Returns whether a fill is invalidated or not\n    ///\n    /// Calling invalidateFill() will set this boolean to true,\n    /// marking that the ``fillId`` for the corresponding ``requestId`` was\n    /// invalidated.\n    /// Calling resolveRequest will validate it again, setting request.invalidatedFills[fillId]\n    /// to false.\n    /// .. seealso:: :sol:func:`invalidateFill`\n    /// .. seealso:: :sol:func:`resolveRequest`\n    ///\n    /// @param requestId The request ID\n    /// @param fillId The fill ID\n    /// @return Whether the fill ID is invalid for the given request ID\n    function isInvalidFill(bytes32 requestId, bytes32 fillId)\n        public\n        view\n        returns (bool)\n    {\n        return requests[requestId].invalidFillIds[fillId];\n    }\n\n    /// Mark the request identified by ``requestId`` as filled by ``filler``.\n    ///\n    /// .. note::\n    ///\n    ///     This function is a restricted call function. Only callable by the added caller.\n    ///\n    /// @param requestId The request ID.\n    /// @param fillId The fill ID.\n    /// @param resolutionChainId The resolution (L1) chain ID.\n    /// @param filler The address that filled the request.\n    function resolveRequest(\n        bytes32 requestId,\n        bytes32 fillId,\n        uint256 resolutionChainId,\n        address filler\n    ) external restricted(resolutionChainId) {\n        Request storage request = requests[requestId];\n        request.filler = filler;\n        request.fillId = fillId;\n\n        request.invalidFillIds[fillId] = false;\n\n        emit RequestResolved(requestId, filler, fillId);\n    }\n\n    /// Mark the fill identified by ``requestId`` and ``fillId`` as invalid.\n    ///\n    /// .. note::\n    ///\n    ///     This function is a restricted call function. Only callable by the added caller.\n    ///\n    /// @param requestId The request ID.\n    /// @param fillId The fill ID.\n    /// @param resolutionChainId The resolution (L1) chain ID.\n    function invalidateFill(\n        bytes32 requestId,\n        bytes32 fillId,\n        uint256 resolutionChainId\n    ) external restricted(resolutionChainId) {\n        Request storage request = requests[requestId];\n        require(\n            request.filler == address(0),\n            \"Cannot invalidate resolved fills\"\n        );\n        require(\n            request.invalidFillIds[fillId] == false,\n            \"Fill already invalidated\"\n        );\n\n        request.invalidFillIds[fillId] = true;\n\n        emit FillInvalidatedResolved(requestId, fillId);\n    }\n}\n",
  "sourceMap": "1057:27293:19:-:0;;;6414:7;6388:33;;6543:5;6517:31;;6704:1;6672:33;;6869:11;6838:42;;8450:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:7;936:18:0;:32::i;:::-;8580:10:19;:24;;;;8614:11;:26;8650:24;:52;1057:27293;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:306:28:-;102:6;110;118;171:2;159:9;150:7;146:23;142:32;139:52;;;187:1;184;177:12;139:52;216:9;210:16;200:26;;266:2;255:9;251:18;245:25;235:35;;310:2;299:9;295:18;289:25;279:35;;14:306;;;;;:::o;:::-;1057:27293:19;;;;;;",
  "sourcePath": "contracts/contracts/RequestManager.sol",
  "type": "contract"
}